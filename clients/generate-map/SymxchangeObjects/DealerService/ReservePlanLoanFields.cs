//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 2.1.1182.0 using the following command:
// xscgen C:\Users\tbuese\Desktop\Symxchange\DealerService/*.xsd --sf --un --uc --order --cn -0 --collectionSettersMode=Public -o C:\Users\tbuese\Desktop\Symxchange\DealerService\generated-output -n DealerService
namespace DealerService
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.Diagnostics;
    using System.Xml;
    using System.Xml.Schema;
    using System.Xml.Serialization;
    
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1182.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("ReservePlanLoanFields", Namespace="http://www.symxchange.generated.symitar.com/crud/dealer/dto/retrieve")]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class ReservePlanLoanFields
    {
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AccountNumber", Order=0, Form=XmlSchemaForm.Unqualified)]
        public bool AccountNumberValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AccountNumber property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AccountNumberValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AccountNumber
        {
            get
            {
                if (this.AccountNumberValueSpecified)
                {
                    return this.AccountNumberValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AccountNumberValue = value.GetValueOrDefault();
                this.AccountNumberValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AmortizedReserve", Order=1, Form=XmlSchemaForm.Unqualified)]
        public bool AmortizedReserveValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AmortizedReserve property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AmortizedReserveValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AmortizedReserve
        {
            get
            {
                if (this.AmortizedReserveValueSpecified)
                {
                    return this.AmortizedReserveValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AmortizedReserveValue = value.GetValueOrDefault();
                this.AmortizedReserveValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BuyRate", Order=2, Form=XmlSchemaForm.Unqualified)]
        public bool BuyRateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BuyRate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BuyRateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BuyRate
        {
            get
            {
                if (this.BuyRateValueSpecified)
                {
                    return this.BuyRateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BuyRateValue = value.GetValueOrDefault();
                this.BuyRateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Chargeback", Order=3, Form=XmlSchemaForm.Unqualified)]
        public bool ChargebackValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Chargeback property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ChargebackValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Chargeback
        {
            get
            {
                if (this.ChargebackValueSpecified)
                {
                    return this.ChargebackValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ChargebackValue = value.GetValueOrDefault();
                this.ChargebackValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CloseDate", Order=4, Form=XmlSchemaForm.Unqualified)]
        public bool CloseDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CloseDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CloseDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CloseDate
        {
            get
            {
                if (this.CloseDateValueSpecified)
                {
                    return this.CloseDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CloseDateValue = value.GetValueOrDefault();
                this.CloseDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ContractRate", Order=5, Form=XmlSchemaForm.Unqualified)]
        public bool ContractRateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ContractRate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ContractRateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ContractRate
        {
            get
            {
                if (this.ContractRateValueSpecified)
                {
                    return this.ContractRateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ContractRateValue = value.GetValueOrDefault();
                this.ContractRateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DealerNumber", Order=6, Form=XmlSchemaForm.Unqualified)]
        public bool DealerNumberValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DealerNumber property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DealerNumberValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DealerNumber
        {
            get
            {
                if (this.DealerNumberValueSpecified)
                {
                    return this.DealerNumberValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DealerNumberValue = value.GetValueOrDefault();
                this.DealerNumberValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("EarnedReserve", Order=7, Form=XmlSchemaForm.Unqualified)]
        public bool EarnedReserveValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EarnedReserve property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool EarnedReserveValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> EarnedReserve
        {
            get
            {
                if (this.EarnedReserveValueSpecified)
                {
                    return this.EarnedReserveValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EarnedReserveValue = value.GetValueOrDefault();
                this.EarnedReserveValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("EffectiveRate", Order=8, Form=XmlSchemaForm.Unqualified)]
        public bool EffectiveRateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EffectiveRate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool EffectiveRateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> EffectiveRate
        {
            get
            {
                if (this.EffectiveRateValueSpecified)
                {
                    return this.EffectiveRateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EffectiveRateValue = value.GetValueOrDefault();
                this.EffectiveRateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LastFmDate", Order=9, Form=XmlSchemaForm.Unqualified)]
        public bool LastFmDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LastFmDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LastFmDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LastFmDate
        {
            get
            {
                if (this.LastFmDateValueSpecified)
                {
                    return this.LastFmDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LastFmDateValue = value.GetValueOrDefault();
                this.LastFmDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LoanAmount", Order=10, Form=XmlSchemaForm.Unqualified)]
        public bool LoanAmountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LoanAmount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LoanAmountValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LoanAmount
        {
            get
            {
                if (this.LoanAmountValueSpecified)
                {
                    return this.LoanAmountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LoanAmountValue = value.GetValueOrDefault();
                this.LoanAmountValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LoanId", Order=11, Form=XmlSchemaForm.Unqualified)]
        public bool LoanIdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LoanId property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LoanIdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LoanId
        {
            get
            {
                if (this.LoanIdValueSpecified)
                {
                    return this.LoanIdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LoanIdValue = value.GetValueOrDefault();
                this.LoanIdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Locator", Order=12, Form=XmlSchemaForm.Unqualified)]
        public bool LocatorValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Locator property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LocatorValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Locator
        {
            get
            {
                if (this.LocatorValueSpecified)
                {
                    return this.LocatorValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LocatorValue = value.GetValueOrDefault();
                this.LocatorValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MemberFee", Order=13, Form=XmlSchemaForm.Unqualified)]
        public bool MemberFeeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MemberFee property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MemberFeeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MemberFee
        {
            get
            {
                if (this.MemberFeeValueSpecified)
                {
                    return this.MemberFeeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MemberFeeValue = value.GetValueOrDefault();
                this.MemberFeeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Name", Order=14, Form=XmlSchemaForm.Unqualified)]
        public bool NameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Name property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool NameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Name
        {
            get
            {
                if (this.NameValueSpecified)
                {
                    return this.NameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NameValue = value.GetValueOrDefault();
                this.NameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OpenDate", Order=15, Form=XmlSchemaForm.Unqualified)]
        public bool OpenDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OpenDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OpenDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> OpenDate
        {
            get
            {
                if (this.OpenDateValueSpecified)
                {
                    return this.OpenDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OpenDateValue = value.GetValueOrDefault();
                this.OpenDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OriginalLoanDate", Order=16, Form=XmlSchemaForm.Unqualified)]
        public bool OriginalLoanDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OriginalLoanDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OriginalLoanDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> OriginalLoanDate
        {
            get
            {
                if (this.OriginalLoanDateValueSpecified)
                {
                    return this.OriginalLoanDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OriginalLoanDateValue = value.GetValueOrDefault();
                this.OriginalLoanDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PlanDescription", Order=17, Form=XmlSchemaForm.Unqualified)]
        public bool PlanDescriptionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PlanDescription property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PlanDescriptionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PlanDescription
        {
            get
            {
                if (this.PlanDescriptionValueSpecified)
                {
                    return this.PlanDescriptionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PlanDescriptionValue = value.GetValueOrDefault();
                this.PlanDescriptionValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PlanId", Order=18, Form=XmlSchemaForm.Unqualified)]
        public bool PlanIdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PlanId property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PlanIdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PlanId
        {
            get
            {
                if (this.PlanIdValueSpecified)
                {
                    return this.PlanIdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PlanIdValue = value.GetValueOrDefault();
                this.PlanIdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PlanType", Order=19, Form=XmlSchemaForm.Unqualified)]
        public bool PlanTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PlanType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PlanTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PlanType
        {
            get
            {
                if (this.PlanTypeValueSpecified)
                {
                    return this.PlanTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PlanTypeValue = value.GetValueOrDefault();
                this.PlanTypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("RecordChangeDate", Order=20, Form=XmlSchemaForm.Unqualified)]
        public bool RecordChangeDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RecordChangeDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool RecordChangeDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> RecordChangeDate
        {
            get
            {
                if (this.RecordChangeDateValueSpecified)
                {
                    return this.RecordChangeDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RecordChangeDateValue = value.GetValueOrDefault();
                this.RecordChangeDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Spread", Order=21, Form=XmlSchemaForm.Unqualified)]
        public bool SpreadValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Spread property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SpreadValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Spread
        {
            get
            {
                if (this.SpreadValueSpecified)
                {
                    return this.SpreadValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SpreadValue = value.GetValueOrDefault();
                this.SpreadValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UnamortizedReserve", Order=22, Form=XmlSchemaForm.Unqualified)]
        public bool UnamortizedReserveValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UnamortizedReserve property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UnamortizedReserveValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UnamortizedReserve
        {
            get
            {
                if (this.UnamortizedReserveValueSpecified)
                {
                    return this.UnamortizedReserveValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UnamortizedReserveValue = value.GetValueOrDefault();
                this.UnamortizedReserveValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UnearnedReserve", Order=23, Form=XmlSchemaForm.Unqualified)]
        public bool UnearnedReserveValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UnearnedReserve property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UnearnedReserveValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UnearnedReserve
        {
            get
            {
                if (this.UnearnedReserveValueSpecified)
                {
                    return this.UnearnedReserveValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UnearnedReserveValue = value.GetValueOrDefault();
                this.UnearnedReserveValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UpFrontPercent", Order=24, Form=XmlSchemaForm.Unqualified)]
        public bool UpFrontPercentValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UpFrontPercent property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UpFrontPercentValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UpFrontPercent
        {
            get
            {
                if (this.UpFrontPercentValueSpecified)
                {
                    return this.UpFrontPercentValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UpFrontPercentValue = value.GetValueOrDefault();
                this.UpFrontPercentValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UpFrontReserve", Order=25, Form=XmlSchemaForm.Unqualified)]
        public bool UpFrontReserveValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UpFrontReserve property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UpFrontReserveValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UpFrontReserve
        {
            get
            {
                if (this.UpFrontReserveValueSpecified)
                {
                    return this.UpFrontReserveValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UpFrontReserveValue = value.GetValueOrDefault();
                this.UpFrontReserveValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UpFrontReservePaidDate", Order=26, Form=XmlSchemaForm.Unqualified)]
        public bool UpFrontReservePaidDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UpFrontReservePaidDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UpFrontReservePaidDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UpFrontReservePaidDate
        {
            get
            {
                if (this.UpFrontReservePaidDateValueSpecified)
                {
                    return this.UpFrontReservePaidDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UpFrontReservePaidDateValue = value.GetValueOrDefault();
                this.UpFrontReservePaidDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Vin", Order=27, Form=XmlSchemaForm.Unqualified)]
        public bool VinValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Vin property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool VinValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Vin
        {
            get
            {
                if (this.VinValueSpecified)
                {
                    return this.VinValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.VinValue = value.GetValueOrDefault();
                this.VinValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("Version_1", Order=28, Form=XmlSchemaForm.Unqualified)]
        public DealerService.VersionType Version1 { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<XmlElement> _any;
        
        [XmlAnyElementAttribute(Order=29)]
        public Collection<XmlElement> Any
        {
            get
            {
                return _any;
            }
            set
            {
                _any = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return ((this.Any != null) 
                            && (this.Any.Count != 0));
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ReservePlanLoanFields" /> class.</para>
        /// </summary>
        public ReservePlanLoanFields()
        {
            this._any = new Collection<XmlElement>();
        }
    }
}
