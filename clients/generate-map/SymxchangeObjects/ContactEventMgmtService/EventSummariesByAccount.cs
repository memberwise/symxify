//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 2.1.1182.0 using the following command:
// xscgen C:\Users\tbuese\Desktop\Symxchange\ContactEventMgmtService/*.xsd --sf --un --uc --order --cn -0 --collectionSettersMode=Public -o C:\Users\tbuese\Desktop\Symxchange\ContactEventMgmtService\generated-output -n ContactEventMgmtService
namespace ContactEventMgmtService
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.Diagnostics;
    using System.Xml;
    using System.Xml.Schema;
    using System.Xml.Serialization;
    
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1182.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("EventSummariesByAccount", Namespace="http://www.symxchange.generated.symitar.com/noncrud/contacteventmgmt/dto")]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class EventSummariesByAccount
    {
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Id", Order=0, Form=XmlSchemaForm.Unqualified)]
        public int IdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Id property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<int> Id
        {
            get
            {
                if (this.IdValueSpecified)
                {
                    return this.IdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IdValue = value.GetValueOrDefault();
                this.IdValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Maximum length: 10.</para>
        /// </summary>
        [MaxLengthAttribute(10)]
        [XmlElementAttribute("AccountNumber", Order=1, Form=XmlSchemaForm.Unqualified)]
        public string AccountNumber { get; set; }
        
        [XmlElementAttribute("Level", Order=2, Form=XmlSchemaForm.Unqualified)]
        public string Level { get; set; }
        
        [XmlElementAttribute("LongName", Order=3, Form=XmlSchemaForm.Unqualified)]
        public string LongName { get; set; }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DueDate", Order=4, Form=XmlSchemaForm.Unqualified, DataType="dateTime")]
        public DateTime DueDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DueDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DueDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<DateTime> DueDate
        {
            get
            {
                if (this.DueDateValueSpecified)
                {
                    return this.DueDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DueDateValue = value.GetValueOrDefault();
                this.DueDateValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("EventType", Order=5, Form=XmlSchemaForm.Unqualified)]
        public string EventType { get; set; }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("EventTypeId", Order=6, Form=XmlSchemaForm.Unqualified)]
        public int EventTypeIdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EventTypeId property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool EventTypeIdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<int> EventTypeId
        {
            get
            {
                if (this.EventTypeIdValueSpecified)
                {
                    return this.EventTypeIdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EventTypeIdValue = value.GetValueOrDefault();
                this.EventTypeIdValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("Subject", Order=7, Form=XmlSchemaForm.Unqualified)]
        public string Subject { get; set; }
        
        [XmlElementAttribute("AssignedToName", Order=8, Form=XmlSchemaForm.Unqualified)]
        public string AssignedToName { get; set; }
        
        [XmlElementAttribute("StatusName", Order=9, Form=XmlSchemaForm.Unqualified)]
        public string StatusName { get; set; }
        
        [XmlElementAttribute("ContactsUrl", Order=10, Form=XmlSchemaForm.Unqualified)]
        public string ContactsUrl { get; set; }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PriorityId", Order=11, Form=XmlSchemaForm.Unqualified)]
        public int PriorityIdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PriorityId property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PriorityIdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<int> PriorityId
        {
            get
            {
                if (this.PriorityIdValueSpecified)
                {
                    return this.PriorityIdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PriorityIdValue = value.GetValueOrDefault();
                this.PriorityIdValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("Version_1", Order=12, Form=XmlSchemaForm.Unqualified)]
        public ContactEventMgmtService.VersionType Version1 { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<XmlElement> _any;
        
        [XmlAnyElementAttribute(Order=13)]
        public Collection<XmlElement> Any
        {
            get
            {
                return _any;
            }
            set
            {
                _any = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return ((this.Any != null) 
                            && (this.Any.Count != 0));
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="EventSummariesByAccount" /> class.</para>
        /// </summary>
        public EventSummariesByAccount()
        {
            this._any = new Collection<XmlElement>();
        }
    }
}
