//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 2.1.1182.0 using the following command:
// xscgen C:\Users\tbuese\Desktop\Symxchange\ExceptionItemService/*.xsd --sf --un --uc --order --cn -0 --collectionSettersMode=Public -o C:\Users\tbuese\Desktop\Symxchange\ExceptionItemService\generated-output -n ExceptionItemService
namespace ExceptionItemService
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.Diagnostics;
    using System.Xml;
    using System.Xml.Schema;
    using System.Xml.Serialization;
    
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1182.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("ExcpAddenda", Namespace="http://www.symxchange.generated.symitar.com/crud/exceptionitem/dto/retrieve")]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class ExcpAddenda
    {
        
        [XmlIgnoreAttribute()]
        private Collection<ExcpAddendaAddendaInfo> _addendaInfo;
        
        [XmlElementAttribute("AddendaInfo", Order=0, Form=XmlSchemaForm.Unqualified)]
        public Collection<ExcpAddendaAddendaInfo> AddendaInfo
        {
            get
            {
                return _addendaInfo;
            }
            set
            {
                _addendaInfo = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the AddendaInfo collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool AddendaInfoSpecified
        {
            get
            {
                return ((this.AddendaInfo != null) 
                            && (this.AddendaInfo.Count != 0));
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ExcpAddenda" /> class.</para>
        /// </summary>
        public ExcpAddenda()
        {
            this._addendaInfo = new Collection<ExcpAddendaAddendaInfo>();
            this._addendaStd = new Collection<ExcpAddendaAddendaStd>();
            this._pmtRelatedInfo = new Collection<ExcpAddendaPmtRelatedInfo>();
            this._any = new Collection<XmlElement>();
        }
        
        [XmlElementAttribute("AddendaSeqNum", Order=1, Form=XmlSchemaForm.Unqualified)]
        public string AddendaSeqNum { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<ExcpAddendaAddendaStd> _addendaStd;
        
        [XmlElementAttribute("AddendaStd", Order=2, Form=XmlSchemaForm.Unqualified)]
        public Collection<ExcpAddendaAddendaStd> AddendaStd
        {
            get
            {
                return _addendaStd;
            }
            set
            {
                _addendaStd = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the AddendaStd collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool AddendaStdSpecified
        {
            get
            {
                return ((this.AddendaStd != null) 
                            && (this.AddendaStd.Count != 0));
            }
        }
        
        [XmlElementAttribute("AddendaType", Order=3, Form=XmlSchemaForm.Unqualified)]
        public string AddendaType { get; set; }
        
        [XmlElementAttribute("CbrAddendaInfo", Order=4, Form=XmlSchemaForm.Unqualified)]
        public string CbrAddendaInfo { get; set; }
        
        [XmlElementAttribute("ChangeCode", Order=5, Form=XmlSchemaForm.Unqualified)]
        public string ChangeCode { get; set; }
        
        [XmlElementAttribute("CityState", Order=6, Form=XmlSchemaForm.Unqualified)]
        public string CityState { get; set; }
        
        [XmlElementAttribute("CorTraceSeq", Order=7, Form=XmlSchemaForm.Unqualified)]
        public string CorTraceSeq { get; set; }
        
        [XmlElementAttribute("CorrectedData", Order=8, Form=XmlSchemaForm.Unqualified)]
        public string CorrectedData { get; set; }
        
        [XmlElementAttribute("CorrectedDataIat", Order=9, Form=XmlSchemaForm.Unqualified)]
        public string CorrectedDataIat { get; set; }
        
        [XmlElementAttribute("CountryPostalCode", Order=10, Form=XmlSchemaForm.Unqualified)]
        public string CountryPostalCode { get; set; }
        
        [XmlElementAttribute("DateOfBirth", Order=11, Form=XmlSchemaForm.Unqualified)]
        public string DateOfBirth { get; set; }
        
        [XmlElementAttribute("DateOfDeath", Order=12, Form=XmlSchemaForm.Unqualified)]
        public string DateOfDeath { get; set; }
        
        [XmlElementAttribute("DetailSeqNum", Order=13, Form=XmlSchemaForm.Unqualified)]
        public string DetailSeqNum { get; set; }
        
        [XmlElementAttribute("DfiBranchCntryCode", Order=14, Form=XmlSchemaForm.Unqualified)]
        public string DfiBranchCntryCode { get; set; }
        
        [XmlElementAttribute("DfiIdNumQualifier", Order=15, Form=XmlSchemaForm.Unqualified)]
        public string DfiIdNumQualifier { get; set; }
        
        [XmlElementAttribute("DfiIdent", Order=16, Form=XmlSchemaForm.Unqualified)]
        public string DfiIdent { get; set; }
        
        [XmlElementAttribute("DfiName", Order=17, Form=XmlSchemaForm.Unqualified)]
        public string DfiName { get; set; }
        
        [XmlElementAttribute("DishonorAddendaInfo", Order=18, Form=XmlSchemaForm.Unqualified)]
        public string DishonorAddendaInfo { get; set; }
        
        [XmlElementAttribute("DishonorReason", Order=19, Form=XmlSchemaForm.Unqualified)]
        public string DishonorReason { get; set; }
        
        [XmlElementAttribute("DishonorSettlDate", Order=20, Form=XmlSchemaForm.Unqualified)]
        public string DishonorSettlDate { get; set; }
        
        [XmlElementAttribute("DishonorTrace", Order=21, Form=XmlSchemaForm.Unqualified)]
        public string DishonorTrace { get; set; }
        
        [XmlElementAttribute("ExcpReason", Order=22, Form=XmlSchemaForm.Unqualified)]
        public string ExcpReason { get; set; }
        
        [XmlElementAttribute("ForeignAcctNum", Order=23, Form=XmlSchemaForm.Unqualified)]
        public string ForeignAcctNum { get; set; }
        
        [XmlElementAttribute("ForeignPayment", Order=24, Form=XmlSchemaForm.Unqualified)]
        public string ForeignPayment { get; set; }
        
        [XmlElementAttribute("ForeignPaymentIat", Order=25, Form=XmlSchemaForm.Unqualified)]
        public string ForeignPaymentIat { get; set; }
        
        [XmlElementAttribute("ForeignRecDfi", Order=26, Form=XmlSchemaForm.Unqualified)]
        public string ForeignRecDfi { get; set; }
        
        [XmlElementAttribute("ForeignTrace", Order=27, Form=XmlSchemaForm.Unqualified)]
        public string ForeignTrace { get; set; }
        
        [XmlElementAttribute("ForeignTraceIat", Order=28, Form=XmlSchemaForm.Unqualified)]
        public string ForeignTraceIat { get; set; }
        
        [XmlElementAttribute("IatRetAddendaInfo", Order=29, Form=XmlSchemaForm.Unqualified)]
        public string IatRetAddendaInfo { get; set; }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Locator", Order=30, Form=XmlSchemaForm.Unqualified)]
        public int LocatorValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Locator property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LocatorValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<int> Locator
        {
            get
            {
                if (this.LocatorValueSpecified)
                {
                    return this.LocatorValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LocatorValue = value.GetValueOrDefault();
                this.LocatorValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("NetworkIdCode", Order=31, Form=XmlSchemaForm.Unqualified)]
        public string NetworkIdCode { get; set; }
        
        [XmlElementAttribute("OrigEntryPmt", Order=32, Form=XmlSchemaForm.Unqualified)]
        public string OrigEntryPmt { get; set; }
        
        [XmlElementAttribute("OrigEntryPmtIat", Order=33, Form=XmlSchemaForm.Unqualified)]
        public string OrigEntryPmtIat { get; set; }
        
        [XmlElementAttribute("OrigForeignPmt", Order=34, Form=XmlSchemaForm.Unqualified)]
        public string OrigForeignPmt { get; set; }
        
        [XmlElementAttribute("OrigForeignRdfi", Order=35, Form=XmlSchemaForm.Unqualified)]
        public string OrigForeignRdfi { get; set; }
        
        [XmlElementAttribute("OrigSettlDate", Order=36, Form=XmlSchemaForm.Unqualified)]
        public string OrigSettlDate { get; set; }
        
        [XmlElementAttribute("OriginalRecDfi", Order=37, Form=XmlSchemaForm.Unqualified)]
        public string OriginalRecDfi { get; set; }
        
        [XmlElementAttribute("OriginalTrace", Order=38, Form=XmlSchemaForm.Unqualified)]
        public string OriginalTrace { get; set; }
        
        [XmlElementAttribute("OriginatorAddr", Order=39, Form=XmlSchemaForm.Unqualified)]
        public string OriginatorAddr { get; set; }
        
        [XmlElementAttribute("OriginatorName", Order=40, Form=XmlSchemaForm.Unqualified)]
        public string OriginatorName { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<ExcpAddendaPmtRelatedInfo> _pmtRelatedInfo;
        
        [XmlElementAttribute("PmtRelatedInfo", Order=41, Form=XmlSchemaForm.Unqualified)]
        public Collection<ExcpAddendaPmtRelatedInfo> PmtRelatedInfo
        {
            get
            {
                return _pmtRelatedInfo;
            }
            set
            {
                _pmtRelatedInfo = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PmtRelatedInfo collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool PmtRelatedInfoSpecified
        {
            get
            {
                return ((this.PmtRelatedInfo != null) 
                            && (this.PmtRelatedInfo.Count != 0));
            }
        }
        
        [XmlElementAttribute("ReceiverAddr", Order=42, Form=XmlSchemaForm.Unqualified)]
        public string ReceiverAddr { get; set; }
        
        [XmlElementAttribute("ReceiverIdent", Order=43, Form=XmlSchemaForm.Unqualified)]
        public string ReceiverIdent { get; set; }
        
        [XmlElementAttribute("ReceivingName", Order=44, Form=XmlSchemaForm.Unqualified)]
        public string ReceivingName { get; set; }
        
        [XmlElementAttribute("RecordType", Order=45, Form=XmlSchemaForm.Unqualified)]
        public string RecordType { get; set; }
        
        [XmlElementAttribute("ReturnReason", Order=46, Form=XmlSchemaForm.Unqualified)]
        public string ReturnReason { get; set; }
        
        [XmlElementAttribute("ReturnSettlDate", Order=47, Form=XmlSchemaForm.Unqualified)]
        public string ReturnSettlDate { get; set; }
        
        [XmlElementAttribute("ReturnTrace", Order=48, Form=XmlSchemaForm.Unqualified)]
        public string ReturnTrace { get; set; }
        
        [XmlElementAttribute("TerminalCity", Order=49, Form=XmlSchemaForm.Unqualified)]
        public string TerminalCity { get; set; }
        
        [XmlElementAttribute("TerminalIdCode", Order=50, Form=XmlSchemaForm.Unqualified)]
        public string TerminalIdCode { get; set; }
        
        [XmlElementAttribute("TerminalLocation", Order=51, Form=XmlSchemaForm.Unqualified)]
        public string TerminalLocation { get; set; }
        
        [XmlElementAttribute("TerminalState", Order=52, Form=XmlSchemaForm.Unqualified)]
        public string TerminalState { get; set; }
        
        [XmlElementAttribute("TraceNumber", Order=53, Form=XmlSchemaForm.Unqualified)]
        public string TraceNumber { get; set; }
        
        [XmlElementAttribute("TranDateMmDd", Order=54, Form=XmlSchemaForm.Unqualified)]
        public string TranDateMmDd { get; set; }
        
        [XmlElementAttribute("TranDesc", Order=55, Form=XmlSchemaForm.Unqualified)]
        public string TranDesc { get; set; }
        
        [XmlElementAttribute("TranSerial", Order=56, Form=XmlSchemaForm.Unqualified)]
        public string TranSerial { get; set; }
        
        [XmlElementAttribute("TranTime", Order=57, Form=XmlSchemaForm.Unqualified)]
        public string TranTime { get; set; }
        
        [XmlElementAttribute("TranType", Order=58, Form=XmlSchemaForm.Unqualified)]
        public string TranType { get; set; }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Type", Order=59, Form=XmlSchemaForm.Unqualified)]
        public short TypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Type property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> Type
        {
            get
            {
                if (this.TypeValueSpecified)
                {
                    return this.TypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TypeValue = value.GetValueOrDefault();
                this.TypeValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("Version_1", Order=60, Form=XmlSchemaForm.Unqualified)]
        public ExceptionItemService.VersionType Version1 { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<XmlElement> _any;
        
        [XmlAnyElementAttribute(Order=61)]
        public Collection<XmlElement> Any
        {
            get
            {
                return _any;
            }
            set
            {
                _any = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return ((this.Any != null) 
                            && (this.Any.Count != 0));
            }
        }
    }
}
