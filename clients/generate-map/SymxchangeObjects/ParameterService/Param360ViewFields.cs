//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 2.1.1182.0 using the following command:
// xscgen C:\Users\tbuese\Desktop\Symxchange\ParameterService/*.xsd --sf --un --uc --order --cn -0 --collectionSettersMode=Public -o C:\Users\tbuese\Desktop\Symxchange\ParameterService\generated-output -n ParameterService
namespace ParameterService
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.Diagnostics;
    using System.Xml;
    using System.Xml.Schema;
    using System.Xml.Serialization;
    
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1182.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("Param360ViewFields", Namespace="http://www.symxchange.generated.symitar.com/crud/parameter/dto/retrieve")]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    [XmlRootAttribute("Param360ViewFields", Namespace="http://www.symxchange.generated.symitar.com/crud/parameter/dto/retrieve")]
    public partial class Param360ViewFields
    {
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AccountStmtMailCodeList", Order=0, Form=XmlSchemaForm.Unqualified)]
        public bool AccountStmtMailCodeListValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AccountStmtMailCodeList property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AccountStmtMailCodeListValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AccountStmtMailCodeList
        {
            get
            {
                if (this.AccountStmtMailCodeListValueSpecified)
                {
                    return this.AccountStmtMailCodeListValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AccountStmtMailCodeListValue = value.GetValueOrDefault();
                this.AccountStmtMailCodeListValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AccountTrackingTypeList", Order=1, Form=XmlSchemaForm.Unqualified)]
        public bool AccountTrackingTypeListValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AccountTrackingTypeList property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AccountTrackingTypeListValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AccountTrackingTypeList
        {
            get
            {
                if (this.AccountTrackingTypeListValueSpecified)
                {
                    return this.AccountTrackingTypeListValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AccountTrackingTypeListValue = value.GetValueOrDefault();
                this.AccountTrackingTypeListValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AchOrigEftGroupList", Order=2, Form=XmlSchemaForm.Unqualified)]
        public bool AchOrigEftGroupListValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AchOrigEftGroupList property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AchOrigEftGroupListValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AchOrigEftGroupList
        {
            get
            {
                if (this.AchOrigEftGroupListValueSpecified)
                {
                    return this.AchOrigEftGroupListValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AchOrigEftGroupListValue = value.GetValueOrDefault();
                this.AchOrigEftGroupListValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AllLnsAcctNameTypeList", Order=3, Form=XmlSchemaForm.Unqualified)]
        public bool AllLnsAcctNameTypeListValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AllLnsAcctNameTypeList property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AllLnsAcctNameTypeListValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AllLnsAcctNameTypeList
        {
            get
            {
                if (this.AllLnsAcctNameTypeListValueSpecified)
                {
                    return this.AllLnsAcctNameTypeListValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AllLnsAcctNameTypeListValue = value.GetValueOrDefault();
                this.AllLnsAcctNameTypeListValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AllShrsAcctNameTypeList", Order=4, Form=XmlSchemaForm.Unqualified)]
        public bool AllShrsAcctNameTypeListValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AllShrsAcctNameTypeList property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AllShrsAcctNameTypeListValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AllShrsAcctNameTypeList
        {
            get
            {
                if (this.AllShrsAcctNameTypeListValueSpecified)
                {
                    return this.AllShrsAcctNameTypeListValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AllShrsAcctNameTypeListValue = value.GetValueOrDefault();
                this.AllShrsAcctNameTypeListValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AudioResponseDescription", Order=5, Form=XmlSchemaForm.Unqualified)]
        public bool AudioResponseDescriptionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AudioResponseDescription property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AudioResponseDescriptionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AudioResponseDescription
        {
            get
            {
                if (this.AudioResponseDescriptionValueSpecified)
                {
                    return this.AudioResponseDescriptionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AudioResponseDescriptionValue = value.GetValueOrDefault();
                this.AudioResponseDescriptionValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BillPayAcctTrackTypeList", Order=6, Form=XmlSchemaForm.Unqualified)]
        public bool BillPayAcctTrackTypeListValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BillPayAcctTrackTypeList property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BillPayAcctTrackTypeListValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BillPayAcctTrackTypeList
        {
            get
            {
                if (this.BillPayAcctTrackTypeListValueSpecified)
                {
                    return this.BillPayAcctTrackTypeListValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BillPayAcctTrackTypeListValue = value.GetValueOrDefault();
                this.BillPayAcctTrackTypeListValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BillPayEftGroupList", Order=7, Form=XmlSchemaForm.Unqualified)]
        public bool BillPayEftGroupListValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BillPayEftGroupList property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BillPayEftGroupListValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BillPayEftGroupList
        {
            get
            {
                if (this.BillPayEftGroupListValueSpecified)
                {
                    return this.BillPayEftGroupListValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BillPayEftGroupListValue = value.GetValueOrDefault();
                this.BillPayEftGroupListValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BillPaymentDescription", Order=8, Form=XmlSchemaForm.Unqualified)]
        public bool BillPaymentDescriptionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BillPaymentDescription property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BillPaymentDescriptionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BillPaymentDescription
        {
            get
            {
                if (this.BillPaymentDescriptionValueSpecified)
                {
                    return this.BillPaymentDescriptionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BillPaymentDescriptionValue = value.GetValueOrDefault();
                this.BillPaymentDescriptionValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _cardTypeList;
        
        [XmlElementAttribute("CardTypeList", Order=9, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> CardTypeList
        {
            get
            {
                return _cardTypeList;
            }
            set
            {
                _cardTypeList = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CardTypeList collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool CardTypeListSpecified
        {
            get
            {
                return ((this.CardTypeList != null) 
                            && (this.CardTypeList.Count != 0));
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Param360ViewFields" /> class.</para>
        /// </summary>
        public Param360ViewFields()
        {
            this._cardTypeList = new Collection<short>();
            this._cardTypeListDescription = new Collection<short>();
            this._excludeSsnTin = new Collection<short>();
            this._excludeSsnTinType = new Collection<short>();
            this._trackingTypeList = new Collection<short>();
            this._trackingTypeListDesc = new Collection<short>();
            this._any = new Collection<XmlElement>();
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _cardTypeListDescription;
        
        [XmlElementAttribute("CardTypeListDescription", Order=10, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> CardTypeListDescription
        {
            get
            {
                return _cardTypeListDescription;
            }
            set
            {
                _cardTypeListDescription = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CardTypeListDescription collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool CardTypeListDescriptionSpecified
        {
            get
            {
                return ((this.CardTypeListDescription != null) 
                            && (this.CardTypeListDescription.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CheckAudioAccessCode", Order=11, Form=XmlSchemaForm.Unqualified)]
        public bool CheckAudioAccessCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CheckAudioAccessCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CheckAudioAccessCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CheckAudioAccessCode
        {
            get
            {
                if (this.CheckAudioAccessCodeValueSpecified)
                {
                    return this.CheckAudioAccessCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CheckAudioAccessCodeValue = value.GetValueOrDefault();
                this.CheckAudioAccessCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CheckEstatementEnableFlag", Order=12, Form=XmlSchemaForm.Unqualified)]
        public bool CheckEstatementEnableFlagValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CheckEstatementEnableFlag property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CheckEstatementEnableFlagValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CheckEstatementEnableFlag
        {
            get
            {
                if (this.CheckEstatementEnableFlagValueSpecified)
                {
                    return this.CheckEstatementEnableFlagValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CheckEstatementEnableFlagValue = value.GetValueOrDefault();
                this.CheckEstatementEnableFlagValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CheckHbPwdAndAudioAccess", Order=13, Form=XmlSchemaForm.Unqualified)]
        public bool CheckHbPwdAndAudioAccessValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CheckHbPwdAndAudioAccess property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CheckHbPwdAndAudioAccessValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CheckHbPwdAndAudioAccess
        {
            get
            {
                if (this.CheckHbPwdAndAudioAccessValueSpecified)
                {
                    return this.CheckHbPwdAndAudioAccessValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CheckHbPwdAndAudioAccessValue = value.GetValueOrDefault();
                this.CheckHbPwdAndAudioAccessValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DisplayMemberGroupDesc", Order=14, Form=XmlSchemaForm.Unqualified)]
        public bool DisplayMemberGroupDescValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DisplayMemberGroupDesc property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DisplayMemberGroupDescValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DisplayMemberGroupDesc
        {
            get
            {
                if (this.DisplayMemberGroupDescValueSpecified)
                {
                    return this.DisplayMemberGroupDescValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DisplayMemberGroupDescValue = value.GetValueOrDefault();
                this.DisplayMemberGroupDescValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("EnableAcsPaneIn360View", Order=15, Form=XmlSchemaForm.Unqualified)]
        public bool EnableAcsPaneIn360ViewValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EnableAcsPaneIn360View property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool EnableAcsPaneIn360ViewValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> EnableAcsPaneIn360View
        {
            get
            {
                if (this.EnableAcsPaneIn360ViewValueSpecified)
                {
                    return this.EnableAcsPaneIn360ViewValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EnableAcsPaneIn360ViewValue = value.GetValueOrDefault();
                this.EnableAcsPaneIn360ViewValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("EnableTellerTran360View", Order=16, Form=XmlSchemaForm.Unqualified)]
        public bool EnableTellerTran360ViewValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EnableTellerTran360View property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool EnableTellerTran360ViewValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> EnableTellerTran360View
        {
            get
            {
                if (this.EnableTellerTran360ViewValueSpecified)
                {
                    return this.EnableTellerTran360ViewValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EnableTellerTran360ViewValue = value.GetValueOrDefault();
                this.EnableTellerTran360ViewValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("EstatementsDescription", Order=17, Form=XmlSchemaForm.Unqualified)]
        public bool EstatementsDescriptionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EstatementsDescription property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool EstatementsDescriptionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> EstatementsDescription
        {
            get
            {
                if (this.EstatementsDescriptionValueSpecified)
                {
                    return this.EstatementsDescriptionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EstatementsDescriptionValue = value.GetValueOrDefault();
                this.EstatementsDescriptionValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _excludeSsnTin;
        
        [XmlElementAttribute("ExcludeSsnTin", Order=18, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> ExcludeSsnTin
        {
            get
            {
                return _excludeSsnTin;
            }
            set
            {
                _excludeSsnTin = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ExcludeSsnTin collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool ExcludeSsnTinSpecified
        {
            get
            {
                return ((this.ExcludeSsnTin != null) 
                            && (this.ExcludeSsnTin.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _excludeSsnTinType;
        
        [XmlElementAttribute("ExcludeSsnTinType", Order=19, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> ExcludeSsnTinType
        {
            get
            {
                return _excludeSsnTinType;
            }
            set
            {
                _excludeSsnTinType = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ExcludeSsnTinType collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool ExcludeSsnTinTypeSpecified
        {
            get
            {
                return ((this.ExcludeSsnTinType != null) 
                            && (this.ExcludeSsnTinType.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InventoryTypeList", Order=20, Form=XmlSchemaForm.Unqualified)]
        public bool InventoryTypeListValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InventoryTypeList property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InventoryTypeListValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InventoryTypeList
        {
            get
            {
                if (this.InventoryTypeListValueSpecified)
                {
                    return this.InventoryTypeListValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InventoryTypeListValue = value.GetValueOrDefault();
                this.InventoryTypeListValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LoanNameTypeList", Order=21, Form=XmlSchemaForm.Unqualified)]
        public bool LoanNameTypeListValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LoanNameTypeList property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LoanNameTypeListValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LoanNameTypeList
        {
            get
            {
                if (this.LoanNameTypeListValueSpecified)
                {
                    return this.LoanNameTypeListValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LoanNameTypeListValue = value.GetValueOrDefault();
                this.LoanNameTypeListValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LoanServiceCodeList", Order=22, Form=XmlSchemaForm.Unqualified)]
        public bool LoanServiceCodeListValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LoanServiceCodeList property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LoanServiceCodeListValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LoanServiceCodeList
        {
            get
            {
                if (this.LoanServiceCodeListValueSpecified)
                {
                    return this.LoanServiceCodeListValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LoanServiceCodeListValue = value.GetValueOrDefault();
                this.LoanServiceCodeListValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LoanStmtMailCodeList", Order=23, Form=XmlSchemaForm.Unqualified)]
        public bool LoanStmtMailCodeListValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LoanStmtMailCodeList property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LoanStmtMailCodeListValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LoanStmtMailCodeList
        {
            get
            {
                if (this.LoanStmtMailCodeListValueSpecified)
                {
                    return this.LoanStmtMailCodeListValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LoanStmtMailCodeListValue = value.GetValueOrDefault();
                this.LoanStmtMailCodeListValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("NonStandardTrackingTypeList", Order=24, Form=XmlSchemaForm.Unqualified)]
        public bool NonStandardTrackingTypeListValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NonStandardTrackingTypeList property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool NonStandardTrackingTypeListValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> NonStandardTrackingTypeList
        {
            get
            {
                if (this.NonStandardTrackingTypeListValueSpecified)
                {
                    return this.NonStandardTrackingTypeListValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NonStandardTrackingTypeListValue = value.GetValueOrDefault();
                this.NonStandardTrackingTypeListValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OnlineBankingDescription", Order=25, Form=XmlSchemaForm.Unqualified)]
        public bool OnlineBankingDescriptionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OnlineBankingDescription property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OnlineBankingDescriptionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> OnlineBankingDescription
        {
            get
            {
                if (this.OnlineBankingDescriptionValueSpecified)
                {
                    return this.OnlineBankingDescriptionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OnlineBankingDescriptionValue = value.GetValueOrDefault();
                this.OnlineBankingDescriptionValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OtherSvcTrackingTypeList", Order=26, Form=XmlSchemaForm.Unqualified)]
        public bool OtherSvcTrackingTypeListValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OtherSvcTrackingTypeList property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OtherSvcTrackingTypeListValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> OtherSvcTrackingTypeList
        {
            get
            {
                if (this.OtherSvcTrackingTypeListValueSpecified)
                {
                    return this.OtherSvcTrackingTypeListValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OtherSvcTrackingTypeListValue = value.GetValueOrDefault();
                this.OtherSvcTrackingTypeListValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SafeDepositBoxDescription", Order=27, Form=XmlSchemaForm.Unqualified)]
        public bool SafeDepositBoxDescriptionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SafeDepositBoxDescription property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SafeDepositBoxDescriptionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SafeDepositBoxDescription
        {
            get
            {
                if (this.SafeDepositBoxDescriptionValueSpecified)
                {
                    return this.SafeDepositBoxDescriptionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SafeDepositBoxDescriptionValue = value.GetValueOrDefault();
                this.SafeDepositBoxDescriptionValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ShareNameTypeList", Order=28, Form=XmlSchemaForm.Unqualified)]
        public bool ShareNameTypeListValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ShareNameTypeList property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ShareNameTypeListValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ShareNameTypeList
        {
            get
            {
                if (this.ShareNameTypeListValueSpecified)
                {
                    return this.ShareNameTypeListValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ShareNameTypeListValue = value.GetValueOrDefault();
                this.ShareNameTypeListValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ShareServiceCodeList", Order=29, Form=XmlSchemaForm.Unqualified)]
        public bool ShareServiceCodeListValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ShareServiceCodeList property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ShareServiceCodeListValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ShareServiceCodeList
        {
            get
            {
                if (this.ShareServiceCodeListValueSpecified)
                {
                    return this.ShareServiceCodeListValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ShareServiceCodeListValue = value.GetValueOrDefault();
                this.ShareServiceCodeListValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ShareStmtMailCodeList", Order=30, Form=XmlSchemaForm.Unqualified)]
        public bool ShareStmtMailCodeListValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ShareStmtMailCodeList property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ShareStmtMailCodeListValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ShareStmtMailCodeList
        {
            get
            {
                if (this.ShareStmtMailCodeListValueSpecified)
                {
                    return this.ShareStmtMailCodeListValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ShareStmtMailCodeListValue = value.GetValueOrDefault();
                this.ShareStmtMailCodeListValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("StandardTrackingTypeList", Order=31, Form=XmlSchemaForm.Unqualified)]
        public bool StandardTrackingTypeListValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StandardTrackingTypeList property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool StandardTrackingTypeListValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> StandardTrackingTypeList
        {
            get
            {
                if (this.StandardTrackingTypeListValueSpecified)
                {
                    return this.StandardTrackingTypeListValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.StandardTrackingTypeListValue = value.GetValueOrDefault();
                this.StandardTrackingTypeListValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _trackingTypeList;
        
        [XmlElementAttribute("TrackingTypeList", Order=32, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> TrackingTypeList
        {
            get
            {
                return _trackingTypeList;
            }
            set
            {
                _trackingTypeList = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TrackingTypeList collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool TrackingTypeListSpecified
        {
            get
            {
                return ((this.TrackingTypeList != null) 
                            && (this.TrackingTypeList.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _trackingTypeListDesc;
        
        [XmlElementAttribute("TrackingTypeListDesc", Order=33, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> TrackingTypeListDesc
        {
            get
            {
                return _trackingTypeListDesc;
            }
            set
            {
                _trackingTypeListDesc = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TrackingTypeListDesc collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool TrackingTypeListDescSpecified
        {
            get
            {
                return ((this.TrackingTypeListDesc != null) 
                            && (this.TrackingTypeListDesc.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("WarningCodeList", Order=34, Form=XmlSchemaForm.Unqualified)]
        public bool WarningCodeListValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the WarningCodeList property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool WarningCodeListValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> WarningCodeList
        {
            get
            {
                if (this.WarningCodeListValueSpecified)
                {
                    return this.WarningCodeListValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.WarningCodeListValue = value.GetValueOrDefault();
                this.WarningCodeListValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("Version_1", Order=35, Form=XmlSchemaForm.Unqualified)]
        public ParameterService.VersionType Version1 { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<XmlElement> _any;
        
        [XmlAnyElementAttribute(Order=36)]
        public Collection<XmlElement> Any
        {
            get
            {
                return _any;
            }
            set
            {
                _any = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return ((this.Any != null) 
                            && (this.Any.Count != 0));
            }
        }
    }
}
