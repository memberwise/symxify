//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 2.1.1182.0 using the following command:
// xscgen C:\Users\tbuese\Desktop\Symxchange\ParameterService/*.xsd --sf --un --uc --order --cn -0 --collectionSettersMode=Public -o C:\Users\tbuese\Desktop\Symxchange\ParameterService\generated-output -n ParameterService
namespace ParameterService
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.Diagnostics;
    using System.Xml;
    using System.Xml.Schema;
    using System.Xml.Serialization;
    
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1182.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("Statement", Namespace="http://www.symxchange.generated.symitar.com/crud/parameter/dto/update")]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    [XmlRootAttribute("Statement", Namespace="http://www.symxchange.generated.symitar.com/crud/parameter/dto/update")]
    [XmlIncludeAttribute(typeof(StatementFields_2))]
    public partial class Statement_2
    {
        
        [XmlElementAttribute("AccountTrackingTypes", Order=0, Form=XmlSchemaForm.Unqualified)]
        public string AccountTrackingTypes { get; set; }
        
        [XmlElementAttribute("Ach", Order=1, Form=XmlSchemaForm.Unqualified)]
        public string Ach { get; set; }
        
        [XmlElementAttribute("AchTransactions", Order=2, Form=XmlSchemaForm.Unqualified)]
        public string AchTransactions { get; set; }
        
        [XmlElementAttribute("AdditionalPrincipal", Order=3, Form=XmlSchemaForm.Unqualified)]
        public string AdditionalPrincipal { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<StatementAmtDueExpDateStmtMsgCode_2> _amtDueExpDateStmtMsgCode;
        
        [XmlElementAttribute("AmtDueExpDateStmtMsgCode", Order=4, Form=XmlSchemaForm.Unqualified)]
        public Collection<StatementAmtDueExpDateStmtMsgCode_2> AmtDueExpDateStmtMsgCode
        {
            get
            {
                return _amtDueExpDateStmtMsgCode;
            }
            set
            {
                _amtDueExpDateStmtMsgCode = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the AmtDueExpDateStmtMsgCode collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool AmtDueExpDateStmtMsgCodeSpecified
        {
            get
            {
                return ((this.AmtDueExpDateStmtMsgCode != null) 
                            && (this.AmtDueExpDateStmtMsgCode.Count != 0));
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Statement_2" /> class.</para>
        /// </summary>
        public Statement_2()
        {
            this._amtDueExpDateStmtMsgCode = new Collection<StatementAmtDueExpDateStmtMsgCode_2>();
            this._beginPromoBal = new Collection<StatementBeginPromoBal_2>();
            this._collateralList = new Collection<StatementCollateralList_2>();
            this._complaintCorrStmtMsgCode = new Collection<StatementComplaintCorrStmtMsgCode_2>();
            this._contactInformation = new Collection<StatementContactInformation_2>();
            this._customStmtMsgCollList = new Collection<StatementCustomStmtMsgCollList_2>();
            this._customStmtMsgLoanTypes = new Collection<StatementCustomStmtMsgLoanTypes_2>();
            this._customStmtMsgPurposeList = new Collection<StatementCustomStmtMsgPurposeList_2>();
            this._delinquencyDateStmtMsgCode = new Collection<StatementDelinquencyDateStmtMsgCode_2>();
            this._delqAmtDueHistoryOption = new Collection<StatementDelqAmtDueHistoryOption_2>();
            this._dqContactInformation = new Collection<StatementDqContactInformation_2>();
            this._endingPromoBal = new Collection<StatementEndingPromoBal_2>();
            this._generalStatementMessageCode = new Collection<StatementGeneralStatementMessageCode_2>();
            this._institutionAddressLine = new Collection<StatementInstitutionAddressLine_2>();
            this._lnLine = new Collection<StatementLnLine_2>();
            this._loanTypes = new Collection<StatementLoanTypes_2>();
            this._ltChgStatementMsgCode = new Collection<StatementLtChgStatementMsgCode_2>();
            this._pmtCutoffTimeStmtMsgCode = new Collection<StatementPmtCutoffTimeStmtMsgCode_2>();
            this._promoBalance = new Collection<StatementPromoBalance_2>();
            this._promoDescription = new Collection<StatementPromoDescription_2>();
            this._promoTermination = new Collection<StatementPromoTermination_2>();
            this._purposeList = new Collection<StatementPurposeList_2>();
            this._relMsgLine11 = new Collection<StatementRelMsgLine11_2>();
            this._relMsgLine110 = new Collection<StatementRelMsgLine110_2>();
            this._relMsgLine12 = new Collection<StatementRelMsgLine12_2>();
            this._relMsgLine13 = new Collection<StatementRelMsgLine13_2>();
            this._relMsgLine14 = new Collection<StatementRelMsgLine14_2>();
            this._relMsgLine15 = new Collection<StatementRelMsgLine15_2>();
            this._relMsgLine16 = new Collection<StatementRelMsgLine16_2>();
            this._relMsgLine17 = new Collection<StatementRelMsgLine17_2>();
            this._relMsgLine18 = new Collection<StatementRelMsgLine18_2>();
            this._relMsgLine19 = new Collection<StatementRelMsgLine19_2>();
            this._relMsgLine21 = new Collection<StatementRelMsgLine21_2>();
            this._relMsgLine210 = new Collection<StatementRelMsgLine210_2>();
            this._relMsgLine22 = new Collection<StatementRelMsgLine22_2>();
            this._relMsgLine23 = new Collection<StatementRelMsgLine23_2>();
            this._relMsgLine24 = new Collection<StatementRelMsgLine24_2>();
            this._relMsgLine25 = new Collection<StatementRelMsgLine25_2>();
            this._relMsgLine26 = new Collection<StatementRelMsgLine26_2>();
            this._relMsgLine27 = new Collection<StatementRelMsgLine27_2>();
            this._relMsgLine28 = new Collection<StatementRelMsgLine28_2>();
            this._relMsgLine29 = new Collection<StatementRelMsgLine29_2>();
            this._relationshipCodes = new Collection<StatementRelationshipCodes_2>();
            this._servicerAddress = new Collection<StatementServicerAddress_2>();
            this._svLine = new Collection<StatementSvLine_2>();
            this._any = new Collection<XmlElement>();
        }
        
        [XmlElementAttribute("Atm", Order=5, Form=XmlSchemaForm.Unqualified)]
        public string Atm { get; set; }
        
        [XmlElementAttribute("AtmSummaryLoanTypes", Order=6, Form=XmlSchemaForm.Unqualified)]
        public string AtmSummaryLoanTypes { get; set; }
        
        [XmlElementAttribute("AtmSummaryShareTypes", Order=7, Form=XmlSchemaForm.Unqualified)]
        public string AtmSummaryShareTypes { get; set; }
        
        [XmlElementAttribute("AudioResponse", Order=8, Form=XmlSchemaForm.Unqualified)]
        public string AudioResponse { get; set; }
        
        [XmlElementAttribute("AvailBalTransfer", Order=9, Form=XmlSchemaForm.Unqualified)]
        public string AvailBalTransfer { get; set; }
        
        [XmlElementAttribute("AvailCashAdvance", Order=10, Form=XmlSchemaForm.Unqualified)]
        public string AvailCashAdvance { get; set; }
        
        [XmlElementAttribute("AvailCombinedCaBt", Order=11, Form=XmlSchemaForm.Unqualified)]
        public string AvailCombinedCaBt { get; set; }
        
        [XmlElementAttribute("BalTransferLimit", Order=12, Form=XmlSchemaForm.Unqualified)]
        public string BalTransferLimit { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<StatementBeginPromoBal_2> _beginPromoBal;
        
        [XmlElementAttribute("BeginPromoBal", Order=13, Form=XmlSchemaForm.Unqualified)]
        public Collection<StatementBeginPromoBal_2> BeginPromoBal
        {
            get
            {
                return _beginPromoBal;
            }
            set
            {
                _beginPromoBal = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the BeginPromoBal collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool BeginPromoBalSpecified
        {
            get
            {
                return ((this.BeginPromoBal != null) 
                            && (this.BeginPromoBal.Count != 0));
            }
        }
        
        [XmlElementAttribute("BeginRegularBal", Order=14, Form=XmlSchemaForm.Unqualified)]
        public string BeginRegularBal { get; set; }
        
        [XmlElementAttribute("BeginningBalance", Order=15, Form=XmlSchemaForm.Unqualified)]
        public string BeginningBalance { get; set; }
        
        [XmlElementAttribute("BillFeeAmount", Order=16, Form=XmlSchemaForm.Unqualified)]
        public string BillFeeAmount { get; set; }
        
        [XmlElementAttribute("BillPayment", Order=17, Form=XmlSchemaForm.Unqualified)]
        public string BillPayment { get; set; }
        
        [XmlElementAttribute("Bulk", Order=18, Form=XmlSchemaForm.Unqualified)]
        public string Bulk { get; set; }
        
        [XmlElementAttribute("CardTypesinTranHistory", Order=19, Form=XmlSchemaForm.Unqualified)]
        public string CardTypesinTranHistory { get; set; }
        
        [XmlElementAttribute("Cash", Order=20, Form=XmlSchemaForm.Unqualified)]
        public string Cash { get; set; }
        
        [XmlElementAttribute("CashAdvanceLimit", Order=21, Form=XmlSchemaForm.Unqualified)]
        public string CashAdvanceLimit { get; set; }
        
        [XmlElementAttribute("Chapter4Withholding", Order=22, Form=XmlSchemaForm.Unqualified)]
        public string Chapter4Withholding { get; set; }
        
        [XmlElementAttribute("Check", Order=23, Form=XmlSchemaForm.Unqualified)]
        public string Check { get; set; }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CheckHoldCommentPrtOption", Order=24, Form=XmlSchemaForm.Unqualified)]
        public short CheckHoldCommentPrtOptionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CheckHoldCommentPrtOption property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CheckHoldCommentPrtOptionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> CheckHoldCommentPrtOption
        {
            get
            {
                if (this.CheckHoldCommentPrtOptionValueSpecified)
                {
                    return this.CheckHoldCommentPrtOptionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CheckHoldCommentPrtOptionValue = value.GetValueOrDefault();
                this.CheckHoldCommentPrtOptionValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CheckHoldPrintOption", Order=25, Form=XmlSchemaForm.Unqualified)]
        public short CheckHoldPrintOptionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CheckHoldPrintOption property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CheckHoldPrintOptionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> CheckHoldPrintOption
        {
            get
            {
                if (this.CheckHoldPrintOptionValueSpecified)
                {
                    return this.CheckHoldPrintOptionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CheckHoldPrintOptionValue = value.GetValueOrDefault();
                this.CheckHoldPrintOptionValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<StatementCollateralList_2> _collateralList;
        
        [XmlElementAttribute("CollateralList", Order=26, Form=XmlSchemaForm.Unqualified)]
        public Collection<StatementCollateralList_2> CollateralList
        {
            get
            {
                return _collateralList;
            }
            set
            {
                _collateralList = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CollateralList collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool CollateralListSpecified
        {
            get
            {
                return ((this.CollateralList != null) 
                            && (this.CollateralList.Count != 0));
            }
        }
        
        [XmlElementAttribute("CombinedCaBtLimit", Order=27, Form=XmlSchemaForm.Unqualified)]
        public string CombinedCaBtLimit { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<StatementComplaintCorrStmtMsgCode_2> _complaintCorrStmtMsgCode;
        
        [XmlElementAttribute("ComplaintCorrStmtMsgCode", Order=28, Form=XmlSchemaForm.Unqualified)]
        public Collection<StatementComplaintCorrStmtMsgCode_2> ComplaintCorrStmtMsgCode
        {
            get
            {
                return _complaintCorrStmtMsgCode;
            }
            set
            {
                _complaintCorrStmtMsgCode = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ComplaintCorrStmtMsgCode collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool ComplaintCorrStmtMsgCodeSpecified
        {
            get
            {
                return ((this.ComplaintCorrStmtMsgCode != null) 
                            && (this.ComplaintCorrStmtMsgCode.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<StatementContactInformation_2> _contactInformation;
        
        [XmlElementAttribute("ContactInformation", Order=29, Form=XmlSchemaForm.Unqualified)]
        public Collection<StatementContactInformation_2> ContactInformation
        {
            get
            {
                return _contactInformation;
            }
            set
            {
                _contactInformation = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ContactInformation collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool ContactInformationSpecified
        {
            get
            {
                return ((this.ContactInformation != null) 
                            && (this.ContactInformation.Count != 0));
            }
        }
        
        [XmlElementAttribute("CreditAvailable", Order=30, Form=XmlSchemaForm.Unqualified)]
        public string CreditAvailable { get; set; }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditCarSepForIds", Order=31, Form=XmlSchemaForm.Unqualified)]
        public short CreditCarSepForIdsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditCarSepForIds property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditCarSepForIdsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> CreditCarSepForIds
        {
            get
            {
                if (this.CreditCarSepForIdsValueSpecified)
                {
                    return this.CreditCarSepForIdsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditCarSepForIdsValue = value.GetValueOrDefault();
                this.CreditCarSepForIdsValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("CreditCard", Order=32, Form=XmlSchemaForm.Unqualified)]
        public string CreditCard { get; set; }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditCardCouponSummary", Order=33, Form=XmlSchemaForm.Unqualified)]
        public bool CreditCardCouponSummaryValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditCardCouponSummary property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditCardCouponSummaryValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CreditCardCouponSummary
        {
            get
            {
                if (this.CreditCardCouponSummaryValueSpecified)
                {
                    return this.CreditCardCouponSummaryValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditCardCouponSummaryValue = value.GetValueOrDefault();
                this.CreditCardCouponSummaryValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditCardDigitLength", Order=34, Form=XmlSchemaForm.Unqualified)]
        public short CreditCardDigitLengthValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditCardDigitLength property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditCardDigitLengthValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> CreditCardDigitLength
        {
            get
            {
                if (this.CreditCardDigitLengthValueSpecified)
                {
                    return this.CreditCardDigitLengthValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditCardDigitLengthValue = value.GetValueOrDefault();
                this.CreditCardDigitLengthValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditCardDigitStart", Order=35, Form=XmlSchemaForm.Unqualified)]
        public short CreditCardDigitStartValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditCardDigitStart property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditCardDigitStartValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> CreditCardDigitStart
        {
            get
            {
                if (this.CreditCardDigitStartValueSpecified)
                {
                    return this.CreditCardDigitStartValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditCardDigitStartValue = value.GetValueOrDefault();
                this.CreditCardDigitStartValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditCardInactiveZeroBal", Order=36, Form=XmlSchemaForm.Unqualified)]
        public short CreditCardInactiveZeroBalValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditCardInactiveZeroBal property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditCardInactiveZeroBalValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> CreditCardInactiveZeroBal
        {
            get
            {
                if (this.CreditCardInactiveZeroBalValueSpecified)
                {
                    return this.CreditCardInactiveZeroBalValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditCardInactiveZeroBalValue = value.GetValueOrDefault();
                this.CreditCardInactiveZeroBalValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditCardMinPmtDisclOpt", Order=37, Form=XmlSchemaForm.Unqualified)]
        public short CreditCardMinPmtDisclOptValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditCardMinPmtDisclOpt property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditCardMinPmtDisclOptValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> CreditCardMinPmtDisclOpt
        {
            get
            {
                if (this.CreditCardMinPmtDisclOptValueSpecified)
                {
                    return this.CreditCardMinPmtDisclOptValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditCardMinPmtDisclOptValue = value.GetValueOrDefault();
                this.CreditCardMinPmtDisclOptValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditCardPayment", Order=38, Form=XmlSchemaForm.Unqualified)]
        public short CreditCardPaymentValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditCardPayment property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditCardPaymentValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> CreditCardPayment
        {
            get
            {
                if (this.CreditCardPaymentValueSpecified)
                {
                    return this.CreditCardPaymentValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditCardPaymentValue = value.GetValueOrDefault();
                this.CreditCardPaymentValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditCardPrinting", Order=39, Form=XmlSchemaForm.Unqualified)]
        public short CreditCardPrintingValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditCardPrinting property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditCardPrintingValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> CreditCardPrinting
        {
            get
            {
                if (this.CreditCardPrintingValueSpecified)
                {
                    return this.CreditCardPrintingValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditCardPrintingValue = value.GetValueOrDefault();
                this.CreditCardPrintingValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditCardPromotionsTable", Order=40, Form=XmlSchemaForm.Unqualified)]
        public bool CreditCardPromotionsTableValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditCardPromotionsTable property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditCardPromotionsTableValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CreditCardPromotionsTable
        {
            get
            {
                if (this.CreditCardPromotionsTableValueSpecified)
                {
                    return this.CreditCardPromotionsTableValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditCardPromotionsTableValue = value.GetValueOrDefault();
                this.CreditCardPromotionsTableValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditCardSepforSummaries", Order=41, Form=XmlSchemaForm.Unqualified)]
        public short CreditCardSepforSummariesValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditCardSepforSummaries property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditCardSepforSummariesValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> CreditCardSepforSummaries
        {
            get
            {
                if (this.CreditCardSepforSummariesValueSpecified)
                {
                    return this.CreditCardSepforSummariesValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditCardSepforSummariesValue = value.GetValueOrDefault();
                this.CreditCardSepforSummariesValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("CreditCounselingPhone", Order=42, Form=XmlSchemaForm.Unqualified)]
        public string CreditCounselingPhone { get; set; }
        
        [XmlElementAttribute("CreditLimit", Order=43, Form=XmlSchemaForm.Unqualified)]
        public string CreditLimit { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<StatementCustomStmtMsgCollList_2> _customStmtMsgCollList;
        
        [XmlElementAttribute("CustomStmtMsgCollList", Order=44, Form=XmlSchemaForm.Unqualified)]
        public Collection<StatementCustomStmtMsgCollList_2> CustomStmtMsgCollList
        {
            get
            {
                return _customStmtMsgCollList;
            }
            set
            {
                _customStmtMsgCollList = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CustomStmtMsgCollList collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool CustomStmtMsgCollListSpecified
        {
            get
            {
                return ((this.CustomStmtMsgCollList != null) 
                            && (this.CustomStmtMsgCollList.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<StatementCustomStmtMsgLoanTypes_2> _customStmtMsgLoanTypes;
        
        [XmlElementAttribute("CustomStmtMsgLoanTypes", Order=45, Form=XmlSchemaForm.Unqualified)]
        public Collection<StatementCustomStmtMsgLoanTypes_2> CustomStmtMsgLoanTypes
        {
            get
            {
                return _customStmtMsgLoanTypes;
            }
            set
            {
                _customStmtMsgLoanTypes = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CustomStmtMsgLoanTypes collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool CustomStmtMsgLoanTypesSpecified
        {
            get
            {
                return ((this.CustomStmtMsgLoanTypes != null) 
                            && (this.CustomStmtMsgLoanTypes.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CustomStmtMsgOptionCount", Order=46, Form=XmlSchemaForm.Unqualified)]
        public short CustomStmtMsgOptionCountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CustomStmtMsgOptionCount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CustomStmtMsgOptionCountValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> CustomStmtMsgOptionCount
        {
            get
            {
                if (this.CustomStmtMsgOptionCountValueSpecified)
                {
                    return this.CustomStmtMsgOptionCountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CustomStmtMsgOptionCountValue = value.GetValueOrDefault();
                this.CustomStmtMsgOptionCountValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<StatementCustomStmtMsgPurposeList_2> _customStmtMsgPurposeList;
        
        [XmlElementAttribute("CustomStmtMsgPurposeList", Order=47, Form=XmlSchemaForm.Unqualified)]
        public Collection<StatementCustomStmtMsgPurposeList_2> CustomStmtMsgPurposeList
        {
            get
            {
                return _customStmtMsgPurposeList;
            }
            set
            {
                _customStmtMsgPurposeList = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CustomStmtMsgPurposeList collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool CustomStmtMsgPurposeListSpecified
        {
            get
            {
                return ((this.CustomStmtMsgPurposeList != null) 
                            && (this.CustomStmtMsgPurposeList.Count != 0));
            }
        }
        
        [XmlElementAttribute("DebitCard", Order=48, Form=XmlSchemaForm.Unqualified)]
        public string DebitCard { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<StatementDelinquencyDateStmtMsgCode_2> _delinquencyDateStmtMsgCode;
        
        [XmlElementAttribute("DelinquencyDateStmtMsgCode", Order=49, Form=XmlSchemaForm.Unqualified)]
        public Collection<StatementDelinquencyDateStmtMsgCode_2> DelinquencyDateStmtMsgCode
        {
            get
            {
                return _delinquencyDateStmtMsgCode;
            }
            set
            {
                _delinquencyDateStmtMsgCode = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DelinquencyDateStmtMsgCode collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool DelinquencyDateStmtMsgCodeSpecified
        {
            get
            {
                return ((this.DelinquencyDateStmtMsgCode != null) 
                            && (this.DelinquencyDateStmtMsgCode.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<StatementDelqAmtDueHistoryOption_2> _delqAmtDueHistoryOption;
        
        [XmlElementAttribute("DelqAmtDueHistoryOption", Order=50, Form=XmlSchemaForm.Unqualified)]
        public Collection<StatementDelqAmtDueHistoryOption_2> DelqAmtDueHistoryOption
        {
            get
            {
                return _delqAmtDueHistoryOption;
            }
            set
            {
                _delqAmtDueHistoryOption = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DelqAmtDueHistoryOption collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool DelqAmtDueHistoryOptionSpecified
        {
            get
            {
                return ((this.DelqAmtDueHistoryOption != null) 
                            && (this.DelqAmtDueHistoryOption.Count != 0));
            }
        }
        
        [XmlElementAttribute("Deposit", Order=51, Form=XmlSchemaForm.Unqualified)]
        public string Deposit { get; set; }
        
        [XmlElementAttribute("Dividend", Order=52, Form=XmlSchemaForm.Unqualified)]
        public string Dividend { get; set; }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DividendPrinting", Order=53, Form=XmlSchemaForm.Unqualified)]
        public short DividendPrintingValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DividendPrinting property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DividendPrintingValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> DividendPrinting
        {
            get
            {
                if (this.DividendPrintingValueSpecified)
                {
                    return this.DividendPrintingValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DividendPrintingValue = value.GetValueOrDefault();
                this.DividendPrintingValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("DividendYtd", Order=54, Form=XmlSchemaForm.Unqualified)]
        public string DividendYtd { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<StatementDqContactInformation_2> _dqContactInformation;
        
        [XmlElementAttribute("DqContactInformation", Order=55, Form=XmlSchemaForm.Unqualified)]
        public Collection<StatementDqContactInformation_2> DqContactInformation
        {
            get
            {
                return _dqContactInformation;
            }
            set
            {
                _dqContactInformation = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DqContactInformation collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool DqContactInformationSpecified
        {
            get
            {
                return ((this.DqContactInformation != null) 
                            && (this.DqContactInformation.Count != 0));
            }
        }
        
        [XmlElementAttribute("Draft", Order=56, Form=XmlSchemaForm.Unqualified)]
        public string Draft { get; set; }
        
        [XmlElementAttribute("DraftSummaryLoanTypes", Order=57, Form=XmlSchemaForm.Unqualified)]
        public string DraftSummaryLoanTypes { get; set; }
        
        [XmlElementAttribute("DraftSummaryShareTypes", Order=58, Form=XmlSchemaForm.Unqualified)]
        public string DraftSummaryShareTypes { get; set; }
        
        [XmlElementAttribute("EarlyWdPenalty", Order=59, Form=XmlSchemaForm.Unqualified)]
        public string EarlyWdPenalty { get; set; }
        
        [XmlElementAttribute("EndingBalance", Order=60, Form=XmlSchemaForm.Unqualified)]
        public string EndingBalance { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<StatementEndingPromoBal_2> _endingPromoBal;
        
        [XmlElementAttribute("EndingPromoBal", Order=61, Form=XmlSchemaForm.Unqualified)]
        public Collection<StatementEndingPromoBal_2> EndingPromoBal
        {
            get
            {
                return _endingPromoBal;
            }
            set
            {
                _endingPromoBal = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the EndingPromoBal collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool EndingPromoBalSpecified
        {
            get
            {
                return ((this.EndingPromoBal != null) 
                            && (this.EndingPromoBal.Count != 0));
            }
        }
        
        [XmlElementAttribute("EndingRegularBal", Order=62, Form=XmlSchemaForm.Unqualified)]
        public string EndingRegularBal { get; set; }
        
        [XmlElementAttribute("Escrow", Order=63, Form=XmlSchemaForm.Unqualified)]
        public string Escrow { get; set; }
        
        [XmlElementAttribute("EscrowAmount", Order=64, Form=XmlSchemaForm.Unqualified)]
        public string EscrowAmount { get; set; }
        
        [XmlElementAttribute("EscrowUnpaid", Order=65, Form=XmlSchemaForm.Unqualified)]
        public string EscrowUnpaid { get; set; }
        
        [XmlElementAttribute("ExternalLoanTrackingTypes", Order=66, Form=XmlSchemaForm.Unqualified)]
        public string ExternalLoanTrackingTypes { get; set; }
        
        [XmlElementAttribute("FasterPayments", Order=67, Form=XmlSchemaForm.Unqualified)]
        public string FasterPayments { get; set; }
        
        [XmlElementAttribute("Fee", Order=68, Form=XmlSchemaForm.Unqualified)]
        public string Fee { get; set; }
        
        [XmlElementAttribute("FeesChargedYtd", Order=69, Form=XmlSchemaForm.Unqualified)]
        public string FeesChargedYtd { get; set; }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Format", Order=70, Form=XmlSchemaForm.Unqualified)]
        public short FormatValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Format property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FormatValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> Format
        {
            get
            {
                if (this.FormatValueSpecified)
                {
                    return this.FormatValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FormatValue = value.GetValueOrDefault();
                this.FormatValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<StatementGeneralStatementMessageCode_2> _generalStatementMessageCode;
        
        [XmlElementAttribute("GeneralStatementMessageCode", Order=71, Form=XmlSchemaForm.Unqualified)]
        public Collection<StatementGeneralStatementMessageCode_2> GeneralStatementMessageCode
        {
            get
            {
                return _generalStatementMessageCode;
            }
            set
            {
                _generalStatementMessageCode = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the GeneralStatementMessageCode collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool GeneralStatementMessageCodeSpecified
        {
            get
            {
                return ((this.GeneralStatementMessageCode != null) 
                            && (this.GeneralStatementMessageCode.Count != 0));
            }
        }
        
        [XmlElementAttribute("HomeBanking", Order=72, Form=XmlSchemaForm.Unqualified)]
        public string HomeBanking { get; set; }
        
        [XmlElementAttribute("HomeEquityCollateralCodes", Order=73, Form=XmlSchemaForm.Unqualified)]
        public string HomeEquityCollateralCodes { get; set; }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HouseholdOption", Order=74, Form=XmlSchemaForm.Unqualified)]
        public short HouseholdOptionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HouseholdOption property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HouseholdOptionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> HouseholdOption
        {
            get
            {
                if (this.HouseholdOptionValueSpecified)
                {
                    return this.HouseholdOptionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HouseholdOptionValue = value.GetValueOrDefault();
                this.HouseholdOptionValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InclLateChgUnpaidChgAmt", Order=75, Form=XmlSchemaForm.Unqualified)]
        public bool InclLateChgUnpaidChgAmtValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InclLateChgUnpaidChgAmt property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InclLateChgUnpaidChgAmtValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InclLateChgUnpaidChgAmt
        {
            get
            {
                if (this.InclLateChgUnpaidChgAmtValueSpecified)
                {
                    return this.InclLateChgUnpaidChgAmtValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InclLateChgUnpaidChgAmtValue = value.GetValueOrDefault();
                this.InclLateChgUnpaidChgAmtValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InclWaivedLateChargeAmt", Order=76, Form=XmlSchemaForm.Unqualified)]
        public bool InclWaivedLateChargeAmtValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InclWaivedLateChargeAmt property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InclWaivedLateChargeAmtValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InclWaivedLateChargeAmt
        {
            get
            {
                if (this.InclWaivedLateChargeAmtValueSpecified)
                {
                    return this.InclWaivedLateChargeAmtValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InclWaivedLateChargeAmtValue = value.GetValueOrDefault();
                this.InclWaivedLateChargeAmtValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InclWireOriginatorComment", Order=77, Form=XmlSchemaForm.Unqualified)]
        public bool InclWireOriginatorCommentValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InclWireOriginatorComment property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InclWireOriginatorCommentValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InclWireOriginatorComment
        {
            get
            {
                if (this.InclWireOriginatorCommentValueSpecified)
                {
                    return this.InclWireOriginatorCommentValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InclWireOriginatorCommentValue = value.GetValueOrDefault();
                this.InclWireOriginatorCommentValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Include000FeeComments", Order=78, Form=XmlSchemaForm.Unqualified)]
        public bool Include000FeeCommentsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Include000FeeComments property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool Include000FeeCommentsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Include000FeeComments
        {
            get
            {
                if (this.Include000FeeCommentsValueSpecified)
                {
                    return this.Include000FeeCommentsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.Include000FeeCommentsValue = value.GetValueOrDefault();
                this.Include000FeeCommentsValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IncludeAchCheckComments", Order=79, Form=XmlSchemaForm.Unqualified)]
        public bool IncludeAchCheckCommentsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IncludeAchCheckComments property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IncludeAchCheckCommentsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IncludeAchCheckComments
        {
            get
            {
                if (this.IncludeAchCheckCommentsValueSpecified)
                {
                    return this.IncludeAchCheckCommentsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IncludeAchCheckCommentsValue = value.GetValueOrDefault();
                this.IncludeAchCheckCommentsValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IncludeAchEccComments", Order=80, Form=XmlSchemaForm.Unqualified)]
        public bool IncludeAchEccCommentsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IncludeAchEccComments property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IncludeAchEccCommentsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IncludeAchEccComments
        {
            get
            {
                if (this.IncludeAchEccCommentsValueSpecified)
                {
                    return this.IncludeAchEccCommentsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IncludeAchEccCommentsValue = value.GetValueOrDefault();
                this.IncludeAchEccCommentsValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IncludeAchTraceComments", Order=81, Form=XmlSchemaForm.Unqualified)]
        public bool IncludeAchTraceCommentsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IncludeAchTraceComments property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IncludeAchTraceCommentsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IncludeAchTraceComments
        {
            get
            {
                if (this.IncludeAchTraceCommentsValueSpecified)
                {
                    return this.IncludeAchTraceCommentsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IncludeAchTraceCommentsValue = value.GetValueOrDefault();
                this.IncludeAchTraceCommentsValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IncludeAddlPrincipalComment", Order=82, Form=XmlSchemaForm.Unqualified)]
        public bool IncludeAddlPrincipalCommentValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IncludeAddlPrincipalComment property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IncludeAddlPrincipalCommentValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IncludeAddlPrincipalComment
        {
            get
            {
                if (this.IncludeAddlPrincipalCommentValueSpecified)
                {
                    return this.IncludeAddlPrincipalCommentValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IncludeAddlPrincipalCommentValue = value.GetValueOrDefault();
                this.IncludeAddlPrincipalCommentValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IncludeBalanceSummary", Order=83, Form=XmlSchemaForm.Unqualified)]
        public bool IncludeBalanceSummaryValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IncludeBalanceSummary property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IncludeBalanceSummaryValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IncludeBalanceSummary
        {
            get
            {
                if (this.IncludeBalanceSummaryValueSpecified)
                {
                    return this.IncludeBalanceSummaryValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IncludeBalanceSummaryValue = value.GetValueOrDefault();
                this.IncludeBalanceSummaryValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IncludeBulkDepositComments", Order=84, Form=XmlSchemaForm.Unqualified)]
        public bool IncludeBulkDepositCommentsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IncludeBulkDepositComments property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IncludeBulkDepositCommentsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IncludeBulkDepositComments
        {
            get
            {
                if (this.IncludeBulkDepositCommentsValueSpecified)
                {
                    return this.IncludeBulkDepositCommentsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IncludeBulkDepositCommentsValue = value.GetValueOrDefault();
                this.IncludeBulkDepositCommentsValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IncludeCdMoTcComments", Order=85, Form=XmlSchemaForm.Unqualified)]
        public bool IncludeCdMoTcCommentsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IncludeCdMoTcComments property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IncludeCdMoTcCommentsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IncludeCdMoTcComments
        {
            get
            {
                if (this.IncludeCdMoTcCommentsValueSpecified)
                {
                    return this.IncludeCdMoTcCommentsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IncludeCdMoTcCommentsValue = value.GetValueOrDefault();
                this.IncludeCdMoTcCommentsValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IncludeCheckCashingComment", Order=86, Form=XmlSchemaForm.Unqualified)]
        public bool IncludeCheckCashingCommentValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IncludeCheckCashingComment property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IncludeCheckCashingCommentValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IncludeCheckCashingComment
        {
            get
            {
                if (this.IncludeCheckCashingCommentValueSpecified)
                {
                    return this.IncludeCheckCashingCommentValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IncludeCheckCashingCommentValue = value.GetValueOrDefault();
                this.IncludeCheckCashingCommentValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IncludeCkDisbursedComments", Order=87, Form=XmlSchemaForm.Unqualified)]
        public bool IncludeCkDisbursedCommentsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IncludeCkDisbursedComments property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IncludeCkDisbursedCommentsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IncludeCkDisbursedComments
        {
            get
            {
                if (this.IncludeCkDisbursedCommentsValueSpecified)
                {
                    return this.IncludeCkDisbursedCommentsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IncludeCkDisbursedCommentsValue = value.GetValueOrDefault();
                this.IncludeCkDisbursedCommentsValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IncludeCkReceivedComments", Order=88, Form=XmlSchemaForm.Unqualified)]
        public bool IncludeCkReceivedCommentsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IncludeCkReceivedComments property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IncludeCkReceivedCommentsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IncludeCkReceivedComments
        {
            get
            {
                if (this.IncludeCkReceivedCommentsValueSpecified)
                {
                    return this.IncludeCkReceivedCommentsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IncludeCkReceivedCommentsValue = value.GetValueOrDefault();
                this.IncludeCkReceivedCommentsValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IncludeDivAccrualInfofor", Order=89, Form=XmlSchemaForm.Unqualified)]
        public short IncludeDivAccrualInfoforValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IncludeDivAccrualInfofor property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IncludeDivAccrualInfoforValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> IncludeDivAccrualInfofor
        {
            get
            {
                if (this.IncludeDivAccrualInfoforValueSpecified)
                {
                    return this.IncludeDivAccrualInfoforValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IncludeDivAccrualInfoforValue = value.GetValueOrDefault();
                this.IncludeDivAccrualInfoforValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IncludeDividendAccrualInfo", Order=90, Form=XmlSchemaForm.Unqualified)]
        public bool IncludeDividendAccrualInfoValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IncludeDividendAccrualInfo property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IncludeDividendAccrualInfoValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IncludeDividendAccrualInfo
        {
            get
            {
                if (this.IncludeDividendAccrualInfoValueSpecified)
                {
                    return this.IncludeDividendAccrualInfoValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IncludeDividendAccrualInfoValue = value.GetValueOrDefault();
                this.IncludeDividendAccrualInfoValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IncludeFrFdComments", Order=91, Form=XmlSchemaForm.Unqualified)]
        public bool IncludeFrFdCommentsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IncludeFrFdComments property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IncludeFrFdCommentsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IncludeFrFdComments
        {
            get
            {
                if (this.IncludeFrFdCommentsValueSpecified)
                {
                    return this.IncludeFrFdCommentsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IncludeFrFdCommentsValue = value.GetValueOrDefault();
                this.IncludeFrFdCommentsValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IncludeIntAccrualInfofor", Order=92, Form=XmlSchemaForm.Unqualified)]
        public short IncludeIntAccrualInfoforValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IncludeIntAccrualInfofor property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IncludeIntAccrualInfoforValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> IncludeIntAccrualInfofor
        {
            get
            {
                if (this.IncludeIntAccrualInfoforValueSpecified)
                {
                    return this.IncludeIntAccrualInfoforValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IncludeIntAccrualInfoforValue = value.GetValueOrDefault();
                this.IncludeIntAccrualInfoforValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IncludeInterestAccrualInfo", Order=93, Form=XmlSchemaForm.Unqualified)]
        public bool IncludeInterestAccrualInfoValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IncludeInterestAccrualInfo property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IncludeInterestAccrualInfoValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IncludeInterestAccrualInfo
        {
            get
            {
                if (this.IncludeInterestAccrualInfoValueSpecified)
                {
                    return this.IncludeInterestAccrualInfoValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IncludeInterestAccrualInfoValue = value.GetValueOrDefault();
                this.IncludeInterestAccrualInfoValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IncludeMccComments", Order=94, Form=XmlSchemaForm.Unqualified)]
        public bool IncludeMccCommentsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IncludeMccComments property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IncludeMccCommentsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IncludeMccComments
        {
            get
            {
                if (this.IncludeMccCommentsValueSpecified)
                {
                    return this.IncludeMccCommentsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IncludeMccCommentsValue = value.GetValueOrDefault();
                this.IncludeMccCommentsValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IncludeMembersRemarks", Order=95, Form=XmlSchemaForm.Unqualified)]
        public bool IncludeMembersRemarksValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IncludeMembersRemarks property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IncludeMembersRemarksValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IncludeMembersRemarks
        {
            get
            {
                if (this.IncludeMembersRemarksValueSpecified)
                {
                    return this.IncludeMembersRemarksValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IncludeMembersRemarksValue = value.GetValueOrDefault();
                this.IncludeMembersRemarksValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IncludePreviousYearsTotals", Order=96, Form=XmlSchemaForm.Unqualified)]
        public bool IncludePreviousYearsTotalsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IncludePreviousYearsTotals property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IncludePreviousYearsTotalsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IncludePreviousYearsTotals
        {
            get
            {
                if (this.IncludePreviousYearsTotalsValueSpecified)
                {
                    return this.IncludePreviousYearsTotalsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IncludePreviousYearsTotalsValue = value.GetValueOrDefault();
                this.IncludePreviousYearsTotalsValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("InquiryLine", Order=97, Form=XmlSchemaForm.Unqualified)]
        public string InquiryLine { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<StatementInstitutionAddressLine_2> _institutionAddressLine;
        
        [XmlElementAttribute("InstitutionAddressLine", Order=98, Form=XmlSchemaForm.Unqualified)]
        public Collection<StatementInstitutionAddressLine_2> InstitutionAddressLine
        {
            get
            {
                return _institutionAddressLine;
            }
            set
            {
                _institutionAddressLine = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the InstitutionAddressLine collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool InstitutionAddressLineSpecified
        {
            get
            {
                return ((this.InstitutionAddressLine != null) 
                            && (this.InstitutionAddressLine.Count != 0));
            }
        }
        
        [XmlElementAttribute("Insurance", Order=99, Form=XmlSchemaForm.Unqualified)]
        public string Insurance { get; set; }
        
        [XmlElementAttribute("InterestChargedYtd", Order=100, Form=XmlSchemaForm.Unqualified)]
        public string InterestChargedYtd { get; set; }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InterestPrinting", Order=101, Form=XmlSchemaForm.Unqualified)]
        public short InterestPrintingValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InterestPrinting property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InterestPrintingValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> InterestPrinting
        {
            get
            {
                if (this.InterestPrintingValueSpecified)
                {
                    return this.InterestPrintingValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InterestPrintingValue = value.GetValueOrDefault();
                this.InterestPrintingValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("InterestRefund", Order=102, Form=XmlSchemaForm.Unqualified)]
        public string InterestRefund { get; set; }
        
        [XmlElementAttribute("InterestYtd", Order=103, Form=XmlSchemaForm.Unqualified)]
        public string InterestYtd { get; set; }
        
        [XmlElementAttribute("InterestYtdLease", Order=104, Form=XmlSchemaForm.Unqualified)]
        public string InterestYtdLease { get; set; }
        
        [XmlElementAttribute("IrsWithholding", Order=105, Form=XmlSchemaForm.Unqualified)]
        public string IrsWithholding { get; set; }
        
        [XmlElementAttribute("JournalVoucher", Order=106, Form=XmlSchemaForm.Unqualified)]
        public string JournalVoucher { get; set; }
        
        [XmlElementAttribute("Kiosk", Order=107, Form=XmlSchemaForm.Unqualified)]
        public string Kiosk { get; set; }
        
        [XmlElementAttribute("LateCharge", Order=108, Form=XmlSchemaForm.Unqualified)]
        public string LateCharge { get; set; }
        
        [XmlElementAttribute("LateChargesUnpaid", Order=109, Form=XmlSchemaForm.Unqualified)]
        public string LateChargesUnpaid { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<StatementLnLine_2> _lnLine;
        
        [XmlElementAttribute("LnLine", Order=110, Form=XmlSchemaForm.Unqualified)]
        public Collection<StatementLnLine_2> LnLine
        {
            get
            {
                return _lnLine;
            }
            set
            {
                _lnLine = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the LnLine collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool LnLineSpecified
        {
            get
            {
                return ((this.LnLine != null) 
                            && (this.LnLine.Count != 0));
            }
        }
        
        [XmlElementAttribute("LoanAddon", Order=111, Form=XmlSchemaForm.Unqualified)]
        public string LoanAddon { get; set; }
        
        [XmlElementAttribute("LoanTrackingTypes", Order=112, Form=XmlSchemaForm.Unqualified)]
        public string LoanTrackingTypes { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<StatementLoanTypes_2> _loanTypes;
        
        [XmlElementAttribute("LoanTypes", Order=113, Form=XmlSchemaForm.Unqualified)]
        public Collection<StatementLoanTypes_2> LoanTypes
        {
            get
            {
                return _loanTypes;
            }
            set
            {
                _loanTypes = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the LoanTypes collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool LoanTypesSpecified
        {
            get
            {
                return ((this.LoanTypes != null) 
                            && (this.LoanTypes.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LocAvailAbleDqDays", Order=114, Form=XmlSchemaForm.Unqualified)]
        public short LocAvailAbleDqDaysValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LocAvailAbleDqDays property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LocAvailAbleDqDaysValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> LocAvailAbleDqDays
        {
            get
            {
                if (this.LocAvailAbleDqDaysValueSpecified)
                {
                    return this.LocAvailAbleDqDaysValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LocAvailAbleDqDaysValue = value.GetValueOrDefault();
                this.LocAvailAbleDqDaysValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("LostStolenCardPhone", Order=115, Form=XmlSchemaForm.Unqualified)]
        public string LostStolenCardPhone { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<StatementLtChgStatementMsgCode_2> _ltChgStatementMsgCode;
        
        [XmlElementAttribute("LtChgStatementMsgCode", Order=116, Form=XmlSchemaForm.Unqualified)]
        public Collection<StatementLtChgStatementMsgCode_2> LtChgStatementMsgCode
        {
            get
            {
                return _ltChgStatementMsgCode;
            }
            set
            {
                _ltChgStatementMsgCode = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the LtChgStatementMsgCode collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool LtChgStatementMsgCodeSpecified
        {
            get
            {
                return ((this.LtChgStatementMsgCode != null) 
                            && (this.LtChgStatementMsgCode.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MailCodeCforClosedAccts", Order=117, Form=XmlSchemaForm.Unqualified)]
        public bool MailCodeCforClosedAcctsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MailCodeCforClosedAccts property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MailCodeCforClosedAcctsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MailCodeCforClosedAccts
        {
            get
            {
                if (this.MailCodeCforClosedAcctsValueSpecified)
                {
                    return this.MailCodeCforClosedAcctsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MailCodeCforClosedAcctsValue = value.GetValueOrDefault();
                this.MailCodeCforClosedAcctsValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("MakeCheckPayableto", Order=118, Form=XmlSchemaForm.Unqualified)]
        public string MakeCheckPayableto { get; set; }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MaskBeneficiarySsn", Order=119, Form=XmlSchemaForm.Unqualified)]
        public short MaskBeneficiarySsnValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MaskBeneficiarySsn property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MaskBeneficiarySsnValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> MaskBeneficiarySsn
        {
            get
            {
                if (this.MaskBeneficiarySsnValueSpecified)
                {
                    return this.MaskBeneficiarySsnValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MaskBeneficiarySsnValue = value.GetValueOrDefault();
                this.MaskBeneficiarySsnValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("MemberRemarks", Order=120, Form=XmlSchemaForm.Unqualified)]
        public string MemberRemarks { get; set; }
        
        [XmlElementAttribute("MerchantCategoryCode", Order=121, Form=XmlSchemaForm.Unqualified)]
        public string MerchantCategoryCode { get; set; }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MinBalforMinPmtDiscl", Order=122, Form=XmlSchemaForm.Unqualified)]
        public decimal MinBalforMinPmtDisclValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MinBalforMinPmtDiscl property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MinBalforMinPmtDisclValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<decimal> MinBalforMinPmtDiscl
        {
            get
            {
                if (this.MinBalforMinPmtDisclValueSpecified)
                {
                    return this.MinBalforMinPmtDisclValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MinBalforMinPmtDisclValue = value.GetValueOrDefault();
                this.MinBalforMinPmtDisclValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MinimumInterestDue", Order=123, Form=XmlSchemaForm.Unqualified)]
        public decimal MinimumInterestDueValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MinimumInterestDue property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MinimumInterestDueValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<decimal> MinimumInterestDue
        {
            get
            {
                if (this.MinimumInterestDueValueSpecified)
                {
                    return this.MinimumInterestDueValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MinimumInterestDueValue = value.GetValueOrDefault();
                this.MinimumInterestDueValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MortgageStatementOptionCoun", Order=124, Form=XmlSchemaForm.Unqualified)]
        public short MortgageStatementOptionCounValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MortgageStatementOptionCoun property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MortgageStatementOptionCounValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> MortgageStatementOptionCoun
        {
            get
            {
                if (this.MortgageStatementOptionCounValueSpecified)
                {
                    return this.MortgageStatementOptionCounValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MortgageStatementOptionCounValue = value.GetValueOrDefault();
                this.MortgageStatementOptionCounValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("NegativeSignOption", Order=125, Form=XmlSchemaForm.Unqualified)]
        public short NegativeSignOptionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NegativeSignOption property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool NegativeSignOptionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> NegativeSignOption
        {
            get
            {
                if (this.NegativeSignOptionValueSpecified)
                {
                    return this.NegativeSignOptionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NegativeSignOptionValue = value.GetValueOrDefault();
                this.NegativeSignOptionValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("NewLoan", Order=126, Form=XmlSchemaForm.Unqualified)]
        public string NewLoan { get; set; }
        
        [XmlElementAttribute("NewSharefee", Order=127, Form=XmlSchemaForm.Unqualified)]
        public string NewSharefee { get; set; }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("NonCertificateMaturityDate", Order=128, Form=XmlSchemaForm.Unqualified)]
        public bool NonCertificateMaturityDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NonCertificateMaturityDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool NonCertificateMaturityDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> NonCertificateMaturityDate
        {
            get
            {
                if (this.NonCertificateMaturityDateValueSpecified)
                {
                    return this.NonCertificateMaturityDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NonCertificateMaturityDateValue = value.GetValueOrDefault();
                this.NonCertificateMaturityDateValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("NontaxDividendYtd", Order=129, Form=XmlSchemaForm.Unqualified)]
        public string NontaxDividendYtd { get; set; }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("NumberofpagesthisBatch", Order=130, Form=XmlSchemaForm.Unqualified)]
        public int NumberofpagesthisBatchValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NumberofpagesthisBatch property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool NumberofpagesthisBatchValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<int> NumberofpagesthisBatch
        {
            get
            {
                if (this.NumberofpagesthisBatchValueSpecified)
                {
                    return this.NumberofpagesthisBatchValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NumberofpagesthisBatchValue = value.GetValueOrDefault();
                this.NumberofpagesthisBatchValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("NumberoftimesGenerated", Order=131, Form=XmlSchemaForm.Unqualified)]
        public int NumberoftimesGeneratedValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NumberoftimesGenerated property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool NumberoftimesGeneratedValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<int> NumberoftimesGenerated
        {
            get
            {
                if (this.NumberoftimesGeneratedValueSpecified)
                {
                    return this.NumberoftimesGeneratedValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NumberoftimesGeneratedValue = value.GetValueOrDefault();
                this.NumberoftimesGeneratedValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("OriginalBalance", Order=132, Form=XmlSchemaForm.Unqualified)]
        public string OriginalBalance { get; set; }
        
        [XmlElementAttribute("OverdraftItemFeeDesc", Order=133, Form=XmlSchemaForm.Unqualified)]
        public string OverdraftItemFeeDesc { get; set; }
        
        [XmlElementAttribute("Overdrawn", Order=134, Form=XmlSchemaForm.Unqualified)]
        public string Overdrawn { get; set; }
        
        [XmlElementAttribute("Payment", Order=135, Form=XmlSchemaForm.Unqualified)]
        public string Payment { get; set; }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PaymentPrintOption", Order=136, Form=XmlSchemaForm.Unqualified)]
        public short PaymentPrintOptionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PaymentPrintOption property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PaymentPrintOptionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> PaymentPrintOption
        {
            get
            {
                if (this.PaymentPrintOptionValueSpecified)
                {
                    return this.PaymentPrintOptionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PaymentPrintOptionValue = value.GetValueOrDefault();
                this.PaymentPrintOptionValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PaymentSlipPrintingOption", Order=137, Form=XmlSchemaForm.Unqualified)]
        public short PaymentSlipPrintingOptionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PaymentSlipPrintingOption property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PaymentSlipPrintingOptionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> PaymentSlipPrintingOption
        {
            get
            {
                if (this.PaymentSlipPrintingOptionValueSpecified)
                {
                    return this.PaymentSlipPrintingOptionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PaymentSlipPrintingOptionValue = value.GetValueOrDefault();
                this.PaymentSlipPrintingOptionValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("Payroll", Order=138, Form=XmlSchemaForm.Unqualified)]
        public string Payroll { get; set; }
        
        [XmlElementAttribute("PenaltyYtd", Order=139, Form=XmlSchemaForm.Unqualified)]
        public string PenaltyYtd { get; set; }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PintAprInfo", Order=140, Form=XmlSchemaForm.Unqualified)]
        public bool PintAprInfoValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PintAprInfo property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PintAprInfoValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PintAprInfo
        {
            get
            {
                if (this.PintAprInfoValueSpecified)
                {
                    return this.PintAprInfoValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PintAprInfoValue = value.GetValueOrDefault();
                this.PintAprInfoValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<StatementPmtCutoffTimeStmtMsgCode_2> _pmtCutoffTimeStmtMsgCode;
        
        [XmlElementAttribute("PmtCutoffTimeStmtMsgCode", Order=141, Form=XmlSchemaForm.Unqualified)]
        public Collection<StatementPmtCutoffTimeStmtMsgCode_2> PmtCutoffTimeStmtMsgCode
        {
            get
            {
                return _pmtCutoffTimeStmtMsgCode;
            }
            set
            {
                _pmtCutoffTimeStmtMsgCode = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PmtCutoffTimeStmtMsgCode collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool PmtCutoffTimeStmtMsgCodeSpecified
        {
            get
            {
                return ((this.PmtCutoffTimeStmtMsgCode != null) 
                            && (this.PmtCutoffTimeStmtMsgCode.Count != 0));
            }
        }
        
        [XmlElementAttribute("Pos", Order=142, Form=XmlSchemaForm.Unqualified)]
        public string Pos { get; set; }
        
        [XmlElementAttribute("PostponedLateChg", Order=143, Form=XmlSchemaForm.Unqualified)]
        public string PostponedLateChg { get; set; }
        
        [XmlElementAttribute("PrincipalPaymentDesc", Order=144, Form=XmlSchemaForm.Unqualified)]
        public string PrincipalPaymentDesc { get; set; }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrintAccountReference", Order=145, Form=XmlSchemaForm.Unqualified)]
        public bool PrintAccountReferenceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrintAccountReference property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrintAccountReferenceValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrintAccountReference
        {
            get
            {
                if (this.PrintAccountReferenceValueSpecified)
                {
                    return this.PrintAccountReferenceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrintAccountReferenceValue = value.GetValueOrDefault();
                this.PrintAccountReferenceValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrintAcctRelationshipCode", Order=146, Form=XmlSchemaForm.Unqualified)]
        public bool PrintAcctRelationshipCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrintAcctRelationshipCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrintAcctRelationshipCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrintAcctRelationshipCode
        {
            get
            {
                if (this.PrintAcctRelationshipCodeValueSpecified)
                {
                    return this.PrintAcctRelationshipCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrintAcctRelationshipCodeValue = value.GetValueOrDefault();
                this.PrintAcctRelationshipCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrintAddlInstrStmtDiscl", Order=147, Form=XmlSchemaForm.Unqualified)]
        public bool PrintAddlInstrStmtDisclValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrintAddlInstrStmtDiscl property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrintAddlInstrStmtDisclValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrintAddlInstrStmtDiscl
        {
            get
            {
                if (this.PrintAddlInstrStmtDisclValueSpecified)
                {
                    return this.PrintAddlInstrStmtDisclValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrintAddlInstrStmtDisclValue = value.GetValueOrDefault();
                this.PrintAddlInstrStmtDisclValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrintAddrStmtDisclosure", Order=148, Form=XmlSchemaForm.Unqualified)]
        public bool PrintAddrStmtDisclosureValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrintAddrStmtDisclosure property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrintAddrStmtDisclosureValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrintAddrStmtDisclosure
        {
            get
            {
                if (this.PrintAddrStmtDisclosureValueSpecified)
                {
                    return this.PrintAddrStmtDisclosureValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrintAddrStmtDisclosureValue = value.GetValueOrDefault();
                this.PrintAddrStmtDisclosureValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrintCreditCardLoanId", Order=149, Form=XmlSchemaForm.Unqualified)]
        public bool PrintCreditCardLoanIdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrintCreditCardLoanId property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrintCreditCardLoanIdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrintCreditCardLoanId
        {
            get
            {
                if (this.PrintCreditCardLoanIdValueSpecified)
                {
                    return this.PrintCreditCardLoanIdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrintCreditCardLoanIdValue = value.GetValueOrDefault();
                this.PrintCreditCardLoanIdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrintDraftTracerNumbers", Order=150, Form=XmlSchemaForm.Unqualified)]
        public bool PrintDraftTracerNumbersValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrintDraftTracerNumbers property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrintDraftTracerNumbersValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrintDraftTracerNumbers
        {
            get
            {
                if (this.PrintDraftTracerNumbersValueSpecified)
                {
                    return this.PrintDraftTracerNumbersValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrintDraftTracerNumbersValue = value.GetValueOrDefault();
                this.PrintDraftTracerNumbersValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrintIraContributionTotals", Order=151, Form=XmlSchemaForm.Unqualified)]
        public bool PrintIraContributionTotalsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrintIraContributionTotals property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrintIraContributionTotalsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrintIraContributionTotals
        {
            get
            {
                if (this.PrintIraContributionTotalsValueSpecified)
                {
                    return this.PrintIraContributionTotalsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrintIraContributionTotalsValue = value.GetValueOrDefault();
                this.PrintIraContributionTotalsValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("PrintNameTypes", Order=152, Form=XmlSchemaForm.Unqualified)]
        public string PrintNameTypes { get; set; }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrintOdpFeeAmountTotals", Order=153, Form=XmlSchemaForm.Unqualified)]
        public short PrintOdpFeeAmountTotalsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrintOdpFeeAmountTotals property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrintOdpFeeAmountTotalsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> PrintOdpFeeAmountTotals
        {
            get
            {
                if (this.PrintOdpFeeAmountTotalsValueSpecified)
                {
                    return this.PrintOdpFeeAmountTotalsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrintOdpFeeAmountTotalsValue = value.GetValueOrDefault();
                this.PrintOdpFeeAmountTotalsValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrintOtherAccountInfo", Order=154, Form=XmlSchemaForm.Unqualified)]
        public bool PrintOtherAccountInfoValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrintOtherAccountInfo property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrintOtherAccountInfoValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrintOtherAccountInfo
        {
            get
            {
                if (this.PrintOtherAccountInfoValueSpecified)
                {
                    return this.PrintOtherAccountInfoValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrintOtherAccountInfoValue = value.GetValueOrDefault();
                this.PrintOtherAccountInfoValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrintPhoneStmtDisclosure", Order=155, Form=XmlSchemaForm.Unqualified)]
        public bool PrintPhoneStmtDisclosureValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrintPhoneStmtDisclosure property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrintPhoneStmtDisclosureValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrintPhoneStmtDisclosure
        {
            get
            {
                if (this.PrintPhoneStmtDisclosureValueSpecified)
                {
                    return this.PrintPhoneStmtDisclosureValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrintPhoneStmtDisclosureValue = value.GetValueOrDefault();
                this.PrintPhoneStmtDisclosureValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrintSocialSecurityNumber", Order=156, Form=XmlSchemaForm.Unqualified)]
        public bool PrintSocialSecurityNumberValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrintSocialSecurityNumber property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrintSocialSecurityNumberValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrintSocialSecurityNumber
        {
            get
            {
                if (this.PrintSocialSecurityNumberValueSpecified)
                {
                    return this.PrintSocialSecurityNumberValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrintSocialSecurityNumberValue = value.GetValueOrDefault();
                this.PrintSocialSecurityNumberValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrintStmtDisclosure", Order=157, Form=XmlSchemaForm.Unqualified)]
        public short PrintStmtDisclosureValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrintStmtDisclosure property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrintStmtDisclosureValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> PrintStmtDisclosure
        {
            get
            {
                if (this.PrintStmtDisclosureValueSpecified)
                {
                    return this.PrintStmtDisclosureValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrintStmtDisclosureValue = value.GetValueOrDefault();
                this.PrintStmtDisclosureValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrintStmtEscrowUnpaidBal", Order=158, Form=XmlSchemaForm.Unqualified)]
        public bool PrintStmtEscrowUnpaidBalValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrintStmtEscrowUnpaidBal property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrintStmtEscrowUnpaidBalValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrintStmtEscrowUnpaidBal
        {
            get
            {
                if (this.PrintStmtEscrowUnpaidBalValueSpecified)
                {
                    return this.PrintStmtEscrowUnpaidBalValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrintStmtEscrowUnpaidBalValue = value.GetValueOrDefault();
                this.PrintStmtEscrowUnpaidBalValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrintStmtLateChgUnpaidBal", Order=159, Form=XmlSchemaForm.Unqualified)]
        public bool PrintStmtLateChgUnpaidBalValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrintStmtLateChgUnpaidBal property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrintStmtLateChgUnpaidBalValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrintStmtLateChgUnpaidBal
        {
            get
            {
                if (this.PrintStmtLateChgUnpaidBalValueSpecified)
                {
                    return this.PrintStmtLateChgUnpaidBalValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrintStmtLateChgUnpaidBalValue = value.GetValueOrDefault();
                this.PrintStmtLateChgUnpaidBalValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrintStmtUnappliedPmtBal", Order=160, Form=XmlSchemaForm.Unqualified)]
        public bool PrintStmtUnappliedPmtBalValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrintStmtUnappliedPmtBal property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrintStmtUnappliedPmtBalValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrintStmtUnappliedPmtBal
        {
            get
            {
                if (this.PrintStmtUnappliedPmtBalValueSpecified)
                {
                    return this.PrintStmtUnappliedPmtBalValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrintStmtUnappliedPmtBalValue = value.GetValueOrDefault();
                this.PrintStmtUnappliedPmtBalValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrintTransferAcctNumbers", Order=161, Form=XmlSchemaForm.Unqualified)]
        public bool PrintTransferAcctNumbersValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrintTransferAcctNumbers property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrintTransferAcctNumbersValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrintTransferAcctNumbers
        {
            get
            {
                if (this.PrintTransferAcctNumbersValueSpecified)
                {
                    return this.PrintTransferAcctNumbersValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrintTransferAcctNumbersValue = value.GetValueOrDefault();
                this.PrintTransferAcctNumbersValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrintWebsiteStmtDisclosure", Order=162, Form=XmlSchemaForm.Unqualified)]
        public bool PrintWebsiteStmtDisclosureValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrintWebsiteStmtDisclosure property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrintWebsiteStmtDisclosureValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrintWebsiteStmtDisclosure
        {
            get
            {
                if (this.PrintWebsiteStmtDisclosureValueSpecified)
                {
                    return this.PrintWebsiteStmtDisclosureValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrintWebsiteStmtDisclosureValue = value.GetValueOrDefault();
                this.PrintWebsiteStmtDisclosureValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrintnextDividend", Order=163, Form=XmlSchemaForm.Unqualified)]
        public bool PrintnextDividendValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrintnextDividend property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrintnextDividendValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrintnextDividend
        {
            get
            {
                if (this.PrintnextDividendValueSpecified)
                {
                    return this.PrintnextDividendValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrintnextDividendValue = value.GetValueOrDefault();
                this.PrintnextDividendValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<StatementPromoBalance_2> _promoBalance;
        
        [XmlElementAttribute("PromoBalance", Order=164, Form=XmlSchemaForm.Unqualified)]
        public Collection<StatementPromoBalance_2> PromoBalance
        {
            get
            {
                return _promoBalance;
            }
            set
            {
                _promoBalance = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PromoBalance collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool PromoBalanceSpecified
        {
            get
            {
                return ((this.PromoBalance != null) 
                            && (this.PromoBalance.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<StatementPromoDescription_2> _promoDescription;
        
        [XmlElementAttribute("PromoDescription", Order=165, Form=XmlSchemaForm.Unqualified)]
        public Collection<StatementPromoDescription_2> PromoDescription
        {
            get
            {
                return _promoDescription;
            }
            set
            {
                _promoDescription = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PromoDescription collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool PromoDescriptionSpecified
        {
            get
            {
                return ((this.PromoDescription != null) 
                            && (this.PromoDescription.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<StatementPromoTermination_2> _promoTermination;
        
        [XmlElementAttribute("PromoTermination", Order=166, Form=XmlSchemaForm.Unqualified)]
        public Collection<StatementPromoTermination_2> PromoTermination
        {
            get
            {
                return _promoTermination;
            }
            set
            {
                _promoTermination = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PromoTermination collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool PromoTerminationSpecified
        {
            get
            {
                return ((this.PromoTermination != null) 
                            && (this.PromoTermination.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<StatementPurposeList_2> _purposeList;
        
        [XmlElementAttribute("PurposeList", Order=167, Form=XmlSchemaForm.Unqualified)]
        public Collection<StatementPurposeList_2> PurposeList
        {
            get
            {
                return _purposeList;
            }
            set
            {
                _purposeList = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PurposeList collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool PurposeListSpecified
        {
            get
            {
                return ((this.PurposeList != null) 
                            && (this.PurposeList.Count != 0));
            }
        }
        
        [XmlElementAttribute("Recurring", Order=168, Form=XmlSchemaForm.Unqualified)]
        public string Recurring { get; set; }
        
        [XmlElementAttribute("Refinance", Order=169, Form=XmlSchemaForm.Unqualified)]
        public string Refinance { get; set; }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("RegZYtdTotalsPrintOption", Order=170, Form=XmlSchemaForm.Unqualified)]
        public short RegZYtdTotalsPrintOptionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RegZYtdTotalsPrintOption property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool RegZYtdTotalsPrintOptionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> RegZYtdTotalsPrintOption
        {
            get
            {
                if (this.RegZYtdTotalsPrintOptionValueSpecified)
                {
                    return this.RegZYtdTotalsPrintOptionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RegZYtdTotalsPrintOptionValue = value.GetValueOrDefault();
                this.RegZYtdTotalsPrintOptionValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("RegularBalance", Order=171, Form=XmlSchemaForm.Unqualified)]
        public string RegularBalance { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<StatementRelMsgLine11_2> _relMsgLine11;
        
        [XmlElementAttribute("RelMsgLine11", Order=172, Form=XmlSchemaForm.Unqualified)]
        public Collection<StatementRelMsgLine11_2> RelMsgLine11
        {
            get
            {
                return _relMsgLine11;
            }
            set
            {
                _relMsgLine11 = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RelMsgLine11 collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool RelMsgLine11Specified
        {
            get
            {
                return ((this.RelMsgLine11 != null) 
                            && (this.RelMsgLine11.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<StatementRelMsgLine110_2> _relMsgLine110;
        
        [XmlElementAttribute("RelMsgLine110", Order=173, Form=XmlSchemaForm.Unqualified)]
        public Collection<StatementRelMsgLine110_2> RelMsgLine110
        {
            get
            {
                return _relMsgLine110;
            }
            set
            {
                _relMsgLine110 = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RelMsgLine110 collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool RelMsgLine110Specified
        {
            get
            {
                return ((this.RelMsgLine110 != null) 
                            && (this.RelMsgLine110.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<StatementRelMsgLine12_2> _relMsgLine12;
        
        [XmlElementAttribute("RelMsgLine12", Order=174, Form=XmlSchemaForm.Unqualified)]
        public Collection<StatementRelMsgLine12_2> RelMsgLine12
        {
            get
            {
                return _relMsgLine12;
            }
            set
            {
                _relMsgLine12 = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RelMsgLine12 collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool RelMsgLine12Specified
        {
            get
            {
                return ((this.RelMsgLine12 != null) 
                            && (this.RelMsgLine12.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<StatementRelMsgLine13_2> _relMsgLine13;
        
        [XmlElementAttribute("RelMsgLine13", Order=175, Form=XmlSchemaForm.Unqualified)]
        public Collection<StatementRelMsgLine13_2> RelMsgLine13
        {
            get
            {
                return _relMsgLine13;
            }
            set
            {
                _relMsgLine13 = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RelMsgLine13 collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool RelMsgLine13Specified
        {
            get
            {
                return ((this.RelMsgLine13 != null) 
                            && (this.RelMsgLine13.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<StatementRelMsgLine14_2> _relMsgLine14;
        
        [XmlElementAttribute("RelMsgLine14", Order=176, Form=XmlSchemaForm.Unqualified)]
        public Collection<StatementRelMsgLine14_2> RelMsgLine14
        {
            get
            {
                return _relMsgLine14;
            }
            set
            {
                _relMsgLine14 = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RelMsgLine14 collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool RelMsgLine14Specified
        {
            get
            {
                return ((this.RelMsgLine14 != null) 
                            && (this.RelMsgLine14.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<StatementRelMsgLine15_2> _relMsgLine15;
        
        [XmlElementAttribute("RelMsgLine15", Order=177, Form=XmlSchemaForm.Unqualified)]
        public Collection<StatementRelMsgLine15_2> RelMsgLine15
        {
            get
            {
                return _relMsgLine15;
            }
            set
            {
                _relMsgLine15 = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RelMsgLine15 collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool RelMsgLine15Specified
        {
            get
            {
                return ((this.RelMsgLine15 != null) 
                            && (this.RelMsgLine15.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<StatementRelMsgLine16_2> _relMsgLine16;
        
        [XmlElementAttribute("RelMsgLine16", Order=178, Form=XmlSchemaForm.Unqualified)]
        public Collection<StatementRelMsgLine16_2> RelMsgLine16
        {
            get
            {
                return _relMsgLine16;
            }
            set
            {
                _relMsgLine16 = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RelMsgLine16 collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool RelMsgLine16Specified
        {
            get
            {
                return ((this.RelMsgLine16 != null) 
                            && (this.RelMsgLine16.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<StatementRelMsgLine17_2> _relMsgLine17;
        
        [XmlElementAttribute("RelMsgLine17", Order=179, Form=XmlSchemaForm.Unqualified)]
        public Collection<StatementRelMsgLine17_2> RelMsgLine17
        {
            get
            {
                return _relMsgLine17;
            }
            set
            {
                _relMsgLine17 = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RelMsgLine17 collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool RelMsgLine17Specified
        {
            get
            {
                return ((this.RelMsgLine17 != null) 
                            && (this.RelMsgLine17.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<StatementRelMsgLine18_2> _relMsgLine18;
        
        [XmlElementAttribute("RelMsgLine18", Order=180, Form=XmlSchemaForm.Unqualified)]
        public Collection<StatementRelMsgLine18_2> RelMsgLine18
        {
            get
            {
                return _relMsgLine18;
            }
            set
            {
                _relMsgLine18 = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RelMsgLine18 collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool RelMsgLine18Specified
        {
            get
            {
                return ((this.RelMsgLine18 != null) 
                            && (this.RelMsgLine18.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<StatementRelMsgLine19_2> _relMsgLine19;
        
        [XmlElementAttribute("RelMsgLine19", Order=181, Form=XmlSchemaForm.Unqualified)]
        public Collection<StatementRelMsgLine19_2> RelMsgLine19
        {
            get
            {
                return _relMsgLine19;
            }
            set
            {
                _relMsgLine19 = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RelMsgLine19 collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool RelMsgLine19Specified
        {
            get
            {
                return ((this.RelMsgLine19 != null) 
                            && (this.RelMsgLine19.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<StatementRelMsgLine21_2> _relMsgLine21;
        
        [XmlElementAttribute("RelMsgLine21", Order=182, Form=XmlSchemaForm.Unqualified)]
        public Collection<StatementRelMsgLine21_2> RelMsgLine21
        {
            get
            {
                return _relMsgLine21;
            }
            set
            {
                _relMsgLine21 = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RelMsgLine21 collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool RelMsgLine21Specified
        {
            get
            {
                return ((this.RelMsgLine21 != null) 
                            && (this.RelMsgLine21.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<StatementRelMsgLine210_2> _relMsgLine210;
        
        [XmlElementAttribute("RelMsgLine210", Order=183, Form=XmlSchemaForm.Unqualified)]
        public Collection<StatementRelMsgLine210_2> RelMsgLine210
        {
            get
            {
                return _relMsgLine210;
            }
            set
            {
                _relMsgLine210 = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RelMsgLine210 collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool RelMsgLine210Specified
        {
            get
            {
                return ((this.RelMsgLine210 != null) 
                            && (this.RelMsgLine210.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<StatementRelMsgLine22_2> _relMsgLine22;
        
        [XmlElementAttribute("RelMsgLine22", Order=184, Form=XmlSchemaForm.Unqualified)]
        public Collection<StatementRelMsgLine22_2> RelMsgLine22
        {
            get
            {
                return _relMsgLine22;
            }
            set
            {
                _relMsgLine22 = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RelMsgLine22 collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool RelMsgLine22Specified
        {
            get
            {
                return ((this.RelMsgLine22 != null) 
                            && (this.RelMsgLine22.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<StatementRelMsgLine23_2> _relMsgLine23;
        
        [XmlElementAttribute("RelMsgLine23", Order=185, Form=XmlSchemaForm.Unqualified)]
        public Collection<StatementRelMsgLine23_2> RelMsgLine23
        {
            get
            {
                return _relMsgLine23;
            }
            set
            {
                _relMsgLine23 = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RelMsgLine23 collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool RelMsgLine23Specified
        {
            get
            {
                return ((this.RelMsgLine23 != null) 
                            && (this.RelMsgLine23.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<StatementRelMsgLine24_2> _relMsgLine24;
        
        [XmlElementAttribute("RelMsgLine24", Order=186, Form=XmlSchemaForm.Unqualified)]
        public Collection<StatementRelMsgLine24_2> RelMsgLine24
        {
            get
            {
                return _relMsgLine24;
            }
            set
            {
                _relMsgLine24 = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RelMsgLine24 collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool RelMsgLine24Specified
        {
            get
            {
                return ((this.RelMsgLine24 != null) 
                            && (this.RelMsgLine24.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<StatementRelMsgLine25_2> _relMsgLine25;
        
        [XmlElementAttribute("RelMsgLine25", Order=187, Form=XmlSchemaForm.Unqualified)]
        public Collection<StatementRelMsgLine25_2> RelMsgLine25
        {
            get
            {
                return _relMsgLine25;
            }
            set
            {
                _relMsgLine25 = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RelMsgLine25 collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool RelMsgLine25Specified
        {
            get
            {
                return ((this.RelMsgLine25 != null) 
                            && (this.RelMsgLine25.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<StatementRelMsgLine26_2> _relMsgLine26;
        
        [XmlElementAttribute("RelMsgLine26", Order=188, Form=XmlSchemaForm.Unqualified)]
        public Collection<StatementRelMsgLine26_2> RelMsgLine26
        {
            get
            {
                return _relMsgLine26;
            }
            set
            {
                _relMsgLine26 = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RelMsgLine26 collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool RelMsgLine26Specified
        {
            get
            {
                return ((this.RelMsgLine26 != null) 
                            && (this.RelMsgLine26.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<StatementRelMsgLine27_2> _relMsgLine27;
        
        [XmlElementAttribute("RelMsgLine27", Order=189, Form=XmlSchemaForm.Unqualified)]
        public Collection<StatementRelMsgLine27_2> RelMsgLine27
        {
            get
            {
                return _relMsgLine27;
            }
            set
            {
                _relMsgLine27 = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RelMsgLine27 collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool RelMsgLine27Specified
        {
            get
            {
                return ((this.RelMsgLine27 != null) 
                            && (this.RelMsgLine27.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<StatementRelMsgLine28_2> _relMsgLine28;
        
        [XmlElementAttribute("RelMsgLine28", Order=190, Form=XmlSchemaForm.Unqualified)]
        public Collection<StatementRelMsgLine28_2> RelMsgLine28
        {
            get
            {
                return _relMsgLine28;
            }
            set
            {
                _relMsgLine28 = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RelMsgLine28 collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool RelMsgLine28Specified
        {
            get
            {
                return ((this.RelMsgLine28 != null) 
                            && (this.RelMsgLine28.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<StatementRelMsgLine29_2> _relMsgLine29;
        
        [XmlElementAttribute("RelMsgLine29", Order=191, Form=XmlSchemaForm.Unqualified)]
        public Collection<StatementRelMsgLine29_2> RelMsgLine29
        {
            get
            {
                return _relMsgLine29;
            }
            set
            {
                _relMsgLine29 = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RelMsgLine29 collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool RelMsgLine29Specified
        {
            get
            {
                return ((this.RelMsgLine29 != null) 
                            && (this.RelMsgLine29.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<StatementRelationshipCodes_2> _relationshipCodes;
        
        [XmlElementAttribute("RelationshipCodes", Order=192, Form=XmlSchemaForm.Unqualified)]
        public Collection<StatementRelationshipCodes_2> RelationshipCodes
        {
            get
            {
                return _relationshipCodes;
            }
            set
            {
                _relationshipCodes = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RelationshipCodes collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool RelationshipCodesSpecified
        {
            get
            {
                return ((this.RelationshipCodes != null) 
                            && (this.RelationshipCodes.Count != 0));
            }
        }
        
        [XmlElementAttribute("SalesTaxAmount", Order=193, Form=XmlSchemaForm.Unqualified)]
        public string SalesTaxAmount { get; set; }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SeparatePrintoutOption", Order=194, Form=XmlSchemaForm.Unqualified)]
        public short SeparatePrintoutOptionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SeparatePrintoutOption property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SeparatePrintoutOptionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> SeparatePrintoutOption
        {
            get
            {
                if (this.SeparatePrintoutOptionValueSpecified)
                {
                    return this.SeparatePrintoutOptionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SeparatePrintoutOptionValue = value.GetValueOrDefault();
                this.SeparatePrintoutOptionValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SeparatorForIds", Order=195, Form=XmlSchemaForm.Unqualified)]
        public short SeparatorForIdsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SeparatorForIds property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SeparatorForIdsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> SeparatorForIds
        {
            get
            {
                if (this.SeparatorForIdsValueSpecified)
                {
                    return this.SeparatorForIdsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SeparatorForIdsValue = value.GetValueOrDefault();
                this.SeparatorForIdsValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SeparatorforBalanceSummary", Order=196, Form=XmlSchemaForm.Unqualified)]
        public short SeparatorforBalanceSummaryValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SeparatorforBalanceSummary property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SeparatorforBalanceSummaryValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> SeparatorforBalanceSummary
        {
            get
            {
                if (this.SeparatorforBalanceSummaryValueSpecified)
                {
                    return this.SeparatorforBalanceSummaryValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SeparatorforBalanceSummaryValue = value.GetValueOrDefault();
                this.SeparatorforBalanceSummaryValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SeparatorforSummaries", Order=197, Form=XmlSchemaForm.Unqualified)]
        public short SeparatorforSummariesValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SeparatorforSummaries property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SeparatorforSummariesValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> SeparatorforSummaries
        {
            get
            {
                if (this.SeparatorforSummariesValueSpecified)
                {
                    return this.SeparatorforSummariesValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SeparatorforSummariesValue = value.GetValueOrDefault();
                this.SeparatorforSummariesValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<StatementServicerAddress_2> _servicerAddress;
        
        [XmlElementAttribute("ServicerAddress", Order=198, Form=XmlSchemaForm.Unqualified)]
        public Collection<StatementServicerAddress_2> ServicerAddress
        {
            get
            {
                return _servicerAddress;
            }
            set
            {
                _servicerAddress = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ServicerAddress collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool ServicerAddressSpecified
        {
            get
            {
                return ((this.ServicerAddress != null) 
                            && (this.ServicerAddress.Count != 0));
            }
        }
        
        [XmlElementAttribute("ShareTrackingTypes", Order=199, Form=XmlSchemaForm.Unqualified)]
        public string ShareTrackingTypes { get; set; }
        
        [XmlElementAttribute("SharedBranch", Order=200, Form=XmlSchemaForm.Unqualified)]
        public string SharedBranch { get; set; }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SortOrder", Order=201, Form=XmlSchemaForm.Unqualified)]
        public short SortOrderValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SortOrder property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SortOrderValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> SortOrder
        {
            get
            {
                if (this.SortOrderValueSpecified)
                {
                    return this.SortOrderValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SortOrderValue = value.GetValueOrDefault();
                this.SortOrderValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SpecifyBranchStmtDisclosure", Order=202, Form=XmlSchemaForm.Unqualified)]
        public short SpecifyBranchStmtDisclosureValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SpecifyBranchStmtDisclosure property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SpecifyBranchStmtDisclosureValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> SpecifyBranchStmtDisclosure
        {
            get
            {
                if (this.SpecifyBranchStmtDisclosureValueSpecified)
                {
                    return this.SpecifyBranchStmtDisclosureValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SpecifyBranchStmtDisclosureValue = value.GetValueOrDefault();
                this.SpecifyBranchStmtDisclosureValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SpecifyOvlStmtDisclosureFe", Order=203, Form=XmlSchemaForm.Unqualified)]
        public decimal SpecifyOvlStmtDisclosureFeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SpecifyOvlStmtDisclosureFe property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SpecifyOvlStmtDisclosureFeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<decimal> SpecifyOvlStmtDisclosureFe
        {
            get
            {
                if (this.SpecifyOvlStmtDisclosureFeValueSpecified)
                {
                    return this.SpecifyOvlStmtDisclosureFeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SpecifyOvlStmtDisclosureFeValue = value.GetValueOrDefault();
                this.SpecifyOvlStmtDisclosureFeValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("StateWithholdYtd", Order=204, Form=XmlSchemaForm.Unqualified)]
        public string StateWithholdYtd { get; set; }
        
        [XmlElementAttribute("StateWithholding", Order=205, Form=XmlSchemaForm.Unqualified)]
        public string StateWithholding { get; set; }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("StatementBatchNumber", Order=206, Form=XmlSchemaForm.Unqualified)]
        public int StatementBatchNumberValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StatementBatchNumber property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool StatementBatchNumberValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<int> StatementBatchNumber
        {
            get
            {
                if (this.StatementBatchNumberValueSpecified)
                {
                    return this.StatementBatchNumberValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.StatementBatchNumberValue = value.GetValueOrDefault();
                this.StatementBatchNumberValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("StatementCutoffDate", Order=207, Form=XmlSchemaForm.Unqualified, IsNullable=true, DataType="date")]
        public Nullable<DateTime> StatementCutoffDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StatementCutoffDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool StatementCutoffDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<DateTime> StatementCutoffDate
        {
            get
            {
                if (this.StatementCutoffDateValueSpecified)
                {
                    return this.StatementCutoffDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.StatementCutoffDateValue = value.GetValueOrDefault();
                this.StatementCutoffDateValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("StatementGroupList", Order=208, Form=XmlSchemaForm.Unqualified)]
        public string StatementGroupList { get; set; }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("StatementSortCount", Order=209, Form=XmlSchemaForm.Unqualified)]
        public int StatementSortCountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StatementSortCount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool StatementSortCountValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<int> StatementSortCount
        {
            get
            {
                if (this.StatementSortCountValueSpecified)
                {
                    return this.StatementSortCountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.StatementSortCountValue = value.GetValueOrDefault();
                this.StatementSortCountValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("StatementSortRecord", Order=210, Form=XmlSchemaForm.Unqualified)]
        public int StatementSortRecordValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StatementSortRecord property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool StatementSortRecordValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<int> StatementSortRecord
        {
            get
            {
                if (this.StatementSortRecordValueSpecified)
                {
                    return this.StatementSortRecordValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.StatementSortRecordValue = value.GetValueOrDefault();
                this.StatementSortRecordValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("StmtDisclosureAddrSource", Order=211, Form=XmlSchemaForm.Unqualified)]
        public short StmtDisclosureAddrSourceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StmtDisclosureAddrSource property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool StmtDisclosureAddrSourceValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> StmtDisclosureAddrSource
        {
            get
            {
                if (this.StmtDisclosureAddrSourceValueSpecified)
                {
                    return this.StmtDisclosureAddrSourceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.StmtDisclosureAddrSourceValue = value.GetValueOrDefault();
                this.StmtDisclosureAddrSourceValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("StopPayPrintOption", Order=212, Form=XmlSchemaForm.Unqualified)]
        public short StopPayPrintOptionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StopPayPrintOption property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool StopPayPrintOptionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> StopPayPrintOption
        {
            get
            {
                if (this.StopPayPrintOptionValueSpecified)
                {
                    return this.StopPayPrintOptionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.StopPayPrintOptionValue = value.GetValueOrDefault();
                this.StopPayPrintOptionValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Subformat", Order=213, Form=XmlSchemaForm.Unqualified)]
        public short SubformatValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Subformat property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SubformatValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> Subformat
        {
            get
            {
                if (this.SubformatValueSpecified)
                {
                    return this.SubformatValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SubformatValue = value.GetValueOrDefault();
                this.SubformatValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SuppressAcctNumberZeros", Order=214, Form=XmlSchemaForm.Unqualified)]
        public bool SuppressAcctNumberZerosValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SuppressAcctNumberZeros property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SuppressAcctNumberZerosValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SuppressAcctNumberZeros
        {
            get
            {
                if (this.SuppressAcctNumberZerosValueSpecified)
                {
                    return this.SuppressAcctNumberZerosValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SuppressAcctNumberZerosValue = value.GetValueOrDefault();
                this.SuppressAcctNumberZerosValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<StatementSvLine_2> _svLine;
        
        [XmlElementAttribute("SvLine", Order=215, Form=XmlSchemaForm.Unqualified)]
        public Collection<StatementSvLine_2> SvLine
        {
            get
            {
                return _svLine;
            }
            set
            {
                _svLine = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the SvLine collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool SvLineSpecified
        {
            get
            {
                return ((this.SvLine != null) 
                            && (this.SvLine.Count != 0));
            }
        }
        
        [XmlElementAttribute("TotIntPdFromOpenLease", Order=216, Form=XmlSchemaForm.Unqualified)]
        public string TotIntPdFromOpenLease { get; set; }
        
        [XmlElementAttribute("TotalAggregatePaid", Order=217, Form=XmlSchemaForm.Unqualified)]
        public string TotalAggregatePaid { get; set; }
        
        [XmlElementAttribute("TotalInterestPaid", Order=218, Form=XmlSchemaForm.Unqualified)]
        public string TotalInterestPaid { get; set; }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TotalLoanBKBalance", Order=219, Form=XmlSchemaForm.Unqualified)]
        public decimal TotalLoanBkBalanceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalLoanBkBalance property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TotalLoanBkBalanceValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<decimal> TotalLoanBkBalance
        {
            get
            {
                if (this.TotalLoanBkBalanceValueSpecified)
                {
                    return this.TotalLoanBkBalanceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TotalLoanBkBalanceValue = value.GetValueOrDefault();
                this.TotalLoanBkBalanceValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TotalLoanBalance", Order=220, Form=XmlSchemaForm.Unqualified)]
        public decimal TotalLoanBalanceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalLoanBalance property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TotalLoanBalanceValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<decimal> TotalLoanBalance
        {
            get
            {
                if (this.TotalLoanBalanceValueSpecified)
                {
                    return this.TotalLoanBalanceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TotalLoanBalanceValue = value.GetValueOrDefault();
                this.TotalLoanBalanceValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TotalLoanCount", Order=221, Form=XmlSchemaForm.Unqualified)]
        public int TotalLoanCountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalLoanCount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TotalLoanCountValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<int> TotalLoanCount
        {
            get
            {
                if (this.TotalLoanCountValueSpecified)
                {
                    return this.TotalLoanCountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TotalLoanCountValue = value.GetValueOrDefault();
                this.TotalLoanCountValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TotalLoanInterestYtd", Order=222, Form=XmlSchemaForm.Unqualified)]
        public decimal TotalLoanInterestYtdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalLoanInterestYtd property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TotalLoanInterestYtdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<decimal> TotalLoanInterestYtd
        {
            get
            {
                if (this.TotalLoanInterestYtdValueSpecified)
                {
                    return this.TotalLoanInterestYtdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TotalLoanInterestYtdValue = value.GetValueOrDefault();
                this.TotalLoanInterestYtdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TotalOtherAcctCount", Order=223, Form=XmlSchemaForm.Unqualified)]
        public int TotalOtherAcctCountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalOtherAcctCount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TotalOtherAcctCountValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<int> TotalOtherAcctCount
        {
            get
            {
                if (this.TotalOtherAcctCountValueSpecified)
                {
                    return this.TotalOtherAcctCountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TotalOtherAcctCountValue = value.GetValueOrDefault();
                this.TotalOtherAcctCountValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TotalShareBalance", Order=224, Form=XmlSchemaForm.Unqualified)]
        public decimal TotalShareBalanceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalShareBalance property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TotalShareBalanceValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<decimal> TotalShareBalance
        {
            get
            {
                if (this.TotalShareBalanceValueSpecified)
                {
                    return this.TotalShareBalanceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TotalShareBalanceValue = value.GetValueOrDefault();
                this.TotalShareBalanceValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TotalShareCount", Order=225, Form=XmlSchemaForm.Unqualified)]
        public int TotalShareCountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalShareCount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TotalShareCountValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<int> TotalShareCount
        {
            get
            {
                if (this.TotalShareCountValueSpecified)
                {
                    return this.TotalShareCountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TotalShareCountValue = value.GetValueOrDefault();
                this.TotalShareCountValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TotalShareDividendYtd", Order=226, Form=XmlSchemaForm.Unqualified)]
        public decimal TotalShareDividendYtdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalShareDividendYtd property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TotalShareDividendYtdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<decimal> TotalShareDividendYtd
        {
            get
            {
                if (this.TotalShareDividendYtdValueSpecified)
                {
                    return this.TotalShareDividendYtdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TotalShareDividendYtdValue = value.GetValueOrDefault();
                this.TotalShareDividendYtdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TotalSharePenaltyYtd", Order=227, Form=XmlSchemaForm.Unqualified)]
        public decimal TotalSharePenaltyYtdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalSharePenaltyYtd property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TotalSharePenaltyYtdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<decimal> TotalSharePenaltyYtd
        {
            get
            {
                if (this.TotalSharePenaltyYtdValueSpecified)
                {
                    return this.TotalSharePenaltyYtdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TotalSharePenaltyYtdValue = value.GetValueOrDefault();
                this.TotalSharePenaltyYtdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TotalShareStateWithholdYtd", Order=228, Form=XmlSchemaForm.Unqualified)]
        public decimal TotalShareStateWithholdYtdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalShareStateWithholdYtd property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TotalShareStateWithholdYtdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<decimal> TotalShareStateWithholdYtd
        {
            get
            {
                if (this.TotalShareStateWithholdYtdValueSpecified)
                {
                    return this.TotalShareStateWithholdYtdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TotalShareStateWithholdYtdValue = value.GetValueOrDefault();
                this.TotalShareStateWithholdYtdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TotalShareWithholdYtd", Order=229, Form=XmlSchemaForm.Unqualified)]
        public decimal TotalShareWithholdYtdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalShareWithholdYtd property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TotalShareWithholdYtdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<decimal> TotalShareWithholdYtd
        {
            get
            {
                if (this.TotalShareWithholdYtdValueSpecified)
                {
                    return this.TotalShareWithholdYtdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TotalShareWithholdYtdValue = value.GetValueOrDefault();
                this.TotalShareWithholdYtdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TotalStatementCount", Order=230, Form=XmlSchemaForm.Unqualified)]
        public int TotalStatementCountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalStatementCount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TotalStatementCountValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<int> TotalStatementCount
        {
            get
            {
                if (this.TotalStatementCountValueSpecified)
                {
                    return this.TotalStatementCountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TotalStatementCountValue = value.GetValueOrDefault();
                this.TotalStatementCountValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TransactionPrintOrder", Order=231, Form=XmlSchemaForm.Unqualified)]
        public short TransactionPrintOrderValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TransactionPrintOrder property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TransactionPrintOrderValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> TransactionPrintOrder
        {
            get
            {
                if (this.TransactionPrintOrderValueSpecified)
                {
                    return this.TransactionPrintOrderValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TransactionPrintOrderValue = value.GetValueOrDefault();
                this.TransactionPrintOrderValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("UnappliedPartialPayment", Order=232, Form=XmlSchemaForm.Unqualified)]
        public string UnappliedPartialPayment { get; set; }
        
        [XmlElementAttribute("UnappliedPartialPmtChg", Order=233, Form=XmlSchemaForm.Unqualified)]
        public string UnappliedPartialPmtChg { get; set; }
        
        [XmlElementAttribute("UnpaidItemFeeDesc", Order=234, Form=XmlSchemaForm.Unqualified)]
        public string UnpaidItemFeeDesc { get; set; }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UseAlternateAddress", Order=235, Form=XmlSchemaForm.Unqualified)]
        public bool UseAlternateAddressValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UseAlternateAddress property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UseAlternateAddressValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UseAlternateAddress
        {
            get
            {
                if (this.UseAlternateAddressValueSpecified)
                {
                    return this.UseAlternateAddressValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UseAlternateAddressValue = value.GetValueOrDefault();
                this.UseAlternateAddressValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UseLoanOvlStmtDisclosureF", Order=236, Form=XmlSchemaForm.Unqualified)]
        public bool UseLoanOvlStmtDisclosureFValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UseLoanOvlStmtDisclosureF property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UseLoanOvlStmtDisclosureFValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UseLoanOvlStmtDisclosureF
        {
            get
            {
                if (this.UseLoanOvlStmtDisclosureFValueSpecified)
                {
                    return this.UseLoanOvlStmtDisclosureFValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UseLoanOvlStmtDisclosureFValue = value.GetValueOrDefault();
                this.UseLoanOvlStmtDisclosureFValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UseTabularStatementFormat", Order=237, Form=XmlSchemaForm.Unqualified)]
        public bool UseTabularStatementFormatValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UseTabularStatementFormat property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UseTabularStatementFormatValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UseTabularStatementFormat
        {
            get
            {
                if (this.UseTabularStatementFormatValueSpecified)
                {
                    return this.UseTabularStatementFormatValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UseTabularStatementFormatValue = value.GetValueOrDefault();
                this.UseTabularStatementFormatValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("UserDefinedSourceCode0", Order=238, Form=XmlSchemaForm.Unqualified)]
        public string UserDefinedSourceCode0 { get; set; }
        
        [XmlElementAttribute("UserDefinedSourceCode1", Order=239, Form=XmlSchemaForm.Unqualified)]
        public string UserDefinedSourceCode1 { get; set; }
        
        [XmlElementAttribute("UserDefinedSourceCode2", Order=240, Form=XmlSchemaForm.Unqualified)]
        public string UserDefinedSourceCode2 { get; set; }
        
        [XmlElementAttribute("UserDefinedSourceCode3", Order=241, Form=XmlSchemaForm.Unqualified)]
        public string UserDefinedSourceCode3 { get; set; }
        
        [XmlElementAttribute("UserDefinedSourceCode4", Order=242, Form=XmlSchemaForm.Unqualified)]
        public string UserDefinedSourceCode4 { get; set; }
        
        [XmlElementAttribute("UserDefinedSourceCode5", Order=243, Form=XmlSchemaForm.Unqualified)]
        public string UserDefinedSourceCode5 { get; set; }
        
        [XmlElementAttribute("UserDefinedSourceCode6", Order=244, Form=XmlSchemaForm.Unqualified)]
        public string UserDefinedSourceCode6 { get; set; }
        
        [XmlElementAttribute("UserDefinedSourceCode7", Order=245, Form=XmlSchemaForm.Unqualified)]
        public string UserDefinedSourceCode7 { get; set; }
        
        [XmlElementAttribute("UserDefinedSourceCode8", Order=246, Form=XmlSchemaForm.Unqualified)]
        public string UserDefinedSourceCode8 { get; set; }
        
        [XmlElementAttribute("UserDefinedSourceCode9", Order=247, Form=XmlSchemaForm.Unqualified)]
        public string UserDefinedSourceCode9 { get; set; }
        
        [XmlElementAttribute("WaivedLateCharge", Order=248, Form=XmlSchemaForm.Unqualified)]
        public string WaivedLateCharge { get; set; }
        
        [XmlElementAttribute("WdDepSummaryLoanTypes", Order=249, Form=XmlSchemaForm.Unqualified)]
        public string WdDepSummaryLoanTypes { get; set; }
        
        [XmlElementAttribute("WdDepSummaryShareTypes", Order=250, Form=XmlSchemaForm.Unqualified)]
        public string WdDepSummaryShareTypes { get; set; }
        
        [XmlElementAttribute("Wire", Order=251, Form=XmlSchemaForm.Unqualified)]
        public string Wire { get; set; }
        
        [XmlElementAttribute("WireOriginator", Order=252, Form=XmlSchemaForm.Unqualified)]
        public string WireOriginator { get; set; }
        
        [XmlElementAttribute("Withdrawal", Order=253, Form=XmlSchemaForm.Unqualified)]
        public string Withdrawal { get; set; }
        
        [XmlElementAttribute("WithholdingYtd", Order=254, Form=XmlSchemaForm.Unqualified)]
        public string WithholdingYtd { get; set; }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("YtdTotalPrinting", Order=255, Form=XmlSchemaForm.Unqualified)]
        public short YtdTotalPrintingValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the YtdTotalPrinting property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool YtdTotalPrintingValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> YtdTotalPrinting
        {
            get
            {
                if (this.YtdTotalPrintingValueSpecified)
                {
                    return this.YtdTotalPrintingValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.YtdTotalPrintingValue = value.GetValueOrDefault();
                this.YtdTotalPrintingValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("Version_1", Order=256, Form=XmlSchemaForm.Unqualified)]
        public ParameterService.VersionType Version1 { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<XmlElement> _any;
        
        [XmlAnyElementAttribute(Order=257)]
        public Collection<XmlElement> Any
        {
            get
            {
                return _any;
            }
            set
            {
                _any = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return ((this.Any != null) 
                            && (this.Any.Count != 0));
            }
        }
    }
}
