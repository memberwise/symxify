//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 2.1.1182.0 using the following command:
// xscgen C:\Users\tbuese\Desktop\Symxchange\ParameterService/*.xsd --sf --un --uc --order --cn -0 --collectionSettersMode=Public -o C:\Users\tbuese\Desktop\Symxchange\ParameterService\generated-output -n ParameterService
namespace ParameterService
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.Diagnostics;
    using System.Xml;
    using System.Xml.Schema;
    using System.Xml.Serialization;
    
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1182.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("OnlineNetFields", Namespace="http://www.symxchange.generated.symitar.com/crud/parameter/dto/retrieve")]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    [XmlRootAttribute("OnlineNetFields", Namespace="http://www.symxchange.generated.symitar.com/crud/parameter/dto/retrieve")]
    public partial class OnlineNetFields
    {
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AcquirerProcessorId", Order=0, Form=XmlSchemaForm.Unqualified)]
        public bool AcquirerProcessorIdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AcquirerProcessorId property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AcquirerProcessorIdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AcquirerProcessorId
        {
            get
            {
                if (this.AcquirerProcessorIdValueSpecified)
                {
                    return this.AcquirerProcessorIdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AcquirerProcessorIdValue = value.GetValueOrDefault();
                this.AcquirerProcessorIdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AcquirerProcessorValue", Order=1, Form=XmlSchemaForm.Unqualified)]
        public bool AcquirerProcessorValueValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AcquirerProcessorValue property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AcquirerProcessorValueValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AcquirerProcessorValue
        {
            get
            {
                if (this.AcquirerProcessorValueValueSpecified)
                {
                    return this.AcquirerProcessorValueValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AcquirerProcessorValueValue = value.GetValueOrDefault();
                this.AcquirerProcessorValueValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AcquirerSecurityCode", Order=2, Form=XmlSchemaForm.Unqualified)]
        public bool AcquirerSecurityCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AcquirerSecurityCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AcquirerSecurityCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AcquirerSecurityCode
        {
            get
            {
                if (this.AcquirerSecurityCodeValueSpecified)
                {
                    return this.AcquirerSecurityCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AcquirerSecurityCodeValue = value.GetValueOrDefault();
                this.AcquirerSecurityCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AcquirerSettlementTime", Order=3, Form=XmlSchemaForm.Unqualified)]
        public bool AcquirerSettlementTimeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AcquirerSettlementTime property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AcquirerSettlementTimeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AcquirerSettlementTime
        {
            get
            {
                if (this.AcquirerSettlementTimeValueSpecified)
                {
                    return this.AcquirerSettlementTimeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AcquirerSettlementTimeValue = value.GetValueOrDefault();
                this.AcquirerSettlementTimeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ClientId", Order=4, Form=XmlSchemaForm.Unqualified)]
        public bool ClientIdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ClientId property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ClientIdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ClientId
        {
            get
            {
                if (this.ClientIdValueSpecified)
                {
                    return this.ClientIdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ClientIdValue = value.GetValueOrDefault();
                this.ClientIdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DataProcessingCenter", Order=5, Form=XmlSchemaForm.Unqualified)]
        public bool DataProcessingCenterValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DataProcessingCenter property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DataProcessingCenterValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DataProcessingCenter
        {
            get
            {
                if (this.DataProcessingCenterValueSpecified)
                {
                    return this.DataProcessingCenterValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DataProcessingCenterValue = value.GetValueOrDefault();
                this.DataProcessingCenterValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("FinancialInstitutionId", Order=6, Form=XmlSchemaForm.Unqualified)]
        public bool FinancialInstitutionIdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FinancialInstitutionId property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FinancialInstitutionIdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> FinancialInstitutionId
        {
            get
            {
                if (this.FinancialInstitutionIdValueSpecified)
                {
                    return this.FinancialInstitutionIdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FinancialInstitutionIdValue = value.GetValueOrDefault();
                this.FinancialInstitutionIdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ForcePostFinTrnLimitUsage", Order=7, Form=XmlSchemaForm.Unqualified)]
        public bool ForcePostFinTrnLimitUsageValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ForcePostFinTrnLimitUsage property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ForcePostFinTrnLimitUsageValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ForcePostFinTrnLimitUsage
        {
            get
            {
                if (this.ForcePostFinTrnLimitUsageValueSpecified)
                {
                    return this.ForcePostFinTrnLimitUsageValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ForcePostFinTrnLimitUsageValue = value.GetValueOrDefault();
                this.ForcePostFinTrnLimitUsageValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("GlCode", Order=8, Form=XmlSchemaForm.Unqualified)]
        public bool GlCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GlCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool GlCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> GlCode
        {
            get
            {
                if (this.GlCodeValueSpecified)
                {
                    return this.GlCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.GlCodeValue = value.GetValueOrDefault();
                this.GlCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HoldMatchWeight", Order=9, Form=XmlSchemaForm.Unqualified)]
        public bool HoldMatchWeightValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HoldMatchWeight property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HoldMatchWeightValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HoldMatchWeight
        {
            get
            {
                if (this.HoldMatchWeightValueSpecified)
                {
                    return this.HoldMatchWeightValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HoldMatchWeightValue = value.GetValueOrDefault();
                this.HoldMatchWeightValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HoldMatchWeightIncrementals", Order=10, Form=XmlSchemaForm.Unqualified)]
        public bool HoldMatchWeightIncrementalsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HoldMatchWeightIncrementals property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HoldMatchWeightIncrementalsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HoldMatchWeightIncrementals
        {
            get
            {
                if (this.HoldMatchWeightIncrementalsValueSpecified)
                {
                    return this.HoldMatchWeightIncrementalsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HoldMatchWeightIncrementalsValue = value.GetValueOrDefault();
                this.HoldMatchWeightIncrementalsValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IssuerProcessorValue", Order=11, Form=XmlSchemaForm.Unqualified)]
        public bool IssuerProcessorValueValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IssuerProcessorValue property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IssuerProcessorValueValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IssuerProcessorValue
        {
            get
            {
                if (this.IssuerProcessorValueValueSpecified)
                {
                    return this.IssuerProcessorValueValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IssuerProcessorValueValue = value.GetValueOrDefault();
                this.IssuerProcessorValueValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IssuerSecurityCode", Order=12, Form=XmlSchemaForm.Unqualified)]
        public bool IssuerSecurityCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IssuerSecurityCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IssuerSecurityCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IssuerSecurityCode
        {
            get
            {
                if (this.IssuerSecurityCodeValueSpecified)
                {
                    return this.IssuerSecurityCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IssuerSecurityCodeValue = value.GetValueOrDefault();
                this.IssuerSecurityCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IssuerSettlementTime", Order=13, Form=XmlSchemaForm.Unqualified)]
        public bool IssuerSettlementTimeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IssuerSettlementTime property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IssuerSettlementTimeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IssuerSettlementTime
        {
            get
            {
                if (this.IssuerSettlementTimeValueSpecified)
                {
                    return this.IssuerSettlementTimeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IssuerSettlementTimeValue = value.GetValueOrDefault();
                this.IssuerSettlementTimeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LogicalNetwork", Order=14, Form=XmlSchemaForm.Unqualified)]
        public bool LogicalNetworkValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LogicalNetwork property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LogicalNetworkValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LogicalNetwork
        {
            get
            {
                if (this.LogicalNetworkValueSpecified)
                {
                    return this.LogicalNetworkValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LogicalNetworkValue = value.GetValueOrDefault();
                this.LogicalNetworkValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MasterCardCcaFeeComment", Order=15, Form=XmlSchemaForm.Unqualified)]
        public bool MasterCardCcaFeeCommentValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MasterCardCcaFeeComment property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MasterCardCcaFeeCommentValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MasterCardCcaFeeComment
        {
            get
            {
                if (this.MasterCardCcaFeeCommentValueSpecified)
                {
                    return this.MasterCardCcaFeeCommentValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MasterCardCcaFeeCommentValue = value.GetValueOrDefault();
                this.MasterCardCcaFeeCommentValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MasterCardCcaFeeGlCode", Order=16, Form=XmlSchemaForm.Unqualified)]
        public bool MasterCardCcaFeeGlCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MasterCardCcaFeeGlCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MasterCardCcaFeeGlCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MasterCardCcaFeeGlCode
        {
            get
            {
                if (this.MasterCardCcaFeeGlCodeValueSpecified)
                {
                    return this.MasterCardCcaFeeGlCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MasterCardCcaFeeGlCodeValue = value.GetValueOrDefault();
                this.MasterCardCcaFeeGlCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MasterCardIcaFeeComment", Order=17, Form=XmlSchemaForm.Unqualified)]
        public bool MasterCardIcaFeeCommentValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MasterCardIcaFeeComment property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MasterCardIcaFeeCommentValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MasterCardIcaFeeComment
        {
            get
            {
                if (this.MasterCardIcaFeeCommentValueSpecified)
                {
                    return this.MasterCardIcaFeeCommentValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MasterCardIcaFeeCommentValue = value.GetValueOrDefault();
                this.MasterCardIcaFeeCommentValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MasterCardIcaFeeGlCode", Order=18, Form=XmlSchemaForm.Unqualified)]
        public bool MasterCardIcaFeeGlCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MasterCardIcaFeeGlCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MasterCardIcaFeeGlCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MasterCardIcaFeeGlCode
        {
            get
            {
                if (this.MasterCardIcaFeeGlCodeValueSpecified)
                {
                    return this.MasterCardIcaFeeGlCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MasterCardIcaFeeGlCodeValue = value.GetValueOrDefault();
                this.MasterCardIcaFeeGlCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("NetworkManagesPreAuthHolds", Order=19, Form=XmlSchemaForm.Unqualified)]
        public bool NetworkManagesPreAuthHoldsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NetworkManagesPreAuthHolds property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool NetworkManagesPreAuthHoldsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> NetworkManagesPreAuthHolds
        {
            get
            {
                if (this.NetworkManagesPreAuthHoldsValueSpecified)
                {
                    return this.NetworkManagesPreAuthHoldsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NetworkManagesPreAuthHoldsValue = value.GetValueOrDefault();
                this.NetworkManagesPreAuthHoldsValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("NetworkMessageFormat", Order=20, Form=XmlSchemaForm.Unqualified)]
        public bool NetworkMessageFormatValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NetworkMessageFormat property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool NetworkMessageFormatValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> NetworkMessageFormat
        {
            get
            {
                if (this.NetworkMessageFormatValueSpecified)
                {
                    return this.NetworkMessageFormatValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NetworkMessageFormatValue = value.GetValueOrDefault();
                this.NetworkMessageFormatValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OtherAccountMiscId", Order=21, Form=XmlSchemaForm.Unqualified)]
        public bool OtherAccountMiscIdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OtherAccountMiscId property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OtherAccountMiscIdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> OtherAccountMiscId
        {
            get
            {
                if (this.OtherAccountMiscIdValueSpecified)
                {
                    return this.OtherAccountMiscIdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OtherAccountMiscIdValue = value.GetValueOrDefault();
                this.OtherAccountMiscIdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OtherAccountType", Order=22, Form=XmlSchemaForm.Unqualified)]
        public bool OtherAccountTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OtherAccountType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OtherAccountTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> OtherAccountType
        {
            get
            {
                if (this.OtherAccountTypeValueSpecified)
                {
                    return this.OtherAccountTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OtherAccountTypeValue = value.GetValueOrDefault();
                this.OtherAccountTypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PartialApprovalCardTypes", Order=23, Form=XmlSchemaForm.Unqualified)]
        public bool PartialApprovalCardTypesValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PartialApprovalCardTypes property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PartialApprovalCardTypesValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PartialApprovalCardTypes
        {
            get
            {
                if (this.PartialApprovalCardTypesValueSpecified)
                {
                    return this.PartialApprovalCardTypesValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PartialApprovalCardTypesValue = value.GetValueOrDefault();
                this.PartialApprovalCardTypesValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Password", Order=24, Form=XmlSchemaForm.Unqualified)]
        public bool PasswordValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Password property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PasswordValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Password
        {
            get
            {
                if (this.PasswordValueSpecified)
                {
                    return this.PasswordValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PasswordValue = value.GetValueOrDefault();
                this.PasswordValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PinPartialApprovalOption", Order=25, Form=XmlSchemaForm.Unqualified)]
        public bool PinPartialApprovalOptionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PinPartialApprovalOption property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PinPartialApprovalOptionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PinPartialApprovalOption
        {
            get
            {
                if (this.PinPartialApprovalOptionValueSpecified)
                {
                    return this.PinPartialApprovalOptionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PinPartialApprovalOptionValue = value.GetValueOrDefault();
                this.PinPartialApprovalOptionValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PostAdministrativeMessages", Order=26, Form=XmlSchemaForm.Unqualified)]
        public bool PostAdministrativeMessagesValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PostAdministrativeMessages property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PostAdministrativeMessagesValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PostAdministrativeMessages
        {
            get
            {
                if (this.PostAdministrativeMessagesValueSpecified)
                {
                    return this.PostAdministrativeMessagesValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PostAdministrativeMessagesValue = value.GetValueOrDefault();
                this.PostAdministrativeMessagesValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrincipalId", Order=27, Form=XmlSchemaForm.Unqualified)]
        public bool PrincipalIdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrincipalId property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrincipalIdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrincipalId
        {
            get
            {
                if (this.PrincipalIdValueSpecified)
                {
                    return this.PrincipalIdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrincipalIdValue = value.GetValueOrDefault();
                this.PrincipalIdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("RequestAdvicePairs", Order=28, Form=XmlSchemaForm.Unqualified)]
        public bool RequestAdvicePairsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RequestAdvicePairs property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool RequestAdvicePairsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> RequestAdvicePairs
        {
            get
            {
                if (this.RequestAdvicePairsValueSpecified)
                {
                    return this.RequestAdvicePairsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RequestAdvicePairsValue = value.GetValueOrDefault();
                this.RequestAdvicePairsValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ReturnBalOnNonAtmTrans", Order=29, Form=XmlSchemaForm.Unqualified)]
        public bool ReturnBalOnNonAtmTransValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ReturnBalOnNonAtmTrans property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ReturnBalOnNonAtmTransValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ReturnBalOnNonAtmTrans
        {
            get
            {
                if (this.ReturnBalOnNonAtmTransValueSpecified)
                {
                    return this.ReturnBalOnNonAtmTransValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ReturnBalOnNonAtmTransValue = value.GetValueOrDefault();
                this.ReturnBalOnNonAtmTransValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ReturnedBalances", Order=30, Form=XmlSchemaForm.Unqualified)]
        public bool ReturnedBalancesValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ReturnedBalances property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ReturnedBalancesValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ReturnedBalances
        {
            get
            {
                if (this.ReturnedBalancesValueSpecified)
                {
                    return this.ReturnedBalancesValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ReturnedBalancesValue = value.GetValueOrDefault();
                this.ReturnedBalancesValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("RoutingTransitNumber", Order=31, Form=XmlSchemaForm.Unqualified)]
        public bool RoutingTransitNumberValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RoutingTransitNumber property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool RoutingTransitNumberValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> RoutingTransitNumber
        {
            get
            {
                if (this.RoutingTransitNumberValueSpecified)
                {
                    return this.RoutingTransitNumberValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RoutingTransitNumberValue = value.GetValueOrDefault();
                this.RoutingTransitNumberValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SigPartialApprovalOption", Order=32, Form=XmlSchemaForm.Unqualified)]
        public bool SigPartialApprovalOptionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SigPartialApprovalOption property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SigPartialApprovalOptionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SigPartialApprovalOption
        {
            get
            {
                if (this.SigPartialApprovalOptionValueSpecified)
                {
                    return this.SigPartialApprovalOptionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SigPartialApprovalOptionValue = value.GetValueOrDefault();
                this.SigPartialApprovalOptionValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SystemId", Order=33, Form=XmlSchemaForm.Unqualified)]
        public bool SystemIdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SystemId property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SystemIdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SystemId
        {
            get
            {
                if (this.SystemIdValueSpecified)
                {
                    return this.SystemIdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SystemIdValue = value.GetValueOrDefault();
                this.SystemIdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TerminalIdOption", Order=34, Form=XmlSchemaForm.Unqualified)]
        public bool TerminalIdOptionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TerminalIdOption property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TerminalIdOptionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TerminalIdOption
        {
            get
            {
                if (this.TerminalIdOptionValueSpecified)
                {
                    return this.TerminalIdOptionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TerminalIdOptionValue = value.GetValueOrDefault();
                this.TerminalIdOptionValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TokenizationNoteCode", Order=35, Form=XmlSchemaForm.Unqualified)]
        public bool TokenizationNoteCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TokenizationNoteCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TokenizationNoteCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TokenizationNoteCode
        {
            get
            {
                if (this.TokenizationNoteCodeValueSpecified)
                {
                    return this.TokenizationNoteCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TokenizationNoteCodeValue = value.GetValueOrDefault();
                this.TokenizationNoteCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UpdateCardStatusReason", Order=36, Form=XmlSchemaForm.Unqualified)]
        public bool UpdateCardStatusReasonValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UpdateCardStatusReason property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UpdateCardStatusReasonValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UpdateCardStatusReason
        {
            get
            {
                if (this.UpdateCardStatusReasonValueSpecified)
                {
                    return this.UpdateCardStatusReasonValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UpdateCardStatusReasonValue = value.GetValueOrDefault();
                this.UpdateCardStatusReasonValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UseAcctsinOnlineMessage", Order=37, Form=XmlSchemaForm.Unqualified)]
        public bool UseAcctsinOnlineMessageValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UseAcctsinOnlineMessage property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UseAcctsinOnlineMessageValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UseAcctsinOnlineMessage
        {
            get
            {
                if (this.UseAcctsinOnlineMessageValueSpecified)
                {
                    return this.UseAcctsinOnlineMessageValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UseAcctsinOnlineMessageValue = value.GetValueOrDefault();
                this.UseAcctsinOnlineMessageValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ValidateOnlineMsgAcct", Order=38, Form=XmlSchemaForm.Unqualified)]
        public bool ValidateOnlineMsgAcctValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ValidateOnlineMsgAcct property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ValidateOnlineMsgAcctValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ValidateOnlineMsgAcct
        {
            get
            {
                if (this.ValidateOnlineMsgAcctValueSpecified)
                {
                    return this.ValidateOnlineMsgAcctValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ValidateOnlineMsgAcctValue = value.GetValueOrDefault();
                this.ValidateOnlineMsgAcctValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("VisaMultiCrrncyIsaFeeCmnt", Order=39, Form=XmlSchemaForm.Unqualified)]
        public bool VisaMultiCrrncyIsaFeeCmntValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the VisaMultiCrrncyIsaFeeCmnt property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool VisaMultiCrrncyIsaFeeCmntValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> VisaMultiCrrncyIsaFeeCmnt
        {
            get
            {
                if (this.VisaMultiCrrncyIsaFeeCmntValueSpecified)
                {
                    return this.VisaMultiCrrncyIsaFeeCmntValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.VisaMultiCrrncyIsaFeeCmntValue = value.GetValueOrDefault();
                this.VisaMultiCrrncyIsaFeeCmntValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("VisaMultiCrrncyIsaFeeGl", Order=40, Form=XmlSchemaForm.Unqualified)]
        public bool VisaMultiCrrncyIsaFeeGlValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the VisaMultiCrrncyIsaFeeGl property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool VisaMultiCrrncyIsaFeeGlValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> VisaMultiCrrncyIsaFeeGl
        {
            get
            {
                if (this.VisaMultiCrrncyIsaFeeGlValueSpecified)
                {
                    return this.VisaMultiCrrncyIsaFeeGlValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.VisaMultiCrrncyIsaFeeGlValue = value.GetValueOrDefault();
                this.VisaMultiCrrncyIsaFeeGlValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("VisaSglCrrncyIsaFeeCmnt", Order=41, Form=XmlSchemaForm.Unqualified)]
        public bool VisaSglCrrncyIsaFeeCmntValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the VisaSglCrrncyIsaFeeCmnt property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool VisaSglCrrncyIsaFeeCmntValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> VisaSglCrrncyIsaFeeCmnt
        {
            get
            {
                if (this.VisaSglCrrncyIsaFeeCmntValueSpecified)
                {
                    return this.VisaSglCrrncyIsaFeeCmntValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.VisaSglCrrncyIsaFeeCmntValue = value.GetValueOrDefault();
                this.VisaSglCrrncyIsaFeeCmntValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("VisaSglCrrncyIsaFeeGl", Order=42, Form=XmlSchemaForm.Unqualified)]
        public bool VisaSglCrrncyIsaFeeGlValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the VisaSglCrrncyIsaFeeGl property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool VisaSglCrrncyIsaFeeGlValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> VisaSglCrrncyIsaFeeGl
        {
            get
            {
                if (this.VisaSglCrrncyIsaFeeGlValueSpecified)
                {
                    return this.VisaSglCrrncyIsaFeeGlValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.VisaSglCrrncyIsaFeeGlValue = value.GetValueOrDefault();
                this.VisaSglCrrncyIsaFeeGlValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("WarnonOverdraw", Order=43, Form=XmlSchemaForm.Unqualified)]
        public bool WarnonOverdrawValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the WarnonOverdraw property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool WarnonOverdrawValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> WarnonOverdraw
        {
            get
            {
                if (this.WarnonOverdrawValueSpecified)
                {
                    return this.WarnonOverdrawValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.WarnonOverdrawValue = value.GetValueOrDefault();
                this.WarnonOverdrawValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("Version_1", Order=44, Form=XmlSchemaForm.Unqualified)]
        public ParameterService.VersionType Version1 { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<XmlElement> _any;
        
        [XmlAnyElementAttribute(Order=45)]
        public Collection<XmlElement> Any
        {
            get
            {
                return _any;
            }
            set
            {
                _any = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return ((this.Any != null) 
                            && (this.Any.Count != 0));
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="OnlineNetFields" /> class.</para>
        /// </summary>
        public OnlineNetFields()
        {
            this._any = new Collection<XmlElement>();
        }
    }
}
