//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 2.1.1182.0 using the following command:
// xscgen C:\Users\tbuese\Desktop\Symxchange\ParameterService/*.xsd --sf --un --uc --order --cn -0 --collectionSettersMode=Public -o C:\Users\tbuese\Desktop\Symxchange\ParameterService\generated-output -n ParameterService
namespace ParameterService
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.Diagnostics;
    using System.Xml;
    using System.Xml.Schema;
    using System.Xml.Serialization;
    
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1182.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("ItcFraudFields", Namespace="http://www.symxchange.generated.symitar.com/crud/parameter/dto/retrieve")]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    [XmlRootAttribute("ItcFraudFields", Namespace="http://www.symxchange.generated.symitar.com/crud/parameter/dto/retrieve")]
    public partial class ItcFraudFields
    {
        
        [XmlIgnoreAttribute()]
        private Collection<short> _applytoAllCodes;
        
        [XmlElementAttribute("ApplytoAllCodes", Order=0, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> ApplytoAllCodes
        {
            get
            {
                return _applytoAllCodes;
            }
            set
            {
                _applytoAllCodes = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ApplytoAllCodes collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool ApplytoAllCodesSpecified
        {
            get
            {
                return ((this.ApplytoAllCodes != null) 
                            && (this.ApplytoAllCodes.Count != 0));
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ItcFraudFields" /> class.</para>
        /// </summary>
        public ItcFraudFields()
        {
            this._applytoAllCodes = new Collection<short>();
            this._fraudCode = new Collection<short>();
            this._holdDays = new Collection<short>();
            this._severity = new Collection<short>();
            this._any = new Collection<XmlElement>();
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _fraudCode;
        
        [XmlElementAttribute("FraudCode", Order=1, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> FraudCode
        {
            get
            {
                return _fraudCode;
            }
            set
            {
                _fraudCode = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the FraudCode collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool FraudCodeSpecified
        {
            get
            {
                return ((this.FraudCode != null) 
                            && (this.FraudCode.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("FraudVendorId", Order=2, Form=XmlSchemaForm.Unqualified)]
        public bool FraudVendorIdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FraudVendorId property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FraudVendorIdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> FraudVendorId
        {
            get
            {
                if (this.FraudVendorIdValueSpecified)
                {
                    return this.FraudVendorIdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FraudVendorIdValue = value.GetValueOrDefault();
                this.FraudVendorIdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("FraudVendorName", Order=3, Form=XmlSchemaForm.Unqualified)]
        public bool FraudVendorNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FraudVendorName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FraudVendorNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> FraudVendorName
        {
            get
            {
                if (this.FraudVendorNameValueSpecified)
                {
                    return this.FraudVendorNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FraudVendorNameValue = value.GetValueOrDefault();
                this.FraudVendorNameValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _holdDays;
        
        [XmlElementAttribute("HoldDays", Order=4, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> HoldDays
        {
            get
            {
                return _holdDays;
            }
            set
            {
                _holdDays = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the HoldDays collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool HoldDaysSpecified
        {
            get
            {
                return ((this.HoldDays != null) 
                            && (this.HoldDays.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ItcFraudVendor", Order=5, Form=XmlSchemaForm.Unqualified)]
        public bool ItcFraudVendorValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ItcFraudVendor property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ItcFraudVendorValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ItcFraudVendor
        {
            get
            {
                if (this.ItcFraudVendorValueSpecified)
                {
                    return this.ItcFraudVendorValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ItcFraudVendorValue = value.GetValueOrDefault();
                this.ItcFraudVendorValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _severity;
        
        [XmlElementAttribute("Severity", Order=6, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> Severity
        {
            get
            {
                return _severity;
            }
            set
            {
                _severity = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Severity collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool SeveritySpecified
        {
            get
            {
                return ((this.Severity != null) 
                            && (this.Severity.Count != 0));
            }
        }
        
        [XmlElementAttribute("Version_1", Order=7, Form=XmlSchemaForm.Unqualified)]
        public ParameterService.VersionType Version1 { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<XmlElement> _any;
        
        [XmlAnyElementAttribute(Order=8)]
        public Collection<XmlElement> Any
        {
            get
            {
                return _any;
            }
            set
            {
                _any = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return ((this.Any != null) 
                            && (this.Any.Count != 0));
            }
        }
    }
}
