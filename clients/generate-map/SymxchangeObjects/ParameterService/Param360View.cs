//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 2.1.1182.0 using the following command:
// xscgen C:\Users\tbuese\Desktop\Symxchange\ParameterService/*.xsd --sf --un --uc --order --cn -0 --collectionSettersMode=Public -o C:\Users\tbuese\Desktop\Symxchange\ParameterService\generated-output -n ParameterService
namespace ParameterService
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.Diagnostics;
    using System.Xml;
    using System.Xml.Schema;
    using System.Xml.Serialization;
    
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1182.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("Param360View", Namespace="http://www.symxchange.generated.symitar.com/crud/parameter/dto/retrieve")]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    [XmlRootAttribute("Param360View", Namespace="http://www.symxchange.generated.symitar.com/crud/parameter/dto/retrieve")]
    public partial class Param360View
    {
        
        [XmlElementAttribute("AccountStmtMailCodeList", Order=0, Form=XmlSchemaForm.Unqualified)]
        public ParameterService.BitMap AccountStmtMailCodeList { get; set; }
        
        [XmlElementAttribute("AccountTrackingTypeList", Order=1, Form=XmlSchemaForm.Unqualified)]
        public ParameterService.BitMap AccountTrackingTypeList { get; set; }
        
        [XmlElementAttribute("AchOrigEftGroupList", Order=2, Form=XmlSchemaForm.Unqualified)]
        public string AchOrigEftGroupList { get; set; }
        
        [XmlElementAttribute("AllLnsAcctNameTypeList", Order=3, Form=XmlSchemaForm.Unqualified)]
        public ParameterService.BitMap AllLnsAcctNameTypeList { get; set; }
        
        [XmlElementAttribute("AllShrsAcctNameTypeList", Order=4, Form=XmlSchemaForm.Unqualified)]
        public ParameterService.BitMap AllShrsAcctNameTypeList { get; set; }
        
        [XmlElementAttribute("AudioResponseDescription", Order=5, Form=XmlSchemaForm.Unqualified)]
        public string AudioResponseDescription { get; set; }
        
        [XmlElementAttribute("BillPayAcctTrackTypeList", Order=6, Form=XmlSchemaForm.Unqualified)]
        public ParameterService.BitMap BillPayAcctTrackTypeList { get; set; }
        
        [XmlElementAttribute("BillPayEftGroupList", Order=7, Form=XmlSchemaForm.Unqualified)]
        public string BillPayEftGroupList { get; set; }
        
        [XmlElementAttribute("BillPaymentDescription", Order=8, Form=XmlSchemaForm.Unqualified)]
        public string BillPaymentDescription { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<Param360ViewCardTypeList> _cardTypeList;
        
        [XmlElementAttribute("CardTypeList", Order=9, Form=XmlSchemaForm.Unqualified)]
        public Collection<Param360ViewCardTypeList> CardTypeList
        {
            get
            {
                return _cardTypeList;
            }
            set
            {
                _cardTypeList = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CardTypeList collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool CardTypeListSpecified
        {
            get
            {
                return ((this.CardTypeList != null) 
                            && (this.CardTypeList.Count != 0));
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Param360View" /> class.</para>
        /// </summary>
        public Param360View()
        {
            this._cardTypeList = new Collection<Param360ViewCardTypeList>();
            this._cardTypeListDescription = new Collection<Param360ViewCardTypeListDescription>();
            this._excludeSsnTin = new Collection<Param360ViewExcludeSsnTin>();
            this._excludeSsnTinType = new Collection<Param360ViewExcludeSsnTinType>();
            this._trackingTypeList = new Collection<Param360ViewTrackingTypeList>();
            this._trackingTypeListDesc = new Collection<Param360ViewTrackingTypeListDesc>();
            this._any = new Collection<XmlElement>();
        }
        
        [XmlIgnoreAttribute()]
        private Collection<Param360ViewCardTypeListDescription> _cardTypeListDescription;
        
        [XmlElementAttribute("CardTypeListDescription", Order=10, Form=XmlSchemaForm.Unqualified)]
        public Collection<Param360ViewCardTypeListDescription> CardTypeListDescription
        {
            get
            {
                return _cardTypeListDescription;
            }
            set
            {
                _cardTypeListDescription = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CardTypeListDescription collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool CardTypeListDescriptionSpecified
        {
            get
            {
                return ((this.CardTypeListDescription != null) 
                            && (this.CardTypeListDescription.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CheckAudioAccessCode", Order=11, Form=XmlSchemaForm.Unqualified)]
        public bool CheckAudioAccessCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CheckAudioAccessCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CheckAudioAccessCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CheckAudioAccessCode
        {
            get
            {
                if (this.CheckAudioAccessCodeValueSpecified)
                {
                    return this.CheckAudioAccessCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CheckAudioAccessCodeValue = value.GetValueOrDefault();
                this.CheckAudioAccessCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CheckEstatementEnableFlag", Order=12, Form=XmlSchemaForm.Unqualified)]
        public bool CheckEstatementEnableFlagValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CheckEstatementEnableFlag property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CheckEstatementEnableFlagValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CheckEstatementEnableFlag
        {
            get
            {
                if (this.CheckEstatementEnableFlagValueSpecified)
                {
                    return this.CheckEstatementEnableFlagValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CheckEstatementEnableFlagValue = value.GetValueOrDefault();
                this.CheckEstatementEnableFlagValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CheckHbPwdAndAudioAccess", Order=13, Form=XmlSchemaForm.Unqualified)]
        public bool CheckHbPwdAndAudioAccessValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CheckHbPwdAndAudioAccess property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CheckHbPwdAndAudioAccessValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CheckHbPwdAndAudioAccess
        {
            get
            {
                if (this.CheckHbPwdAndAudioAccessValueSpecified)
                {
                    return this.CheckHbPwdAndAudioAccessValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CheckHbPwdAndAudioAccessValue = value.GetValueOrDefault();
                this.CheckHbPwdAndAudioAccessValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DisplayMemberGroupDesc", Order=14, Form=XmlSchemaForm.Unqualified)]
        public bool DisplayMemberGroupDescValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DisplayMemberGroupDesc property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DisplayMemberGroupDescValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DisplayMemberGroupDesc
        {
            get
            {
                if (this.DisplayMemberGroupDescValueSpecified)
                {
                    return this.DisplayMemberGroupDescValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DisplayMemberGroupDescValue = value.GetValueOrDefault();
                this.DisplayMemberGroupDescValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("EnableAcsPaneIn360View", Order=15, Form=XmlSchemaForm.Unqualified)]
        public bool EnableAcsPaneIn360ViewValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EnableAcsPaneIn360View property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool EnableAcsPaneIn360ViewValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> EnableAcsPaneIn360View
        {
            get
            {
                if (this.EnableAcsPaneIn360ViewValueSpecified)
                {
                    return this.EnableAcsPaneIn360ViewValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EnableAcsPaneIn360ViewValue = value.GetValueOrDefault();
                this.EnableAcsPaneIn360ViewValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("EnableTellerTran360View", Order=16, Form=XmlSchemaForm.Unqualified)]
        public bool EnableTellerTran360ViewValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EnableTellerTran360View property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool EnableTellerTran360ViewValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> EnableTellerTran360View
        {
            get
            {
                if (this.EnableTellerTran360ViewValueSpecified)
                {
                    return this.EnableTellerTran360ViewValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EnableTellerTran360ViewValue = value.GetValueOrDefault();
                this.EnableTellerTran360ViewValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("EstatementsDescription", Order=17, Form=XmlSchemaForm.Unqualified)]
        public string EstatementsDescription { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<Param360ViewExcludeSsnTin> _excludeSsnTin;
        
        [XmlElementAttribute("ExcludeSsnTin", Order=18, Form=XmlSchemaForm.Unqualified)]
        public Collection<Param360ViewExcludeSsnTin> ExcludeSsnTin
        {
            get
            {
                return _excludeSsnTin;
            }
            set
            {
                _excludeSsnTin = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ExcludeSsnTin collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool ExcludeSsnTinSpecified
        {
            get
            {
                return ((this.ExcludeSsnTin != null) 
                            && (this.ExcludeSsnTin.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<Param360ViewExcludeSsnTinType> _excludeSsnTinType;
        
        [XmlElementAttribute("ExcludeSsnTinType", Order=19, Form=XmlSchemaForm.Unqualified)]
        public Collection<Param360ViewExcludeSsnTinType> ExcludeSsnTinType
        {
            get
            {
                return _excludeSsnTinType;
            }
            set
            {
                _excludeSsnTinType = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ExcludeSsnTinType collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool ExcludeSsnTinTypeSpecified
        {
            get
            {
                return ((this.ExcludeSsnTinType != null) 
                            && (this.ExcludeSsnTinType.Count != 0));
            }
        }
        
        [XmlElementAttribute("InventoryTypeList", Order=20, Form=XmlSchemaForm.Unqualified)]
        public ParameterService.BitMap InventoryTypeList { get; set; }
        
        [XmlElementAttribute("LoanNameTypeList", Order=21, Form=XmlSchemaForm.Unqualified)]
        public ParameterService.BitMap LoanNameTypeList { get; set; }
        
        [XmlElementAttribute("LoanServiceCodeList", Order=22, Form=XmlSchemaForm.Unqualified)]
        public ParameterService.BitMap LoanServiceCodeList { get; set; }
        
        [XmlElementAttribute("LoanStmtMailCodeList", Order=23, Form=XmlSchemaForm.Unqualified)]
        public ParameterService.BitMap LoanStmtMailCodeList { get; set; }
        
        [XmlElementAttribute("NonStandardTrackingTypeList", Order=24, Form=XmlSchemaForm.Unqualified)]
        public ParameterService.BitMap NonStandardTrackingTypeList { get; set; }
        
        [XmlElementAttribute("OnlineBankingDescription", Order=25, Form=XmlSchemaForm.Unqualified)]
        public string OnlineBankingDescription { get; set; }
        
        [XmlElementAttribute("OtherSvcTrackingTypeList", Order=26, Form=XmlSchemaForm.Unqualified)]
        public ParameterService.BitMap OtherSvcTrackingTypeList { get; set; }
        
        [XmlElementAttribute("SafeDepositBoxDescription", Order=27, Form=XmlSchemaForm.Unqualified)]
        public string SafeDepositBoxDescription { get; set; }
        
        [XmlElementAttribute("ShareNameTypeList", Order=28, Form=XmlSchemaForm.Unqualified)]
        public ParameterService.BitMap ShareNameTypeList { get; set; }
        
        [XmlElementAttribute("ShareServiceCodeList", Order=29, Form=XmlSchemaForm.Unqualified)]
        public ParameterService.BitMap ShareServiceCodeList { get; set; }
        
        [XmlElementAttribute("ShareStmtMailCodeList", Order=30, Form=XmlSchemaForm.Unqualified)]
        public ParameterService.BitMap ShareStmtMailCodeList { get; set; }
        
        [XmlElementAttribute("StandardTrackingTypeList", Order=31, Form=XmlSchemaForm.Unqualified)]
        public ParameterService.BitMap StandardTrackingTypeList { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<Param360ViewTrackingTypeList> _trackingTypeList;
        
        [XmlElementAttribute("TrackingTypeList", Order=32, Form=XmlSchemaForm.Unqualified)]
        public Collection<Param360ViewTrackingTypeList> TrackingTypeList
        {
            get
            {
                return _trackingTypeList;
            }
            set
            {
                _trackingTypeList = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TrackingTypeList collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool TrackingTypeListSpecified
        {
            get
            {
                return ((this.TrackingTypeList != null) 
                            && (this.TrackingTypeList.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<Param360ViewTrackingTypeListDesc> _trackingTypeListDesc;
        
        [XmlElementAttribute("TrackingTypeListDesc", Order=33, Form=XmlSchemaForm.Unqualified)]
        public Collection<Param360ViewTrackingTypeListDesc> TrackingTypeListDesc
        {
            get
            {
                return _trackingTypeListDesc;
            }
            set
            {
                _trackingTypeListDesc = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TrackingTypeListDesc collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool TrackingTypeListDescSpecified
        {
            get
            {
                return ((this.TrackingTypeListDesc != null) 
                            && (this.TrackingTypeListDesc.Count != 0));
            }
        }
        
        [XmlElementAttribute("WarningCodeList", Order=34, Form=XmlSchemaForm.Unqualified)]
        public ParameterService.BitMap WarningCodeList { get; set; }
        
        [XmlElementAttribute("Version_1", Order=35, Form=XmlSchemaForm.Unqualified)]
        public ParameterService.VersionType Version1 { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<XmlElement> _any;
        
        [XmlAnyElementAttribute(Order=36)]
        public Collection<XmlElement> Any
        {
            get
            {
                return _any;
            }
            set
            {
                _any = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return ((this.Any != null) 
                            && (this.Any.Count != 0));
            }
        }
    }
}
