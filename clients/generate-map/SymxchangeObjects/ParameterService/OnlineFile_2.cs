//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 2.1.1182.0 using the following command:
// xscgen C:\Users\tbuese\Desktop\Symxchange\ParameterService/*.xsd --sf --un --uc --order --cn -0 --collectionSettersMode=Public -o C:\Users\tbuese\Desktop\Symxchange\ParameterService\generated-output -n ParameterService
namespace ParameterService
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.Diagnostics;
    using System.Xml;
    using System.Xml.Schema;
    using System.Xml.Serialization;
    
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1182.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("OnlineFile", Namespace="http://www.symxchange.generated.symitar.com/crud/parameter/dto/update")]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    [XmlRootAttribute("OnlineFile", Namespace="http://www.symxchange.generated.symitar.com/crud/parameter/dto/update")]
    [XmlIncludeAttribute(typeof(OnlineFileFields_2))]
    public partial class OnlineFile_2
    {
        
        [XmlElementAttribute("AvailBalExclList", Order=0, Form=XmlSchemaForm.Unqualified)]
        public string AvailBalExclList { get; set; }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AvailBalInclOdProtection", Order=1, Form=XmlSchemaForm.Unqualified)]
        public bool AvailBalInclOdProtectionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AvailBalInclOdProtection property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AvailBalInclOdProtectionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AvailBalInclOdProtection
        {
            get
            {
                if (this.AvailBalInclOdProtectionValueSpecified)
                {
                    return this.AvailBalInclOdProtectionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AvailBalInclOdProtectionValue = value.GetValueOrDefault();
                this.AvailBalInclOdProtectionValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AvailBalInclOdTolerance", Order=2, Form=XmlSchemaForm.Unqualified)]
        public bool AvailBalInclOdToleranceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AvailBalInclOdTolerance property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AvailBalInclOdToleranceValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AvailBalInclOdTolerance
        {
            get
            {
                if (this.AvailBalInclOdToleranceValueSpecified)
                {
                    return this.AvailBalInclOdToleranceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AvailBalInclOdToleranceValue = value.GetValueOrDefault();
                this.AvailBalInclOdToleranceValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BonusAwardsTrackingType", Order=3, Form=XmlSchemaForm.Unqualified)]
        public short BonusAwardsTrackingTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BonusAwardsTrackingType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BonusAwardsTrackingTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> BonusAwardsTrackingType
        {
            get
            {
                if (this.BonusAwardsTrackingTypeValueSpecified)
                {
                    return this.BonusAwardsTrackingTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BonusAwardsTrackingTypeValue = value.GetValueOrDefault();
                this.BonusAwardsTrackingTypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CardFraudNoteExpDays", Order=4, Form=XmlSchemaForm.Unqualified)]
        public short CardFraudNoteExpDaysValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CardFraudNoteExpDays property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CardFraudNoteExpDaysValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> CardFraudNoteExpDays
        {
            get
            {
                if (this.CardFraudNoteExpDaysValueSpecified)
                {
                    return this.CardFraudNoteExpDaysValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CardFraudNoteExpDaysValue = value.GetValueOrDefault();
                this.CardFraudNoteExpDaysValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CardType", Order=5, Form=XmlSchemaForm.Unqualified)]
        public short CardTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CardType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CardTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> CardType
        {
            get
            {
                if (this.CardTypeValueSpecified)
                {
                    return this.CardTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CardTypeValue = value.GetValueOrDefault();
                this.CardTypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DigitalIssueTrackingType", Order=6, Form=XmlSchemaForm.Unqualified)]
        public short DigitalIssueTrackingTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DigitalIssueTrackingType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DigitalIssueTrackingTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> DigitalIssueTrackingType
        {
            get
            {
                if (this.DigitalIssueTrackingTypeValueSpecified)
                {
                    return this.DigitalIssueTrackingTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DigitalIssueTrackingTypeValue = value.GetValueOrDefault();
                this.DigitalIssueTrackingTypeValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("ExcludedStatusReasonCodes", Order=7, Form=XmlSchemaForm.Unqualified)]
        public string ExcludedStatusReasonCodes { get; set; }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("FileRecord", Order=8, Form=XmlSchemaForm.Unqualified)]
        public short FileRecordValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FileRecord property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FileRecordValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> FileRecord
        {
            get
            {
                if (this.FileRecordValueSpecified)
                {
                    return this.FileRecordValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FileRecordValue = value.GetValueOrDefault();
                this.FileRecordValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("FileType", Order=9, Form=XmlSchemaForm.Unqualified)]
        public short FileTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FileType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FileTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> FileType
        {
            get
            {
                if (this.FileTypeValueSpecified)
                {
                    return this.FileTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FileTypeValue = value.GetValueOrDefault();
                this.FileTypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("FileUpdateMethod", Order=10, Form=XmlSchemaForm.Unqualified)]
        public short FileUpdateMethodValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FileUpdateMethod property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FileUpdateMethodValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> FileUpdateMethod
        {
            get
            {
                if (this.FileUpdateMethodValueSpecified)
                {
                    return this.FileUpdateMethodValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FileUpdateMethodValue = value.GetValueOrDefault();
                this.FileUpdateMethodValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("FraudControlTrackingType", Order=11, Form=XmlSchemaForm.Unqualified)]
        public short FraudControlTrackingTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FraudControlTrackingType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FraudControlTrackingTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> FraudControlTrackingType
        {
            get
            {
                if (this.FraudControlTrackingTypeValueSpecified)
                {
                    return this.FraudControlTrackingTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FraudControlTrackingTypeValue = value.GetValueOrDefault();
                this.FraudControlTrackingTypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("FwdUpdateToPinNetwork", Order=12, Form=XmlSchemaForm.Unqualified)]
        public bool FwdUpdateToPinNetworkValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FwdUpdateToPinNetwork property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FwdUpdateToPinNetworkValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> FwdUpdateToPinNetwork
        {
            get
            {
                if (this.FwdUpdateToPinNetworkValueSpecified)
                {
                    return this.FwdUpdateToPinNetworkValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FwdUpdateToPinNetworkValue = value.GetValueOrDefault();
                this.FwdUpdateToPinNetworkValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("FwdUpdatesfrmOtherNetworks", Order=13, Form=XmlSchemaForm.Unqualified)]
        public string FwdUpdatesfrmOtherNetworks { get; set; }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("FwdUpdatetoVisaMasterCard", Order=14, Form=XmlSchemaForm.Unqualified)]
        public bool FwdUpdatetoVisaMasterCardValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FwdUpdatetoVisaMasterCard property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FwdUpdatetoVisaMasterCardValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> FwdUpdatetoVisaMasterCard
        {
            get
            {
                if (this.FwdUpdatetoVisaMasterCardValueSpecified)
                {
                    return this.FwdUpdatetoVisaMasterCardValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FwdUpdatetoVisaMasterCardValue = value.GetValueOrDefault();
                this.FwdUpdatetoVisaMasterCardValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HighPriorityMsgOption", Order=15, Form=XmlSchemaForm.Unqualified)]
        public short HighPriorityMsgOptionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HighPriorityMsgOption property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HighPriorityMsgOptionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> HighPriorityMsgOption
        {
            get
            {
                if (this.HighPriorityMsgOptionValueSpecified)
                {
                    return this.HighPriorityMsgOptionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HighPriorityMsgOptionValue = value.GetValueOrDefault();
                this.HighPriorityMsgOptionValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("InstitutionId", Order=16, Form=XmlSchemaForm.Unqualified)]
        public string InstitutionId { get; set; }
        
        [XmlElementAttribute("LimitGroupId", Order=17, Form=XmlSchemaForm.Unqualified)]
        public string LimitGroupId { get; set; }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MinimumBalanceChange", Order=18, Form=XmlSchemaForm.Unqualified)]
        public decimal MinimumBalanceChangeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MinimumBalanceChange property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MinimumBalanceChangeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<decimal> MinimumBalanceChange
        {
            get
            {
                if (this.MinimumBalanceChangeValueSpecified)
                {
                    return this.MinimumBalanceChangeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MinimumBalanceChangeValue = value.GetValueOrDefault();
                this.MinimumBalanceChangeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("NetworkMessageFormat", Order=19, Form=XmlSchemaForm.Unqualified)]
        public short NetworkMessageFormatValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NetworkMessageFormat property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool NetworkMessageFormatValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> NetworkMessageFormat
        {
            get
            {
                if (this.NetworkMessageFormatValueSpecified)
                {
                    return this.NetworkMessageFormatValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NetworkMessageFormatValue = value.GetValueOrDefault();
                this.NetworkMessageFormatValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OnlineCardOrdering", Order=20, Form=XmlSchemaForm.Unqualified)]
        public bool OnlineCardOrderingValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OnlineCardOrdering property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OnlineCardOrderingValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> OnlineCardOrdering
        {
            get
            {
                if (this.OnlineCardOrderingValueSpecified)
                {
                    return this.OnlineCardOrderingValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OnlineCardOrderingValue = value.GetValueOrDefault();
                this.OnlineCardOrderingValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PurgeDays", Order=21, Form=XmlSchemaForm.Unqualified)]
        public short PurgeDaysValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PurgeDays property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PurgeDaysValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> PurgeDays
        {
            get
            {
                if (this.PurgeDaysValueSpecified)
                {
                    return this.PurgeDaysValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PurgeDaysValue = value.GetValueOrDefault();
                this.PurgeDaysValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ReceiveCardFraudNoteCode", Order=22, Form=XmlSchemaForm.Unqualified)]
        public short ReceiveCardFraudNoteCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ReceiveCardFraudNoteCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ReceiveCardFraudNoteCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> ReceiveCardFraudNoteCode
        {
            get
            {
                if (this.ReceiveCardFraudNoteCodeValueSpecified)
                {
                    return this.ReceiveCardFraudNoteCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ReceiveCardFraudNoteCodeValue = value.GetValueOrDefault();
                this.ReceiveCardFraudNoteCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SendActivationMessage", Order=23, Form=XmlSchemaForm.Unqualified)]
        public bool SendActivationMessageValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SendActivationMessage property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SendActivationMessageValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SendActivationMessage
        {
            get
            {
                if (this.SendActivationMessageValueSpecified)
                {
                    return this.SendActivationMessageValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SendActivationMessageValue = value.GetValueOrDefault();
                this.SendActivationMessageValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SendBalances", Order=24, Form=XmlSchemaForm.Unqualified)]
        public bool SendBalancesValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SendBalances property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SendBalancesValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SendBalances
        {
            get
            {
                if (this.SendBalancesValueSpecified)
                {
                    return this.SendBalancesValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SendBalancesValue = value.GetValueOrDefault();
                this.SendBalancesValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SendCardFraudNoteCode", Order=25, Form=XmlSchemaForm.Unqualified)]
        public short SendCardFraudNoteCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SendCardFraudNoteCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SendCardFraudNoteCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> SendCardFraudNoteCode
        {
            get
            {
                if (this.SendCardFraudNoteCodeValueSpecified)
                {
                    return this.SendCardFraudNoteCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SendCardFraudNoteCodeValue = value.GetValueOrDefault();
                this.SendCardFraudNoteCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SendNewCardOption", Order=26, Form=XmlSchemaForm.Unqualified)]
        public short SendNewCardOptionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SendNewCardOption property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SendNewCardOptionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> SendNewCardOption
        {
            get
            {
                if (this.SendNewCardOptionValueSpecified)
                {
                    return this.SendNewCardOptionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SendNewCardOptionValue = value.GetValueOrDefault();
                this.SendNewCardOptionValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SendPinOffsetMessage", Order=27, Form=XmlSchemaForm.Unqualified)]
        public bool SendPinOffsetMessageValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SendPinOffsetMessage property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SendPinOffsetMessageValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SendPinOffsetMessage
        {
            get
            {
                if (this.SendPinOffsetMessageValueSpecified)
                {
                    return this.SendPinOffsetMessageValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SendPinOffsetMessageValue = value.GetValueOrDefault();
                this.SendPinOffsetMessageValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SuffixFormat", Order=28, Form=XmlSchemaForm.Unqualified)]
        public short SuffixFormatValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SuffixFormat property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SuffixFormatValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> SuffixFormat
        {
            get
            {
                if (this.SuffixFormatValueSpecified)
                {
                    return this.SuffixFormatValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SuffixFormatValue = value.GetValueOrDefault();
                this.SuffixFormatValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<OnlineFileThirdPartyPayments_2> _thirdPartyPayments;
        
        [XmlElementAttribute("ThirdPartyPayments", Order=29, Form=XmlSchemaForm.Unqualified)]
        public Collection<OnlineFileThirdPartyPayments_2> ThirdPartyPayments
        {
            get
            {
                return _thirdPartyPayments;
            }
            set
            {
                _thirdPartyPayments = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ThirdPartyPayments collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool ThirdPartyPaymentsSpecified
        {
            get
            {
                return ((this.ThirdPartyPayments != null) 
                            && (this.ThirdPartyPayments.Count != 0));
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="OnlineFile_2" /> class.</para>
        /// </summary>
        public OnlineFile_2()
        {
            this._thirdPartyPayments = new Collection<OnlineFileThirdPartyPayments_2>();
            this._any = new Collection<XmlElement>();
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UseMailOverride", Order=30, Form=XmlSchemaForm.Unqualified)]
        public bool UseMailOverrideValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UseMailOverride property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UseMailOverrideValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UseMailOverride
        {
            get
            {
                if (this.UseMailOverrideValueSpecified)
                {
                    return this.UseMailOverrideValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UseMailOverrideValue = value.GetValueOrDefault();
                this.UseMailOverrideValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("VauAbuOptOutWarningCode", Order=31, Form=XmlSchemaForm.Unqualified)]
        public short VauAbuOptOutWarningCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the VauAbuOptOutWarningCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool VauAbuOptOutWarningCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> VauAbuOptOutWarningCode
        {
            get
            {
                if (this.VauAbuOptOutWarningCodeValueSpecified)
                {
                    return this.VauAbuOptOutWarningCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.VauAbuOptOutWarningCodeValue = value.GetValueOrDefault();
                this.VauAbuOptOutWarningCodeValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("Version_1", Order=32, Form=XmlSchemaForm.Unqualified)]
        public ParameterService.VersionType Version1 { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<XmlElement> _any;
        
        [XmlAnyElementAttribute(Order=33)]
        public Collection<XmlElement> Any
        {
            get
            {
                return _any;
            }
            set
            {
                _any = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return ((this.Any != null) 
                            && (this.Any.Count != 0));
            }
        }
    }
}
