//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 2.1.1182.0 using the following command:
// xscgen C:\Users\tbuese\Desktop\Symxchange\ParameterService/*.xsd --sf --un --uc --order --cn -0 --collectionSettersMode=Public -o C:\Users\tbuese\Desktop\Symxchange\ParameterService\generated-output -n ParameterService
namespace ParameterService
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.Diagnostics;
    using System.Xml;
    using System.Xml.Schema;
    using System.Xml.Serialization;
    
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1182.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("ItcInstallationFields", Namespace="http://www.symxchange.generated.symitar.com/crud/parameter/dto/retrieve")]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    [XmlRootAttribute("ItcInstallationFields", Namespace="http://www.symxchange.generated.symitar.com/crud/parameter/dto/retrieve")]
    public partial class ItcInstallationFields
    {
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BranchList", Order=0, Form=XmlSchemaForm.Unqualified)]
        public bool BranchListValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BranchList property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BranchListValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BranchList
        {
            get
            {
                if (this.BranchListValueSpecified)
                {
                    return this.BranchListValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BranchListValue = value.GetValueOrDefault();
                this.BranchListValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DefinedCode", Order=1, Form=XmlSchemaForm.Unqualified)]
        public bool DefinedCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DefinedCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DefinedCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DefinedCode
        {
            get
            {
                if (this.DefinedCodeValueSpecified)
                {
                    return this.DefinedCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DefinedCodeValue = value.GetValueOrDefault();
                this.DefinedCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ItcEnabled", Order=2, Form=XmlSchemaForm.Unqualified)]
        public bool ItcEnabledValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ItcEnabled property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ItcEnabledValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ItcEnabled
        {
            get
            {
                if (this.ItcEnabledValueSpecified)
                {
                    return this.ItcEnabledValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ItcEnabledValue = value.GetValueOrDefault();
                this.ItcEnabledValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ItcInstallation", Order=3, Form=XmlSchemaForm.Unqualified)]
        public bool ItcInstallationValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ItcInstallation property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ItcInstallationValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ItcInstallation
        {
            get
            {
                if (this.ItcInstallationValueSpecified)
                {
                    return this.ItcInstallationValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ItcInstallationValue = value.GetValueOrDefault();
                this.ItcInstallationValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TargetPath", Order=4, Form=XmlSchemaForm.Unqualified)]
        public bool TargetPathValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TargetPath property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TargetPathValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TargetPath
        {
            get
            {
                if (this.TargetPathValueSpecified)
                {
                    return this.TargetPathValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TargetPathValue = value.GetValueOrDefault();
                this.TargetPathValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TimeOutinMinutes", Order=5, Form=XmlSchemaForm.Unqualified)]
        public bool TimeOutinMinutesValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TimeOutinMinutes property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TimeOutinMinutesValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TimeOutinMinutes
        {
            get
            {
                if (this.TimeOutinMinutesValueSpecified)
                {
                    return this.TimeOutinMinutesValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TimeOutinMinutesValue = value.GetValueOrDefault();
                this.TimeOutinMinutesValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("VoidEnabled", Order=6, Form=XmlSchemaForm.Unqualified)]
        public bool VoidEnabledValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the VoidEnabled property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool VoidEnabledValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> VoidEnabled
        {
            get
            {
                if (this.VoidEnabledValueSpecified)
                {
                    return this.VoidEnabledValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.VoidEnabledValue = value.GetValueOrDefault();
                this.VoidEnabledValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("Version_1", Order=7, Form=XmlSchemaForm.Unqualified)]
        public ParameterService.VersionType Version1 { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<XmlElement> _any;
        
        [XmlAnyElementAttribute(Order=8)]
        public Collection<XmlElement> Any
        {
            get
            {
                return _any;
            }
            set
            {
                _any = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return ((this.Any != null) 
                            && (this.Any.Count != 0));
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ItcInstallationFields" /> class.</para>
        /// </summary>
        public ItcInstallationFields()
        {
            this._any = new Collection<XmlElement>();
        }
    }
}
