//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 2.1.1182.0 using the following command:
// xscgen C:\Users\tbuese\Desktop\Symxchange\ParameterService/*.xsd --sf --un --uc --order --cn -0 --collectionSettersMode=Public -o C:\Users\tbuese\Desktop\Symxchange\ParameterService\generated-output -n ParameterService
namespace ParameterService
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.Diagnostics;
    using System.Xml;
    using System.Xml.Schema;
    using System.Xml.Serialization;
    
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1182.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("DivIndexLocalFields", Namespace="http://www.symxchange.generated.symitar.com/crud/parameter/dto/retrieve")]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    [XmlRootAttribute("DivIndexLocalFields", Namespace="http://www.symxchange.generated.symitar.com/crud/parameter/dto/retrieve")]
    public partial class DivIndexLocalFields
    {
        
        [XmlIgnoreAttribute()]
        private Collection<short> _backdatedFlag;
        
        [XmlElementAttribute("BackdatedFlag", Order=0, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> BackdatedFlag
        {
            get
            {
                return _backdatedFlag;
            }
            set
            {
                _backdatedFlag = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the BackdatedFlag collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool BackdatedFlagSpecified
        {
            get
            {
                return ((this.BackdatedFlag != null) 
                            && (this.BackdatedFlag.Count != 0));
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="DivIndexLocalFields" /> class.</para>
        /// </summary>
        public DivIndexLocalFields()
        {
            this._backdatedFlag = new Collection<short>();
            this._balanceCutoff = new Collection<short>();
            this._balanceStatus = new Collection<short>();
            this._indexDate = new Collection<short>();
            this._indexRate = new Collection<short>();
            this._pendingBalance = new Collection<short>();
            this._pendingRate = new Collection<short>();
            this._status = new Collection<short>();
            this._any = new Collection<XmlElement>();
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _balanceCutoff;
        
        [XmlElementAttribute("BalanceCutoff", Order=1, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> BalanceCutoff
        {
            get
            {
                return _balanceCutoff;
            }
            set
            {
                _balanceCutoff = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the BalanceCutoff collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool BalanceCutoffSpecified
        {
            get
            {
                return ((this.BalanceCutoff != null) 
                            && (this.BalanceCutoff.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _balanceStatus;
        
        [XmlElementAttribute("BalanceStatus", Order=2, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> BalanceStatus
        {
            get
            {
                return _balanceStatus;
            }
            set
            {
                _balanceStatus = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the BalanceStatus collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool BalanceStatusSpecified
        {
            get
            {
                return ((this.BalanceStatus != null) 
                            && (this.BalanceStatus.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CurrentMonthAvgRate", Order=3, Form=XmlSchemaForm.Unqualified)]
        public bool CurrentMonthAvgRateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CurrentMonthAvgRate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CurrentMonthAvgRateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CurrentMonthAvgRate
        {
            get
            {
                if (this.CurrentMonthAvgRateValueSpecified)
                {
                    return this.CurrentMonthAvgRateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CurrentMonthAvgRateValue = value.GetValueOrDefault();
                this.CurrentMonthAvgRateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Description", Order=4, Form=XmlSchemaForm.Unqualified)]
        public bool DescriptionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Description property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DescriptionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Description
        {
            get
            {
                if (this.DescriptionValueSpecified)
                {
                    return this.DescriptionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DescriptionValue = value.GetValueOrDefault();
                this.DescriptionValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DividendIndexTable", Order=5, Form=XmlSchemaForm.Unqualified)]
        public bool DividendIndexTableValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DividendIndexTable property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DividendIndexTableValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DividendIndexTable
        {
            get
            {
                if (this.DividendIndexTableValueSpecified)
                {
                    return this.DividendIndexTableValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DividendIndexTableValue = value.GetValueOrDefault();
                this.DividendIndexTableValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InactiveStatusDate", Order=6, Form=XmlSchemaForm.Unqualified)]
        public bool InactiveStatusDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InactiveStatusDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InactiveStatusDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InactiveStatusDate
        {
            get
            {
                if (this.InactiveStatusDateValueSpecified)
                {
                    return this.InactiveStatusDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InactiveStatusDateValue = value.GetValueOrDefault();
                this.InactiveStatusDateValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _indexDate;
        
        [XmlElementAttribute("IndexDate", Order=7, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> IndexDate
        {
            get
            {
                return _indexDate;
            }
            set
            {
                _indexDate = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the IndexDate collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool IndexDateSpecified
        {
            get
            {
                return ((this.IndexDate != null) 
                            && (this.IndexDate.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _indexRate;
        
        [XmlElementAttribute("IndexRate", Order=8, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> IndexRate
        {
            get
            {
                return _indexRate;
            }
            set
            {
                _indexRate = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the IndexRate collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool IndexRateSpecified
        {
            get
            {
                return ((this.IndexRate != null) 
                            && (this.IndexRate.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _pendingBalance;
        
        [XmlElementAttribute("PendingBalance", Order=9, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> PendingBalance
        {
            get
            {
                return _pendingBalance;
            }
            set
            {
                _pendingBalance = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PendingBalance collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool PendingBalanceSpecified
        {
            get
            {
                return ((this.PendingBalance != null) 
                            && (this.PendingBalance.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _pendingRate;
        
        [XmlElementAttribute("PendingRate", Order=10, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> PendingRate
        {
            get
            {
                return _pendingRate;
            }
            set
            {
                _pendingRate = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PendingRate collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool PendingRateSpecified
        {
            get
            {
                return ((this.PendingRate != null) 
                            && (this.PendingRate.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _status;
        
        [XmlElementAttribute("Status", Order=11, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> Status
        {
            get
            {
                return _status;
            }
            set
            {
                _status = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Status collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool StatusSpecified
        {
            get
            {
                return ((this.Status != null) 
                            && (this.Status.Count != 0));
            }
        }
        
        [XmlElementAttribute("Version_1", Order=12, Form=XmlSchemaForm.Unqualified)]
        public ParameterService.VersionType Version1 { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<XmlElement> _any;
        
        [XmlAnyElementAttribute(Order=13)]
        public Collection<XmlElement> Any
        {
            get
            {
                return _any;
            }
            set
            {
                _any = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return ((this.Any != null) 
                            && (this.Any.Count != 0));
            }
        }
    }
}
