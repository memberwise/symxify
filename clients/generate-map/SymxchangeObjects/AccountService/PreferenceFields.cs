//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 2.1.1182.0 using the following command:
// xscgen C:\Users\tbuese\Desktop\Symxchange\AccountService/*.xsd --sf --un --uc --order --cn -0 --collectionSettersMode=Public -o C:\Users\tbuese\Desktop\Symxchange\AccountService\generated-output -n AccountService
namespace AccountService
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.Diagnostics;
    using System.Xml;
    using System.Xml.Schema;
    using System.Xml.Serialization;
    
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1182.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("PreferenceFields", Namespace="http://www.symxchange.generated.symitar.com/crud/account/dto/retrieve")]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    [XmlRootAttribute("PreferenceFields", Namespace="http://www.symxchange.generated.symitar.com/crud/account/dto/retrieve")]
    public partial class PreferenceFields
    {
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AudLastLogonDate", Order=0, Form=XmlSchemaForm.Unqualified)]
        public bool AudLastLogonDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AudLastLogonDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AudLastLogonDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AudLastLogonDate
        {
            get
            {
                if (this.AudLastLogonDateValueSpecified)
                {
                    return this.AudLastLogonDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AudLastLogonDateValue = value.GetValueOrDefault();
                this.AudLastLogonDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AudLastLogonTime", Order=1, Form=XmlSchemaForm.Unqualified)]
        public bool AudLastLogonTimeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AudLastLogonTime property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AudLastLogonTimeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AudLastLogonTime
        {
            get
            {
                if (this.AudLastLogonTimeValueSpecified)
                {
                    return this.AudLastLogonTimeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AudLastLogonTimeValue = value.GetValueOrDefault();
                this.AudLastLogonTimeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AudioAccess", Order=2, Form=XmlSchemaForm.Unqualified)]
        public bool AudioAccessValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AudioAccess property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AudioAccessValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AudioAccess
        {
            get
            {
                if (this.AudioAccessValueSpecified)
                {
                    return this.AudioAccessValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AudioAccessValue = value.GetValueOrDefault();
                this.AudioAccessValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AudioAccess2", Order=3, Form=XmlSchemaForm.Unqualified)]
        public bool AudioAccess2Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AudioAccess2 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AudioAccess2ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AudioAccess2
        {
            get
            {
                if (this.AudioAccess2ValueSpecified)
                {
                    return this.AudioAccess2Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AudioAccess2Value = value.GetValueOrDefault();
                this.AudioAccess2ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AudioAccessMode", Order=4, Form=XmlSchemaForm.Unqualified)]
        public bool AudioAccessModeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AudioAccessMode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AudioAccessModeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AudioAccessMode
        {
            get
            {
                if (this.AudioAccessModeValueSpecified)
                {
                    return this.AudioAccessModeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AudioAccessModeValue = value.GetValueOrDefault();
                this.AudioAccessModeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AudioAccessMode2", Order=5, Form=XmlSchemaForm.Unqualified)]
        public bool AudioAccessMode2Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AudioAccessMode2 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AudioAccessMode2ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AudioAccessMode2
        {
            get
            {
                if (this.AudioAccessMode2ValueSpecified)
                {
                    return this.AudioAccessMode2Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AudioAccessMode2Value = value.GetValueOrDefault();
                this.AudioAccessMode2ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AudioCallCount", Order=6, Form=XmlSchemaForm.Unqualified)]
        public bool AudioCallCountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AudioCallCount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AudioCallCountValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AudioCallCount
        {
            get
            {
                if (this.AudioCallCountValueSpecified)
                {
                    return this.AudioCallCountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AudioCallCountValue = value.GetValueOrDefault();
                this.AudioCallCountValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AudioCallMinutes", Order=7, Form=XmlSchemaForm.Unqualified)]
        public bool AudioCallMinutesValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AudioCallMinutes property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AudioCallMinutesValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AudioCallMinutes
        {
            get
            {
                if (this.AudioCallMinutesValueSpecified)
                {
                    return this.AudioCallMinutesValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AudioCallMinutesValue = value.GetValueOrDefault();
                this.AudioCallMinutesValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AudioEnable", Order=8, Form=XmlSchemaForm.Unqualified)]
        public bool AudioEnableValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AudioEnable property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AudioEnableValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AudioEnable
        {
            get
            {
                if (this.AudioEnableValueSpecified)
                {
                    return this.AudioEnableValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AudioEnableValue = value.GetValueOrDefault();
                this.AudioEnableValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BillPayAmount", Order=9, Form=XmlSchemaForm.Unqualified)]
        public bool BillPayAmountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BillPayAmount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BillPayAmountValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BillPayAmount
        {
            get
            {
                if (this.BillPayAmountValueSpecified)
                {
                    return this.BillPayAmountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BillPayAmountValue = value.GetValueOrDefault();
                this.BillPayAmountValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BillPayCount", Order=10, Form=XmlSchemaForm.Unqualified)]
        public bool BillPayCountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BillPayCount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BillPayCountValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BillPayCount
        {
            get
            {
                if (this.BillPayCountValueSpecified)
                {
                    return this.BillPayCountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BillPayCountValue = value.GetValueOrDefault();
                this.BillPayCountValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BillPayCountLimit", Order=11, Form=XmlSchemaForm.Unqualified)]
        public bool BillPayCountLimitValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BillPayCountLimit property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BillPayCountLimitValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BillPayCountLimit
        {
            get
            {
                if (this.BillPayCountLimitValueSpecified)
                {
                    return this.BillPayCountLimitValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BillPayCountLimitValue = value.GetValueOrDefault();
                this.BillPayCountLimitValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BillPayLimit", Order=12, Form=XmlSchemaForm.Unqualified)]
        public bool BillPayLimitValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BillPayLimit property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BillPayLimitValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BillPayLimit
        {
            get
            {
                if (this.BillPayLimitValueSpecified)
                {
                    return this.BillPayLimitValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BillPayLimitValue = value.GetValueOrDefault();
                this.BillPayLimitValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BillPayMax", Order=13, Form=XmlSchemaForm.Unqualified)]
        public bool BillPayMaxValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BillPayMax property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BillPayMaxValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BillPayMax
        {
            get
            {
                if (this.BillPayMaxValueSpecified)
                {
                    return this.BillPayMaxValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BillPayMaxValue = value.GetValueOrDefault();
                this.BillPayMaxValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BusinessFax", Order=14, Form=XmlSchemaForm.Unqualified)]
        public bool BusinessFaxValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BusinessFax property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BusinessFaxValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BusinessFax
        {
            get
            {
                if (this.BusinessFaxValueSpecified)
                {
                    return this.BusinessFaxValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BusinessFaxValue = value.GetValueOrDefault();
                this.BusinessFaxValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DepAmount", Order=15, Form=XmlSchemaForm.Unqualified)]
        public bool DepAmountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DepAmount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DepAmountValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DepAmount
        {
            get
            {
                if (this.DepAmountValueSpecified)
                {
                    return this.DepAmountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DepAmountValue = value.GetValueOrDefault();
                this.DepAmountValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DepCount", Order=16, Form=XmlSchemaForm.Unqualified)]
        public bool DepCountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DepCount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DepCountValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DepCount
        {
            get
            {
                if (this.DepCountValueSpecified)
                {
                    return this.DepCountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DepCountValue = value.GetValueOrDefault();
                this.DepCountValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DepCountLimit", Order=17, Form=XmlSchemaForm.Unqualified)]
        public bool DepCountLimitValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DepCountLimit property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DepCountLimitValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DepCountLimit
        {
            get
            {
                if (this.DepCountLimitValueSpecified)
                {
                    return this.DepCountLimitValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DepCountLimitValue = value.GetValueOrDefault();
                this.DepCountLimitValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DepLimit", Order=18, Form=XmlSchemaForm.Unqualified)]
        public bool DepLimitValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DepLimit property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DepLimitValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DepLimit
        {
            get
            {
                if (this.DepLimitValueSpecified)
                {
                    return this.DepLimitValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DepLimitValue = value.GetValueOrDefault();
                this.DepLimitValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DepMax", Order=19, Form=XmlSchemaForm.Unqualified)]
        public bool DepMaxValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DepMax property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DepMaxValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DepMax
        {
            get
            {
                if (this.DepMaxValueSpecified)
                {
                    return this.DepMaxValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DepMaxValue = value.GetValueOrDefault();
                this.DepMaxValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("EmailAddrChgDate", Order=20, Form=XmlSchemaForm.Unqualified)]
        public bool EmailAddrChgDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EmailAddrChgDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool EmailAddrChgDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> EmailAddrChgDate
        {
            get
            {
                if (this.EmailAddrChgDateValueSpecified)
                {
                    return this.EmailAddrChgDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EmailAddrChgDateValue = value.GetValueOrDefault();
                this.EmailAddrChgDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("EmailAddrChgTime", Order=21, Form=XmlSchemaForm.Unqualified)]
        public bool EmailAddrChgTimeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EmailAddrChgTime property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool EmailAddrChgTimeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> EmailAddrChgTime
        {
            get
            {
                if (this.EmailAddrChgTimeValueSpecified)
                {
                    return this.EmailAddrChgTimeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EmailAddrChgTimeValue = value.GetValueOrDefault();
                this.EmailAddrChgTimeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("EmailAddress", Order=22, Form=XmlSchemaForm.Unqualified)]
        public bool EmailAddressValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EmailAddress property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool EmailAddressValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> EmailAddress
        {
            get
            {
                if (this.EmailAddressValueSpecified)
                {
                    return this.EmailAddressValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EmailAddressValue = value.GetValueOrDefault();
                this.EmailAddressValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HbCallCount", Order=23, Form=XmlSchemaForm.Unqualified)]
        public bool HbCallCountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HbCallCount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HbCallCountValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HbCallCount
        {
            get
            {
                if (this.HbCallCountValueSpecified)
                {
                    return this.HbCallCountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HbCallCountValue = value.GetValueOrDefault();
                this.HbCallCountValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HbCallMinutes", Order=24, Form=XmlSchemaForm.Unqualified)]
        public bool HbCallMinutesValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HbCallMinutes property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HbCallMinutesValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HbCallMinutes
        {
            get
            {
                if (this.HbCallMinutesValueSpecified)
                {
                    return this.HbCallMinutesValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HbCallMinutesValue = value.GetValueOrDefault();
                this.HbCallMinutesValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HbEnable", Order=25, Form=XmlSchemaForm.Unqualified)]
        public bool HbEnableValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HbEnable property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HbEnableValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HbEnable
        {
            get
            {
                if (this.HbEnableValueSpecified)
                {
                    return this.HbEnableValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HbEnableValue = value.GetValueOrDefault();
                this.HbEnableValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HbLastLogonDate", Order=26, Form=XmlSchemaForm.Unqualified)]
        public bool HbLastLogonDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HbLastLogonDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HbLastLogonDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HbLastLogonDate
        {
            get
            {
                if (this.HbLastLogonDateValueSpecified)
                {
                    return this.HbLastLogonDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HbLastLogonDateValue = value.GetValueOrDefault();
                this.HbLastLogonDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HbLastLogonTime", Order=27, Form=XmlSchemaForm.Unqualified)]
        public bool HbLastLogonTimeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HbLastLogonTime property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HbLastLogonTimeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HbLastLogonTime
        {
            get
            {
                if (this.HbLastLogonTimeValueSpecified)
                {
                    return this.HbLastLogonTimeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HbLastLogonTimeValue = value.GetValueOrDefault();
                this.HbLastLogonTimeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HbMode", Order=28, Form=XmlSchemaForm.Unqualified)]
        public bool HbModeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HbMode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HbModeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HbMode
        {
            get
            {
                if (this.HbModeValueSpecified)
                {
                    return this.HbModeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HbModeValue = value.GetValueOrDefault();
                this.HbModeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HbPassword", Order=29, Form=XmlSchemaForm.Unqualified)]
        public bool HbPasswordValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HbPassword property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HbPasswordValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HbPassword
        {
            get
            {
                if (this.HbPasswordValueSpecified)
                {
                    return this.HbPasswordValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HbPasswordValue = value.GetValueOrDefault();
                this.HbPasswordValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HbPassword2", Order=30, Form=XmlSchemaForm.Unqualified)]
        public bool HbPassword2Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HbPassword2 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HbPassword2ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HbPassword2
        {
            get
            {
                if (this.HbPassword2ValueSpecified)
                {
                    return this.HbPassword2Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HbPassword2Value = value.GetValueOrDefault();
                this.HbPassword2ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HbPasswordMode", Order=31, Form=XmlSchemaForm.Unqualified)]
        public bool HbPasswordModeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HbPasswordMode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HbPasswordModeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HbPasswordMode
        {
            get
            {
                if (this.HbPasswordModeValueSpecified)
                {
                    return this.HbPasswordModeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HbPasswordModeValue = value.GetValueOrDefault();
                this.HbPasswordModeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HbPasswordMode2", Order=32, Form=XmlSchemaForm.Unqualified)]
        public bool HbPasswordMode2Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HbPasswordMode2 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HbPasswordMode2ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HbPasswordMode2
        {
            get
            {
                if (this.HbPasswordMode2ValueSpecified)
                {
                    return this.HbPasswordMode2Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HbPasswordMode2Value = value.GetValueOrDefault();
                this.HbPasswordMode2ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HbUsername", Order=33, Form=XmlSchemaForm.Unqualified)]
        public bool HbUsernameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HbUsername property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HbUsernameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HbUsername
        {
            get
            {
                if (this.HbUsernameValueSpecified)
                {
                    return this.HbUsernameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HbUsernameValue = value.GetValueOrDefault();
                this.HbUsernameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HomeFax", Order=34, Form=XmlSchemaForm.Unqualified)]
        public bool HomeFaxValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HomeFax property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HomeFaxValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HomeFax
        {
            get
            {
                if (this.HomeFaxValueSpecified)
                {
                    return this.HomeFaxValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HomeFaxValue = value.GetValueOrDefault();
                this.HomeFaxValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InteractMode", Order=35, Form=XmlSchemaForm.Unqualified)]
        public bool InteractModeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InteractMode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InteractModeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InteractMode
        {
            get
            {
                if (this.InteractModeValueSpecified)
                {
                    return this.InteractModeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InteractModeValue = value.GetValueOrDefault();
                this.InteractModeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InvalidPwdAttmpts", Order=36, Form=XmlSchemaForm.Unqualified)]
        public bool InvalidPwdAttmptsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InvalidPwdAttmpts property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InvalidPwdAttmptsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InvalidPwdAttmpts
        {
            get
            {
                if (this.InvalidPwdAttmptsValueSpecified)
                {
                    return this.InvalidPwdAttmptsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InvalidPwdAttmptsValue = value.GetValueOrDefault();
                this.InvalidPwdAttmptsValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Language", Order=37, Form=XmlSchemaForm.Unqualified)]
        public bool LanguageValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Language property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LanguageValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Language
        {
            get
            {
                if (this.LanguageValueSpecified)
                {
                    return this.LanguageValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LanguageValue = value.GetValueOrDefault();
                this.LanguageValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LastAccessChangeDate", Order=38, Form=XmlSchemaForm.Unqualified)]
        public bool LastAccessChangeDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LastAccessChangeDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LastAccessChangeDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LastAccessChangeDate
        {
            get
            {
                if (this.LastAccessChangeDateValueSpecified)
                {
                    return this.LastAccessChangeDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LastAccessChangeDateValue = value.GetValueOrDefault();
                this.LastAccessChangeDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LastHbPwChangeDate", Order=39, Form=XmlSchemaForm.Unqualified)]
        public bool LastHbPwChangeDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LastHbPwChangeDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LastHbPwChangeDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LastHbPwChangeDate
        {
            get
            {
                if (this.LastHbPwChangeDateValueSpecified)
                {
                    return this.LastHbPwChangeDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LastHbPwChangeDateValue = value.GetValueOrDefault();
                this.LastHbPwChangeDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LastLogonDate", Order=40, Form=XmlSchemaForm.Unqualified)]
        public bool LastLogonDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LastLogonDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LastLogonDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LastLogonDate
        {
            get
            {
                if (this.LastLogonDateValueSpecified)
                {
                    return this.LastLogonDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LastLogonDateValue = value.GetValueOrDefault();
                this.LastLogonDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LastLogonTime", Order=41, Form=XmlSchemaForm.Unqualified)]
        public bool LastLogonTimeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LastLogonTime property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LastLogonTimeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LastLogonTime
        {
            get
            {
                if (this.LastLogonTimeValueSpecified)
                {
                    return this.LastLogonTimeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LastLogonTimeValue = value.GetValueOrDefault();
                this.LastLogonTimeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LastTranDate", Order=42, Form=XmlSchemaForm.Unqualified)]
        public bool LastTranDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LastTranDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LastTranDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LastTranDate
        {
            get
            {
                if (this.LastTranDateValueSpecified)
                {
                    return this.LastTranDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LastTranDateValue = value.GetValueOrDefault();
                this.LastTranDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ListTransactions", Order=43, Form=XmlSchemaForm.Unqualified)]
        public bool ListTransactionsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ListTransactions property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ListTransactionsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ListTransactions
        {
            get
            {
                if (this.ListTransactionsValueSpecified)
                {
                    return this.ListTransactionsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ListTransactionsValue = value.GetValueOrDefault();
                this.ListTransactionsValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Locator", Order=44, Form=XmlSchemaForm.Unqualified)]
        public bool LocatorValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Locator property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LocatorValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Locator
        {
            get
            {
                if (this.LocatorValueSpecified)
                {
                    return this.LocatorValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LocatorValue = value.GetValueOrDefault();
                this.LocatorValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LockCount", Order=45, Form=XmlSchemaForm.Unqualified)]
        public bool LockCountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LockCount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LockCountValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LockCount
        {
            get
            {
                if (this.LockCountValueSpecified)
                {
                    return this.LockCountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LockCountValue = value.GetValueOrDefault();
                this.LockCountValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Locked", Order=46, Form=XmlSchemaForm.Unqualified)]
        public bool LockedValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Locked property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LockedValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Locked
        {
            get
            {
                if (this.LockedValueSpecified)
                {
                    return this.LockedValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LockedValue = value.GetValueOrDefault();
                this.LockedValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _prevHbPassword;
        
        [XmlElementAttribute("PrevHbPassword", Order=47, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> PrevHbPassword
        {
            get
            {
                return _prevHbPassword;
            }
            set
            {
                _prevHbPassword = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PrevHbPassword collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool PrevHbPasswordSpecified
        {
            get
            {
                return ((this.PrevHbPassword != null) 
                            && (this.PrevHbPassword.Count != 0));
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PreferenceFields" /> class.</para>
        /// </summary>
        public PreferenceFields()
        {
            this._prevHbPassword = new Collection<short>();
            this._prevHbPasswordHash2 = new Collection<short>();
            this._prevHbPasswordHash3 = new Collection<short>();
            this._prevHbPasswordHash4 = new Collection<short>();
            this._prevHbPasswordMode = new Collection<short>();
            this._any = new Collection<XmlElement>();
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _prevHbPasswordHash2;
        
        [XmlElementAttribute("PrevHbPasswordHash2", Order=48, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> PrevHbPasswordHash2
        {
            get
            {
                return _prevHbPasswordHash2;
            }
            set
            {
                _prevHbPasswordHash2 = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PrevHbPasswordHash2 collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool PrevHbPasswordHash2Specified
        {
            get
            {
                return ((this.PrevHbPasswordHash2 != null) 
                            && (this.PrevHbPasswordHash2.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _prevHbPasswordHash3;
        
        [XmlElementAttribute("PrevHbPasswordHash3", Order=49, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> PrevHbPasswordHash3
        {
            get
            {
                return _prevHbPasswordHash3;
            }
            set
            {
                _prevHbPasswordHash3 = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PrevHbPasswordHash3 collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool PrevHbPasswordHash3Specified
        {
            get
            {
                return ((this.PrevHbPasswordHash3 != null) 
                            && (this.PrevHbPasswordHash3.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _prevHbPasswordHash4;
        
        [XmlElementAttribute("PrevHbPasswordHash4", Order=50, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> PrevHbPasswordHash4
        {
            get
            {
                return _prevHbPasswordHash4;
            }
            set
            {
                _prevHbPasswordHash4 = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PrevHbPasswordHash4 collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool PrevHbPasswordHash4Specified
        {
            get
            {
                return ((this.PrevHbPasswordHash4 != null) 
                            && (this.PrevHbPasswordHash4.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _prevHbPasswordMode;
        
        [XmlElementAttribute("PrevHbPasswordMode", Order=51, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> PrevHbPasswordMode
        {
            get
            {
                return _prevHbPasswordMode;
            }
            set
            {
                _prevHbPasswordMode = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PrevHbPasswordMode collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool PrevHbPasswordModeSpecified
        {
            get
            {
                return ((this.PrevHbPasswordMode != null) 
                            && (this.PrevHbPasswordMode.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PwdResetDate", Order=52, Form=XmlSchemaForm.Unqualified)]
        public bool PwdResetDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PwdResetDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PwdResetDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PwdResetDate
        {
            get
            {
                if (this.PwdResetDateValueSpecified)
                {
                    return this.PwdResetDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PwdResetDateValue = value.GetValueOrDefault();
                this.PwdResetDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PwdResetProbation", Order=53, Form=XmlSchemaForm.Unqualified)]
        public bool PwdResetProbationValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PwdResetProbation property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PwdResetProbationValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PwdResetProbation
        {
            get
            {
                if (this.PwdResetProbationValueSpecified)
                {
                    return this.PwdResetProbationValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PwdResetProbationValue = value.GetValueOrDefault();
                this.PwdResetProbationValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PwdResetRqstDate", Order=54, Form=XmlSchemaForm.Unqualified)]
        public bool PwdResetRqstDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PwdResetRqstDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PwdResetRqstDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PwdResetRqstDate
        {
            get
            {
                if (this.PwdResetRqstDateValueSpecified)
                {
                    return this.PwdResetRqstDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PwdResetRqstDateValue = value.GetValueOrDefault();
                this.PwdResetRqstDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PwdResetRqstNotice", Order=55, Form=XmlSchemaForm.Unqualified)]
        public bool PwdResetRqstNoticeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PwdResetRqstNotice property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PwdResetRqstNoticeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PwdResetRqstNotice
        {
            get
            {
                if (this.PwdResetRqstNoticeValueSpecified)
                {
                    return this.PwdResetRqstNoticeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PwdResetRqstNoticeValue = value.GetValueOrDefault();
                this.PwdResetRqstNoticeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PwdResetRqstTime", Order=56, Form=XmlSchemaForm.Unqualified)]
        public bool PwdResetRqstTimeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PwdResetRqstTime property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PwdResetRqstTimeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PwdResetRqstTime
        {
            get
            {
                if (this.PwdResetRqstTimeValueSpecified)
                {
                    return this.PwdResetRqstTimeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PwdResetRqstTimeValue = value.GetValueOrDefault();
                this.PwdResetRqstTimeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PwdResetime", Order=57, Form=XmlSchemaForm.Unqualified)]
        public bool PwdResetimeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PwdResetime property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PwdResetimeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PwdResetime
        {
            get
            {
                if (this.PwdResetimeValueSpecified)
                {
                    return this.PwdResetimeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PwdResetimeValue = value.GetValueOrDefault();
                this.PwdResetimeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("RecordChangeDate", Order=58, Form=XmlSchemaForm.Unqualified)]
        public bool RecordChangeDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RecordChangeDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool RecordChangeDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> RecordChangeDate
        {
            get
            {
                if (this.RecordChangeDateValueSpecified)
                {
                    return this.RecordChangeDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RecordChangeDateValue = value.GetValueOrDefault();
                this.RecordChangeDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Reference", Order=59, Form=XmlSchemaForm.Unqualified)]
        public bool ReferenceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Reference property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ReferenceValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Reference
        {
            get
            {
                if (this.ReferenceValueSpecified)
                {
                    return this.ReferenceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ReferenceValue = value.GetValueOrDefault();
                this.ReferenceValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SecurityAnswer", Order=60, Form=XmlSchemaForm.Unqualified)]
        public bool SecurityAnswerValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SecurityAnswer property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SecurityAnswerValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SecurityAnswer
        {
            get
            {
                if (this.SecurityAnswerValueSpecified)
                {
                    return this.SecurityAnswerValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SecurityAnswerValue = value.GetValueOrDefault();
                this.SecurityAnswerValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SecurityQuestion", Order=61, Form=XmlSchemaForm.Unqualified)]
        public bool SecurityQuestionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SecurityQuestion property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SecurityQuestionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SecurityQuestion
        {
            get
            {
                if (this.SecurityQuestionValueSpecified)
                {
                    return this.SecurityQuestionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SecurityQuestionValue = value.GetValueOrDefault();
                this.SecurityQuestionValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TranCodes", Order=62, Form=XmlSchemaForm.Unqualified)]
        public bool TranCodesValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TranCodes property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TranCodesValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TranCodes
        {
            get
            {
                if (this.TranCodesValueSpecified)
                {
                    return this.TranCodesValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TranCodesValue = value.GetValueOrDefault();
                this.TranCodesValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Type", Order=63, Form=XmlSchemaForm.Unqualified)]
        public bool TypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Type property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Type
        {
            get
            {
                if (this.TypeValueSpecified)
                {
                    return this.TypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TypeValue = value.GetValueOrDefault();
                this.TypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UserCode", Order=64, Form=XmlSchemaForm.Unqualified)]
        public bool UserCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UserCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UserCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UserCode
        {
            get
            {
                if (this.UserCodeValueSpecified)
                {
                    return this.UserCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UserCodeValue = value.GetValueOrDefault();
                this.UserCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("WdCashAmount", Order=65, Form=XmlSchemaForm.Unqualified)]
        public bool WdCashAmountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the WdCashAmount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool WdCashAmountValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> WdCashAmount
        {
            get
            {
                if (this.WdCashAmountValueSpecified)
                {
                    return this.WdCashAmountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.WdCashAmountValue = value.GetValueOrDefault();
                this.WdCashAmountValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("WdCashCount", Order=66, Form=XmlSchemaForm.Unqualified)]
        public bool WdCashCountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the WdCashCount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool WdCashCountValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> WdCashCount
        {
            get
            {
                if (this.WdCashCountValueSpecified)
                {
                    return this.WdCashCountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.WdCashCountValue = value.GetValueOrDefault();
                this.WdCashCountValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("WdCashCountLimit", Order=67, Form=XmlSchemaForm.Unqualified)]
        public bool WdCashCountLimitValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the WdCashCountLimit property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool WdCashCountLimitValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> WdCashCountLimit
        {
            get
            {
                if (this.WdCashCountLimitValueSpecified)
                {
                    return this.WdCashCountLimitValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.WdCashCountLimitValue = value.GetValueOrDefault();
                this.WdCashCountLimitValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("WdCashLimit", Order=68, Form=XmlSchemaForm.Unqualified)]
        public bool WdCashLimitValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the WdCashLimit property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool WdCashLimitValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> WdCashLimit
        {
            get
            {
                if (this.WdCashLimitValueSpecified)
                {
                    return this.WdCashLimitValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.WdCashLimitValue = value.GetValueOrDefault();
                this.WdCashLimitValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("WdCashMax", Order=69, Form=XmlSchemaForm.Unqualified)]
        public bool WdCashMaxValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the WdCashMax property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool WdCashMaxValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> WdCashMax
        {
            get
            {
                if (this.WdCashMaxValueSpecified)
                {
                    return this.WdCashMaxValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.WdCashMaxValue = value.GetValueOrDefault();
                this.WdCashMaxValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("WdCheckAmount", Order=70, Form=XmlSchemaForm.Unqualified)]
        public bool WdCheckAmountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the WdCheckAmount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool WdCheckAmountValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> WdCheckAmount
        {
            get
            {
                if (this.WdCheckAmountValueSpecified)
                {
                    return this.WdCheckAmountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.WdCheckAmountValue = value.GetValueOrDefault();
                this.WdCheckAmountValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("WdCheckCount", Order=71, Form=XmlSchemaForm.Unqualified)]
        public bool WdCheckCountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the WdCheckCount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool WdCheckCountValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> WdCheckCount
        {
            get
            {
                if (this.WdCheckCountValueSpecified)
                {
                    return this.WdCheckCountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.WdCheckCountValue = value.GetValueOrDefault();
                this.WdCheckCountValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("WdCheckCountLimit", Order=72, Form=XmlSchemaForm.Unqualified)]
        public bool WdCheckCountLimitValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the WdCheckCountLimit property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool WdCheckCountLimitValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> WdCheckCountLimit
        {
            get
            {
                if (this.WdCheckCountLimitValueSpecified)
                {
                    return this.WdCheckCountLimitValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.WdCheckCountLimitValue = value.GetValueOrDefault();
                this.WdCheckCountLimitValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("WdCheckLimit", Order=73, Form=XmlSchemaForm.Unqualified)]
        public bool WdCheckLimitValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the WdCheckLimit property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool WdCheckLimitValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> WdCheckLimit
        {
            get
            {
                if (this.WdCheckLimitValueSpecified)
                {
                    return this.WdCheckLimitValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.WdCheckLimitValue = value.GetValueOrDefault();
                this.WdCheckLimitValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("WdCheckMax", Order=74, Form=XmlSchemaForm.Unqualified)]
        public bool WdCheckMaxValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the WdCheckMax property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool WdCheckMaxValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> WdCheckMax
        {
            get
            {
                if (this.WdCheckMaxValueSpecified)
                {
                    return this.WdCheckMaxValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.WdCheckMaxValue = value.GetValueOrDefault();
                this.WdCheckMaxValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("XferAmount", Order=75, Form=XmlSchemaForm.Unqualified)]
        public bool XferAmountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the XferAmount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool XferAmountValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> XferAmount
        {
            get
            {
                if (this.XferAmountValueSpecified)
                {
                    return this.XferAmountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.XferAmountValue = value.GetValueOrDefault();
                this.XferAmountValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("XferCount", Order=76, Form=XmlSchemaForm.Unqualified)]
        public bool XferCountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the XferCount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool XferCountValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> XferCount
        {
            get
            {
                if (this.XferCountValueSpecified)
                {
                    return this.XferCountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.XferCountValue = value.GetValueOrDefault();
                this.XferCountValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("XferCountLimit", Order=77, Form=XmlSchemaForm.Unqualified)]
        public bool XferCountLimitValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the XferCountLimit property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool XferCountLimitValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> XferCountLimit
        {
            get
            {
                if (this.XferCountLimitValueSpecified)
                {
                    return this.XferCountLimitValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.XferCountLimitValue = value.GetValueOrDefault();
                this.XferCountLimitValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("XferLimit", Order=78, Form=XmlSchemaForm.Unqualified)]
        public bool XferLimitValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the XferLimit property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool XferLimitValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> XferLimit
        {
            get
            {
                if (this.XferLimitValueSpecified)
                {
                    return this.XferLimitValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.XferLimitValue = value.GetValueOrDefault();
                this.XferLimitValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("XferMax", Order=79, Form=XmlSchemaForm.Unqualified)]
        public bool XferMaxValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the XferMax property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool XferMaxValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> XferMax
        {
            get
            {
                if (this.XferMaxValueSpecified)
                {
                    return this.XferMaxValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.XferMaxValue = value.GetValueOrDefault();
                this.XferMaxValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("Version_1", Order=80, Form=XmlSchemaForm.Unqualified)]
        public AccountService.VersionType Version1 { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<XmlElement> _any;
        
        [XmlAnyElementAttribute(Order=81)]
        public Collection<XmlElement> Any
        {
            get
            {
                return _any;
            }
            set
            {
                _any = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return ((this.Any != null) 
                            && (this.Any.Count != 0));
            }
        }
    }
}
