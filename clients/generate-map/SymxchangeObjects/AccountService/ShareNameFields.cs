//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 2.1.1182.0 using the following command:
// xscgen C:\Users\tbuese\Desktop\Symxchange\AccountService/*.xsd --sf --un --uc --order --cn -0 --collectionSettersMode=Public -o C:\Users\tbuese\Desktop\Symxchange\AccountService\generated-output -n AccountService
namespace AccountService
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.Diagnostics;
    using System.Xml;
    using System.Xml.Schema;
    using System.Xml.Serialization;
    
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1182.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("ShareNameFields", Namespace="http://www.symxchange.generated.symitar.com/crud/account/dto/retrieve")]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    [XmlRootAttribute("ShareNameFields", Namespace="http://www.symxchange.generated.symitar.com/crud/account/dto/retrieve")]
    public partial class ShareNameFields
    {
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ActiveDuty", Order=0, Form=XmlSchemaForm.Unqualified)]
        public bool ActiveDutyValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ActiveDuty property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ActiveDutyValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ActiveDuty
        {
            get
            {
                if (this.ActiveDutyValueSpecified)
                {
                    return this.ActiveDutyValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ActiveDutyValue = value.GetValueOrDefault();
                this.ActiveDutyValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ActiveDutySeparationDate", Order=1, Form=XmlSchemaForm.Unqualified)]
        public bool ActiveDutySeparationDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ActiveDutySeparationDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ActiveDutySeparationDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ActiveDutySeparationDate
        {
            get
            {
                if (this.ActiveDutySeparationDateValueSpecified)
                {
                    return this.ActiveDutySeparationDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ActiveDutySeparationDateValue = value.GetValueOrDefault();
                this.ActiveDutySeparationDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ActiveDutyStartDate", Order=2, Form=XmlSchemaForm.Unqualified)]
        public bool ActiveDutyStartDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ActiveDutyStartDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ActiveDutyStartDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ActiveDutyStartDate
        {
            get
            {
                if (this.ActiveDutyStartDateValueSpecified)
                {
                    return this.ActiveDutyStartDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ActiveDutyStartDateValue = value.GetValueOrDefault();
                this.ActiveDutyStartDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ActiveDutyVerificationDate", Order=3, Form=XmlSchemaForm.Unqualified)]
        public bool ActiveDutyVerificationDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ActiveDutyVerificationDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ActiveDutyVerificationDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ActiveDutyVerificationDate
        {
            get
            {
                if (this.ActiveDutyVerificationDateValueSpecified)
                {
                    return this.ActiveDutyVerificationDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ActiveDutyVerificationDateValue = value.GetValueOrDefault();
                this.ActiveDutyVerificationDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AddrCreateDate", Order=4, Form=XmlSchemaForm.Unqualified)]
        public bool AddrCreateDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AddrCreateDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AddrCreateDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AddrCreateDate
        {
            get
            {
                if (this.AddrCreateDateValueSpecified)
                {
                    return this.AddrCreateDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AddrCreateDateValue = value.GetValueOrDefault();
                this.AddrCreateDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AddrDisconnectDate", Order=5, Form=XmlSchemaForm.Unqualified)]
        public bool AddrDisconnectDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AddrDisconnectDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AddrDisconnectDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AddrDisconnectDate
        {
            get
            {
                if (this.AddrDisconnectDateValueSpecified)
                {
                    return this.AddrDisconnectDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AddrDisconnectDateValue = value.GetValueOrDefault();
                this.AddrDisconnectDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AddrExpDate", Order=6, Form=XmlSchemaForm.Unqualified)]
        public bool AddrExpDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AddrExpDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AddrExpDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AddrExpDate
        {
            get
            {
                if (this.AddrExpDateValueSpecified)
                {
                    return this.AddrExpDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AddrExpDateValue = value.GetValueOrDefault();
                this.AddrExpDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AddrFmLastDate", Order=7, Form=XmlSchemaForm.Unqualified)]
        public bool AddrFmLastDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AddrFmLastDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AddrFmLastDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AddrFmLastDate
        {
            get
            {
                if (this.AddrFmLastDateValueSpecified)
                {
                    return this.AddrFmLastDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AddrFmLastDateValue = value.GetValueOrDefault();
                this.AddrFmLastDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AddrFmLastPurgeDate", Order=8, Form=XmlSchemaForm.Unqualified)]
        public bool AddrFmLastPurgeDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AddrFmLastPurgeDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AddrFmLastPurgeDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AddrFmLastPurgeDate
        {
            get
            {
                if (this.AddrFmLastPurgeDateValueSpecified)
                {
                    return this.AddrFmLastPurgeDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AddrFmLastPurgeDateValue = value.GetValueOrDefault();
                this.AddrFmLastPurgeDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AddrRecordChangeDate", Order=9, Form=XmlSchemaForm.Unqualified)]
        public bool AddrRecordChangeDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AddrRecordChangeDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AddrRecordChangeDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AddrRecordChangeDate
        {
            get
            {
                if (this.AddrRecordChangeDateValueSpecified)
                {
                    return this.AddrRecordChangeDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AddrRecordChangeDateValue = value.GetValueOrDefault();
                this.AddrRecordChangeDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AddressType", Order=10, Form=XmlSchemaForm.Unqualified)]
        public bool AddressTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AddressType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AddressTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AddressType
        {
            get
            {
                if (this.AddressTypeValueSpecified)
                {
                    return this.AddressTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AddressTypeValue = value.GetValueOrDefault();
                this.AddressTypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AltEmail", Order=11, Form=XmlSchemaForm.Unqualified)]
        public bool AltEmailValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AltEmail property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AltEmailValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AltEmail
        {
            get
            {
                if (this.AltEmailValueSpecified)
                {
                    return this.AltEmailValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AltEmailValue = value.GetValueOrDefault();
                this.AltEmailValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BeneficialOwner", Order=12, Form=XmlSchemaForm.Unqualified)]
        public bool BeneficialOwnerValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BeneficialOwner property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BeneficialOwnerValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BeneficialOwner
        {
            get
            {
                if (this.BeneficialOwnerValueSpecified)
                {
                    return this.BeneficialOwnerValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BeneficialOwnerValue = value.GetValueOrDefault();
                this.BeneficialOwnerValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BeneficialPercent", Order=13, Form=XmlSchemaForm.Unqualified)]
        public bool BeneficialPercentValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BeneficialPercent property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BeneficialPercentValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BeneficialPercent
        {
            get
            {
                if (this.BeneficialPercentValueSpecified)
                {
                    return this.BeneficialPercentValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BeneficialPercentValue = value.GetValueOrDefault();
                this.BeneficialPercentValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BeneficiaryPercent", Order=14, Form=XmlSchemaForm.Unqualified)]
        public bool BeneficiaryPercentValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BeneficiaryPercent property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BeneficiaryPercentValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BeneficiaryPercent
        {
            get
            {
                if (this.BeneficiaryPercentValueSpecified)
                {
                    return this.BeneficiaryPercentValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BeneficiaryPercentValue = value.GetValueOrDefault();
                this.BeneficiaryPercentValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BirthDate", Order=15, Form=XmlSchemaForm.Unqualified)]
        public bool BirthDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BirthDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BirthDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BirthDate
        {
            get
            {
                if (this.BirthDateValueSpecified)
                {
                    return this.BirthDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BirthDateValue = value.GetValueOrDefault();
                this.BirthDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CarrierRoute", Order=16, Form=XmlSchemaForm.Unqualified)]
        public bool CarrierRouteValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CarrierRoute property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CarrierRouteValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CarrierRoute
        {
            get
            {
                if (this.CarrierRouteValueSpecified)
                {
                    return this.CarrierRouteValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CarrierRouteValue = value.GetValueOrDefault();
                this.CarrierRouteValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Chapter4StatusCode", Order=17, Form=XmlSchemaForm.Unqualified)]
        public bool Chapter4StatusCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Chapter4StatusCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool Chapter4StatusCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Chapter4StatusCode
        {
            get
            {
                if (this.Chapter4StatusCodeValueSpecified)
                {
                    return this.Chapter4StatusCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.Chapter4StatusCodeValue = value.GetValueOrDefault();
                this.Chapter4StatusCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("City", Order=18, Form=XmlSchemaForm.Unqualified)]
        public bool CityValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the City property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CityValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> City
        {
            get
            {
                if (this.CityValueSpecified)
                {
                    return this.CityValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CityValue = value.GetValueOrDefault();
                this.CityValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Confidential", Order=19, Form=XmlSchemaForm.Unqualified)]
        public bool ConfidentialValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Confidential property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ConfidentialValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Confidential
        {
            get
            {
                if (this.ConfidentialValueSpecified)
                {
                    return this.ConfidentialValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ConfidentialValue = value.GetValueOrDefault();
                this.ConfidentialValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Country", Order=20, Form=XmlSchemaForm.Unqualified)]
        public bool CountryValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Country property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CountryValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Country
        {
            get
            {
                if (this.CountryValueSpecified)
                {
                    return this.CountryValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CountryValue = value.GetValueOrDefault();
                this.CountryValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CountryCode", Order=21, Form=XmlSchemaForm.Unqualified)]
        public bool CountryCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CountryCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CountryCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CountryCode
        {
            get
            {
                if (this.CountryCodeValueSpecified)
                {
                    return this.CountryCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CountryCodeValue = value.GetValueOrDefault();
                this.CountryCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CrAddrChgDate", Order=22, Form=XmlSchemaForm.Unqualified)]
        public bool CrAddrChgDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CrAddrChgDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CrAddrChgDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CrAddrChgDate
        {
            get
            {
                if (this.CrAddrChgDateValueSpecified)
                {
                    return this.CrAddrChgDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CrAddrChgDateValue = value.GetValueOrDefault();
                this.CrAddrChgDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CrNameChgDate", Order=23, Form=XmlSchemaForm.Unqualified)]
        public bool CrNameChgDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CrNameChgDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CrNameChgDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CrNameChgDate
        {
            get
            {
                if (this.CrNameChgDateValueSpecified)
                {
                    return this.CrNameChgDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CrNameChgDateValue = value.GetValueOrDefault();
                this.CrNameChgDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CrSsnChgDate", Order=24, Form=XmlSchemaForm.Unqualified)]
        public bool CrSsnChgDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CrSsnChgDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CrSsnChgDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CrSsnChgDate
        {
            get
            {
                if (this.CrSsnChgDateValueSpecified)
                {
                    return this.CrSsnChgDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CrSsnChgDateValue = value.GetValueOrDefault();
                this.CrSsnChgDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditReportAddrIndicator", Order=25, Form=XmlSchemaForm.Unqualified)]
        public bool CreditReportAddrIndicatorValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditReportAddrIndicator property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditReportAddrIndicatorValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CreditReportAddrIndicator
        {
            get
            {
                if (this.CreditReportAddrIndicatorValueSpecified)
                {
                    return this.CreditReportAddrIndicatorValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditReportAddrIndicatorValue = value.GetValueOrDefault();
                this.CreditReportAddrIndicatorValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditReportAddrIndicatorDate", Order=26, Form=XmlSchemaForm.Unqualified)]
        public bool CreditReportAddrIndicatorDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditReportAddrIndicatorDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditReportAddrIndicatorDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CreditReportAddrIndicatorDate
        {
            get
            {
                if (this.CreditReportAddrIndicatorDateValueSpecified)
                {
                    return this.CreditReportAddrIndicatorDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditReportAddrIndicatorDateValue = value.GetValueOrDefault();
                this.CreditReportAddrIndicatorDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditReportConsumerInfo", Order=27, Form=XmlSchemaForm.Unqualified)]
        public bool CreditReportConsumerInfoValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditReportConsumerInfo property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditReportConsumerInfoValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CreditReportConsumerInfo
        {
            get
            {
                if (this.CreditReportConsumerInfoValueSpecified)
                {
                    return this.CreditReportConsumerInfoValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditReportConsumerInfoValue = value.GetValueOrDefault();
                this.CreditReportConsumerInfoValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditReportConsumerInfoDate", Order=28, Form=XmlSchemaForm.Unqualified)]
        public bool CreditReportConsumerInfoDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditReportConsumerInfoDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditReportConsumerInfoDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CreditReportConsumerInfoDate
        {
            get
            {
                if (this.CreditReportConsumerInfoDateValueSpecified)
                {
                    return this.CreditReportConsumerInfoDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditReportConsumerInfoDateValue = value.GetValueOrDefault();
                this.CreditReportConsumerInfoDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CtrExempt", Order=29, Form=XmlSchemaForm.Unqualified)]
        public bool CtrExemptValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CtrExempt property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CtrExemptValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CtrExempt
        {
            get
            {
                if (this.CtrExemptValueSpecified)
                {
                    return this.CtrExemptValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CtrExemptValue = value.GetValueOrDefault();
                this.CtrExemptValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CurrGrossMonthPay", Order=30, Form=XmlSchemaForm.Unqualified)]
        public bool CurrGrossMonthPayValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CurrGrossMonthPay property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CurrGrossMonthPayValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CurrGrossMonthPay
        {
            get
            {
                if (this.CurrGrossMonthPayValueSpecified)
                {
                    return this.CurrGrossMonthPayValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CurrGrossMonthPayValue = value.GetValueOrDefault();
                this.CurrGrossMonthPayValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CurrMonthPayChgDate", Order=31, Form=XmlSchemaForm.Unqualified)]
        public bool CurrMonthPayChgDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CurrMonthPayChgDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CurrMonthPayChgDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CurrMonthPayChgDate
        {
            get
            {
                if (this.CurrMonthPayChgDateValueSpecified)
                {
                    return this.CurrMonthPayChgDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CurrMonthPayChgDateValue = value.GetValueOrDefault();
                this.CurrMonthPayChgDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CurrNetMonthPay", Order=32, Form=XmlSchemaForm.Unqualified)]
        public bool CurrNetMonthPayValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CurrNetMonthPay property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CurrNetMonthPayValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CurrNetMonthPay
        {
            get
            {
                if (this.CurrNetMonthPayValueSpecified)
                {
                    return this.CurrNetMonthPayValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CurrNetMonthPayValue = value.GetValueOrDefault();
                this.CurrNetMonthPayValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DbaExtendedName", Order=33, Form=XmlSchemaForm.Unqualified)]
        public bool DbaExtendedNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DbaExtendedName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DbaExtendedNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DbaExtendedName
        {
            get
            {
                if (this.DbaExtendedNameValueSpecified)
                {
                    return this.DbaExtendedNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DbaExtendedNameValue = value.GetValueOrDefault();
                this.DbaExtendedNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DbaFirst", Order=34, Form=XmlSchemaForm.Unqualified)]
        public bool DbaFirstValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DbaFirst property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DbaFirstValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DbaFirst
        {
            get
            {
                if (this.DbaFirstValueSpecified)
                {
                    return this.DbaFirstValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DbaFirstValue = value.GetValueOrDefault();
                this.DbaFirstValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DbaLast", Order=35, Form=XmlSchemaForm.Unqualified)]
        public bool DbaLastValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DbaLast property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DbaLastValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DbaLast
        {
            get
            {
                if (this.DbaLastValueSpecified)
                {
                    return this.DbaLastValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DbaLastValue = value.GetValueOrDefault();
                this.DbaLastValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DbaLongName", Order=36, Form=XmlSchemaForm.Unqualified)]
        public bool DbaLongNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DbaLongName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DbaLongNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DbaLongName
        {
            get
            {
                if (this.DbaLongNameValueSpecified)
                {
                    return this.DbaLongNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DbaLongNameValue = value.GetValueOrDefault();
                this.DbaLongNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DbaMiddle", Order=37, Form=XmlSchemaForm.Unqualified)]
        public bool DbaMiddleValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DbaMiddle property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DbaMiddleValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DbaMiddle
        {
            get
            {
                if (this.DbaMiddleValueSpecified)
                {
                    return this.DbaMiddleValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DbaMiddleValue = value.GetValueOrDefault();
                this.DbaMiddleValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DbaNameFormat", Order=38, Form=XmlSchemaForm.Unqualified)]
        public bool DbaNameFormatValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DbaNameFormat property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DbaNameFormatValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DbaNameFormat
        {
            get
            {
                if (this.DbaNameFormatValueSpecified)
                {
                    return this.DbaNameFormatValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DbaNameFormatValue = value.GetValueOrDefault();
                this.DbaNameFormatValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DbaShortName", Order=39, Form=XmlSchemaForm.Unqualified)]
        public bool DbaShortNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DbaShortName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DbaShortNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DbaShortName
        {
            get
            {
                if (this.DbaShortNameValueSpecified)
                {
                    return this.DbaShortNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DbaShortNameValue = value.GetValueOrDefault();
                this.DbaShortNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DbaSuffix", Order=40, Form=XmlSchemaForm.Unqualified)]
        public bool DbaSuffixValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DbaSuffix property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DbaSuffixValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DbaSuffix
        {
            get
            {
                if (this.DbaSuffixValueSpecified)
                {
                    return this.DbaSuffixValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DbaSuffixValue = value.GetValueOrDefault();
                this.DbaSuffixValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DbaTitle", Order=41, Form=XmlSchemaForm.Unqualified)]
        public bool DbaTitleValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DbaTitle property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DbaTitleValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DbaTitle
        {
            get
            {
                if (this.DbaTitleValueSpecified)
                {
                    return this.DbaTitleValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DbaTitleValue = value.GetValueOrDefault();
                this.DbaTitleValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DeathDate", Order=42, Form=XmlSchemaForm.Unqualified)]
        public bool DeathDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DeathDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DeathDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DeathDate
        {
            get
            {
                if (this.DeathDateValueSpecified)
                {
                    return this.DeathDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DeathDateValue = value.GetValueOrDefault();
                this.DeathDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("EcoaCode", Order=43, Form=XmlSchemaForm.Unqualified)]
        public bool EcoaCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EcoaCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool EcoaCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> EcoaCode
        {
            get
            {
                if (this.EcoaCodeValueSpecified)
                {
                    return this.EcoaCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EcoaCodeValue = value.GetValueOrDefault();
                this.EcoaCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("EffectiveDate", Order=44, Form=XmlSchemaForm.Unqualified)]
        public bool EffectiveDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EffectiveDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool EffectiveDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> EffectiveDate
        {
            get
            {
                if (this.EffectiveDateValueSpecified)
                {
                    return this.EffectiveDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EffectiveDateValue = value.GetValueOrDefault();
                this.EffectiveDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Email", Order=45, Form=XmlSchemaForm.Unqualified)]
        public bool EmailValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Email property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool EmailValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Email
        {
            get
            {
                if (this.EmailValueSpecified)
                {
                    return this.EmailValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EmailValue = value.GetValueOrDefault();
                this.EmailValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("EmployerName", Order=46, Form=XmlSchemaForm.Unqualified)]
        public bool EmployerNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EmployerName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool EmployerNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> EmployerName
        {
            get
            {
                if (this.EmployerNameValueSpecified)
                {
                    return this.EmployerNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EmployerNameValue = value.GetValueOrDefault();
                this.EmployerNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ExpirationDate", Order=47, Form=XmlSchemaForm.Unqualified)]
        public bool ExpirationDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ExpirationDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ExpirationDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ExpirationDate
        {
            get
            {
                if (this.ExpirationDateValueSpecified)
                {
                    return this.ExpirationDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ExpirationDateValue = value.GetValueOrDefault();
                this.ExpirationDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ExtendedName", Order=48, Form=XmlSchemaForm.Unqualified)]
        public bool ExtendedNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ExtendedName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ExtendedNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ExtendedName
        {
            get
            {
                if (this.ExtendedNameValueSpecified)
                {
                    return this.ExtendedNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ExtendedNameValue = value.GetValueOrDefault();
                this.ExtendedNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ExtraAddress", Order=49, Form=XmlSchemaForm.Unqualified)]
        public bool ExtraAddressValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ExtraAddress property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ExtraAddressValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ExtraAddress
        {
            get
            {
                if (this.ExtraAddressValueSpecified)
                {
                    return this.ExtraAddressValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ExtraAddressValue = value.GetValueOrDefault();
                this.ExtraAddressValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ExtraInfo", Order=50, Form=XmlSchemaForm.Unqualified)]
        public bool ExtraInfoValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ExtraInfo property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ExtraInfoValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ExtraInfo
        {
            get
            {
                if (this.ExtraInfoValueSpecified)
                {
                    return this.ExtraInfoValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ExtraInfoValue = value.GetValueOrDefault();
                this.ExtraInfoValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("First", Order=51, Form=XmlSchemaForm.Unqualified)]
        public bool FirstValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the First property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FirstValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> First
        {
            get
            {
                if (this.FirstValueSpecified)
                {
                    return this.FirstValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FirstValue = value.GetValueOrDefault();
                this.FirstValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("FmLastPurgeDate", Order=52, Form=XmlSchemaForm.Unqualified)]
        public bool FmLastPurgeDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FmLastPurgeDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FmLastPurgeDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> FmLastPurgeDate
        {
            get
            {
                if (this.FmLastPurgeDateValueSpecified)
                {
                    return this.FmLastPurgeDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FmLastPurgeDateValue = value.GetValueOrDefault();
                this.FmLastPurgeDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ForeignTin", Order=53, Form=XmlSchemaForm.Unqualified)]
        public bool ForeignTinValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ForeignTin property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ForeignTinValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ForeignTin
        {
            get
            {
                if (this.ForeignTinValueSpecified)
                {
                    return this.ForeignTinValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ForeignTinValue = value.GetValueOrDefault();
                this.ForeignTinValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("FormW8OnFile", Order=54, Form=XmlSchemaForm.Unqualified)]
        public bool FormW8OnFileValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FormW8OnFile property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FormW8OnFileValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> FormW8OnFile
        {
            get
            {
                if (this.FormW8OnFileValueSpecified)
                {
                    return this.FormW8OnFileValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FormW8OnFileValue = value.GetValueOrDefault();
                this.FormW8OnFileValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("GIin", Order=55, Form=XmlSchemaForm.Unqualified)]
        public bool GIinValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GIin property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool GIinValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> GIin
        {
            get
            {
                if (this.GIinValueSpecified)
                {
                    return this.GIinValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.GIinValue = value.GetValueOrDefault();
                this.GIinValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Headquarters", Order=56, Form=XmlSchemaForm.Unqualified)]
        public bool HeadquartersValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Headquarters property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HeadquartersValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Headquarters
        {
            get
            {
                if (this.HeadquartersValueSpecified)
                {
                    return this.HeadquartersValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HeadquartersValue = value.GetValueOrDefault();
                this.HeadquartersValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HomePhone", Order=57, Form=XmlSchemaForm.Unqualified)]
        public bool HomePhoneValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HomePhone property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HomePhoneValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HomePhone
        {
            get
            {
                if (this.HomePhoneValueSpecified)
                {
                    return this.HomePhoneValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HomePhoneValue = value.GetValueOrDefault();
                this.HomePhoneValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _identDocFlag;
        
        [XmlElementAttribute("IdentDocFlag", Order=58, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> IdentDocFlag
        {
            get
            {
                return _identDocFlag;
            }
            set
            {
                _identDocFlag = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the IdentDocFlag collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool IdentDocFlagSpecified
        {
            get
            {
                return ((this.IdentDocFlag != null) 
                            && (this.IdentDocFlag.Count != 0));
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ShareNameFields" /> class.</para>
        /// </summary>
        public ShareNameFields()
        {
            this._identDocFlag = new Collection<short>();
            this._identIdDescription = new Collection<short>();
            this._identIdExpireDate = new Collection<short>();
            this._identIdIssueDate = new Collection<short>();
            this._identIdNumber = new Collection<short>();
            this._identIdType = new Collection<short>();
            this._identIdVerifyDate = new Collection<short>();
            this._any = new Collection<XmlElement>();
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _identIdDescription;
        
        [XmlElementAttribute("IdentIdDescription", Order=59, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> IdentIdDescription
        {
            get
            {
                return _identIdDescription;
            }
            set
            {
                _identIdDescription = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the IdentIdDescription collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool IdentIdDescriptionSpecified
        {
            get
            {
                return ((this.IdentIdDescription != null) 
                            && (this.IdentIdDescription.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _identIdExpireDate;
        
        [XmlElementAttribute("IdentIdExpireDate", Order=60, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> IdentIdExpireDate
        {
            get
            {
                return _identIdExpireDate;
            }
            set
            {
                _identIdExpireDate = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the IdentIdExpireDate collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool IdentIdExpireDateSpecified
        {
            get
            {
                return ((this.IdentIdExpireDate != null) 
                            && (this.IdentIdExpireDate.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _identIdIssueDate;
        
        [XmlElementAttribute("IdentIdIssueDate", Order=61, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> IdentIdIssueDate
        {
            get
            {
                return _identIdIssueDate;
            }
            set
            {
                _identIdIssueDate = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the IdentIdIssueDate collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool IdentIdIssueDateSpecified
        {
            get
            {
                return ((this.IdentIdIssueDate != null) 
                            && (this.IdentIdIssueDate.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _identIdNumber;
        
        [XmlElementAttribute("IdentIdNumber", Order=62, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> IdentIdNumber
        {
            get
            {
                return _identIdNumber;
            }
            set
            {
                _identIdNumber = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the IdentIdNumber collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool IdentIdNumberSpecified
        {
            get
            {
                return ((this.IdentIdNumber != null) 
                            && (this.IdentIdNumber.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _identIdType;
        
        [XmlElementAttribute("IdentIdType", Order=63, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> IdentIdType
        {
            get
            {
                return _identIdType;
            }
            set
            {
                _identIdType = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the IdentIdType collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool IdentIdTypeSpecified
        {
            get
            {
                return ((this.IdentIdType != null) 
                            && (this.IdentIdType.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _identIdVerifyDate;
        
        [XmlElementAttribute("IdentIdVerifyDate", Order=64, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> IdentIdVerifyDate
        {
            get
            {
                return _identIdVerifyDate;
            }
            set
            {
                _identIdVerifyDate = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the IdentIdVerifyDate collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool IdentIdVerifyDateSpecified
        {
            get
            {
                return ((this.IdentIdVerifyDate != null) 
                            && (this.IdentIdVerifyDate.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Irs1042SAmendNum", Order=65, Form=XmlSchemaForm.Unqualified)]
        public bool Irs1042SAmendNumValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Irs1042SAmendNum property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool Irs1042SAmendNumValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Irs1042SAmendNum
        {
            get
            {
                if (this.Irs1042SAmendNumValueSpecified)
                {
                    return this.Irs1042SAmendNumValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.Irs1042SAmendNumValue = value.GetValueOrDefault();
                this.Irs1042SAmendNumValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IrsCorrection", Order=66, Form=XmlSchemaForm.Unqualified)]
        public bool IrsCorrectionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IrsCorrection property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IrsCorrectionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IrsCorrection
        {
            get
            {
                if (this.IrsCorrectionValueSpecified)
                {
                    return this.IrsCorrectionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IrsCorrectionValue = value.GetValueOrDefault();
                this.IrsCorrectionValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IrsCountryCode", Order=67, Form=XmlSchemaForm.Unqualified)]
        public bool IrsCountryCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IrsCountryCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IrsCountryCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IrsCountryCode
        {
            get
            {
                if (this.IrsCountryCodeValueSpecified)
                {
                    return this.IrsCountryCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IrsCountryCodeValue = value.GetValueOrDefault();
                this.IrsCountryCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Last", Order=68, Form=XmlSchemaForm.Unqualified)]
        public bool LastValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Last property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LastValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Last
        {
            get
            {
                if (this.LastValueSpecified)
                {
                    return this.LastValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LastValue = value.GetValueOrDefault();
                this.LastValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LastAddrChgDate", Order=69, Form=XmlSchemaForm.Unqualified)]
        public bool LastAddrChgDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LastAddrChgDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LastAddrChgDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LastAddrChgDate
        {
            get
            {
                if (this.LastAddrChgDateValueSpecified)
                {
                    return this.LastAddrChgDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LastAddrChgDateValue = value.GetValueOrDefault();
                this.LastAddrChgDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LastAddrVerifDate", Order=70, Form=XmlSchemaForm.Unqualified)]
        public bool LastAddrVerifDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LastAddrVerifDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LastAddrVerifDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LastAddrVerifDate
        {
            get
            {
                if (this.LastAddrVerifDateValueSpecified)
                {
                    return this.LastAddrVerifDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LastAddrVerifDateValue = value.GetValueOrDefault();
                this.LastAddrVerifDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LastFmDate", Order=71, Form=XmlSchemaForm.Unqualified)]
        public bool LastFmDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LastFmDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LastFmDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LastFmDate
        {
            get
            {
                if (this.LastFmDateValueSpecified)
                {
                    return this.LastFmDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LastFmDateValue = value.GetValueOrDefault();
                this.LastFmDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Lei", Order=72, Form=XmlSchemaForm.Unqualified)]
        public bool LeiValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Lei property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LeiValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Lei
        {
            get
            {
                if (this.LeiValueSpecified)
                {
                    return this.LeiValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LeiValue = value.GetValueOrDefault();
                this.LeiValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("License", Order=73, Form=XmlSchemaForm.Unqualified)]
        public bool LicenseValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the License property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LicenseValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> License
        {
            get
            {
                if (this.LicenseValueSpecified)
                {
                    return this.LicenseValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LicenseValue = value.GetValueOrDefault();
                this.LicenseValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Lob", Order=74, Form=XmlSchemaForm.Unqualified)]
        public bool LobValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Lob property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LobValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Lob
        {
            get
            {
                if (this.LobValueSpecified)
                {
                    return this.LobValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LobValue = value.GetValueOrDefault();
                this.LobValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Locator", Order=75, Form=XmlSchemaForm.Unqualified)]
        public bool LocatorValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Locator property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LocatorValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Locator
        {
            get
            {
                if (this.LocatorValueSpecified)
                {
                    return this.LocatorValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LocatorValue = value.GetValueOrDefault();
                this.LocatorValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LongName", Order=76, Form=XmlSchemaForm.Unqualified)]
        public bool LongNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LongName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LongNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LongName
        {
            get
            {
                if (this.LongNameValueSpecified)
                {
                    return this.LongNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LongNameValue = value.GetValueOrDefault();
                this.LongNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MailOverride", Order=77, Form=XmlSchemaForm.Unqualified)]
        public bool MailOverrideValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MailOverride property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MailOverrideValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MailOverride
        {
            get
            {
                if (this.MailOverrideValueSpecified)
                {
                    return this.MailOverrideValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MailOverrideValue = value.GetValueOrDefault();
                this.MailOverrideValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MarketingAddress", Order=78, Form=XmlSchemaForm.Unqualified)]
        public bool MarketingAddressValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MarketingAddress property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MarketingAddressValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MarketingAddress
        {
            get
            {
                if (this.MarketingAddressValueSpecified)
                {
                    return this.MarketingAddressValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MarketingAddressValue = value.GetValueOrDefault();
                this.MarketingAddressValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MbrActivityDate", Order=79, Form=XmlSchemaForm.Unqualified)]
        public bool MbrActivityDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MbrActivityDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MbrActivityDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MbrActivityDate
        {
            get
            {
                if (this.MbrActivityDateValueSpecified)
                {
                    return this.MbrActivityDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MbrActivityDateValue = value.GetValueOrDefault();
                this.MbrActivityDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MbrAddrFileType", Order=80, Form=XmlSchemaForm.Unqualified)]
        public bool MbrAddrFileTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MbrAddrFileType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MbrAddrFileTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MbrAddrFileType
        {
            get
            {
                if (this.MbrAddrFileTypeValueSpecified)
                {
                    return this.MbrAddrFileTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MbrAddrFileTypeValue = value.GetValueOrDefault();
                this.MbrAddrFileTypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MbrAddrNumLink", Order=81, Form=XmlSchemaForm.Unqualified)]
        public bool MbrAddrNumLinkValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MbrAddrNumLink property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MbrAddrNumLinkValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MbrAddrNumLink
        {
            get
            {
                if (this.MbrAddrNumLinkValueSpecified)
                {
                    return this.MbrAddrNumLinkValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MbrAddrNumLinkValue = value.GetValueOrDefault();
                this.MbrAddrNumLinkValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MbrAddrNumLinkChgDate", Order=82, Form=XmlSchemaForm.Unqualified)]
        public bool MbrAddrNumLinkChgDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MbrAddrNumLinkChgDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MbrAddrNumLinkChgDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MbrAddrNumLinkChgDate
        {
            get
            {
                if (this.MbrAddrNumLinkChgDateValueSpecified)
                {
                    return this.MbrAddrNumLinkChgDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MbrAddrNumLinkChgDateValue = value.GetValueOrDefault();
                this.MbrAddrNumLinkChgDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MbrAddrNumber", Order=83, Form=XmlSchemaForm.Unqualified)]
        public bool MbrAddrNumberValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MbrAddrNumber property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MbrAddrNumberValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MbrAddrNumber
        {
            get
            {
                if (this.MbrAddrNumberValueSpecified)
                {
                    return this.MbrAddrNumberValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MbrAddrNumberValue = value.GetValueOrDefault();
                this.MbrAddrNumberValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MbrCreateDate", Order=84, Form=XmlSchemaForm.Unqualified)]
        public bool MbrCreateDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MbrCreateDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MbrCreateDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MbrCreateDate
        {
            get
            {
                if (this.MbrCreateDateValueSpecified)
                {
                    return this.MbrCreateDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MbrCreateDateValue = value.GetValueOrDefault();
                this.MbrCreateDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MbrDisconnectDate", Order=85, Form=XmlSchemaForm.Unqualified)]
        public bool MbrDisconnectDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MbrDisconnectDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MbrDisconnectDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MbrDisconnectDate
        {
            get
            {
                if (this.MbrDisconnectDateValueSpecified)
                {
                    return this.MbrDisconnectDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MbrDisconnectDateValue = value.GetValueOrDefault();
                this.MbrDisconnectDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MbrExpDate", Order=86, Form=XmlSchemaForm.Unqualified)]
        public bool MbrExpDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MbrExpDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MbrExpDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MbrExpDate
        {
            get
            {
                if (this.MbrExpDateValueSpecified)
                {
                    return this.MbrExpDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MbrExpDateValue = value.GetValueOrDefault();
                this.MbrExpDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MbrFileType", Order=87, Form=XmlSchemaForm.Unqualified)]
        public bool MbrFileTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MbrFileType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MbrFileTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MbrFileType
        {
            get
            {
                if (this.MbrFileTypeValueSpecified)
                {
                    return this.MbrFileTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MbrFileTypeValue = value.GetValueOrDefault();
                this.MbrFileTypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MbrFmLastDate", Order=88, Form=XmlSchemaForm.Unqualified)]
        public bool MbrFmLastDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MbrFmLastDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MbrFmLastDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MbrFmLastDate
        {
            get
            {
                if (this.MbrFmLastDateValueSpecified)
                {
                    return this.MbrFmLastDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MbrFmLastDateValue = value.GetValueOrDefault();
                this.MbrFmLastDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MbrFmLastPurgeDate", Order=89, Form=XmlSchemaForm.Unqualified)]
        public bool MbrFmLastPurgeDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MbrFmLastPurgeDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MbrFmLastPurgeDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MbrFmLastPurgeDate
        {
            get
            {
                if (this.MbrFmLastPurgeDateValueSpecified)
                {
                    return this.MbrFmLastPurgeDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MbrFmLastPurgeDateValue = value.GetValueOrDefault();
                this.MbrFmLastPurgeDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MbrRecordChangeDate", Order=90, Form=XmlSchemaForm.Unqualified)]
        public bool MbrRecordChangeDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MbrRecordChangeDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MbrRecordChangeDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MbrRecordChangeDate
        {
            get
            {
                if (this.MbrRecordChangeDateValueSpecified)
                {
                    return this.MbrRecordChangeDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MbrRecordChangeDateValue = value.GetValueOrDefault();
                this.MbrRecordChangeDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MbrStatus", Order=91, Form=XmlSchemaForm.Unqualified)]
        public bool MbrStatusValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MbrStatus property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MbrStatusValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MbrStatus
        {
            get
            {
                if (this.MbrStatusValueSpecified)
                {
                    return this.MbrStatusValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MbrStatusValue = value.GetValueOrDefault();
                this.MbrStatusValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MbrStatusFmDate", Order=92, Form=XmlSchemaForm.Unqualified)]
        public bool MbrStatusFmDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MbrStatusFmDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MbrStatusFmDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MbrStatusFmDate
        {
            get
            {
                if (this.MbrStatusFmDateValueSpecified)
                {
                    return this.MbrStatusFmDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MbrStatusFmDateValue = value.GetValueOrDefault();
                this.MbrStatusFmDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MemberNumLink", Order=93, Form=XmlSchemaForm.Unqualified)]
        public bool MemberNumLinkValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MemberNumLink property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MemberNumLinkValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MemberNumLink
        {
            get
            {
                if (this.MemberNumLinkValueSpecified)
                {
                    return this.MemberNumLinkValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MemberNumLinkValue = value.GetValueOrDefault();
                this.MemberNumLinkValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MemberNumLinkChgDate", Order=94, Form=XmlSchemaForm.Unqualified)]
        public bool MemberNumLinkChgDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MemberNumLinkChgDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MemberNumLinkChgDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MemberNumLinkChgDate
        {
            get
            {
                if (this.MemberNumLinkChgDateValueSpecified)
                {
                    return this.MemberNumLinkChgDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MemberNumLinkChgDateValue = value.GetValueOrDefault();
                this.MemberNumLinkChgDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MemberNumber", Order=95, Form=XmlSchemaForm.Unqualified)]
        public bool MemberNumberValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MemberNumber property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MemberNumberValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MemberNumber
        {
            get
            {
                if (this.MemberNumberValueSpecified)
                {
                    return this.MemberNumberValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MemberNumberValue = value.GetValueOrDefault();
                this.MemberNumberValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Middle", Order=96, Form=XmlSchemaForm.Unqualified)]
        public bool MiddleValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Middle property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MiddleValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Middle
        {
            get
            {
                if (this.MiddleValueSpecified)
                {
                    return this.MiddleValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MiddleValue = value.GetValueOrDefault();
                this.MiddleValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MobilePhone", Order=97, Form=XmlSchemaForm.Unqualified)]
        public bool MobilePhoneValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MobilePhone property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MobilePhoneValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MobilePhone
        {
            get
            {
                if (this.MobilePhoneValueSpecified)
                {
                    return this.MobilePhoneValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MobilePhoneValue = value.GetValueOrDefault();
                this.MobilePhoneValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MothersMaidenName", Order=98, Form=XmlSchemaForm.Unqualified)]
        public bool MothersMaidenNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MothersMaidenName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MothersMaidenNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MothersMaidenName
        {
            get
            {
                if (this.MothersMaidenNameValueSpecified)
                {
                    return this.MothersMaidenNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MothersMaidenNameValue = value.GetValueOrDefault();
                this.MothersMaidenNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("NameFormat", Order=99, Form=XmlSchemaForm.Unqualified)]
        public bool NameFormatValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NameFormat property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool NameFormatValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> NameFormat
        {
            get
            {
                if (this.NameFormatValueSpecified)
                {
                    return this.NameFormatValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NameFormatValue = value.GetValueOrDefault();
                this.NameFormatValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("NonAcctNameNum", Order=100, Form=XmlSchemaForm.Unqualified)]
        public bool NonAcctNameNumValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NonAcctNameNum property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool NonAcctNameNumValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> NonAcctNameNum
        {
            get
            {
                if (this.NonAcctNameNumValueSpecified)
                {
                    return this.NonAcctNameNumValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NonAcctNameNumValue = value.GetValueOrDefault();
                this.NonAcctNameNumValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("NraExemptionCode", Order=101, Form=XmlSchemaForm.Unqualified)]
        public bool NraExemptionCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NraExemptionCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool NraExemptionCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> NraExemptionCode
        {
            get
            {
                if (this.NraExemptionCodeValueSpecified)
                {
                    return this.NraExemptionCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NraExemptionCodeValue = value.GetValueOrDefault();
                this.NraExemptionCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("NraTaxRate", Order=102, Form=XmlSchemaForm.Unqualified)]
        public bool NraTaxRateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NraTaxRate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool NraTaxRateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> NraTaxRate
        {
            get
            {
                if (this.NraTaxRateValueSpecified)
                {
                    return this.NraTaxRateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NraTaxRateValue = value.GetValueOrDefault();
                this.NraTaxRateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Occupation", Order=103, Form=XmlSchemaForm.Unqualified)]
        public bool OccupationValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Occupation property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OccupationValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Occupation
        {
            get
            {
                if (this.OccupationValueSpecified)
                {
                    return this.OccupationValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OccupationValue = value.GetValueOrDefault();
                this.OccupationValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PagerNumber", Order=104, Form=XmlSchemaForm.Unqualified)]
        public bool PagerNumberValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PagerNumber property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PagerNumberValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PagerNumber
        {
            get
            {
                if (this.PagerNumberValueSpecified)
                {
                    return this.PagerNumberValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PagerNumberValue = value.GetValueOrDefault();
                this.PagerNumberValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PhoneType", Order=105, Form=XmlSchemaForm.Unqualified)]
        public bool PhoneTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PhoneType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PhoneTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PhoneType
        {
            get
            {
                if (this.PhoneTypeValueSpecified)
                {
                    return this.PhoneTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PhoneTypeValue = value.GetValueOrDefault();
                this.PhoneTypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PreferredContact", Order=106, Form=XmlSchemaForm.Unqualified)]
        public bool PreferredContactValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PreferredContact property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PreferredContactValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PreferredContact
        {
            get
            {
                if (this.PreferredContactValueSpecified)
                {
                    return this.PreferredContactValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PreferredContactValue = value.GetValueOrDefault();
                this.PreferredContactValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PreferredContactMethod", Order=107, Form=XmlSchemaForm.Unqualified)]
        public bool PreferredContactMethodValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PreferredContactMethod property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PreferredContactMethodValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PreferredContactMethod
        {
            get
            {
                if (this.PreferredContactMethodValueSpecified)
                {
                    return this.PreferredContactMethodValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PreferredContactMethodValue = value.GetValueOrDefault();
                this.PreferredContactMethodValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("RecordChangeDate", Order=108, Form=XmlSchemaForm.Unqualified)]
        public bool RecordChangeDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RecordChangeDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool RecordChangeDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> RecordChangeDate
        {
            get
            {
                if (this.RecordChangeDateValueSpecified)
                {
                    return this.RecordChangeDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RecordChangeDateValue = value.GetValueOrDefault();
                this.RecordChangeDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Restrict", Order=109, Form=XmlSchemaForm.Unqualified)]
        public bool RestrictValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Restrict property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool RestrictValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Restrict
        {
            get
            {
                if (this.RestrictValueSpecified)
                {
                    return this.RestrictValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RestrictValue = value.GetValueOrDefault();
                this.RestrictValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Sex", Order=110, Form=XmlSchemaForm.Unqualified)]
        public bool SexValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Sex property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SexValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Sex
        {
            get
            {
                if (this.SexValueSpecified)
                {
                    return this.SexValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SexValue = value.GetValueOrDefault();
                this.SexValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ShortName", Order=111, Form=XmlSchemaForm.Unqualified)]
        public bool ShortNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ShortName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ShortNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ShortName
        {
            get
            {
                if (this.ShortNameValueSpecified)
                {
                    return this.ShortNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ShortNameValue = value.GetValueOrDefault();
                this.ShortNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Ssn", Order=112, Form=XmlSchemaForm.Unqualified)]
        public bool SsnValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Ssn property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SsnValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Ssn
        {
            get
            {
                if (this.SsnValueSpecified)
                {
                    return this.SsnValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SsnValue = value.GetValueOrDefault();
                this.SsnValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SsnCertification", Order=113, Form=XmlSchemaForm.Unqualified)]
        public bool SsnCertificationValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SsnCertification property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SsnCertificationValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SsnCertification
        {
            get
            {
                if (this.SsnCertificationValueSpecified)
                {
                    return this.SsnCertificationValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SsnCertificationValue = value.GetValueOrDefault();
                this.SsnCertificationValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SsnOverride", Order=114, Form=XmlSchemaForm.Unqualified)]
        public bool SsnOverrideValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SsnOverride property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SsnOverrideValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SsnOverride
        {
            get
            {
                if (this.SsnOverrideValueSpecified)
                {
                    return this.SsnOverrideValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SsnOverrideValue = value.GetValueOrDefault();
                this.SsnOverrideValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SsnType", Order=115, Form=XmlSchemaForm.Unqualified)]
        public bool SsnTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SsnType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SsnTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SsnType
        {
            get
            {
                if (this.SsnTypeValueSpecified)
                {
                    return this.SsnTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SsnTypeValue = value.GetValueOrDefault();
                this.SsnTypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("State", Order=116, Form=XmlSchemaForm.Unqualified)]
        public bool StateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the State property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool StateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> State
        {
            get
            {
                if (this.StateValueSpecified)
                {
                    return this.StateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.StateValue = value.GetValueOrDefault();
                this.StateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Street", Order=117, Form=XmlSchemaForm.Unqualified)]
        public bool StreetValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Street property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool StreetValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Street
        {
            get
            {
                if (this.StreetValueSpecified)
                {
                    return this.StreetValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.StreetValue = value.GetValueOrDefault();
                this.StreetValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SubType", Order=118, Form=XmlSchemaForm.Unqualified)]
        public bool SubTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SubType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SubTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SubType
        {
            get
            {
                if (this.SubTypeValueSpecified)
                {
                    return this.SubTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SubTypeValue = value.GetValueOrDefault();
                this.SubTypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SubstantialOwner", Order=119, Form=XmlSchemaForm.Unqualified)]
        public bool SubstantialOwnerValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SubstantialOwner property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SubstantialOwnerValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SubstantialOwner
        {
            get
            {
                if (this.SubstantialOwnerValueSpecified)
                {
                    return this.SubstantialOwnerValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SubstantialOwnerValue = value.GetValueOrDefault();
                this.SubstantialOwnerValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Suffix", Order=120, Form=XmlSchemaForm.Unqualified)]
        public bool SuffixValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Suffix property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SuffixValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Suffix
        {
            get
            {
                if (this.SuffixValueSpecified)
                {
                    return this.SuffixValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SuffixValue = value.GetValueOrDefault();
                this.SuffixValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Title", Order=121, Form=XmlSchemaForm.Unqualified)]
        public bool TitleValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Title property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TitleValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Title
        {
            get
            {
                if (this.TitleValueSpecified)
                {
                    return this.TitleValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TitleValue = value.GetValueOrDefault();
                this.TitleValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Type", Order=122, Form=XmlSchemaForm.Unqualified)]
        public bool TypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Type property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Type
        {
            get
            {
                if (this.TypeValueSpecified)
                {
                    return this.TypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TypeValue = value.GetValueOrDefault();
                this.TypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UsPersonFlag", Order=123, Form=XmlSchemaForm.Unqualified)]
        public bool UsPersonFlagValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UsPersonFlag property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UsPersonFlagValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UsPersonFlag
        {
            get
            {
                if (this.UsPersonFlagValueSpecified)
                {
                    return this.UsPersonFlagValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UsPersonFlagValue = value.GetValueOrDefault();
                this.UsPersonFlagValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UserAmount1", Order=124, Form=XmlSchemaForm.Unqualified)]
        public bool UserAmount1Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UserAmount1 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UserAmount1ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UserAmount1
        {
            get
            {
                if (this.UserAmount1ValueSpecified)
                {
                    return this.UserAmount1Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UserAmount1Value = value.GetValueOrDefault();
                this.UserAmount1ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UserAmount2", Order=125, Form=XmlSchemaForm.Unqualified)]
        public bool UserAmount2Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UserAmount2 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UserAmount2ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UserAmount2
        {
            get
            {
                if (this.UserAmount2ValueSpecified)
                {
                    return this.UserAmount2Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UserAmount2Value = value.GetValueOrDefault();
                this.UserAmount2ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UserChar1", Order=126, Form=XmlSchemaForm.Unqualified)]
        public bool UserChar1Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UserChar1 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UserChar1ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UserChar1
        {
            get
            {
                if (this.UserChar1ValueSpecified)
                {
                    return this.UserChar1Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UserChar1Value = value.GetValueOrDefault();
                this.UserChar1ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UserChar2", Order=127, Form=XmlSchemaForm.Unqualified)]
        public bool UserChar2Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UserChar2 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UserChar2ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UserChar2
        {
            get
            {
                if (this.UserChar2ValueSpecified)
                {
                    return this.UserChar2Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UserChar2Value = value.GetValueOrDefault();
                this.UserChar2ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UserChar3", Order=128, Form=XmlSchemaForm.Unqualified)]
        public bool UserChar3Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UserChar3 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UserChar3ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UserChar3
        {
            get
            {
                if (this.UserChar3ValueSpecified)
                {
                    return this.UserChar3Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UserChar3Value = value.GetValueOrDefault();
                this.UserChar3ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UserChar4", Order=129, Form=XmlSchemaForm.Unqualified)]
        public bool UserChar4Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UserChar4 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UserChar4ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UserChar4
        {
            get
            {
                if (this.UserChar4ValueSpecified)
                {
                    return this.UserChar4Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UserChar4Value = value.GetValueOrDefault();
                this.UserChar4ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UserDate1", Order=130, Form=XmlSchemaForm.Unqualified)]
        public bool UserDate1Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UserDate1 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UserDate1ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UserDate1
        {
            get
            {
                if (this.UserDate1ValueSpecified)
                {
                    return this.UserDate1Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UserDate1Value = value.GetValueOrDefault();
                this.UserDate1ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UserDate2", Order=131, Form=XmlSchemaForm.Unqualified)]
        public bool UserDate2Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UserDate2 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UserDate2ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UserDate2
        {
            get
            {
                if (this.UserDate2ValueSpecified)
                {
                    return this.UserDate2Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UserDate2Value = value.GetValueOrDefault();
                this.UserDate2ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("W8ExpirationDate", Order=132, Form=XmlSchemaForm.Unqualified)]
        public bool W8ExpirationDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the W8ExpirationDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool W8ExpirationDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> W8ExpirationDate
        {
            get
            {
                if (this.W8ExpirationDateValueSpecified)
                {
                    return this.W8ExpirationDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.W8ExpirationDateValue = value.GetValueOrDefault();
                this.W8ExpirationDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("WorkPhone", Order=133, Form=XmlSchemaForm.Unqualified)]
        public bool WorkPhoneValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the WorkPhone property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool WorkPhoneValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> WorkPhone
        {
            get
            {
                if (this.WorkPhoneValueSpecified)
                {
                    return this.WorkPhoneValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.WorkPhoneValue = value.GetValueOrDefault();
                this.WorkPhoneValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("WorkPhoneExtension", Order=134, Form=XmlSchemaForm.Unqualified)]
        public bool WorkPhoneExtensionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the WorkPhoneExtension property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool WorkPhoneExtensionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> WorkPhoneExtension
        {
            get
            {
                if (this.WorkPhoneExtensionValueSpecified)
                {
                    return this.WorkPhoneExtensionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.WorkPhoneExtensionValue = value.GetValueOrDefault();
                this.WorkPhoneExtensionValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ZipCode", Order=135, Form=XmlSchemaForm.Unqualified)]
        public bool ZipCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ZipCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ZipCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ZipCode
        {
            get
            {
                if (this.ZipCodeValueSpecified)
                {
                    return this.ZipCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ZipCodeValue = value.GetValueOrDefault();
                this.ZipCodeValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("Version_1", Order=136, Form=XmlSchemaForm.Unqualified)]
        public AccountService.VersionType Version1 { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<XmlElement> _any;
        
        [XmlAnyElementAttribute(Order=137)]
        public Collection<XmlElement> Any
        {
            get
            {
                return _any;
            }
            set
            {
                _any = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return ((this.Any != null) 
                            && (this.Any.Count != 0));
            }
        }
    }
}
