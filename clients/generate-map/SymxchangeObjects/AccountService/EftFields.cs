//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 2.1.1182.0 using the following command:
// xscgen C:\Users\tbuese\Desktop\Symxchange\AccountService/*.xsd --sf --un --uc --order --cn -0 --collectionSettersMode=Public -o C:\Users\tbuese\Desktop\Symxchange\AccountService\generated-output -n AccountService
namespace AccountService
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.Diagnostics;
    using System.Xml;
    using System.Xml.Schema;
    using System.Xml.Serialization;
    
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1182.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("EftFields", Namespace="http://www.symxchange.generated.symitar.com/crud/account/dto/retrieve")]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    [XmlRootAttribute("EftFields", Namespace="http://www.symxchange.generated.symitar.com/crud/account/dto/retrieve")]
    public partial class EftFields
    {
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AmountCode", Order=0, Form=XmlSchemaForm.Unqualified)]
        public bool AmountCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AmountCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AmountCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AmountCode
        {
            get
            {
                if (this.AmountCodeValueSpecified)
                {
                    return this.AmountCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AmountCodeValue = value.GetValueOrDefault();
                this.AmountCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AmountYtd", Order=1, Form=XmlSchemaForm.Unqualified)]
        public bool AmountYtdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AmountYtd property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AmountYtdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AmountYtd
        {
            get
            {
                if (this.AmountYtdValueSpecified)
                {
                    return this.AmountYtdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AmountYtdValue = value.GetValueOrDefault();
                this.AmountYtdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AudioId", Order=2, Form=XmlSchemaForm.Unqualified)]
        public bool AudioIdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AudioId property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AudioIdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AudioId
        {
            get
            {
                if (this.AudioIdValueSpecified)
                {
                    return this.AudioIdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AudioIdValue = value.GetValueOrDefault();
                this.AudioIdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Balance", Order=3, Form=XmlSchemaForm.Unqualified)]
        public bool BalanceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Balance property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BalanceValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Balance
        {
            get
            {
                if (this.BalanceValueSpecified)
                {
                    return this.BalanceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BalanceValue = value.GetValueOrDefault();
                this.BalanceValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BatchAchOrigNum", Order=4, Form=XmlSchemaForm.Unqualified)]
        public bool BatchAchOrigNumValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BatchAchOrigNum property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BatchAchOrigNumValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BatchAchOrigNum
        {
            get
            {
                if (this.BatchAchOrigNumValueSpecified)
                {
                    return this.BatchAchOrigNumValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BatchAchOrigNumValue = value.GetValueOrDefault();
                this.BatchAchOrigNumValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CountYtd", Order=5, Form=XmlSchemaForm.Unqualified)]
        public bool CountYtdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CountYtd property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CountYtdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CountYtd
        {
            get
            {
                if (this.CountYtdValueSpecified)
                {
                    return this.CountYtdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CountYtdValue = value.GetValueOrDefault();
                this.CountYtdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditLimit", Order=6, Form=XmlSchemaForm.Unqualified)]
        public bool CreditLimitValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditLimit property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditLimitValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CreditLimit
        {
            get
            {
                if (this.CreditLimitValueSpecified)
                {
                    return this.CreditLimitValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditLimitValue = value.GetValueOrDefault();
                this.CreditLimitValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Day1", Order=7, Form=XmlSchemaForm.Unqualified)]
        public bool Day1Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Day1 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool Day1ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Day1
        {
            get
            {
                if (this.Day1ValueSpecified)
                {
                    return this.Day1Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.Day1Value = value.GetValueOrDefault();
                this.Day1ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Day2", Order=8, Form=XmlSchemaForm.Unqualified)]
        public bool Day2Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Day2 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool Day2ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Day2
        {
            get
            {
                if (this.Day2ValueSpecified)
                {
                    return this.Day2Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.Day2Value = value.GetValueOrDefault();
                this.Day2ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DeferDate", Order=9, Form=XmlSchemaForm.Unqualified)]
        public bool DeferDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DeferDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DeferDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DeferDate
        {
            get
            {
                if (this.DeferDateValueSpecified)
                {
                    return this.DeferDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DeferDateValue = value.GetValueOrDefault();
                this.DeferDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DistributionRatio", Order=10, Form=XmlSchemaForm.Unqualified)]
        public bool DistributionRatioValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DistributionRatio property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DistributionRatioValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DistributionRatio
        {
            get
            {
                if (this.DistributionRatioValueSpecified)
                {
                    return this.DistributionRatioValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DistributionRatioValue = value.GetValueOrDefault();
                this.DistributionRatioValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DqCount", Order=11, Form=XmlSchemaForm.Unqualified)]
        public bool DqCountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DqCount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DqCountValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DqCount
        {
            get
            {
                if (this.DqCountValueSpecified)
                {
                    return this.DqCountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DqCountValue = value.GetValueOrDefault();
                this.DqCountValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("EffectiveDate", Order=12, Form=XmlSchemaForm.Unqualified)]
        public bool EffectiveDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EffectiveDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool EffectiveDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> EffectiveDate
        {
            get
            {
                if (this.EffectiveDateValueSpecified)
                {
                    return this.EffectiveDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EffectiveDateValue = value.GetValueOrDefault();
                this.EffectiveDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ExpirationDate", Order=13, Form=XmlSchemaForm.Unqualified)]
        public bool ExpirationDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ExpirationDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ExpirationDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ExpirationDate
        {
            get
            {
                if (this.ExpirationDateValueSpecified)
                {
                    return this.ExpirationDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ExpirationDateValue = value.GetValueOrDefault();
                this.ExpirationDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("FederalWithholding", Order=14, Form=XmlSchemaForm.Unqualified)]
        public bool FederalWithholdingValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FederalWithholding property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FederalWithholdingValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> FederalWithholding
        {
            get
            {
                if (this.FederalWithholdingValueSpecified)
                {
                    return this.FederalWithholdingValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FederalWithholdingValue = value.GetValueOrDefault();
                this.FederalWithholdingValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Frequency", Order=15, Form=XmlSchemaForm.Unqualified)]
        public bool FrequencyValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Frequency property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FrequencyValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Frequency
        {
            get
            {
                if (this.FrequencyValueSpecified)
                {
                    return this.FrequencyValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FrequencyValue = value.GetValueOrDefault();
                this.FrequencyValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("GlCode", Order=16, Form=XmlSchemaForm.Unqualified)]
        public bool GlCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GlCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool GlCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> GlCode
        {
            get
            {
                if (this.GlCodeValueSpecified)
                {
                    return this.GlCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.GlCodeValue = value.GetValueOrDefault();
                this.GlCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("GroupNumber", Order=17, Form=XmlSchemaForm.Unqualified)]
        public bool GroupNumberValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GroupNumber property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool GroupNumberValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> GroupNumber
        {
            get
            {
                if (this.GroupNumberValueSpecified)
                {
                    return this.GroupNumberValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.GroupNumberValue = value.GetValueOrDefault();
                this.GroupNumberValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Id", Order=18, Form=XmlSchemaForm.Unqualified)]
        public bool IdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Id property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Id
        {
            get
            {
                if (this.IdValueSpecified)
                {
                    return this.IdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IdValue = value.GetValueOrDefault();
                this.IdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IdType", Order=19, Form=XmlSchemaForm.Unqualified)]
        public bool IdTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IdType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IdTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IdType
        {
            get
            {
                if (this.IdTypeValueSpecified)
                {
                    return this.IdTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IdTypeValue = value.GetValueOrDefault();
                this.IdTypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LastTranAmount", Order=20, Form=XmlSchemaForm.Unqualified)]
        public bool LastTranAmountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LastTranAmount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LastTranAmountValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LastTranAmount
        {
            get
            {
                if (this.LastTranAmountValueSpecified)
                {
                    return this.LastTranAmountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LastTranAmountValue = value.GetValueOrDefault();
                this.LastTranAmountValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LastTranDate", Order=21, Form=XmlSchemaForm.Unqualified)]
        public bool LastTranDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LastTranDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LastTranDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LastTranDate
        {
            get
            {
                if (this.LastTranDateValueSpecified)
                {
                    return this.LastTranDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LastTranDateValue = value.GetValueOrDefault();
                this.LastTranDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Locator", Order=22, Form=XmlSchemaForm.Unqualified)]
        public bool LocatorValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Locator property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LocatorValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Locator
        {
            get
            {
                if (this.LocatorValueSpecified)
                {
                    return this.LocatorValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LocatorValue = value.GetValueOrDefault();
                this.LocatorValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MatchCode1", Order=23, Form=XmlSchemaForm.Unqualified)]
        public bool MatchCode1Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MatchCode1 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MatchCode1ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MatchCode1
        {
            get
            {
                if (this.MatchCode1ValueSpecified)
                {
                    return this.MatchCode1Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MatchCode1Value = value.GetValueOrDefault();
                this.MatchCode1ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MatchCode2", Order=24, Form=XmlSchemaForm.Unqualified)]
        public bool MatchCode2Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MatchCode2 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MatchCode2ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MatchCode2
        {
            get
            {
                if (this.MatchCode2ValueSpecified)
                {
                    return this.MatchCode2Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MatchCode2Value = value.GetValueOrDefault();
                this.MatchCode2ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MatchCode3", Order=25, Form=XmlSchemaForm.Unqualified)]
        public bool MatchCode3Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MatchCode3 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MatchCode3ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MatchCode3
        {
            get
            {
                if (this.MatchCode3ValueSpecified)
                {
                    return this.MatchCode3Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MatchCode3Value = value.GetValueOrDefault();
                this.MatchCode3ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MatchCode4", Order=26, Form=XmlSchemaForm.Unqualified)]
        public bool MatchCode4Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MatchCode4 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MatchCode4ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MatchCode4
        {
            get
            {
                if (this.MatchCode4ValueSpecified)
                {
                    return this.MatchCode4Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MatchCode4Value = value.GetValueOrDefault();
                this.MatchCode4ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MatchCode5", Order=27, Form=XmlSchemaForm.Unqualified)]
        public bool MatchCode5Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MatchCode5 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MatchCode5ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MatchCode5
        {
            get
            {
                if (this.MatchCode5ValueSpecified)
                {
                    return this.MatchCode5Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MatchCode5Value = value.GetValueOrDefault();
                this.MatchCode5ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MatchCode6", Order=28, Form=XmlSchemaForm.Unqualified)]
        public bool MatchCode6Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MatchCode6 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MatchCode6ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MatchCode6
        {
            get
            {
                if (this.MatchCode6ValueSpecified)
                {
                    return this.MatchCode6Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MatchCode6Value = value.GetValueOrDefault();
                this.MatchCode6ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MatchId1", Order=29, Form=XmlSchemaForm.Unqualified)]
        public bool MatchId1Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MatchId1 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MatchId1ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MatchId1
        {
            get
            {
                if (this.MatchId1ValueSpecified)
                {
                    return this.MatchId1Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MatchId1Value = value.GetValueOrDefault();
                this.MatchId1ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MatchId2", Order=30, Form=XmlSchemaForm.Unqualified)]
        public bool MatchId2Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MatchId2 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MatchId2ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MatchId2
        {
            get
            {
                if (this.MatchId2ValueSpecified)
                {
                    return this.MatchId2Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MatchId2Value = value.GetValueOrDefault();
                this.MatchId2ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MatchId3", Order=31, Form=XmlSchemaForm.Unqualified)]
        public bool MatchId3Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MatchId3 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MatchId3ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MatchId3
        {
            get
            {
                if (this.MatchId3ValueSpecified)
                {
                    return this.MatchId3Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MatchId3Value = value.GetValueOrDefault();
                this.MatchId3ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MatchId4", Order=32, Form=XmlSchemaForm.Unqualified)]
        public bool MatchId4Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MatchId4 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MatchId4ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MatchId4
        {
            get
            {
                if (this.MatchId4ValueSpecified)
                {
                    return this.MatchId4Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MatchId4Value = value.GetValueOrDefault();
                this.MatchId4ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MatchId5", Order=33, Form=XmlSchemaForm.Unqualified)]
        public bool MatchId5Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MatchId5 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MatchId5ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MatchId5
        {
            get
            {
                if (this.MatchId5ValueSpecified)
                {
                    return this.MatchId5Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MatchId5Value = value.GetValueOrDefault();
                this.MatchId5ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MatchId6", Order=34, Form=XmlSchemaForm.Unqualified)]
        public bool MatchId6Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MatchId6 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MatchId6ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MatchId6
        {
            get
            {
                if (this.MatchId6ValueSpecified)
                {
                    return this.MatchId6Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MatchId6Value = value.GetValueOrDefault();
                this.MatchId6ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("NextDate", Order=35, Form=XmlSchemaForm.Unqualified)]
        public bool NextDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NextDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool NextDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> NextDate
        {
            get
            {
                if (this.NextDateValueSpecified)
                {
                    return this.NextDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NextDateValue = value.GetValueOrDefault();
                this.NextDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Payee", Order=36, Form=XmlSchemaForm.Unqualified)]
        public bool PayeeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Payee property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PayeeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Payee
        {
            get
            {
                if (this.PayeeValueSpecified)
                {
                    return this.PayeeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PayeeValue = value.GetValueOrDefault();
                this.PayeeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PayeeCity", Order=37, Form=XmlSchemaForm.Unqualified)]
        public bool PayeeCityValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PayeeCity property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PayeeCityValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PayeeCity
        {
            get
            {
                if (this.PayeeCityValueSpecified)
                {
                    return this.PayeeCityValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PayeeCityValue = value.GetValueOrDefault();
                this.PayeeCityValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PayeeExtraAddress", Order=38, Form=XmlSchemaForm.Unqualified)]
        public bool PayeeExtraAddressValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PayeeExtraAddress property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PayeeExtraAddressValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PayeeExtraAddress
        {
            get
            {
                if (this.PayeeExtraAddressValueSpecified)
                {
                    return this.PayeeExtraAddressValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PayeeExtraAddressValue = value.GetValueOrDefault();
                this.PayeeExtraAddressValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PayeeName", Order=39, Form=XmlSchemaForm.Unqualified)]
        public bool PayeeNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PayeeName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PayeeNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PayeeName
        {
            get
            {
                if (this.PayeeNameValueSpecified)
                {
                    return this.PayeeNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PayeeNameValue = value.GetValueOrDefault();
                this.PayeeNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PayeeState", Order=40, Form=XmlSchemaForm.Unqualified)]
        public bool PayeeStateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PayeeState property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PayeeStateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PayeeState
        {
            get
            {
                if (this.PayeeStateValueSpecified)
                {
                    return this.PayeeStateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PayeeStateValue = value.GetValueOrDefault();
                this.PayeeStateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PayeeStreet", Order=41, Form=XmlSchemaForm.Unqualified)]
        public bool PayeeStreetValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PayeeStreet property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PayeeStreetValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PayeeStreet
        {
            get
            {
                if (this.PayeeStreetValueSpecified)
                {
                    return this.PayeeStreetValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PayeeStreetValue = value.GetValueOrDefault();
                this.PayeeStreetValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PayeeZipCode", Order=42, Form=XmlSchemaForm.Unqualified)]
        public bool PayeeZipCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PayeeZipCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PayeeZipCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PayeeZipCode
        {
            get
            {
                if (this.PayeeZipCodeValueSpecified)
                {
                    return this.PayeeZipCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PayeeZipCodeValue = value.GetValueOrDefault();
                this.PayeeZipCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PostAmount", Order=43, Form=XmlSchemaForm.Unqualified)]
        public bool PostAmountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PostAmount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PostAmountValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PostAmount
        {
            get
            {
                if (this.PostAmountValueSpecified)
                {
                    return this.PostAmountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PostAmountValue = value.GetValueOrDefault();
                this.PostAmountValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PostFreq", Order=44, Form=XmlSchemaForm.Unqualified)]
        public bool PostFreqValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PostFreq property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PostFreqValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PostFreq
        {
            get
            {
                if (this.PostFreqValueSpecified)
                {
                    return this.PostFreqValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PostFreqValue = value.GetValueOrDefault();
                this.PostFreqValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PreNoteSentDate", Order=45, Form=XmlSchemaForm.Unqualified)]
        public bool PreNoteSentDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PreNoteSentDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PreNoteSentDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PreNoteSentDate
        {
            get
            {
                if (this.PreNoteSentDateValueSpecified)
                {
                    return this.PreNoteSentDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PreNoteSentDateValue = value.GetValueOrDefault();
                this.PreNoteSentDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("RecordChangeDate", Order=46, Form=XmlSchemaForm.Unqualified)]
        public bool RecordChangeDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RecordChangeDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool RecordChangeDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> RecordChangeDate
        {
            get
            {
                if (this.RecordChangeDateValueSpecified)
                {
                    return this.RecordChangeDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RecordChangeDateValue = value.GetValueOrDefault();
                this.RecordChangeDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Reference", Order=47, Form=XmlSchemaForm.Unqualified)]
        public bool ReferenceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Reference property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ReferenceValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Reference
        {
            get
            {
                if (this.ReferenceValueSpecified)
                {
                    return this.ReferenceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ReferenceValue = value.GetValueOrDefault();
                this.ReferenceValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Reference2", Order=48, Form=XmlSchemaForm.Unqualified)]
        public bool Reference2Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Reference2 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool Reference2ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Reference2
        {
            get
            {
                if (this.Reference2ValueSpecified)
                {
                    return this.Reference2Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.Reference2Value = value.GetValueOrDefault();
                this.Reference2ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("RegDCode", Order=49, Form=XmlSchemaForm.Unqualified)]
        public bool RegDCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RegDCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool RegDCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> RegDCode
        {
            get
            {
                if (this.RegDCodeValueSpecified)
                {
                    return this.RegDCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RegDCodeValue = value.GetValueOrDefault();
                this.RegDCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SpecificAmount", Order=50, Form=XmlSchemaForm.Unqualified)]
        public bool SpecificAmountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SpecificAmount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SpecificAmountValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SpecificAmount
        {
            get
            {
                if (this.SpecificAmountValueSpecified)
                {
                    return this.SpecificAmountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SpecificAmountValue = value.GetValueOrDefault();
                this.SpecificAmountValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("StandardAmount", Order=51, Form=XmlSchemaForm.Unqualified)]
        public bool StandardAmountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StandardAmount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool StandardAmountValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> StandardAmount
        {
            get
            {
                if (this.StandardAmountValueSpecified)
                {
                    return this.StandardAmountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.StandardAmountValue = value.GetValueOrDefault();
                this.StandardAmountValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("StateWithholding", Order=52, Form=XmlSchemaForm.Unqualified)]
        public bool StateWithholdingValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StateWithholding property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool StateWithholdingValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> StateWithholding
        {
            get
            {
                if (this.StateWithholdingValueSpecified)
                {
                    return this.StateWithholdingValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.StateWithholdingValue = value.GetValueOrDefault();
                this.StateWithholdingValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Status", Order=53, Form=XmlSchemaForm.Unqualified)]
        public bool StatusValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Status property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool StatusValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Status
        {
            get
            {
                if (this.StatusValueSpecified)
                {
                    return this.StatusValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.StatusValue = value.GetValueOrDefault();
                this.StatusValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Type", Order=54, Form=XmlSchemaForm.Unqualified)]
        public bool TypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Type property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Type
        {
            get
            {
                if (this.TypeValueSpecified)
                {
                    return this.TypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TypeValue = value.GetValueOrDefault();
                this.TypeValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("Version_1", Order=55, Form=XmlSchemaForm.Unqualified)]
        public AccountService.VersionType Version1 { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<XmlElement> _any;
        
        [XmlAnyElementAttribute(Order=56)]
        public Collection<XmlElement> Any
        {
            get
            {
                return _any;
            }
            set
            {
                _any = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return ((this.Any != null) 
                            && (this.Any.Count != 0));
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="EftFields" /> class.</para>
        /// </summary>
        public EftFields()
        {
            this._any = new Collection<XmlElement>();
        }
    }
}
