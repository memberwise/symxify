//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 2.1.1182.0 using the following command:
// xscgen C:\Users\tbuese\Desktop\Symxchange\AccountService/*.xsd --sf --un --uc --order --cn -0 --collectionSettersMode=Public -o C:\Users\tbuese\Desktop\Symxchange\AccountService\generated-output -n AccountService
namespace AccountService
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.Diagnostics;
    using System.Xml;
    using System.Xml.Schema;
    using System.Xml.Serialization;
    
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1182.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("ExternalLoanFields", Namespace="http://www.symxchange.generated.symitar.com/crud/account/dto/retrieve")]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    [XmlRootAttribute("ExternalLoanFields", Namespace="http://www.symxchange.generated.symitar.com/crud/account/dto/retrieve")]
    public partial class ExternalLoanFields
    {
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AccountNumber", Order=0, Form=XmlSchemaForm.Unqualified)]
        public bool AccountNumberValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AccountNumber property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AccountNumberValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AccountNumber
        {
            get
            {
                if (this.AccountNumberValueSpecified)
                {
                    return this.AccountNumberValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AccountNumberValue = value.GetValueOrDefault();
                this.AccountNumberValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ActivityDate", Order=1, Form=XmlSchemaForm.Unqualified)]
        public bool ActivityDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ActivityDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ActivityDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ActivityDate
        {
            get
            {
                if (this.ActivityDateValueSpecified)
                {
                    return this.ActivityDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ActivityDateValue = value.GetValueOrDefault();
                this.ActivityDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Advance", Order=2, Form=XmlSchemaForm.Unqualified)]
        public bool AdvanceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Advance property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AdvanceValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Advance
        {
            get
            {
                if (this.AdvanceValueSpecified)
                {
                    return this.AdvanceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AdvanceValue = value.GetValueOrDefault();
                this.AdvanceValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AvailCredit", Order=3, Form=XmlSchemaForm.Unqualified)]
        public bool AvailCreditValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AvailCredit property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AvailCreditValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AvailCredit
        {
            get
            {
                if (this.AvailCreditValueSpecified)
                {
                    return this.AvailCreditValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AvailCreditValue = value.GetValueOrDefault();
                this.AvailCreditValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AvailableCashAdvance", Order=4, Form=XmlSchemaForm.Unqualified)]
        public bool AvailableCashAdvanceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AvailableCashAdvance property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AvailableCashAdvanceValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AvailableCashAdvance
        {
            get
            {
                if (this.AvailableCashAdvanceValueSpecified)
                {
                    return this.AvailableCashAdvanceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AvailableCashAdvanceValue = value.GetValueOrDefault();
                this.AvailableCashAdvanceValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Balance", Order=5, Form=XmlSchemaForm.Unqualified)]
        public bool BalanceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Balance property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BalanceValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Balance
        {
            get
            {
                if (this.BalanceValueSpecified)
                {
                    return this.BalanceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BalanceValue = value.GetValueOrDefault();
                this.BalanceValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CashAdvanceLimit", Order=6, Form=XmlSchemaForm.Unqualified)]
        public bool CashAdvanceLimitValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CashAdvanceLimit property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CashAdvanceLimitValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CashAdvanceLimit
        {
            get
            {
                if (this.CashAdvanceLimitValueSpecified)
                {
                    return this.CashAdvanceLimitValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CashAdvanceLimitValue = value.GetValueOrDefault();
                this.CashAdvanceLimitValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CloseDate", Order=7, Form=XmlSchemaForm.Unqualified)]
        public bool CloseDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CloseDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CloseDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CloseDate
        {
            get
            {
                if (this.CloseDateValueSpecified)
                {
                    return this.CloseDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CloseDateValue = value.GetValueOrDefault();
                this.CloseDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditLimit", Order=8, Form=XmlSchemaForm.Unqualified)]
        public bool CreditLimitValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditLimit property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditLimitValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CreditLimit
        {
            get
            {
                if (this.CreditLimitValueSpecified)
                {
                    return this.CreditLimitValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditLimitValue = value.GetValueOrDefault();
                this.CreditLimitValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Description", Order=9, Form=XmlSchemaForm.Unqualified)]
        public bool DescriptionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Description property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DescriptionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Description
        {
            get
            {
                if (this.DescriptionValueSpecified)
                {
                    return this.DescriptionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DescriptionValue = value.GetValueOrDefault();
                this.DescriptionValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DueDate", Order=10, Form=XmlSchemaForm.Unqualified)]
        public bool DueDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DueDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DueDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DueDate
        {
            get
            {
                if (this.DueDateValueSpecified)
                {
                    return this.DueDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DueDateValue = value.GetValueOrDefault();
                this.DueDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("EscrowPayment", Order=11, Form=XmlSchemaForm.Unqualified)]
        public bool EscrowPaymentValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EscrowPayment property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool EscrowPaymentValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> EscrowPayment
        {
            get
            {
                if (this.EscrowPaymentValueSpecified)
                {
                    return this.EscrowPaymentValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EscrowPaymentValue = value.GetValueOrDefault();
                this.EscrowPaymentValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ImpoundPayment", Order=12, Form=XmlSchemaForm.Unqualified)]
        public bool ImpoundPaymentValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ImpoundPayment property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ImpoundPaymentValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ImpoundPayment
        {
            get
            {
                if (this.ImpoundPaymentValueSpecified)
                {
                    return this.ImpoundPaymentValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ImpoundPaymentValue = value.GetValueOrDefault();
                this.ImpoundPaymentValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LastAdvDate", Order=13, Form=XmlSchemaForm.Unqualified)]
        public bool LastAdvDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LastAdvDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LastAdvDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LastAdvDate
        {
            get
            {
                if (this.LastAdvDateValueSpecified)
                {
                    return this.LastAdvDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LastAdvDateValue = value.GetValueOrDefault();
                this.LastAdvDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LastFmDate", Order=14, Form=XmlSchemaForm.Unqualified)]
        public bool LastFmDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LastFmDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LastFmDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LastFmDate
        {
            get
            {
                if (this.LastFmDateValueSpecified)
                {
                    return this.LastFmDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LastFmDateValue = value.GetValueOrDefault();
                this.LastFmDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LastTranDate", Order=15, Form=XmlSchemaForm.Unqualified)]
        public bool LastTranDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LastTranDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LastTranDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LastTranDate
        {
            get
            {
                if (this.LastTranDateValueSpecified)
                {
                    return this.LastTranDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LastTranDateValue = value.GetValueOrDefault();
                this.LastTranDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LastUpdateDate", Order=16, Form=XmlSchemaForm.Unqualified)]
        public bool LastUpdateDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LastUpdateDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LastUpdateDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LastUpdateDate
        {
            get
            {
                if (this.LastUpdateDateValueSpecified)
                {
                    return this.LastUpdateDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LastUpdateDateValue = value.GetValueOrDefault();
                this.LastUpdateDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LateChargeDue", Order=17, Form=XmlSchemaForm.Unqualified)]
        public bool LateChargeDueValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LateChargeDue property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LateChargeDueValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LateChargeDue
        {
            get
            {
                if (this.LateChargeDueValueSpecified)
                {
                    return this.LateChargeDueValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LateChargeDueValue = value.GetValueOrDefault();
                this.LateChargeDueValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Locator", Order=18, Form=XmlSchemaForm.Unqualified)]
        public bool LocatorValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Locator property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LocatorValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Locator
        {
            get
            {
                if (this.LocatorValueSpecified)
                {
                    return this.LocatorValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LocatorValue = value.GetValueOrDefault();
                this.LocatorValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("NrtAvailCredit", Order=19, Form=XmlSchemaForm.Unqualified)]
        public bool NrtAvailCreditValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NrtAvailCredit property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool NrtAvailCreditValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> NrtAvailCredit
        {
            get
            {
                if (this.NrtAvailCreditValueSpecified)
                {
                    return this.NrtAvailCreditValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NrtAvailCreditValue = value.GetValueOrDefault();
                this.NrtAvailCreditValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("NrtAvailableCashAdvance", Order=20, Form=XmlSchemaForm.Unqualified)]
        public bool NrtAvailableCashAdvanceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NrtAvailableCashAdvance property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool NrtAvailableCashAdvanceValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> NrtAvailableCashAdvance
        {
            get
            {
                if (this.NrtAvailableCashAdvanceValueSpecified)
                {
                    return this.NrtAvailableCashAdvanceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NrtAvailableCashAdvanceValue = value.GetValueOrDefault();
                this.NrtAvailableCashAdvanceValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("NrtBalance", Order=21, Form=XmlSchemaForm.Unqualified)]
        public bool NrtBalanceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NrtBalance property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool NrtBalanceValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> NrtBalance
        {
            get
            {
                if (this.NrtBalanceValueSpecified)
                {
                    return this.NrtBalanceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NrtBalanceValue = value.GetValueOrDefault();
                this.NrtBalanceValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("NrtCashAdvanceLimit", Order=22, Form=XmlSchemaForm.Unqualified)]
        public bool NrtCashAdvanceLimitValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NrtCashAdvanceLimit property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool NrtCashAdvanceLimitValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> NrtCashAdvanceLimit
        {
            get
            {
                if (this.NrtCashAdvanceLimitValueSpecified)
                {
                    return this.NrtCashAdvanceLimitValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NrtCashAdvanceLimitValue = value.GetValueOrDefault();
                this.NrtCashAdvanceLimitValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("NrtCloseDate", Order=23, Form=XmlSchemaForm.Unqualified)]
        public bool NrtCloseDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NrtCloseDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool NrtCloseDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> NrtCloseDate
        {
            get
            {
                if (this.NrtCloseDateValueSpecified)
                {
                    return this.NrtCloseDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NrtCloseDateValue = value.GetValueOrDefault();
                this.NrtCloseDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("NrtCreditLimit", Order=24, Form=XmlSchemaForm.Unqualified)]
        public bool NrtCreditLimitValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NrtCreditLimit property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool NrtCreditLimitValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> NrtCreditLimit
        {
            get
            {
                if (this.NrtCreditLimitValueSpecified)
                {
                    return this.NrtCreditLimitValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NrtCreditLimitValue = value.GetValueOrDefault();
                this.NrtCreditLimitValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("NrtDueDate", Order=25, Form=XmlSchemaForm.Unqualified)]
        public bool NrtDueDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NrtDueDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool NrtDueDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> NrtDueDate
        {
            get
            {
                if (this.NrtDueDateValueSpecified)
                {
                    return this.NrtDueDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NrtDueDateValue = value.GetValueOrDefault();
                this.NrtDueDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("NrtEscrowPayment", Order=26, Form=XmlSchemaForm.Unqualified)]
        public bool NrtEscrowPaymentValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NrtEscrowPayment property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool NrtEscrowPaymentValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> NrtEscrowPayment
        {
            get
            {
                if (this.NrtEscrowPaymentValueSpecified)
                {
                    return this.NrtEscrowPaymentValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NrtEscrowPaymentValue = value.GetValueOrDefault();
                this.NrtEscrowPaymentValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("NrtImpoundPayment", Order=27, Form=XmlSchemaForm.Unqualified)]
        public bool NrtImpoundPaymentValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NrtImpoundPayment property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool NrtImpoundPaymentValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> NrtImpoundPayment
        {
            get
            {
                if (this.NrtImpoundPaymentValueSpecified)
                {
                    return this.NrtImpoundPaymentValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NrtImpoundPaymentValue = value.GetValueOrDefault();
                this.NrtImpoundPaymentValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("NrtLastAdvDate", Order=28, Form=XmlSchemaForm.Unqualified)]
        public bool NrtLastAdvDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NrtLastAdvDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool NrtLastAdvDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> NrtLastAdvDate
        {
            get
            {
                if (this.NrtLastAdvDateValueSpecified)
                {
                    return this.NrtLastAdvDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NrtLastAdvDateValue = value.GetValueOrDefault();
                this.NrtLastAdvDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("NrtLateChargeDue", Order=29, Form=XmlSchemaForm.Unqualified)]
        public bool NrtLateChargeDueValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NrtLateChargeDue property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool NrtLateChargeDueValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> NrtLateChargeDue
        {
            get
            {
                if (this.NrtLateChargeDueValueSpecified)
                {
                    return this.NrtLateChargeDueValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NrtLateChargeDueValue = value.GetValueOrDefault();
                this.NrtLateChargeDueValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("NrtPaymentDue", Order=30, Form=XmlSchemaForm.Unqualified)]
        public bool NrtPaymentDueValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NrtPaymentDue property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool NrtPaymentDueValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> NrtPaymentDue
        {
            get
            {
                if (this.NrtPaymentDueValueSpecified)
                {
                    return this.NrtPaymentDueValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NrtPaymentDueValue = value.GetValueOrDefault();
                this.NrtPaymentDueValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("NrtPrincIntPayment", Order=31, Form=XmlSchemaForm.Unqualified)]
        public bool NrtPrincIntPaymentValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NrtPrincIntPayment property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool NrtPrincIntPaymentValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> NrtPrincIntPayment
        {
            get
            {
                if (this.NrtPrincIntPaymentValueSpecified)
                {
                    return this.NrtPrincIntPaymentValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NrtPrincIntPaymentValue = value.GetValueOrDefault();
                this.NrtPrincIntPaymentValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("NrtStatementDate", Order=32, Form=XmlSchemaForm.Unqualified)]
        public bool NrtStatementDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NrtStatementDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool NrtStatementDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> NrtStatementDate
        {
            get
            {
                if (this.NrtStatementDateValueSpecified)
                {
                    return this.NrtStatementDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NrtStatementDateValue = value.GetValueOrDefault();
                this.NrtStatementDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("NrtStatementPrevDate", Order=33, Form=XmlSchemaForm.Unqualified)]
        public bool NrtStatementPrevDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NrtStatementPrevDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool NrtStatementPrevDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> NrtStatementPrevDate
        {
            get
            {
                if (this.NrtStatementPrevDateValueSpecified)
                {
                    return this.NrtStatementPrevDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NrtStatementPrevDateValue = value.GetValueOrDefault();
                this.NrtStatementPrevDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PaymentDue", Order=34, Form=XmlSchemaForm.Unqualified)]
        public bool PaymentDueValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PaymentDue property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PaymentDueValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PaymentDue
        {
            get
            {
                if (this.PaymentDueValueSpecified)
                {
                    return this.PaymentDueValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PaymentDueValue = value.GetValueOrDefault();
                this.PaymentDueValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrincIntPayment", Order=35, Form=XmlSchemaForm.Unqualified)]
        public bool PrincIntPaymentValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrincIntPayment property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrincIntPaymentValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrincIntPayment
        {
            get
            {
                if (this.PrincIntPaymentValueSpecified)
                {
                    return this.PrincIntPaymentValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrincIntPaymentValue = value.GetValueOrDefault();
                this.PrincIntPaymentValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("RecordChangeDate", Order=36, Form=XmlSchemaForm.Unqualified)]
        public bool RecordChangeDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RecordChangeDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool RecordChangeDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> RecordChangeDate
        {
            get
            {
                if (this.RecordChangeDateValueSpecified)
                {
                    return this.RecordChangeDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RecordChangeDateValue = value.GetValueOrDefault();
                this.RecordChangeDateValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _service;
        
        [XmlElementAttribute("Service", Order=37, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> Service
        {
            get
            {
                return _service;
            }
            set
            {
                _service = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Service collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool ServiceSpecified
        {
            get
            {
                return ((this.Service != null) 
                            && (this.Service.Count != 0));
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ExternalLoanFields" /> class.</para>
        /// </summary>
        public ExternalLoanFields()
        {
            this._service = new Collection<short>();
            this._warningCode = new Collection<short>();
            this._warningExpiration = new Collection<short>();
            this._any = new Collection<XmlElement>();
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("StatementDate", Order=38, Form=XmlSchemaForm.Unqualified)]
        public bool StatementDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StatementDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool StatementDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> StatementDate
        {
            get
            {
                if (this.StatementDateValueSpecified)
                {
                    return this.StatementDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.StatementDateValue = value.GetValueOrDefault();
                this.StatementDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("StatementGroup", Order=39, Form=XmlSchemaForm.Unqualified)]
        public bool StatementGroupValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StatementGroup property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool StatementGroupValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> StatementGroup
        {
            get
            {
                if (this.StatementGroupValueSpecified)
                {
                    return this.StatementGroupValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.StatementGroupValue = value.GetValueOrDefault();
                this.StatementGroupValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("StatementMailCode", Order=40, Form=XmlSchemaForm.Unqualified)]
        public bool StatementMailCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StatementMailCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool StatementMailCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> StatementMailCode
        {
            get
            {
                if (this.StatementMailCodeValueSpecified)
                {
                    return this.StatementMailCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.StatementMailCodeValue = value.GetValueOrDefault();
                this.StatementMailCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("StatementPrevDate", Order=41, Form=XmlSchemaForm.Unqualified)]
        public bool StatementPrevDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StatementPrevDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool StatementPrevDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> StatementPrevDate
        {
            get
            {
                if (this.StatementPrevDateValueSpecified)
                {
                    return this.StatementPrevDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.StatementPrevDateValue = value.GetValueOrDefault();
                this.StatementPrevDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Status", Order=42, Form=XmlSchemaForm.Unqualified)]
        public bool StatusValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Status property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool StatusValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Status
        {
            get
            {
                if (this.StatusValueSpecified)
                {
                    return this.StatusValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.StatusValue = value.GetValueOrDefault();
                this.StatusValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Type", Order=43, Form=XmlSchemaForm.Unqualified)]
        public bool TypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Type property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Type
        {
            get
            {
                if (this.TypeValueSpecified)
                {
                    return this.TypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TypeValue = value.GetValueOrDefault();
                this.TypeValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _warningCode;
        
        [XmlElementAttribute("WarningCode", Order=44, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> WarningCode
        {
            get
            {
                return _warningCode;
            }
            set
            {
                _warningCode = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the WarningCode collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool WarningCodeSpecified
        {
            get
            {
                return ((this.WarningCode != null) 
                            && (this.WarningCode.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _warningExpiration;
        
        [XmlElementAttribute("WarningExpiration", Order=45, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> WarningExpiration
        {
            get
            {
                return _warningExpiration;
            }
            set
            {
                _warningExpiration = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the WarningExpiration collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool WarningExpirationSpecified
        {
            get
            {
                return ((this.WarningExpiration != null) 
                            && (this.WarningExpiration.Count != 0));
            }
        }
        
        [XmlElementAttribute("Version_1", Order=46, Form=XmlSchemaForm.Unqualified)]
        public AccountService.VersionType Version1 { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<XmlElement> _any;
        
        [XmlAnyElementAttribute(Order=47)]
        public Collection<XmlElement> Any
        {
            get
            {
                return _any;
            }
            set
            {
                _any = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return ((this.Any != null) 
                            && (this.Any.Count != 0));
            }
        }
    }
}
