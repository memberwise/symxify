//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 2.1.1182.0 using the following command:
// xscgen C:\Users\tbuese\Desktop\Symxchange\GeneralLedgerService/*.xsd --sf --un --uc --order --cn -0 --collectionSettersMode=Public -o C:\Users\tbuese\Desktop\Symxchange\GeneralLedgerService\generated-output -n GeneralLedgerService
namespace GeneralLedgerService
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.Diagnostics;
    using System.Xml;
    using System.Xml.Schema;
    using System.Xml.Serialization;
    
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1182.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("GlSubaccountFields", Namespace="http://www.symxchange.generated.symitar.com/crud/generalledger/dto/retrieve")]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    [XmlRootAttribute("GlSubaccountFields", Namespace="http://www.symxchange.generated.symitar.com/crud/generalledger/dto/retrieve")]
    public partial class GlSubaccountFields
    {
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AccrualAmount", Order=0, Form=XmlSchemaForm.Unqualified)]
        public bool AccrualAmountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AccrualAmount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AccrualAmountValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AccrualAmount
        {
            get
            {
                if (this.AccrualAmountValueSpecified)
                {
                    return this.AccrualAmountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AccrualAmountValue = value.GetValueOrDefault();
                this.AccrualAmountValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AccrualEffectDate", Order=1, Form=XmlSchemaForm.Unqualified)]
        public bool AccrualEffectDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AccrualEffectDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AccrualEffectDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AccrualEffectDate
        {
            get
            {
                if (this.AccrualEffectDateValueSpecified)
                {
                    return this.AccrualEffectDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AccrualEffectDateValue = value.GetValueOrDefault();
                this.AccrualEffectDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AccrualPostDate", Order=2, Form=XmlSchemaForm.Unqualified)]
        public bool AccrualPostDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AccrualPostDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AccrualPostDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AccrualPostDate
        {
            get
            {
                if (this.AccrualPostDateValueSpecified)
                {
                    return this.AccrualPostDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AccrualPostDateValue = value.GetValueOrDefault();
                this.AccrualPostDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AccrualPostThruDate", Order=3, Form=XmlSchemaForm.Unqualified)]
        public bool AccrualPostThruDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AccrualPostThruDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AccrualPostThruDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AccrualPostThruDate
        {
            get
            {
                if (this.AccrualPostThruDateValueSpecified)
                {
                    return this.AccrualPostThruDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AccrualPostThruDateValue = value.GetValueOrDefault();
                this.AccrualPostThruDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AccrualStartDate", Order=4, Form=XmlSchemaForm.Unqualified)]
        public bool AccrualStartDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AccrualStartDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AccrualStartDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AccrualStartDate
        {
            get
            {
                if (this.AccrualStartDateValueSpecified)
                {
                    return this.AccrualStartDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AccrualStartDateValue = value.GetValueOrDefault();
                this.AccrualStartDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AccruedAmount", Order=5, Form=XmlSchemaForm.Unqualified)]
        public bool AccruedAmountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AccruedAmount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AccruedAmountValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AccruedAmount
        {
            get
            {
                if (this.AccruedAmountValueSpecified)
                {
                    return this.AccruedAmountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AccruedAmountValue = value.GetValueOrDefault();
                this.AccruedAmountValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AccruedCount", Order=6, Form=XmlSchemaForm.Unqualified)]
        public bool AccruedCountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AccruedCount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AccruedCountValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AccruedCount
        {
            get
            {
                if (this.AccruedCountValueSpecified)
                {
                    return this.AccruedCountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AccruedCountValue = value.GetValueOrDefault();
                this.AccruedCountValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AcquisitionDate", Order=7, Form=XmlSchemaForm.Unqualified)]
        public bool AcquisitionDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AcquisitionDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AcquisitionDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AcquisitionDate
        {
            get
            {
                if (this.AcquisitionDateValueSpecified)
                {
                    return this.AcquisitionDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AcquisitionDateValue = value.GetValueOrDefault();
                this.AcquisitionDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CommentOne", Order=8, Form=XmlSchemaForm.Unqualified)]
        public bool CommentOneValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CommentOne property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CommentOneValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CommentOne
        {
            get
            {
                if (this.CommentOneValueSpecified)
                {
                    return this.CommentOneValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CommentOneValue = value.GetValueOrDefault();
                this.CommentOneValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CommentTwo", Order=9, Form=XmlSchemaForm.Unqualified)]
        public bool CommentTwoValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CommentTwo property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CommentTwoValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CommentTwo
        {
            get
            {
                if (this.CommentTwoValueSpecified)
                {
                    return this.CommentTwoValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CommentTwoValue = value.GetValueOrDefault();
                this.CommentTwoValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CurrentValue", Order=10, Form=XmlSchemaForm.Unqualified)]
        public bool CurrentValueValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CurrentValue property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CurrentValueValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CurrentValue
        {
            get
            {
                if (this.CurrentValueValueSpecified)
                {
                    return this.CurrentValueValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CurrentValueValue = value.GetValueOrDefault();
                this.CurrentValueValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Disposition", Order=11, Form=XmlSchemaForm.Unqualified)]
        public bool DispositionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Disposition property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DispositionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Disposition
        {
            get
            {
                if (this.DispositionValueSpecified)
                {
                    return this.DispositionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DispositionValue = value.GetValueOrDefault();
                this.DispositionValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("FirstMonthMethod", Order=12, Form=XmlSchemaForm.Unqualified)]
        public bool FirstMonthMethodValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FirstMonthMethod property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FirstMonthMethodValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> FirstMonthMethod
        {
            get
            {
                if (this.FirstMonthMethodValueSpecified)
                {
                    return this.FirstMonthMethodValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FirstMonthMethodValue = value.GetValueOrDefault();
                this.FirstMonthMethodValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("GlOffset", Order=13, Form=XmlSchemaForm.Unqualified)]
        public bool GlOffsetValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GlOffset property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool GlOffsetValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> GlOffset
        {
            get
            {
                if (this.GlOffsetValueSpecified)
                {
                    return this.GlOffsetValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.GlOffsetValue = value.GetValueOrDefault();
                this.GlOffsetValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Id", Order=14, Form=XmlSchemaForm.Unqualified)]
        public bool IdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Id property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Id
        {
            get
            {
                if (this.IdValueSpecified)
                {
                    return this.IdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IdValue = value.GetValueOrDefault();
                this.IdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InsMaturityDate", Order=15, Form=XmlSchemaForm.Unqualified)]
        public bool InsMaturityDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InsMaturityDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InsMaturityDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InsMaturityDate
        {
            get
            {
                if (this.InsMaturityDateValueSpecified)
                {
                    return this.InsMaturityDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InsMaturityDateValue = value.GetValueOrDefault();
                this.InsMaturityDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InsTypeDescription", Order=16, Form=XmlSchemaForm.Unqualified)]
        public bool InsTypeDescriptionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InsTypeDescription property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InsTypeDescriptionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InsTypeDescription
        {
            get
            {
                if (this.InsTypeDescriptionValueSpecified)
                {
                    return this.InsTypeDescriptionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InsTypeDescriptionValue = value.GetValueOrDefault();
                this.InsTypeDescriptionValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InsuranceType", Order=17, Form=XmlSchemaForm.Unqualified)]
        public bool InsuranceTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InsuranceType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InsuranceTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InsuranceType
        {
            get
            {
                if (this.InsuranceTypeValueSpecified)
                {
                    return this.InsuranceTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InsuranceTypeValue = value.GetValueOrDefault();
                this.InsuranceTypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LastFmDate", Order=18, Form=XmlSchemaForm.Unqualified)]
        public bool LastFmDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LastFmDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LastFmDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LastFmDate
        {
            get
            {
                if (this.LastFmDateValueSpecified)
                {
                    return this.LastFmDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LastFmDateValue = value.GetValueOrDefault();
                this.LastFmDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LimitValue", Order=19, Form=XmlSchemaForm.Unqualified)]
        public bool LimitValueValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LimitValue property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LimitValueValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LimitValue
        {
            get
            {
                if (this.LimitValueValueSpecified)
                {
                    return this.LimitValueValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LimitValueValue = value.GetValueOrDefault();
                this.LimitValueValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MaturityDate", Order=20, Form=XmlSchemaForm.Unqualified)]
        public bool MaturityDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MaturityDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MaturityDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MaturityDate
        {
            get
            {
                if (this.MaturityDateValueSpecified)
                {
                    return this.MaturityDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MaturityDateValue = value.GetValueOrDefault();
                this.MaturityDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Method", Order=21, Form=XmlSchemaForm.Unqualified)]
        public bool MethodValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Method property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MethodValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Method
        {
            get
            {
                if (this.MethodValueSpecified)
                {
                    return this.MethodValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MethodValue = value.GetValueOrDefault();
                this.MethodValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Name", Order=22, Form=XmlSchemaForm.Unqualified)]
        public bool NameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Name property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool NameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Name
        {
            get
            {
                if (this.NameValueSpecified)
                {
                    return this.NameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NameValue = value.GetValueOrDefault();
                this.NameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OriginalValue", Order=23, Form=XmlSchemaForm.Unqualified)]
        public bool OriginalValueValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OriginalValue property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OriginalValueValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> OriginalValue
        {
            get
            {
                if (this.OriginalValueValueSpecified)
                {
                    return this.OriginalValueValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OriginalValueValue = value.GetValueOrDefault();
                this.OriginalValueValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Process", Order=24, Form=XmlSchemaForm.Unqualified)]
        public bool ProcessValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Process property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ProcessValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Process
        {
            get
            {
                if (this.ProcessValueSpecified)
                {
                    return this.ProcessValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ProcessValue = value.GetValueOrDefault();
                this.ProcessValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Rate", Order=25, Form=XmlSchemaForm.Unqualified)]
        public bool RateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Rate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool RateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Rate
        {
            get
            {
                if (this.RateValueSpecified)
                {
                    return this.RateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RateValue = value.GetValueOrDefault();
                this.RateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("RateBase", Order=26, Form=XmlSchemaForm.Unqualified)]
        public bool RateBaseValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RateBase property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool RateBaseValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> RateBase
        {
            get
            {
                if (this.RateBaseValueSpecified)
                {
                    return this.RateBaseValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RateBaseValue = value.GetValueOrDefault();
                this.RateBaseValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("RecordChangeDate", Order=27, Form=XmlSchemaForm.Unqualified)]
        public bool RecordChangeDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RecordChangeDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool RecordChangeDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> RecordChangeDate
        {
            get
            {
                if (this.RecordChangeDateValueSpecified)
                {
                    return this.RecordChangeDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RecordChangeDateValue = value.GetValueOrDefault();
                this.RecordChangeDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SaleAmount", Order=28, Form=XmlSchemaForm.Unqualified)]
        public bool SaleAmountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SaleAmount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SaleAmountValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SaleAmount
        {
            get
            {
                if (this.SaleAmountValueSpecified)
                {
                    return this.SaleAmountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SaleAmountValue = value.GetValueOrDefault();
                this.SaleAmountValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SaleDate", Order=29, Form=XmlSchemaForm.Unqualified)]
        public bool SaleDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SaleDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SaleDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SaleDate
        {
            get
            {
                if (this.SaleDateValueSpecified)
                {
                    return this.SaleDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SaleDateValue = value.GetValueOrDefault();
                this.SaleDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TaxAmount", Order=30, Form=XmlSchemaForm.Unqualified)]
        public bool TaxAmountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TaxAmount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TaxAmountValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TaxAmount
        {
            get
            {
                if (this.TaxAmountValueSpecified)
                {
                    return this.TaxAmountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TaxAmountValue = value.GetValueOrDefault();
                this.TaxAmountValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TaxCategory", Order=31, Form=XmlSchemaForm.Unqualified)]
        public bool TaxCategoryValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TaxCategory property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TaxCategoryValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TaxCategory
        {
            get
            {
                if (this.TaxCategoryValueSpecified)
                {
                    return this.TaxCategoryValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TaxCategoryValue = value.GetValueOrDefault();
                this.TaxCategoryValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TaxDate", Order=32, Form=XmlSchemaForm.Unqualified)]
        public bool TaxDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TaxDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TaxDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TaxDate
        {
            get
            {
                if (this.TaxDateValueSpecified)
                {
                    return this.TaxDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TaxDateValue = value.GetValueOrDefault();
                this.TaxDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TaxDescription", Order=33, Form=XmlSchemaForm.Unqualified)]
        public bool TaxDescriptionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TaxDescription property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TaxDescriptionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TaxDescription
        {
            get
            {
                if (this.TaxDescriptionValueSpecified)
                {
                    return this.TaxDescriptionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TaxDescriptionValue = value.GetValueOrDefault();
                this.TaxDescriptionValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TaxLocation", Order=34, Form=XmlSchemaForm.Unqualified)]
        public bool TaxLocationValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TaxLocation property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TaxLocationValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TaxLocation
        {
            get
            {
                if (this.TaxLocationValueSpecified)
                {
                    return this.TaxLocationValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TaxLocationValue = value.GetValueOrDefault();
                this.TaxLocationValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TermFrequency", Order=35, Form=XmlSchemaForm.Unqualified)]
        public bool TermFrequencyValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TermFrequency property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TermFrequencyValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TermFrequency
        {
            get
            {
                if (this.TermFrequencyValueSpecified)
                {
                    return this.TermFrequencyValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TermFrequencyValue = value.GetValueOrDefault();
                this.TermFrequencyValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TermPeriod", Order=36, Form=XmlSchemaForm.Unqualified)]
        public bool TermPeriodValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TermPeriod property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TermPeriodValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TermPeriod
        {
            get
            {
                if (this.TermPeriodValueSpecified)
                {
                    return this.TermPeriodValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TermPeriodValue = value.GetValueOrDefault();
                this.TermPeriodValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Type", Order=37, Form=XmlSchemaForm.Unqualified)]
        public bool TypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Type property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Type
        {
            get
            {
                if (this.TypeValueSpecified)
                {
                    return this.TypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TypeValue = value.GetValueOrDefault();
                this.TypeValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("Version_1", Order=38, Form=XmlSchemaForm.Unqualified)]
        public GeneralLedgerService.VersionType Version1 { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<XmlElement> _any;
        
        [XmlAnyElementAttribute(Order=39)]
        public Collection<XmlElement> Any
        {
            get
            {
                return _any;
            }
            set
            {
                _any = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return ((this.Any != null) 
                            && (this.Any.Count != 0));
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="GlSubaccountFields" /> class.</para>
        /// </summary>
        public GlSubaccountFields()
        {
            this._any = new Collection<XmlElement>();
        }
    }
}
