//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 2.1.1182.0 using the following command:
// xscgen C:\Users\tbuese\Desktop\Symxchange\PoweronService/*.xsd --sf --un --uc --order --cn -0 --collectionSettersMode=Public -o C:\Users\tbuese\Desktop\Symxchange\PoweronService\generated-output -n PowerOnService
namespace PowerOnService
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.Diagnostics;
    using System.Xml;
    using System.Xml.Schema;
    using System.Xml.Serialization;
    
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1182.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("MCWDataParameters", Namespace="http://www.symxchange.generated.symitar.com/noncrud/poweron/dto")]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class McwDataParameters
    {
        
        [XmlIgnoreAttribute()]
        private Collection<McwNumData> _mcwNumData;
        
        [XmlElementAttribute("MCWNumData", Order=0, Form=XmlSchemaForm.Unqualified)]
        public Collection<McwNumData> McwNumData
        {
            get
            {
                return _mcwNumData;
            }
            set
            {
                _mcwNumData = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the McwNumData collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool McwNumDataSpecified
        {
            get
            {
                return ((this.McwNumData != null) 
                            && (this.McwNumData.Count != 0));
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="McwDataParameters" /> class.</para>
        /// </summary>
        public McwDataParameters()
        {
            this._mcwNumData = new Collection<McwNumData>();
            this._mcwMoneyData = new Collection<McwMoneyData>();
            this._mcwChrData = new Collection<McwChrData>();
            this._mcwRateData = new Collection<McwRateData>();
            this._mcwDateData = new Collection<McwDateData>();
            this._any = new Collection<XmlElement>();
        }
        
        [XmlIgnoreAttribute()]
        private Collection<McwMoneyData> _mcwMoneyData;
        
        [XmlElementAttribute("MCWMoneyData", Order=1, Form=XmlSchemaForm.Unqualified)]
        public Collection<McwMoneyData> McwMoneyData
        {
            get
            {
                return _mcwMoneyData;
            }
            set
            {
                _mcwMoneyData = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the McwMoneyData collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool McwMoneyDataSpecified
        {
            get
            {
                return ((this.McwMoneyData != null) 
                            && (this.McwMoneyData.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<McwChrData> _mcwChrData;
        
        [XmlElementAttribute("MCWChrData", Order=2, Form=XmlSchemaForm.Unqualified)]
        public Collection<McwChrData> McwChrData
        {
            get
            {
                return _mcwChrData;
            }
            set
            {
                _mcwChrData = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the McwChrData collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool McwChrDataSpecified
        {
            get
            {
                return ((this.McwChrData != null) 
                            && (this.McwChrData.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<McwRateData> _mcwRateData;
        
        [XmlElementAttribute("MCWRateData", Order=3, Form=XmlSchemaForm.Unqualified)]
        public Collection<McwRateData> McwRateData
        {
            get
            {
                return _mcwRateData;
            }
            set
            {
                _mcwRateData = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the McwRateData collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool McwRateDataSpecified
        {
            get
            {
                return ((this.McwRateData != null) 
                            && (this.McwRateData.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<McwDateData> _mcwDateData;
        
        [XmlElementAttribute("MCWDateData", Order=4, Form=XmlSchemaForm.Unqualified)]
        public Collection<McwDateData> McwDateData
        {
            get
            {
                return _mcwDateData;
            }
            set
            {
                _mcwDateData = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the McwDateData collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool McwDateDataSpecified
        {
            get
            {
                return ((this.McwDateData != null) 
                            && (this.McwDateData.Count != 0));
            }
        }
        
        [XmlElementAttribute("Version_1", Order=5, Form=XmlSchemaForm.Unqualified)]
        public PowerOnService.VersionType Version1 { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<XmlElement> _any;
        
        [XmlAnyElementAttribute(Order=6)]
        public Collection<XmlElement> Any
        {
            get
            {
                return _any;
            }
            set
            {
                _any = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return ((this.Any != null) 
                            && (this.Any.Count != 0));
            }
        }
    }
}
