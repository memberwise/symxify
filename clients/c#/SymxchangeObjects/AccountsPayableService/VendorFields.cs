//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 2.1.1182.0 using the following command:
// xscgen C:\Users\tbuese\Desktop\Symxchange\AccountsPayableService/*.xsd --sf --un --uc --order --cn -0 --collectionSettersMode=Public -o C:\Users\tbuese\Desktop\Symxchange\AccountsPayableService\generated-output -n AccountsPayableService
namespace AccountsPayableService
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.Diagnostics;
    using System.Xml;
    using System.Xml.Schema;
    using System.Xml.Serialization;
    
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1182.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("VendorFields", Namespace="http://www.symxchange.generated.symitar.com/crud/accountspayable/dto/retrieve")]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    [XmlRootAttribute("VendorFields", Namespace="http://www.symxchange.generated.symitar.com/crud/accountspayable/dto/retrieve")]
    public partial class VendorFields
    {
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AchGroupNumber", Order=0, Form=XmlSchemaForm.Unqualified)]
        public bool AchGroupNumberValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AchGroupNumber property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AchGroupNumberValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AchGroupNumber
        {
            get
            {
                if (this.AchGroupNumberValueSpecified)
                {
                    return this.AchGroupNumberValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AchGroupNumberValue = value.GetValueOrDefault();
                this.AchGroupNumberValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AddressType", Order=1, Form=XmlSchemaForm.Unqualified)]
        public bool AddressTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AddressType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AddressTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AddressType
        {
            get
            {
                if (this.AddressTypeValueSpecified)
                {
                    return this.AddressTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AddressTypeValue = value.GetValueOrDefault();
                this.AddressTypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AltEmail", Order=2, Form=XmlSchemaForm.Unqualified)]
        public bool AltEmailValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AltEmail property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AltEmailValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AltEmail
        {
            get
            {
                if (this.AltEmailValueSpecified)
                {
                    return this.AltEmailValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AltEmailValue = value.GetValueOrDefault();
                this.AltEmailValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("City", Order=3, Form=XmlSchemaForm.Unqualified)]
        public bool CityValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the City property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CityValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> City
        {
            get
            {
                if (this.CityValueSpecified)
                {
                    return this.CityValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CityValue = value.GetValueOrDefault();
                this.CityValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Comment1", Order=4, Form=XmlSchemaForm.Unqualified)]
        public bool Comment1Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Comment1 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool Comment1ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Comment1
        {
            get
            {
                if (this.Comment1ValueSpecified)
                {
                    return this.Comment1Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.Comment1Value = value.GetValueOrDefault();
                this.Comment1ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CompanyDisc", Order=5, Form=XmlSchemaForm.Unqualified)]
        public bool CompanyDiscValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CompanyDisc property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CompanyDiscValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CompanyDisc
        {
            get
            {
                if (this.CompanyDiscValueSpecified)
                {
                    return this.CompanyDiscValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CompanyDiscValue = value.GetValueOrDefault();
                this.CompanyDiscValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CompanyEntryDesc", Order=6, Form=XmlSchemaForm.Unqualified)]
        public bool CompanyEntryDescValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CompanyEntryDesc property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CompanyEntryDescValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CompanyEntryDesc
        {
            get
            {
                if (this.CompanyEntryDescValueSpecified)
                {
                    return this.CompanyEntryDescValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CompanyEntryDescValue = value.GetValueOrDefault();
                this.CompanyEntryDescValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Contact", Order=7, Form=XmlSchemaForm.Unqualified)]
        public bool ContactValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Contact property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ContactValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Contact
        {
            get
            {
                if (this.ContactValueSpecified)
                {
                    return this.ContactValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ContactValue = value.GetValueOrDefault();
                this.ContactValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Contact2", Order=8, Form=XmlSchemaForm.Unqualified)]
        public bool Contact2Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Contact2 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool Contact2ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Contact2
        {
            get
            {
                if (this.Contact2ValueSpecified)
                {
                    return this.Contact2Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.Contact2Value = value.GetValueOrDefault();
                this.Contact2ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Contact2Desc", Order=9, Form=XmlSchemaForm.Unqualified)]
        public bool Contact2DescValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Contact2Desc property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool Contact2DescValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Contact2Desc
        {
            get
            {
                if (this.Contact2DescValueSpecified)
                {
                    return this.Contact2DescValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.Contact2DescValue = value.GetValueOrDefault();
                this.Contact2DescValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Contact2Ext", Order=10, Form=XmlSchemaForm.Unqualified)]
        public bool Contact2ExtValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Contact2Ext property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool Contact2ExtValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Contact2Ext
        {
            get
            {
                if (this.Contact2ExtValueSpecified)
                {
                    return this.Contact2ExtValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.Contact2ExtValue = value.GetValueOrDefault();
                this.Contact2ExtValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Contact2Phone", Order=11, Form=XmlSchemaForm.Unqualified)]
        public bool Contact2PhoneValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Contact2Phone property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool Contact2PhoneValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Contact2Phone
        {
            get
            {
                if (this.Contact2PhoneValueSpecified)
                {
                    return this.Contact2PhoneValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.Contact2PhoneValue = value.GetValueOrDefault();
                this.Contact2PhoneValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ContactDesc", Order=12, Form=XmlSchemaForm.Unqualified)]
        public bool ContactDescValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ContactDesc property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ContactDescValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ContactDesc
        {
            get
            {
                if (this.ContactDescValueSpecified)
                {
                    return this.ContactDescValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ContactDescValue = value.GetValueOrDefault();
                this.ContactDescValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditLastYear", Order=13, Form=XmlSchemaForm.Unqualified)]
        public bool CreditLastYearValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditLastYear property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditLastYearValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CreditLastYear
        {
            get
            {
                if (this.CreditLastYearValueSpecified)
                {
                    return this.CreditLastYearValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditLastYearValue = value.GetValueOrDefault();
                this.CreditLastYearValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditYtd", Order=14, Form=XmlSchemaForm.Unqualified)]
        public bool CreditYtdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditYtd property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditYtdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CreditYtd
        {
            get
            {
                if (this.CreditYtdValueSpecified)
                {
                    return this.CreditYtdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditYtdValue = value.GetValueOrDefault();
                this.CreditYtdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CustomerId", Order=15, Form=XmlSchemaForm.Unqualified)]
        public bool CustomerIdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CustomerId property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CustomerIdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CustomerId
        {
            get
            {
                if (this.CustomerIdValueSpecified)
                {
                    return this.CustomerIdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CustomerIdValue = value.GetValueOrDefault();
                this.CustomerIdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DebitLastYear", Order=16, Form=XmlSchemaForm.Unqualified)]
        public bool DebitLastYearValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DebitLastYear property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DebitLastYearValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DebitLastYear
        {
            get
            {
                if (this.DebitLastYearValueSpecified)
                {
                    return this.DebitLastYearValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DebitLastYearValue = value.GetValueOrDefault();
                this.DebitLastYearValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DebitYtd", Order=17, Form=XmlSchemaForm.Unqualified)]
        public bool DebitYtdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DebitYtd property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DebitYtdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DebitYtd
        {
            get
            {
                if (this.DebitYtdValueSpecified)
                {
                    return this.DebitYtdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DebitYtdValue = value.GetValueOrDefault();
                this.DebitYtdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DfiAccount", Order=18, Form=XmlSchemaForm.Unqualified)]
        public bool DfiAccountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DfiAccount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DfiAccountValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DfiAccount
        {
            get
            {
                if (this.DfiAccountValueSpecified)
                {
                    return this.DfiAccountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DfiAccountValue = value.GetValueOrDefault();
                this.DfiAccountValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Email", Order=19, Form=XmlSchemaForm.Unqualified)]
        public bool EmailValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Email property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool EmailValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Email
        {
            get
            {
                if (this.EmailValueSpecified)
                {
                    return this.EmailValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EmailValue = value.GetValueOrDefault();
                this.EmailValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ExtraAddress", Order=20, Form=XmlSchemaForm.Unqualified)]
        public bool ExtraAddressValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ExtraAddress property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ExtraAddressValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ExtraAddress
        {
            get
            {
                if (this.ExtraAddressValueSpecified)
                {
                    return this.ExtraAddressValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ExtraAddressValue = value.GetValueOrDefault();
                this.ExtraAddressValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Fax", Order=21, Form=XmlSchemaForm.Unqualified)]
        public bool FaxValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Fax property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FaxValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Fax
        {
            get
            {
                if (this.FaxValueSpecified)
                {
                    return this.FaxValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FaxValue = value.GetValueOrDefault();
                this.FaxValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("FmLastPurgeDate", Order=22, Form=XmlSchemaForm.Unqualified)]
        public bool FmLastPurgeDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FmLastPurgeDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FmLastPurgeDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> FmLastPurgeDate
        {
            get
            {
                if (this.FmLastPurgeDateValueSpecified)
                {
                    return this.FmLastPurgeDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FmLastPurgeDateValue = value.GetValueOrDefault();
                this.FmLastPurgeDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("GlAcctsPay", Order=23, Form=XmlSchemaForm.Unqualified)]
        public bool GlAcctsPayValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GlAcctsPay property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool GlAcctsPayValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> GlAcctsPay
        {
            get
            {
                if (this.GlAcctsPayValueSpecified)
                {
                    return this.GlAcctsPayValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.GlAcctsPayValue = value.GetValueOrDefault();
                this.GlAcctsPayValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("GlDiscount", Order=24, Form=XmlSchemaForm.Unqualified)]
        public bool GlDiscountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GlDiscount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool GlDiscountValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> GlDiscount
        {
            get
            {
                if (this.GlDiscountValueSpecified)
                {
                    return this.GlDiscountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.GlDiscountValue = value.GetValueOrDefault();
                this.GlDiscountValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("GlExpense", Order=25, Form=XmlSchemaForm.Unqualified)]
        public bool GlExpenseValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GlExpense property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool GlExpenseValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> GlExpense
        {
            get
            {
                if (this.GlExpenseValueSpecified)
                {
                    return this.GlExpenseValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.GlExpenseValue = value.GetValueOrDefault();
                this.GlExpenseValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("GlNameAcctsPay", Order=26, Form=XmlSchemaForm.Unqualified)]
        public bool GlNameAcctsPayValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GlNameAcctsPay property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool GlNameAcctsPayValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> GlNameAcctsPay
        {
            get
            {
                if (this.GlNameAcctsPayValueSpecified)
                {
                    return this.GlNameAcctsPayValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.GlNameAcctsPayValue = value.GetValueOrDefault();
                this.GlNameAcctsPayValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("GlNameDiscount", Order=27, Form=XmlSchemaForm.Unqualified)]
        public bool GlNameDiscountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GlNameDiscount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool GlNameDiscountValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> GlNameDiscount
        {
            get
            {
                if (this.GlNameDiscountValueSpecified)
                {
                    return this.GlNameDiscountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.GlNameDiscountValue = value.GetValueOrDefault();
                this.GlNameDiscountValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("GlNameExpense", Order=28, Form=XmlSchemaForm.Unqualified)]
        public bool GlNameExpenseValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GlNameExpense property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool GlNameExpenseValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> GlNameExpense
        {
            get
            {
                if (this.GlNameExpenseValueSpecified)
                {
                    return this.GlNameExpenseValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.GlNameExpenseValue = value.GetValueOrDefault();
                this.GlNameExpenseValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IrsAmountCode", Order=29, Form=XmlSchemaForm.Unqualified)]
        public bool IrsAmountCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IrsAmountCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IrsAmountCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IrsAmountCode
        {
            get
            {
                if (this.IrsAmountCodeValueSpecified)
                {
                    return this.IrsAmountCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IrsAmountCodeValue = value.GetValueOrDefault();
                this.IrsAmountCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IrsCorrection", Order=30, Form=XmlSchemaForm.Unqualified)]
        public bool IrsCorrectionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IrsCorrection property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IrsCorrectionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IrsCorrection
        {
            get
            {
                if (this.IrsCorrectionValueSpecified)
                {
                    return this.IrsCorrectionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IrsCorrectionValue = value.GetValueOrDefault();
                this.IrsCorrectionValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IrsNameControl", Order=31, Form=XmlSchemaForm.Unqualified)]
        public bool IrsNameControlValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IrsNameControl property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IrsNameControlValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IrsNameControl
        {
            get
            {
                if (this.IrsNameControlValueSpecified)
                {
                    return this.IrsNameControlValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IrsNameControlValue = value.GetValueOrDefault();
                this.IrsNameControlValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IrsReporting", Order=32, Form=XmlSchemaForm.Unqualified)]
        public bool IrsReportingValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IrsReporting property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IrsReportingValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IrsReporting
        {
            get
            {
                if (this.IrsReportingValueSpecified)
                {
                    return this.IrsReportingValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IrsReportingValue = value.GetValueOrDefault();
                this.IrsReportingValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IrsReportingName", Order=33, Form=XmlSchemaForm.Unqualified)]
        public bool IrsReportingNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IrsReportingName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IrsReportingNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IrsReportingName
        {
            get
            {
                if (this.IrsReportingNameValueSpecified)
                {
                    return this.IrsReportingNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IrsReportingNameValue = value.GetValueOrDefault();
                this.IrsReportingNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LastFmDate", Order=34, Form=XmlSchemaForm.Unqualified)]
        public bool LastFmDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LastFmDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LastFmDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LastFmDate
        {
            get
            {
                if (this.LastFmDateValueSpecified)
                {
                    return this.LastFmDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LastFmDateValue = value.GetValueOrDefault();
                this.LastFmDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LastPaymentAmount", Order=35, Form=XmlSchemaForm.Unqualified)]
        public bool LastPaymentAmountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LastPaymentAmount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LastPaymentAmountValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LastPaymentAmount
        {
            get
            {
                if (this.LastPaymentAmountValueSpecified)
                {
                    return this.LastPaymentAmountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LastPaymentAmountValue = value.GetValueOrDefault();
                this.LastPaymentAmountValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LastPaymentDate", Order=36, Form=XmlSchemaForm.Unqualified)]
        public bool LastPaymentDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LastPaymentDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LastPaymentDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LastPaymentDate
        {
            get
            {
                if (this.LastPaymentDateValueSpecified)
                {
                    return this.LastPaymentDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LastPaymentDateValue = value.GetValueOrDefault();
                this.LastPaymentDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Name", Order=37, Form=XmlSchemaForm.Unqualified)]
        public bool NameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Name property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool NameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Name
        {
            get
            {
                if (this.NameValueSpecified)
                {
                    return this.NameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NameValue = value.GetValueOrDefault();
                this.NameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Number", Order=38, Form=XmlSchemaForm.Unqualified)]
        public bool NumberValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Number property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool NumberValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Number
        {
            get
            {
                if (this.NumberValueSpecified)
                {
                    return this.NumberValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NumberValue = value.GetValueOrDefault();
                this.NumberValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Payee", Order=39, Form=XmlSchemaForm.Unqualified)]
        public bool PayeeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Payee property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PayeeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Payee
        {
            get
            {
                if (this.PayeeValueSpecified)
                {
                    return this.PayeeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PayeeValue = value.GetValueOrDefault();
                this.PayeeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Phone", Order=40, Form=XmlSchemaForm.Unqualified)]
        public bool PhoneValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Phone property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PhoneValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Phone
        {
            get
            {
                if (this.PhoneValueSpecified)
                {
                    return this.PhoneValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PhoneValue = value.GetValueOrDefault();
                this.PhoneValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PhoneExtension", Order=41, Form=XmlSchemaForm.Unqualified)]
        public bool PhoneExtensionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PhoneExtension property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PhoneExtensionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PhoneExtension
        {
            get
            {
                if (this.PhoneExtensionValueSpecified)
                {
                    return this.PhoneExtensionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PhoneExtensionValue = value.GetValueOrDefault();
                this.PhoneExtensionValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("RdfiRt", Order=42, Form=XmlSchemaForm.Unqualified)]
        public bool RdfiRtValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RdfiRt property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool RdfiRtValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> RdfiRt
        {
            get
            {
                if (this.RdfiRtValueSpecified)
                {
                    return this.RdfiRtValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RdfiRtValue = value.GetValueOrDefault();
                this.RdfiRtValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ReceivingComp", Order=43, Form=XmlSchemaForm.Unqualified)]
        public bool ReceivingCompValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ReceivingComp property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ReceivingCompValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ReceivingComp
        {
            get
            {
                if (this.ReceivingCompValueSpecified)
                {
                    return this.ReceivingCompValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ReceivingCompValue = value.GetValueOrDefault();
                this.ReceivingCompValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("RecordChangeDate", Order=44, Form=XmlSchemaForm.Unqualified)]
        public bool RecordChangeDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RecordChangeDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool RecordChangeDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> RecordChangeDate
        {
            get
            {
                if (this.RecordChangeDateValueSpecified)
                {
                    return this.RecordChangeDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RecordChangeDateValue = value.GetValueOrDefault();
                this.RecordChangeDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("RestrictionLevel", Order=45, Form=XmlSchemaForm.Unqualified)]
        public bool RestrictionLevelValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RestrictionLevel property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool RestrictionLevelValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> RestrictionLevel
        {
            get
            {
                if (this.RestrictionLevelValueSpecified)
                {
                    return this.RestrictionLevelValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RestrictionLevelValue = value.GetValueOrDefault();
                this.RestrictionLevelValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Ssn", Order=46, Form=XmlSchemaForm.Unqualified)]
        public bool SsnValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Ssn property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SsnValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Ssn
        {
            get
            {
                if (this.SsnValueSpecified)
                {
                    return this.SsnValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SsnValue = value.GetValueOrDefault();
                this.SsnValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SsnType", Order=47, Form=XmlSchemaForm.Unqualified)]
        public bool SsnTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SsnType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SsnTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SsnType
        {
            get
            {
                if (this.SsnTypeValueSpecified)
                {
                    return this.SsnTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SsnTypeValue = value.GetValueOrDefault();
                this.SsnTypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("State", Order=48, Form=XmlSchemaForm.Unqualified)]
        public bool StateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the State property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool StateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> State
        {
            get
            {
                if (this.StateValueSpecified)
                {
                    return this.StateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.StateValue = value.GetValueOrDefault();
                this.StateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Street", Order=49, Form=XmlSchemaForm.Unqualified)]
        public bool StreetValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Street property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool StreetValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Street
        {
            get
            {
                if (this.StreetValueSpecified)
                {
                    return this.StreetValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.StreetValue = value.GetValueOrDefault();
                this.StreetValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UnpaidBalance", Order=50, Form=XmlSchemaForm.Unqualified)]
        public bool UnpaidBalanceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UnpaidBalance property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UnpaidBalanceValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UnpaidBalance
        {
            get
            {
                if (this.UnpaidBalanceValueSpecified)
                {
                    return this.UnpaidBalanceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UnpaidBalanceValue = value.GetValueOrDefault();
                this.UnpaidBalanceValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ZipCode", Order=51, Form=XmlSchemaForm.Unqualified)]
        public bool ZipCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ZipCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ZipCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ZipCode
        {
            get
            {
                if (this.ZipCodeValueSpecified)
                {
                    return this.ZipCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ZipCodeValue = value.GetValueOrDefault();
                this.ZipCodeValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("Version_1", Order=52, Form=XmlSchemaForm.Unqualified)]
        public AccountsPayableService.VersionType Version1 { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<XmlElement> _any;
        
        [XmlAnyElementAttribute(Order=53)]
        public Collection<XmlElement> Any
        {
            get
            {
                return _any;
            }
            set
            {
                _any = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return ((this.Any != null) 
                            && (this.Any.Count != 0));
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="VendorFields" /> class.</para>
        /// </summary>
        public VendorFields()
        {
            this._any = new Collection<XmlElement>();
        }
    }
}
