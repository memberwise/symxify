//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 2.1.1182.0 using the following command:
// xscgen C:\Users\tbuese\Desktop\Symxchange\FinrepService/*.xsd --sf --un --uc --order --cn -0 --collectionSettersMode=Public -o C:\Users\tbuese\Desktop\Symxchange\FinrepService\generated-output -n FinrepService
namespace FinrepService
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.Diagnostics;
    using System.Xml;
    using System.Xml.Schema;
    using System.Xml.Serialization;
    
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1182.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("CtrPersonFields", Namespace="http://www.symxchange.generated.symitar.com/crud/finrep/dto/retrieve")]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    [XmlRootAttribute("CtrPersonFields", Namespace="http://www.symxchange.generated.symitar.com/crud/finrep/dto/retrieve")]
    public partial class CtrPersonFields
    {
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Address", Order=0, Form=XmlSchemaForm.Unqualified)]
        public bool AddressValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Address property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AddressValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Address
        {
            get
            {
                if (this.AddressValueSpecified)
                {
                    return this.AddressValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AddressValue = value.GetValueOrDefault();
                this.AddressValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BirthDate", Order=1, Form=XmlSchemaForm.Unqualified)]
        public bool BirthDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BirthDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BirthDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BirthDate
        {
            get
            {
                if (this.BirthDateValueSpecified)
                {
                    return this.BirthDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BirthDateValue = value.GetValueOrDefault();
                this.BirthDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Cashin", Order=2, Form=XmlSchemaForm.Unqualified)]
        public bool CashinValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Cashin property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CashinValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Cashin
        {
            get
            {
                if (this.CashinValueSpecified)
                {
                    return this.CashinValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CashinValue = value.GetValueOrDefault();
                this.CashinValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Cashout", Order=3, Form=XmlSchemaForm.Unqualified)]
        public bool CashoutValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Cashout property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CashoutValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Cashout
        {
            get
            {
                if (this.CashoutValueSpecified)
                {
                    return this.CashoutValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CashoutValue = value.GetValueOrDefault();
                this.CashoutValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("City", Order=4, Form=XmlSchemaForm.Unqualified)]
        public bool CityValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the City property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CityValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> City
        {
            get
            {
                if (this.CityValueSpecified)
                {
                    return this.CityValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CityValue = value.GetValueOrDefault();
                this.CityValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CountryCode", Order=5, Form=XmlSchemaForm.Unqualified)]
        public bool CountryCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CountryCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CountryCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CountryCode
        {
            get
            {
                if (this.CountryCodeValueSpecified)
                {
                    return this.CountryCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CountryCodeValue = value.GetValueOrDefault();
                this.CountryCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DbaFirst", Order=6, Form=XmlSchemaForm.Unqualified)]
        public bool DbaFirstValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DbaFirst property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DbaFirstValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DbaFirst
        {
            get
            {
                if (this.DbaFirstValueSpecified)
                {
                    return this.DbaFirstValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DbaFirstValue = value.GetValueOrDefault();
                this.DbaFirstValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DbaLast", Order=7, Form=XmlSchemaForm.Unqualified)]
        public bool DbaLastValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DbaLast property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DbaLastValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DbaLast
        {
            get
            {
                if (this.DbaLastValueSpecified)
                {
                    return this.DbaLastValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DbaLastValue = value.GetValueOrDefault();
                this.DbaLastValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DbaLongName", Order=8, Form=XmlSchemaForm.Unqualified)]
        public bool DbaLongNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DbaLongName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DbaLongNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DbaLongName
        {
            get
            {
                if (this.DbaLongNameValueSpecified)
                {
                    return this.DbaLongNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DbaLongNameValue = value.GetValueOrDefault();
                this.DbaLongNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DbaMiddle", Order=9, Form=XmlSchemaForm.Unqualified)]
        public bool DbaMiddleValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DbaMiddle property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DbaMiddleValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DbaMiddle
        {
            get
            {
                if (this.DbaMiddleValueSpecified)
                {
                    return this.DbaMiddleValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DbaMiddleValue = value.GetValueOrDefault();
                this.DbaMiddleValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DbaShortName", Order=10, Form=XmlSchemaForm.Unqualified)]
        public bool DbaShortNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DbaShortName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DbaShortNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DbaShortName
        {
            get
            {
                if (this.DbaShortNameValueSpecified)
                {
                    return this.DbaShortNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DbaShortNameValue = value.GetValueOrDefault();
                this.DbaShortNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DbaSuffix", Order=11, Form=XmlSchemaForm.Unqualified)]
        public bool DbaSuffixValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DbaSuffix property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DbaSuffixValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DbaSuffix
        {
            get
            {
                if (this.DbaSuffixValueSpecified)
                {
                    return this.DbaSuffixValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DbaSuffixValue = value.GetValueOrDefault();
                this.DbaSuffixValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Email", Order=12, Form=XmlSchemaForm.Unqualified)]
        public bool EmailValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Email property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool EmailValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Email
        {
            get
            {
                if (this.EmailValueSpecified)
                {
                    return this.EmailValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EmailValue = value.GetValueOrDefault();
                this.EmailValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("EntityFlag", Order=13, Form=XmlSchemaForm.Unqualified)]
        public bool EntityFlagValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EntityFlag property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool EntityFlagValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> EntityFlag
        {
            get
            {
                if (this.EntityFlagValueSpecified)
                {
                    return this.EntityFlagValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EntityFlagValue = value.GetValueOrDefault();
                this.EntityFlagValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("First", Order=14, Form=XmlSchemaForm.Unqualified)]
        public bool FirstValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the First property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FirstValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> First
        {
            get
            {
                if (this.FirstValueSpecified)
                {
                    return this.FirstValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FirstValue = value.GetValueOrDefault();
                this.FirstValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Gender", Order=15, Form=XmlSchemaForm.Unqualified)]
        public bool GenderValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Gender property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool GenderValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Gender
        {
            get
            {
                if (this.GenderValueSpecified)
                {
                    return this.GenderValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.GenderValue = value.GetValueOrDefault();
                this.GenderValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Headquarters", Order=16, Form=XmlSchemaForm.Unqualified)]
        public bool HeadquartersValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Headquarters property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HeadquartersValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Headquarters
        {
            get
            {
                if (this.HeadquartersValueSpecified)
                {
                    return this.HeadquartersValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HeadquartersValue = value.GetValueOrDefault();
                this.HeadquartersValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IdIssueByCountry", Order=17, Form=XmlSchemaForm.Unqualified)]
        public bool IdIssueByCountryValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IdIssueByCountry property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IdIssueByCountryValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IdIssueByCountry
        {
            get
            {
                if (this.IdIssueByCountryValueSpecified)
                {
                    return this.IdIssueByCountryValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IdIssueByCountryValue = value.GetValueOrDefault();
                this.IdIssueByCountryValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IdIssueByState", Order=18, Form=XmlSchemaForm.Unqualified)]
        public bool IdIssueByStateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IdIssueByState property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IdIssueByStateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IdIssueByState
        {
            get
            {
                if (this.IdIssueByStateValueSpecified)
                {
                    return this.IdIssueByStateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IdIssueByStateValue = value.GetValueOrDefault();
                this.IdIssueByStateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IdNumber", Order=19, Form=XmlSchemaForm.Unqualified)]
        public bool IdNumberValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IdNumber property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IdNumberValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IdNumber
        {
            get
            {
                if (this.IdNumberValueSpecified)
                {
                    return this.IdNumberValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IdNumberValue = value.GetValueOrDefault();
                this.IdNumberValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IdTypeOtherDesc", Order=20, Form=XmlSchemaForm.Unqualified)]
        public bool IdTypeOtherDescValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IdTypeOtherDesc property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IdTypeOtherDescValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IdTypeOtherDesc
        {
            get
            {
                if (this.IdTypeOtherDescValueSpecified)
                {
                    return this.IdTypeOtherDescValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IdTypeOtherDescValue = value.GetValueOrDefault();
                this.IdTypeOtherDescValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IdVerifyMethod", Order=21, Form=XmlSchemaForm.Unqualified)]
        public bool IdVerifyMethodValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IdVerifyMethod property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IdVerifyMethodValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IdVerifyMethod
        {
            get
            {
                if (this.IdVerifyMethodValueSpecified)
                {
                    return this.IdVerifyMethodValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IdVerifyMethodValue = value.GetValueOrDefault();
                this.IdVerifyMethodValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Last", Order=22, Form=XmlSchemaForm.Unqualified)]
        public bool LastValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Last property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LastValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Last
        {
            get
            {
                if (this.LastValueSpecified)
                {
                    return this.LastValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LastValue = value.GetValueOrDefault();
                this.LastValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LastFmDate", Order=23, Form=XmlSchemaForm.Unqualified)]
        public bool LastFmDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LastFmDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LastFmDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LastFmDate
        {
            get
            {
                if (this.LastFmDateValueSpecified)
                {
                    return this.LastFmDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LastFmDateValue = value.GetValueOrDefault();
                this.LastFmDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Locator", Order=24, Form=XmlSchemaForm.Unqualified)]
        public bool LocatorValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Locator property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LocatorValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Locator
        {
            get
            {
                if (this.LocatorValueSpecified)
                {
                    return this.LocatorValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LocatorValue = value.GetValueOrDefault();
                this.LocatorValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LongName", Order=25, Form=XmlSchemaForm.Unqualified)]
        public bool LongNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LongName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LongNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LongName
        {
            get
            {
                if (this.LongNameValueSpecified)
                {
                    return this.LongNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LongNameValue = value.GetValueOrDefault();
                this.LongNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Middle", Order=26, Form=XmlSchemaForm.Unqualified)]
        public bool MiddleValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Middle property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MiddleValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Middle
        {
            get
            {
                if (this.MiddleValueSpecified)
                {
                    return this.MiddleValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MiddleValue = value.GetValueOrDefault();
                this.MiddleValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MultiTransFlag", Order=27, Form=XmlSchemaForm.Unqualified)]
        public bool MultiTransFlagValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MultiTransFlag property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MultiTransFlagValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MultiTransFlag
        {
            get
            {
                if (this.MultiTransFlagValueSpecified)
                {
                    return this.MultiTransFlagValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MultiTransFlagValue = value.GetValueOrDefault();
                this.MultiTransFlagValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("NaicsCode", Order=28, Form=XmlSchemaForm.Unqualified)]
        public bool NaicsCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NaicsCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool NaicsCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> NaicsCode
        {
            get
            {
                if (this.NaicsCodeValueSpecified)
                {
                    return this.NaicsCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NaicsCodeValue = value.GetValueOrDefault();
                this.NaicsCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Occupation", Order=29, Form=XmlSchemaForm.Unqualified)]
        public bool OccupationValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Occupation property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OccupationValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Occupation
        {
            get
            {
                if (this.OccupationValueSpecified)
                {
                    return this.OccupationValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OccupationValue = value.GetValueOrDefault();
                this.OccupationValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Phone", Order=30, Form=XmlSchemaForm.Unqualified)]
        public bool PhoneValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Phone property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PhoneValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Phone
        {
            get
            {
                if (this.PhoneValueSpecified)
                {
                    return this.PhoneValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PhoneValue = value.GetValueOrDefault();
                this.PhoneValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PhoneExt", Order=31, Form=XmlSchemaForm.Unqualified)]
        public bool PhoneExtValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PhoneExt property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PhoneExtValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PhoneExt
        {
            get
            {
                if (this.PhoneExtValueSpecified)
                {
                    return this.PhoneExtValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PhoneExtValue = value.GetValueOrDefault();
                this.PhoneExtValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("RecordChangeDate", Order=32, Form=XmlSchemaForm.Unqualified)]
        public bool RecordChangeDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RecordChangeDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool RecordChangeDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> RecordChangeDate
        {
            get
            {
                if (this.RecordChangeDateValueSpecified)
                {
                    return this.RecordChangeDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RecordChangeDateValue = value.GetValueOrDefault();
                this.RecordChangeDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ShortName", Order=33, Form=XmlSchemaForm.Unqualified)]
        public bool ShortNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ShortName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ShortNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ShortName
        {
            get
            {
                if (this.ShortNameValueSpecified)
                {
                    return this.ShortNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ShortNameValue = value.GetValueOrDefault();
                this.ShortNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Ssn", Order=34, Form=XmlSchemaForm.Unqualified)]
        public bool SsnValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Ssn property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SsnValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Ssn
        {
            get
            {
                if (this.SsnValueSpecified)
                {
                    return this.SsnValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SsnValue = value.GetValueOrDefault();
                this.SsnValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SsnTintype", Order=35, Form=XmlSchemaForm.Unqualified)]
        public bool SsnTintypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SsnTintype property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SsnTintypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SsnTintype
        {
            get
            {
                if (this.SsnTintypeValueSpecified)
                {
                    return this.SsnTintypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SsnTintypeValue = value.GetValueOrDefault();
                this.SsnTintypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("State", Order=36, Form=XmlSchemaForm.Unqualified)]
        public bool StateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the State property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool StateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> State
        {
            get
            {
                if (this.StateValueSpecified)
                {
                    return this.StateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.StateValue = value.GetValueOrDefault();
                this.StateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Suffix", Order=37, Form=XmlSchemaForm.Unqualified)]
        public bool SuffixValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Suffix property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SuffixValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Suffix
        {
            get
            {
                if (this.SuffixValueSpecified)
                {
                    return this.SuffixValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SuffixValue = value.GetValueOrDefault();
                this.SuffixValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Type", Order=38, Form=XmlSchemaForm.Unqualified)]
        public bool TypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Type property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Type
        {
            get
            {
                if (this.TypeValueSpecified)
                {
                    return this.TypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TypeValue = value.GetValueOrDefault();
                this.TypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ZipCode", Order=39, Form=XmlSchemaForm.Unqualified)]
        public bool ZipCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ZipCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ZipCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ZipCode
        {
            get
            {
                if (this.ZipCodeValueSpecified)
                {
                    return this.ZipCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ZipCodeValue = value.GetValueOrDefault();
                this.ZipCodeValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("Version_1", Order=40, Form=XmlSchemaForm.Unqualified)]
        public FinrepService.VersionType Version1 { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<XmlElement> _any;
        
        [XmlAnyElementAttribute(Order=41)]
        public Collection<XmlElement> Any
        {
            get
            {
                return _any;
            }
            set
            {
                _any = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return ((this.Any != null) 
                            && (this.Any.Count != 0));
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="CtrPersonFields" /> class.</para>
        /// </summary>
        public CtrPersonFields()
        {
            this._any = new Collection<XmlElement>();
        }
    }
}
