//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 2.1.1182.0 using the following command:
// xscgen C:\Users\tbuese\Desktop\Symxchange\ParameterService/*.xsd --sf --un --uc --order --cn -0 --collectionSettersMode=Public -o C:\Users\tbuese\Desktop\Symxchange\ParameterService\generated-output -n ParameterService
namespace ParameterService
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.Diagnostics;
    using System.Xml;
    using System.Xml.Schema;
    using System.Xml.Serialization;
    
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1182.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("AnalysisGlobal", Namespace="http://www.symxchange.generated.symitar.com/crud/parameter/dto/update")]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    [XmlRootAttribute("AnalysisGlobal", Namespace="http://www.symxchange.generated.symitar.com/crud/parameter/dto/update")]
    [XmlIncludeAttribute(typeof(AnalysisGlobalFields_2))]
    public partial class AnalysisGlobal_2
    {
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AnalyzedSharePromptSetting", Order=0, Form=XmlSchemaForm.Unqualified)]
        public short AnalyzedSharePromptSettingValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AnalyzedSharePromptSetting property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AnalyzedSharePromptSettingValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> AnalyzedSharePromptSetting
        {
            get
            {
                if (this.AnalyzedSharePromptSettingValueSpecified)
                {
                    return this.AnalyzedSharePromptSettingValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AnalyzedSharePromptSettingValue = value.GetValueOrDefault();
                this.AnalyzedSharePromptSettingValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<AnalysisGlobalCounter_2> _counter;
        
        [XmlElementAttribute("Counter", Order=1, Form=XmlSchemaForm.Unqualified)]
        public Collection<AnalysisGlobalCounter_2> Counter
        {
            get
            {
                return _counter;
            }
            set
            {
                _counter = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Counter collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool CounterSpecified
        {
            get
            {
                return ((this.Counter != null) 
                            && (this.Counter.Count != 0));
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="AnalysisGlobal_2" /> class.</para>
        /// </summary>
        public AnalysisGlobal_2()
        {
            this._counter = new Collection<AnalysisGlobalCounter_2>();
            this._any = new Collection<XmlElement>();
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InvestableBalanceCalcType", Order=2, Form=XmlSchemaForm.Unqualified)]
        public short InvestableBalanceCalcTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InvestableBalanceCalcType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InvestableBalanceCalcTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> InvestableBalanceCalcType
        {
            get
            {
                if (this.InvestableBalanceCalcTypeValueSpecified)
                {
                    return this.InvestableBalanceCalcTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InvestableBalanceCalcTypeValue = value.GetValueOrDefault();
                this.InvestableBalanceCalcTypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("NonAnlyzdShrPromptSetting", Order=3, Form=XmlSchemaForm.Unqualified)]
        public short NonAnlyzdShrPromptSettingValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NonAnlyzdShrPromptSetting property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool NonAnlyzdShrPromptSettingValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> NonAnlyzdShrPromptSetting
        {
            get
            {
                if (this.NonAnlyzdShrPromptSettingValueSpecified)
                {
                    return this.NonAnlyzdShrPromptSettingValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NonAnlyzdShrPromptSettingValue = value.GetValueOrDefault();
                this.NonAnlyzdShrPromptSettingValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OnUsCountSetting", Order=4, Form=XmlSchemaForm.Unqualified)]
        public short OnUsCountSettingValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OnUsCountSetting property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OnUsCountSettingValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> OnUsCountSetting
        {
            get
            {
                if (this.OnUsCountSettingValueSpecified)
                {
                    return this.OnUsCountSettingValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OnUsCountSettingValue = value.GetValueOrDefault();
                this.OnUsCountSettingValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ReserveCalculationType", Order=5, Form=XmlSchemaForm.Unqualified)]
        public short ReserveCalculationTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ReserveCalculationType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ReserveCalculationTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> ReserveCalculationType
        {
            get
            {
                if (this.ReserveCalculationTypeValueSpecified)
                {
                    return this.ReserveCalculationTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ReserveCalculationTypeValue = value.GetValueOrDefault();
                this.ReserveCalculationTypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ReserveRate", Order=6, Form=XmlSchemaForm.Unqualified)]
        public decimal ReserveRateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ReserveRate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ReserveRateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<decimal> ReserveRate
        {
            get
            {
                if (this.ReserveRateValueSpecified)
                {
                    return this.ReserveRateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ReserveRateValue = value.GetValueOrDefault();
                this.ReserveRateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UsePromptSettings", Order=7, Form=XmlSchemaForm.Unqualified)]
        public bool UsePromptSettingsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UsePromptSettings property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UsePromptSettingsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UsePromptSettings
        {
            get
            {
                if (this.UsePromptSettingsValueSpecified)
                {
                    return this.UsePromptSettingsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UsePromptSettingsValue = value.GetValueOrDefault();
                this.UsePromptSettingsValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("Version_1", Order=8, Form=XmlSchemaForm.Unqualified)]
        public ParameterService.VersionType Version1 { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<XmlElement> _any;
        
        [XmlAnyElementAttribute(Order=9)]
        public Collection<XmlElement> Any
        {
            get
            {
                return _any;
            }
            set
            {
                _any = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return ((this.Any != null) 
                            && (this.Any.Count != 0));
            }
        }
    }
}
