//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 2.1.1182.0 using the following command:
// xscgen C:\Users\tbuese\Desktop\Symxchange\ParameterService/*.xsd --sf --un --uc --order --cn -0 --collectionSettersMode=Public -o C:\Users\tbuese\Desktop\Symxchange\ParameterService\generated-output -n ParameterService
namespace ParameterService
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.Diagnostics;
    using System.Xml;
    using System.Xml.Schema;
    using System.Xml.Serialization;
    
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1182.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("OnlineFee", Namespace="http://www.symxchange.generated.symitar.com/crud/parameter/dto/retrieve")]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    [XmlRootAttribute("OnlineFee", Namespace="http://www.symxchange.generated.symitar.com/crud/parameter/dto/retrieve")]
    public partial class OnlineFee
    {
        
        [XmlElementAttribute("AccountTypes", Order=0, Form=XmlSchemaForm.Unqualified)]
        public ParameterService.BitMap AccountTypes { get; set; }
        
        [XmlElementAttribute("AcquirerNetworkIds", Order=1, Form=XmlSchemaForm.Unqualified)]
        public string AcquirerNetworkIds { get; set; }
        
        [XmlElementAttribute("CardAcceptorName", Order=2, Form=XmlSchemaForm.Unqualified)]
        public string CardAcceptorName { get; set; }
        
        [XmlElementAttribute("CardTypes", Order=3, Form=XmlSchemaForm.Unqualified)]
        public ParameterService.BitMap CardTypes { get; set; }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CoOpTransaction", Order=4, Form=XmlSchemaForm.Unqualified)]
        public short CoOpTransactionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CoOpTransaction property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CoOpTransactionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> CoOpTransaction
        {
            get
            {
                if (this.CoOpTransactionValueSpecified)
                {
                    return this.CoOpTransactionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CoOpTransactionValue = value.GetValueOrDefault();
                this.CoOpTransactionValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CustomCriterion", Order=5, Form=XmlSchemaForm.Unqualified)]
        public short CustomCriterionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CustomCriterion property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CustomCriterionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> CustomCriterion
        {
            get
            {
                if (this.CustomCriterionValueSpecified)
                {
                    return this.CustomCriterionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CustomCriterionValue = value.GetValueOrDefault();
                this.CustomCriterionValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("ExcludeServiceCodes", Order=6, Form=XmlSchemaForm.Unqualified)]
        public ParameterService.BitMap ExcludeServiceCodes { get; set; }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("FeeCountLevel", Order=7, Form=XmlSchemaForm.Unqualified)]
        public short FeeCountLevelValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FeeCountLevel property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FeeCountLevelValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> FeeCountLevel
        {
            get
            {
                if (this.FeeCountLevelValueSpecified)
                {
                    return this.FeeCountLevelValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FeeCountLevelValue = value.GetValueOrDefault();
                this.FeeCountLevelValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("FeeCountNumber", Order=8, Form=XmlSchemaForm.Unqualified)]
        public short FeeCountNumberValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FeeCountNumber property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FeeCountNumberValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> FeeCountNumber
        {
            get
            {
                if (this.FeeCountNumberValueSpecified)
                {
                    return this.FeeCountNumberValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FeeCountNumberValue = value.GetValueOrDefault();
                this.FeeCountNumberValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("FeeCountTotals", Order=9, Form=XmlSchemaForm.Unqualified)]
        public short FeeCountTotalsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FeeCountTotals property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FeeCountTotalsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> FeeCountTotals
        {
            get
            {
                if (this.FeeCountTotalsValueSpecified)
                {
                    return this.FeeCountTotalsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FeeCountTotalsValue = value.GetValueOrDefault();
                this.FeeCountTotalsValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("FeeDescription", Order=10, Form=XmlSchemaForm.Unqualified)]
        public string FeeDescription { get; set; }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("FeeGlCode", Order=11, Form=XmlSchemaForm.Unqualified)]
        public short FeeGlCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FeeGlCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FeeGlCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> FeeGlCode
        {
            get
            {
                if (this.FeeGlCodeValueSpecified)
                {
                    return this.FeeGlCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FeeGlCodeValue = value.GetValueOrDefault();
                this.FeeGlCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("FeePostingOption", Order=12, Form=XmlSchemaForm.Unqualified)]
        public short FeePostingOptionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FeePostingOption property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FeePostingOptionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> FeePostingOption
        {
            get
            {
                if (this.FeePostingOptionValueSpecified)
                {
                    return this.FeePostingOptionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FeePostingOptionValue = value.GetValueOrDefault();
                this.FeePostingOptionValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("IncludeServiceCodes", Order=13, Form=XmlSchemaForm.Unqualified)]
        public ParameterService.BitMap IncludeServiceCodes { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<OnlineFeeRelationFeeAmount> _relationFeeAmount;
        
        [XmlElementAttribute("RelationFeeAmount", Order=14, Form=XmlSchemaForm.Unqualified)]
        public Collection<OnlineFeeRelationFeeAmount> RelationFeeAmount
        {
            get
            {
                return _relationFeeAmount;
            }
            set
            {
                _relationFeeAmount = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RelationFeeAmount collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool RelationFeeAmountSpecified
        {
            get
            {
                return ((this.RelationFeeAmount != null) 
                            && (this.RelationFeeAmount.Count != 0));
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="OnlineFee" /> class.</para>
        /// </summary>
        public OnlineFee()
        {
            this._relationFeeAmount = new Collection<OnlineFeeRelationFeeAmount>();
            this._relationRelCodes = new Collection<OnlineFeeRelationRelCodes>();
            this._relationWaiveCount = new Collection<OnlineFeeRelationWaiveCount>();
            this._any = new Collection<XmlElement>();
        }
        
        [XmlIgnoreAttribute()]
        private Collection<OnlineFeeRelationRelCodes> _relationRelCodes;
        
        [XmlElementAttribute("RelationRelCodes", Order=15, Form=XmlSchemaForm.Unqualified)]
        public Collection<OnlineFeeRelationRelCodes> RelationRelCodes
        {
            get
            {
                return _relationRelCodes;
            }
            set
            {
                _relationRelCodes = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RelationRelCodes collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool RelationRelCodesSpecified
        {
            get
            {
                return ((this.RelationRelCodes != null) 
                            && (this.RelationRelCodes.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<OnlineFeeRelationWaiveCount> _relationWaiveCount;
        
        [XmlElementAttribute("RelationWaiveCount", Order=16, Form=XmlSchemaForm.Unqualified)]
        public Collection<OnlineFeeRelationWaiveCount> RelationWaiveCount
        {
            get
            {
                return _relationWaiveCount;
            }
            set
            {
                _relationWaiveCount = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RelationWaiveCount collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool RelationWaiveCountSpecified
        {
            get
            {
                return ((this.RelationWaiveCount != null) 
                            && (this.RelationWaiveCount.Count != 0));
            }
        }
        
        [XmlElementAttribute("RuleDescription", Order=17, Form=XmlSchemaForm.Unqualified)]
        public string RuleDescription { get; set; }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("RuleOrdinal", Order=18, Form=XmlSchemaForm.Unqualified)]
        public short RuleOrdinalValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RuleOrdinal property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool RuleOrdinalValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> RuleOrdinal
        {
            get
            {
                if (this.RuleOrdinalValueSpecified)
                {
                    return this.RuleOrdinalValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RuleOrdinalValue = value.GetValueOrDefault();
                this.RuleOrdinalValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("RulePosition", Order=19, Form=XmlSchemaForm.Unqualified)]
        public short RulePositionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RulePosition property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool RulePositionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> RulePosition
        {
            get
            {
                if (this.RulePositionValueSpecified)
                {
                    return this.RulePositionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RulePositionValue = value.GetValueOrDefault();
                this.RulePositionValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ShareLoan", Order=20, Form=XmlSchemaForm.Unqualified)]
        public short ShareLoanValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ShareLoan property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ShareLoanValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> ShareLoan
        {
            get
            {
                if (this.ShareLoanValueSpecified)
                {
                    return this.ShareLoanValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ShareLoanValue = value.GetValueOrDefault();
                this.ShareLoanValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("ShareLoanTypes", Order=21, Form=XmlSchemaForm.Unqualified)]
        public ParameterService.BitMap ShareLoanTypes { get; set; }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TerminalTable", Order=22, Form=XmlSchemaForm.Unqualified)]
        public short TerminalTableValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TerminalTable property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TerminalTableValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> TerminalTable
        {
            get
            {
                if (this.TerminalTableValueSpecified)
                {
                    return this.TerminalTableValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TerminalTableValue = value.GetValueOrDefault();
                this.TerminalTableValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("TransactionCodes", Order=23, Form=XmlSchemaForm.Unqualified)]
        public string TransactionCodes { get; set; }
        
        [XmlElementAttribute("TransactionTypes", Order=24, Form=XmlSchemaForm.Unqualified)]
        public string TransactionTypes { get; set; }
        
        [XmlElementAttribute("WarningCodeExclList", Order=25, Form=XmlSchemaForm.Unqualified)]
        public ParameterService.BitMap WarningCodeExclList { get; set; }
        
        [XmlElementAttribute("WarningCodeInclList", Order=26, Form=XmlSchemaForm.Unqualified)]
        public ParameterService.BitMap WarningCodeInclList { get; set; }
        
        [XmlElementAttribute("Version_1", Order=27, Form=XmlSchemaForm.Unqualified)]
        public ParameterService.VersionType Version1 { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<XmlElement> _any;
        
        [XmlAnyElementAttribute(Order=28)]
        public Collection<XmlElement> Any
        {
            get
            {
                return _any;
            }
            set
            {
                _any = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return ((this.Any != null) 
                            && (this.Any.Count != 0));
            }
        }
    }
}
