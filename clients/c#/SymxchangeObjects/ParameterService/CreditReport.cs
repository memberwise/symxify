//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 2.1.1182.0 using the following command:
// xscgen C:\Users\tbuese\Desktop\Symxchange\ParameterService/*.xsd --sf --un --uc --order --cn -0 --collectionSettersMode=Public -o C:\Users\tbuese\Desktop\Symxchange\ParameterService\generated-output -n ParameterService
namespace ParameterService
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.Diagnostics;
    using System.Xml;
    using System.Xml.Schema;
    using System.Xml.Serialization;
    
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1182.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("CreditReport", Namespace="http://www.symxchange.generated.symitar.com/crud/parameter/dto/retrieve")]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class CreditReport
    {
        
        [XmlIgnoreAttribute()]
        private Collection<CreditReportCollateralAccountType> _collateralAccountType;
        
        [XmlElementAttribute("CollateralAccountType", Order=0, Form=XmlSchemaForm.Unqualified)]
        public Collection<CreditReportCollateralAccountType> CollateralAccountType
        {
            get
            {
                return _collateralAccountType;
            }
            set
            {
                _collateralAccountType = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CollateralAccountType collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool CollateralAccountTypeSpecified
        {
            get
            {
                return ((this.CollateralAccountType != null) 
                            && (this.CollateralAccountType.Count != 0));
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="CreditReport" /> class.</para>
        /// </summary>
        public CreditReport()
        {
            this._collateralAccountType = new Collection<CreditReportCollateralAccountType>();
            this._collateralPortfolioType = new Collection<CreditReportCollateralPortfolioType>();
            this._any = new Collection<XmlElement>();
        }
        
        [XmlIgnoreAttribute()]
        private Collection<CreditReportCollateralPortfolioType> _collateralPortfolioType;
        
        [XmlElementAttribute("CollateralPortfolioType", Order=1, Form=XmlSchemaForm.Unqualified)]
        public Collection<CreditReportCollateralPortfolioType> CollateralPortfolioType
        {
            get
            {
                return _collateralPortfolioType;
            }
            set
            {
                _collateralPortfolioType = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CollateralPortfolioType collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool CollateralPortfolioTypeSpecified
        {
            get
            {
                return ((this.CollateralPortfolioType != null) 
                            && (this.CollateralPortfolioType.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditCardBalOption", Order=2, Form=XmlSchemaForm.Unqualified)]
        public short CreditCardBalOptionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditCardBalOption property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditCardBalOptionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> CreditCardBalOption
        {
            get
            {
                if (this.CreditCardBalOptionValueSpecified)
                {
                    return this.CreditCardBalOptionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditCardBalOptionValue = value.GetValueOrDefault();
                this.CreditCardBalOptionValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("EquifaxProgramId", Order=3, Form=XmlSchemaForm.Unqualified)]
        public string EquifaxProgramId { get; set; }
        
        [XmlElementAttribute("ExperianProgramId", Order=4, Form=XmlSchemaForm.Unqualified)]
        public string ExperianProgramId { get; set; }
        
        [XmlElementAttribute("InnovisProgramId", Order=5, Form=XmlSchemaForm.Unqualified)]
        public string InnovisProgramId { get; set; }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LastReportDate", Order=6, Form=XmlSchemaForm.Unqualified, DataType="date")]
        public DateTime LastReportDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LastReportDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LastReportDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<DateTime> LastReportDate
        {
            get
            {
                if (this.LastReportDateValueSpecified)
                {
                    return this.LastReportDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LastReportDateValue = value.GetValueOrDefault();
                this.LastReportDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("NameLogic", Order=7, Form=XmlSchemaForm.Unqualified)]
        public short NameLogicValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NameLogic property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool NameLogicValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> NameLogic
        {
            get
            {
                if (this.NameLogicValueSpecified)
                {
                    return this.NameLogicValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NameLogicValue = value.GetValueOrDefault();
                this.NameLogicValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PaymentHistoryLogic", Order=8, Form=XmlSchemaForm.Unqualified)]
        public short PaymentHistoryLogicValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PaymentHistoryLogic property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PaymentHistoryLogicValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> PaymentHistoryLogic
        {
            get
            {
                if (this.PaymentHistoryLogicValueSpecified)
                {
                    return this.PaymentHistoryLogicValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PaymentHistoryLogicValue = value.GetValueOrDefault();
                this.PaymentHistoryLogicValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ReportTapeFormat", Order=9, Form=XmlSchemaForm.Unqualified)]
        public short ReportTapeFormatValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ReportTapeFormat property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ReportTapeFormatValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> ReportTapeFormat
        {
            get
            {
                if (this.ReportTapeFormatValueSpecified)
                {
                    return this.ReportTapeFormatValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ReportTapeFormatValue = value.GetValueOrDefault();
                this.ReportTapeFormatValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("ShareAccountType", Order=10, Form=XmlSchemaForm.Unqualified)]
        public string ShareAccountType { get; set; }
        
        [XmlElementAttribute("SubscriberCode", Order=11, Form=XmlSchemaForm.Unqualified)]
        public string SubscriberCode { get; set; }
        
        [XmlElementAttribute("TransUnionProgramId", Order=12, Form=XmlSchemaForm.Unqualified)]
        public string TransUnionProgramId { get; set; }
        
        [XmlElementAttribute("Version_1", Order=13, Form=XmlSchemaForm.Unqualified)]
        public ParameterService.VersionType Version1 { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<XmlElement> _any;
        
        [XmlAnyElementAttribute(Order=14)]
        public Collection<XmlElement> Any
        {
            get
            {
                return _any;
            }
            set
            {
                _any = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return ((this.Any != null) 
                            && (this.Any.Count != 0));
            }
        }
    }
}
