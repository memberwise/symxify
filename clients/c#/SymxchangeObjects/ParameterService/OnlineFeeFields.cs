//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 2.1.1182.0 using the following command:
// xscgen C:\Users\tbuese\Desktop\Symxchange\ParameterService/*.xsd --sf --un --uc --order --cn -0 --collectionSettersMode=Public -o C:\Users\tbuese\Desktop\Symxchange\ParameterService\generated-output -n ParameterService
namespace ParameterService
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.Diagnostics;
    using System.Xml;
    using System.Xml.Schema;
    using System.Xml.Serialization;
    
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1182.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("OnlineFeeFields", Namespace="http://www.symxchange.generated.symitar.com/crud/parameter/dto/retrieve")]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    [XmlRootAttribute("OnlineFeeFields", Namespace="http://www.symxchange.generated.symitar.com/crud/parameter/dto/retrieve")]
    public partial class OnlineFeeFields
    {
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AccountTypes", Order=0, Form=XmlSchemaForm.Unqualified)]
        public bool AccountTypesValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AccountTypes property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AccountTypesValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AccountTypes
        {
            get
            {
                if (this.AccountTypesValueSpecified)
                {
                    return this.AccountTypesValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AccountTypesValue = value.GetValueOrDefault();
                this.AccountTypesValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AcquirerNetworkIds", Order=1, Form=XmlSchemaForm.Unqualified)]
        public bool AcquirerNetworkIdsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AcquirerNetworkIds property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AcquirerNetworkIdsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AcquirerNetworkIds
        {
            get
            {
                if (this.AcquirerNetworkIdsValueSpecified)
                {
                    return this.AcquirerNetworkIdsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AcquirerNetworkIdsValue = value.GetValueOrDefault();
                this.AcquirerNetworkIdsValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CardAcceptorName", Order=2, Form=XmlSchemaForm.Unqualified)]
        public bool CardAcceptorNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CardAcceptorName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CardAcceptorNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CardAcceptorName
        {
            get
            {
                if (this.CardAcceptorNameValueSpecified)
                {
                    return this.CardAcceptorNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CardAcceptorNameValue = value.GetValueOrDefault();
                this.CardAcceptorNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CardTypes", Order=3, Form=XmlSchemaForm.Unqualified)]
        public bool CardTypesValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CardTypes property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CardTypesValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CardTypes
        {
            get
            {
                if (this.CardTypesValueSpecified)
                {
                    return this.CardTypesValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CardTypesValue = value.GetValueOrDefault();
                this.CardTypesValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CoOpTransaction", Order=4, Form=XmlSchemaForm.Unqualified)]
        public bool CoOpTransactionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CoOpTransaction property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CoOpTransactionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CoOpTransaction
        {
            get
            {
                if (this.CoOpTransactionValueSpecified)
                {
                    return this.CoOpTransactionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CoOpTransactionValue = value.GetValueOrDefault();
                this.CoOpTransactionValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CustomCriterion", Order=5, Form=XmlSchemaForm.Unqualified)]
        public bool CustomCriterionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CustomCriterion property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CustomCriterionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CustomCriterion
        {
            get
            {
                if (this.CustomCriterionValueSpecified)
                {
                    return this.CustomCriterionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CustomCriterionValue = value.GetValueOrDefault();
                this.CustomCriterionValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ExcludeServiceCodes", Order=6, Form=XmlSchemaForm.Unqualified)]
        public bool ExcludeServiceCodesValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ExcludeServiceCodes property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ExcludeServiceCodesValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ExcludeServiceCodes
        {
            get
            {
                if (this.ExcludeServiceCodesValueSpecified)
                {
                    return this.ExcludeServiceCodesValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ExcludeServiceCodesValue = value.GetValueOrDefault();
                this.ExcludeServiceCodesValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("FeeCountLevel", Order=7, Form=XmlSchemaForm.Unqualified)]
        public bool FeeCountLevelValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FeeCountLevel property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FeeCountLevelValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> FeeCountLevel
        {
            get
            {
                if (this.FeeCountLevelValueSpecified)
                {
                    return this.FeeCountLevelValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FeeCountLevelValue = value.GetValueOrDefault();
                this.FeeCountLevelValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("FeeCountNumber", Order=8, Form=XmlSchemaForm.Unqualified)]
        public bool FeeCountNumberValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FeeCountNumber property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FeeCountNumberValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> FeeCountNumber
        {
            get
            {
                if (this.FeeCountNumberValueSpecified)
                {
                    return this.FeeCountNumberValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FeeCountNumberValue = value.GetValueOrDefault();
                this.FeeCountNumberValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("FeeCountTotals", Order=9, Form=XmlSchemaForm.Unqualified)]
        public bool FeeCountTotalsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FeeCountTotals property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FeeCountTotalsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> FeeCountTotals
        {
            get
            {
                if (this.FeeCountTotalsValueSpecified)
                {
                    return this.FeeCountTotalsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FeeCountTotalsValue = value.GetValueOrDefault();
                this.FeeCountTotalsValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("FeeDescription", Order=10, Form=XmlSchemaForm.Unqualified)]
        public bool FeeDescriptionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FeeDescription property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FeeDescriptionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> FeeDescription
        {
            get
            {
                if (this.FeeDescriptionValueSpecified)
                {
                    return this.FeeDescriptionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FeeDescriptionValue = value.GetValueOrDefault();
                this.FeeDescriptionValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("FeeGlCode", Order=11, Form=XmlSchemaForm.Unqualified)]
        public bool FeeGlCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FeeGlCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FeeGlCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> FeeGlCode
        {
            get
            {
                if (this.FeeGlCodeValueSpecified)
                {
                    return this.FeeGlCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FeeGlCodeValue = value.GetValueOrDefault();
                this.FeeGlCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("FeePostingOption", Order=12, Form=XmlSchemaForm.Unqualified)]
        public bool FeePostingOptionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FeePostingOption property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FeePostingOptionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> FeePostingOption
        {
            get
            {
                if (this.FeePostingOptionValueSpecified)
                {
                    return this.FeePostingOptionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FeePostingOptionValue = value.GetValueOrDefault();
                this.FeePostingOptionValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IncludeServiceCodes", Order=13, Form=XmlSchemaForm.Unqualified)]
        public bool IncludeServiceCodesValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IncludeServiceCodes property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IncludeServiceCodesValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IncludeServiceCodes
        {
            get
            {
                if (this.IncludeServiceCodesValueSpecified)
                {
                    return this.IncludeServiceCodesValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IncludeServiceCodesValue = value.GetValueOrDefault();
                this.IncludeServiceCodesValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _relationFeeAmount;
        
        [XmlElementAttribute("RelationFeeAmount", Order=14, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> RelationFeeAmount
        {
            get
            {
                return _relationFeeAmount;
            }
            set
            {
                _relationFeeAmount = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RelationFeeAmount collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool RelationFeeAmountSpecified
        {
            get
            {
                return ((this.RelationFeeAmount != null) 
                            && (this.RelationFeeAmount.Count != 0));
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="OnlineFeeFields" /> class.</para>
        /// </summary>
        public OnlineFeeFields()
        {
            this._relationFeeAmount = new Collection<short>();
            this._relationRelCodes = new Collection<short>();
            this._relationWaiveCount = new Collection<short>();
            this._any = new Collection<XmlElement>();
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _relationRelCodes;
        
        [XmlElementAttribute("RelationRelCodes", Order=15, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> RelationRelCodes
        {
            get
            {
                return _relationRelCodes;
            }
            set
            {
                _relationRelCodes = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RelationRelCodes collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool RelationRelCodesSpecified
        {
            get
            {
                return ((this.RelationRelCodes != null) 
                            && (this.RelationRelCodes.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _relationWaiveCount;
        
        [XmlElementAttribute("RelationWaiveCount", Order=16, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> RelationWaiveCount
        {
            get
            {
                return _relationWaiveCount;
            }
            set
            {
                _relationWaiveCount = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RelationWaiveCount collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool RelationWaiveCountSpecified
        {
            get
            {
                return ((this.RelationWaiveCount != null) 
                            && (this.RelationWaiveCount.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("RuleDescription", Order=17, Form=XmlSchemaForm.Unqualified)]
        public bool RuleDescriptionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RuleDescription property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool RuleDescriptionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> RuleDescription
        {
            get
            {
                if (this.RuleDescriptionValueSpecified)
                {
                    return this.RuleDescriptionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RuleDescriptionValue = value.GetValueOrDefault();
                this.RuleDescriptionValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("RuleOrdinal", Order=18, Form=XmlSchemaForm.Unqualified)]
        public bool RuleOrdinalValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RuleOrdinal property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool RuleOrdinalValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> RuleOrdinal
        {
            get
            {
                if (this.RuleOrdinalValueSpecified)
                {
                    return this.RuleOrdinalValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RuleOrdinalValue = value.GetValueOrDefault();
                this.RuleOrdinalValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("RulePosition", Order=19, Form=XmlSchemaForm.Unqualified)]
        public bool RulePositionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RulePosition property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool RulePositionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> RulePosition
        {
            get
            {
                if (this.RulePositionValueSpecified)
                {
                    return this.RulePositionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RulePositionValue = value.GetValueOrDefault();
                this.RulePositionValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ShareLoan", Order=20, Form=XmlSchemaForm.Unqualified)]
        public bool ShareLoanValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ShareLoan property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ShareLoanValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ShareLoan
        {
            get
            {
                if (this.ShareLoanValueSpecified)
                {
                    return this.ShareLoanValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ShareLoanValue = value.GetValueOrDefault();
                this.ShareLoanValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ShareLoanTypes", Order=21, Form=XmlSchemaForm.Unqualified)]
        public bool ShareLoanTypesValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ShareLoanTypes property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ShareLoanTypesValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ShareLoanTypes
        {
            get
            {
                if (this.ShareLoanTypesValueSpecified)
                {
                    return this.ShareLoanTypesValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ShareLoanTypesValue = value.GetValueOrDefault();
                this.ShareLoanTypesValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TerminalTable", Order=22, Form=XmlSchemaForm.Unqualified)]
        public bool TerminalTableValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TerminalTable property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TerminalTableValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TerminalTable
        {
            get
            {
                if (this.TerminalTableValueSpecified)
                {
                    return this.TerminalTableValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TerminalTableValue = value.GetValueOrDefault();
                this.TerminalTableValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TransactionCodes", Order=23, Form=XmlSchemaForm.Unqualified)]
        public bool TransactionCodesValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TransactionCodes property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TransactionCodesValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TransactionCodes
        {
            get
            {
                if (this.TransactionCodesValueSpecified)
                {
                    return this.TransactionCodesValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TransactionCodesValue = value.GetValueOrDefault();
                this.TransactionCodesValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TransactionTypes", Order=24, Form=XmlSchemaForm.Unqualified)]
        public bool TransactionTypesValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TransactionTypes property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TransactionTypesValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TransactionTypes
        {
            get
            {
                if (this.TransactionTypesValueSpecified)
                {
                    return this.TransactionTypesValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TransactionTypesValue = value.GetValueOrDefault();
                this.TransactionTypesValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("WarningCodeExclList", Order=25, Form=XmlSchemaForm.Unqualified)]
        public bool WarningCodeExclListValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the WarningCodeExclList property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool WarningCodeExclListValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> WarningCodeExclList
        {
            get
            {
                if (this.WarningCodeExclListValueSpecified)
                {
                    return this.WarningCodeExclListValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.WarningCodeExclListValue = value.GetValueOrDefault();
                this.WarningCodeExclListValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("WarningCodeInclList", Order=26, Form=XmlSchemaForm.Unqualified)]
        public bool WarningCodeInclListValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the WarningCodeInclList property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool WarningCodeInclListValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> WarningCodeInclList
        {
            get
            {
                if (this.WarningCodeInclListValueSpecified)
                {
                    return this.WarningCodeInclListValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.WarningCodeInclListValue = value.GetValueOrDefault();
                this.WarningCodeInclListValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("Version_1", Order=27, Form=XmlSchemaForm.Unqualified)]
        public ParameterService.VersionType Version1 { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<XmlElement> _any;
        
        [XmlAnyElementAttribute(Order=28)]
        public Collection<XmlElement> Any
        {
            get
            {
                return _any;
            }
            set
            {
                _any = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return ((this.Any != null) 
                            && (this.Any.Count != 0));
            }
        }
    }
}
