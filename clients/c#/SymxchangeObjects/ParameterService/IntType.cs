//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 2.1.1182.0 using the following command:
// xscgen C:\Users\tbuese\Desktop\Symxchange\ParameterService/*.xsd --sf --un --uc --order --cn -0 --collectionSettersMode=Public -o C:\Users\tbuese\Desktop\Symxchange\ParameterService\generated-output -n ParameterService
namespace ParameterService
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.Diagnostics;
    using System.Xml;
    using System.Xml.Schema;
    using System.Xml.Serialization;
    
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1182.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("IntType", Namespace="http://www.symxchange.generated.symitar.com/crud/parameter/dto/retrieve")]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    [XmlRootAttribute("IntType", Namespace="http://www.symxchange.generated.symitar.com/crud/parameter/dto/retrieve")]
    public partial class IntType
    {
        
        [XmlIgnoreAttribute()]
        private Collection<IntTypeBalXferVarRateIndicator> _balXferVarRateIndicator;
        
        [XmlElementAttribute("BalXferVarRateIndicator", Order=0, Form=XmlSchemaForm.Unqualified)]
        public Collection<IntTypeBalXferVarRateIndicator> BalXferVarRateIndicator
        {
            get
            {
                return _balXferVarRateIndicator;
            }
            set
            {
                _balXferVarRateIndicator = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the BalXferVarRateIndicator collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool BalXferVarRateIndicatorSpecified
        {
            get
            {
                return ((this.BalXferVarRateIndicator != null) 
                            && (this.BalXferVarRateIndicator.Count != 0));
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="IntType" /> class.</para>
        /// </summary>
        public IntType()
        {
            this._balXferVarRateIndicator = new Collection<IntTypeBalXferVarRateIndicator>();
            this._balanceXfrInterestRate = new Collection<IntTypeBalanceXfrInterestRate>();
            this._balanceXfrSplitBal = new Collection<IntTypeBalanceXfrSplitBal>();
            this._balanceXfrSplitRate = new Collection<IntTypeBalanceXfrSplitRate>();
            this._cashAdvVarRateIndicator = new Collection<IntTypeCashAdvVarRateIndicator>();
            this._cashAdvanceInterestRate = new Collection<IntTypeCashAdvanceInterestRate>();
            this._cashAdvanceSplitBal = new Collection<IntTypeCashAdvanceSplitBal>();
            this._cashAdvanceSplitRate = new Collection<IntTypeCashAdvanceSplitRate>();
            this._promoBtDraftRangeHigh = new Collection<IntTypePromoBtDraftRangeHigh>();
            this._promoBtDraftRangeLow = new Collection<IntTypePromoBtDraftRangeLow>();
            this._promoCaDraftRangeHigh = new Collection<IntTypePromoCaDraftRangeHigh>();
            this._promoCaDraftRangeLow = new Collection<IntTypePromoCaDraftRangeLow>();
            this._promoExpirationDate = new Collection<IntTypePromoExpirationDate>();
            this._promoExpirationDays = new Collection<IntTypePromoExpirationDays>();
            this._promoNewTransApplication = new Collection<IntTypePromoNewTransApplication>();
            this._promoTerminationDate = new Collection<IntTypePromoTerminationDate>();
            this._promoTerminationDays = new Collection<IntTypePromoTerminationDays>();
            this._purchaseInterestRate = new Collection<IntTypePurchaseInterestRate>();
            this._purchaseSplitBal = new Collection<IntTypePurchaseSplitBal>();
            this._purchaseSplitRate = new Collection<IntTypePurchaseSplitRate>();
            this._purchaseVarRateIndicator = new Collection<IntTypePurchaseVarRateIndicator>();
            this._rateSetPmtApplication = new Collection<IntTypeRateSetPmtApplication>();
            this._any = new Collection<XmlElement>();
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BalanceXfrGraceOption", Order=1, Form=XmlSchemaForm.Unqualified)]
        public short BalanceXfrGraceOptionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BalanceXfrGraceOption property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BalanceXfrGraceOptionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> BalanceXfrGraceOption
        {
            get
            {
                if (this.BalanceXfrGraceOptionValueSpecified)
                {
                    return this.BalanceXfrGraceOptionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BalanceXfrGraceOptionValue = value.GetValueOrDefault();
                this.BalanceXfrGraceOptionValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<IntTypeBalanceXfrInterestRate> _balanceXfrInterestRate;
        
        [XmlElementAttribute("BalanceXfrInterestRate", Order=2, Form=XmlSchemaForm.Unqualified)]
        public Collection<IntTypeBalanceXfrInterestRate> BalanceXfrInterestRate
        {
            get
            {
                return _balanceXfrInterestRate;
            }
            set
            {
                _balanceXfrInterestRate = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the BalanceXfrInterestRate collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool BalanceXfrInterestRateSpecified
        {
            get
            {
                return ((this.BalanceXfrInterestRate != null) 
                            && (this.BalanceXfrInterestRate.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<IntTypeBalanceXfrSplitBal> _balanceXfrSplitBal;
        
        [XmlElementAttribute("BalanceXfrSplitBal", Order=3, Form=XmlSchemaForm.Unqualified)]
        public Collection<IntTypeBalanceXfrSplitBal> BalanceXfrSplitBal
        {
            get
            {
                return _balanceXfrSplitBal;
            }
            set
            {
                _balanceXfrSplitBal = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the BalanceXfrSplitBal collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool BalanceXfrSplitBalSpecified
        {
            get
            {
                return ((this.BalanceXfrSplitBal != null) 
                            && (this.BalanceXfrSplitBal.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<IntTypeBalanceXfrSplitRate> _balanceXfrSplitRate;
        
        [XmlElementAttribute("BalanceXfrSplitRate", Order=4, Form=XmlSchemaForm.Unqualified)]
        public Collection<IntTypeBalanceXfrSplitRate> BalanceXfrSplitRate
        {
            get
            {
                return _balanceXfrSplitRate;
            }
            set
            {
                _balanceXfrSplitRate = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the BalanceXfrSplitRate collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool BalanceXfrSplitRateSpecified
        {
            get
            {
                return ((this.BalanceXfrSplitRate != null) 
                            && (this.BalanceXfrSplitRate.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BalanceXfrTranBase", Order=5, Form=XmlSchemaForm.Unqualified)]
        public decimal BalanceXfrTranBaseValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BalanceXfrTranBase property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BalanceXfrTranBaseValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<decimal> BalanceXfrTranBase
        {
            get
            {
                if (this.BalanceXfrTranBaseValueSpecified)
                {
                    return this.BalanceXfrTranBaseValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BalanceXfrTranBaseValue = value.GetValueOrDefault();
                this.BalanceXfrTranBaseValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BalanceXfrTranFeeCode", Order=6, Form=XmlSchemaForm.Unqualified)]
        public short BalanceXfrTranFeeCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BalanceXfrTranFeeCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BalanceXfrTranFeeCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> BalanceXfrTranFeeCode
        {
            get
            {
                if (this.BalanceXfrTranFeeCodeValueSpecified)
                {
                    return this.BalanceXfrTranFeeCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BalanceXfrTranFeeCodeValue = value.GetValueOrDefault();
                this.BalanceXfrTranFeeCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BalanceXfrTranMax", Order=7, Form=XmlSchemaForm.Unqualified)]
        public decimal BalanceXfrTranMaxValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BalanceXfrTranMax property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BalanceXfrTranMaxValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<decimal> BalanceXfrTranMax
        {
            get
            {
                if (this.BalanceXfrTranMaxValueSpecified)
                {
                    return this.BalanceXfrTranMaxValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BalanceXfrTranMaxValue = value.GetValueOrDefault();
                this.BalanceXfrTranMaxValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BalanceXfrTranMin", Order=8, Form=XmlSchemaForm.Unqualified)]
        public decimal BalanceXfrTranMinValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BalanceXfrTranMin property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BalanceXfrTranMinValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<decimal> BalanceXfrTranMin
        {
            get
            {
                if (this.BalanceXfrTranMinValueSpecified)
                {
                    return this.BalanceXfrTranMinValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BalanceXfrTranMinValue = value.GetValueOrDefault();
                this.BalanceXfrTranMinValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BalanceXfrTranOption", Order=9, Form=XmlSchemaForm.Unqualified)]
        public short BalanceXfrTranOptionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BalanceXfrTranOption property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BalanceXfrTranOptionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> BalanceXfrTranOption
        {
            get
            {
                if (this.BalanceXfrTranOptionValueSpecified)
                {
                    return this.BalanceXfrTranOptionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BalanceXfrTranOptionValue = value.GetValueOrDefault();
                this.BalanceXfrTranOptionValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BalanceXfrTranRate", Order=10, Form=XmlSchemaForm.Unqualified)]
        public decimal BalanceXfrTranRateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BalanceXfrTranRate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BalanceXfrTranRateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<decimal> BalanceXfrTranRate
        {
            get
            {
                if (this.BalanceXfrTranRateValueSpecified)
                {
                    return this.BalanceXfrTranRateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BalanceXfrTranRateValue = value.GetValueOrDefault();
                this.BalanceXfrTranRateValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("BtDraftRangeHigh", Order=11, Form=XmlSchemaForm.Unqualified)]
        public string BtDraftRangeHigh { get; set; }
        
        [XmlElementAttribute("BtDraftRangeLow", Order=12, Form=XmlSchemaForm.Unqualified)]
        public string BtDraftRangeLow { get; set; }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BtInterestPeriodOption", Order=13, Form=XmlSchemaForm.Unqualified)]
        public short BtInterestPeriodOptionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BtInterestPeriodOption property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BtInterestPeriodOptionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> BtInterestPeriodOption
        {
            get
            {
                if (this.BtInterestPeriodOptionValueSpecified)
                {
                    return this.BtInterestPeriodOptionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BtInterestPeriodOptionValue = value.GetValueOrDefault();
                this.BtInterestPeriodOptionValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("CaDraftRangeHigh", Order=14, Form=XmlSchemaForm.Unqualified)]
        public string CaDraftRangeHigh { get; set; }
        
        [XmlElementAttribute("CaDraftRangeLow", Order=15, Form=XmlSchemaForm.Unqualified)]
        public string CaDraftRangeLow { get; set; }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CaInterestPeriodOption", Order=16, Form=XmlSchemaForm.Unqualified)]
        public short CaInterestPeriodOptionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CaInterestPeriodOption property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CaInterestPeriodOptionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> CaInterestPeriodOption
        {
            get
            {
                if (this.CaInterestPeriodOptionValueSpecified)
                {
                    return this.CaInterestPeriodOptionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CaInterestPeriodOptionValue = value.GetValueOrDefault();
                this.CaInterestPeriodOptionValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CashAdvTranBase", Order=17, Form=XmlSchemaForm.Unqualified)]
        public decimal CashAdvTranBaseValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CashAdvTranBase property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CashAdvTranBaseValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<decimal> CashAdvTranBase
        {
            get
            {
                if (this.CashAdvTranBaseValueSpecified)
                {
                    return this.CashAdvTranBaseValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CashAdvTranBaseValue = value.GetValueOrDefault();
                this.CashAdvTranBaseValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CashAdvTranFeeCode", Order=18, Form=XmlSchemaForm.Unqualified)]
        public short CashAdvTranFeeCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CashAdvTranFeeCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CashAdvTranFeeCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> CashAdvTranFeeCode
        {
            get
            {
                if (this.CashAdvTranFeeCodeValueSpecified)
                {
                    return this.CashAdvTranFeeCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CashAdvTranFeeCodeValue = value.GetValueOrDefault();
                this.CashAdvTranFeeCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CashAdvTranMax", Order=19, Form=XmlSchemaForm.Unqualified)]
        public decimal CashAdvTranMaxValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CashAdvTranMax property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CashAdvTranMaxValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<decimal> CashAdvTranMax
        {
            get
            {
                if (this.CashAdvTranMaxValueSpecified)
                {
                    return this.CashAdvTranMaxValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CashAdvTranMaxValue = value.GetValueOrDefault();
                this.CashAdvTranMaxValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CashAdvTranMin", Order=20, Form=XmlSchemaForm.Unqualified)]
        public decimal CashAdvTranMinValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CashAdvTranMin property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CashAdvTranMinValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<decimal> CashAdvTranMin
        {
            get
            {
                if (this.CashAdvTranMinValueSpecified)
                {
                    return this.CashAdvTranMinValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CashAdvTranMinValue = value.GetValueOrDefault();
                this.CashAdvTranMinValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CashAdvTranOption", Order=21, Form=XmlSchemaForm.Unqualified)]
        public short CashAdvTranOptionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CashAdvTranOption property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CashAdvTranOptionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> CashAdvTranOption
        {
            get
            {
                if (this.CashAdvTranOptionValueSpecified)
                {
                    return this.CashAdvTranOptionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CashAdvTranOptionValue = value.GetValueOrDefault();
                this.CashAdvTranOptionValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CashAdvTranRate", Order=22, Form=XmlSchemaForm.Unqualified)]
        public decimal CashAdvTranRateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CashAdvTranRate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CashAdvTranRateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<decimal> CashAdvTranRate
        {
            get
            {
                if (this.CashAdvTranRateValueSpecified)
                {
                    return this.CashAdvTranRateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CashAdvTranRateValue = value.GetValueOrDefault();
                this.CashAdvTranRateValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<IntTypeCashAdvVarRateIndicator> _cashAdvVarRateIndicator;
        
        [XmlElementAttribute("CashAdvVarRateIndicator", Order=23, Form=XmlSchemaForm.Unqualified)]
        public Collection<IntTypeCashAdvVarRateIndicator> CashAdvVarRateIndicator
        {
            get
            {
                return _cashAdvVarRateIndicator;
            }
            set
            {
                _cashAdvVarRateIndicator = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CashAdvVarRateIndicator collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool CashAdvVarRateIndicatorSpecified
        {
            get
            {
                return ((this.CashAdvVarRateIndicator != null) 
                            && (this.CashAdvVarRateIndicator.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CashAdvanceGraceOption", Order=24, Form=XmlSchemaForm.Unqualified)]
        public short CashAdvanceGraceOptionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CashAdvanceGraceOption property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CashAdvanceGraceOptionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> CashAdvanceGraceOption
        {
            get
            {
                if (this.CashAdvanceGraceOptionValueSpecified)
                {
                    return this.CashAdvanceGraceOptionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CashAdvanceGraceOptionValue = value.GetValueOrDefault();
                this.CashAdvanceGraceOptionValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<IntTypeCashAdvanceInterestRate> _cashAdvanceInterestRate;
        
        [XmlElementAttribute("CashAdvanceInterestRate", Order=25, Form=XmlSchemaForm.Unqualified)]
        public Collection<IntTypeCashAdvanceInterestRate> CashAdvanceInterestRate
        {
            get
            {
                return _cashAdvanceInterestRate;
            }
            set
            {
                _cashAdvanceInterestRate = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CashAdvanceInterestRate collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool CashAdvanceInterestRateSpecified
        {
            get
            {
                return ((this.CashAdvanceInterestRate != null) 
                            && (this.CashAdvanceInterestRate.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<IntTypeCashAdvanceSplitBal> _cashAdvanceSplitBal;
        
        [XmlElementAttribute("CashAdvanceSplitBal", Order=26, Form=XmlSchemaForm.Unqualified)]
        public Collection<IntTypeCashAdvanceSplitBal> CashAdvanceSplitBal
        {
            get
            {
                return _cashAdvanceSplitBal;
            }
            set
            {
                _cashAdvanceSplitBal = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CashAdvanceSplitBal collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool CashAdvanceSplitBalSpecified
        {
            get
            {
                return ((this.CashAdvanceSplitBal != null) 
                            && (this.CashAdvanceSplitBal.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<IntTypeCashAdvanceSplitRate> _cashAdvanceSplitRate;
        
        [XmlElementAttribute("CashAdvanceSplitRate", Order=27, Form=XmlSchemaForm.Unqualified)]
        public Collection<IntTypeCashAdvanceSplitRate> CashAdvanceSplitRate
        {
            get
            {
                return _cashAdvanceSplitRate;
            }
            set
            {
                _cashAdvanceSplitRate = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CashAdvanceSplitRate collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool CashAdvanceSplitRateSpecified
        {
            get
            {
                return ((this.CashAdvanceSplitRate != null) 
                            && (this.CashAdvanceSplitRate.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditBalanceOption", Order=28, Form=XmlSchemaForm.Unqualified)]
        public short CreditBalanceOptionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditBalanceOption property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditBalanceOptionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> CreditBalanceOption
        {
            get
            {
                if (this.CreditBalanceOptionValueSpecified)
                {
                    return this.CreditBalanceOptionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditBalanceOptionValue = value.GetValueOrDefault();
                this.CreditBalanceOptionValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CutoffDefaultDays", Order=29, Form=XmlSchemaForm.Unqualified)]
        public short CutoffDefaultDaysValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CutoffDefaultDays property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CutoffDefaultDaysValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> CutoffDefaultDays
        {
            get
            {
                if (this.CutoffDefaultDaysValueSpecified)
                {
                    return this.CutoffDefaultDaysValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CutoffDefaultDaysValue = value.GetValueOrDefault();
                this.CutoffDefaultDaysValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CutoffDefaultOption", Order=30, Form=XmlSchemaForm.Unqualified)]
        public short CutoffDefaultOptionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CutoffDefaultOption property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CutoffDefaultOptionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> CutoffDefaultOption
        {
            get
            {
                if (this.CutoffDefaultOptionValueSpecified)
                {
                    return this.CutoffDefaultOptionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CutoffDefaultOptionValue = value.GetValueOrDefault();
                this.CutoffDefaultOptionValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("Description", Order=31, Form=XmlSchemaForm.Unqualified)]
        public string Description { get; set; }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("FixedPaymentServiceCode", Order=32, Form=XmlSchemaForm.Unqualified)]
        public short FixedPaymentServiceCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FixedPaymentServiceCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FixedPaymentServiceCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> FixedPaymentServiceCode
        {
            get
            {
                if (this.FixedPaymentServiceCodeValueSpecified)
                {
                    return this.FixedPaymentServiceCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FixedPaymentServiceCodeValue = value.GetValueOrDefault();
                this.FixedPaymentServiceCodeValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("GraceApplicationOrder", Order=33, Form=XmlSchemaForm.Unqualified)]
        public string GraceApplicationOrder { get; set; }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("GraceCreditVoucherOption", Order=34, Form=XmlSchemaForm.Unqualified)]
        public short GraceCreditVoucherOptionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GraceCreditVoucherOption property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool GraceCreditVoucherOptionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> GraceCreditVoucherOption
        {
            get
            {
                if (this.GraceCreditVoucherOptionValueSpecified)
                {
                    return this.GraceCreditVoucherOptionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.GraceCreditVoucherOptionValue = value.GetValueOrDefault();
                this.GraceCreditVoucherOptionValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("GraceDayCount", Order=35, Form=XmlSchemaForm.Unqualified)]
        public short GraceDayCountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GraceDayCount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool GraceDayCountValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> GraceDayCount
        {
            get
            {
                if (this.GraceDayCountValueSpecified)
                {
                    return this.GraceDayCountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.GraceDayCountValue = value.GetValueOrDefault();
                this.GraceDayCountValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("GracePeriodEligibility", Order=36, Form=XmlSchemaForm.Unqualified)]
        public short GracePeriodEligibilityValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GracePeriodEligibility property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool GracePeriodEligibilityValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> GracePeriodEligibility
        {
            get
            {
                if (this.GracePeriodEligibilityValueSpecified)
                {
                    return this.GracePeriodEligibilityValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.GracePeriodEligibilityValue = value.GetValueOrDefault();
                this.GracePeriodEligibilityValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InterestType", Order=37, Form=XmlSchemaForm.Unqualified)]
        public short InterestTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InterestType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InterestTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> InterestType
        {
            get
            {
                if (this.InterestTypeValueSpecified)
                {
                    return this.InterestTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InterestTypeValue = value.GetValueOrDefault();
                this.InterestTypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InterestTypeMethod", Order=38, Form=XmlSchemaForm.Unqualified)]
        public short InterestTypeMethodValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InterestTypeMethod property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InterestTypeMethodValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> InterestTypeMethod
        {
            get
            {
                if (this.InterestTypeMethodValueSpecified)
                {
                    return this.InterestTypeMethodValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InterestTypeMethodValue = value.GetValueOrDefault();
                this.InterestTypeMethodValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MaximumApr", Order=39, Form=XmlSchemaForm.Unqualified)]
        public decimal MaximumAprValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MaximumApr property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MaximumAprValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<decimal> MaximumApr
        {
            get
            {
                if (this.MaximumAprValueSpecified)
                {
                    return this.MaximumAprValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MaximumAprValue = value.GetValueOrDefault();
                this.MaximumAprValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("PaymentApplication", Order=40, Form=XmlSchemaForm.Unqualified)]
        public string PaymentApplication { get; set; }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PaymentCalculationType", Order=41, Form=XmlSchemaForm.Unqualified)]
        public short PaymentCalculationTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PaymentCalculationType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PaymentCalculationTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> PaymentCalculationType
        {
            get
            {
                if (this.PaymentCalculationTypeValueSpecified)
                {
                    return this.PaymentCalculationTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PaymentCalculationTypeValue = value.GetValueOrDefault();
                this.PaymentCalculationTypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PaymentMinimum", Order=42, Form=XmlSchemaForm.Unqualified)]
        public decimal PaymentMinimumValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PaymentMinimum property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PaymentMinimumValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<decimal> PaymentMinimum
        {
            get
            {
                if (this.PaymentMinimumValueSpecified)
                {
                    return this.PaymentMinimumValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PaymentMinimumValue = value.GetValueOrDefault();
                this.PaymentMinimumValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PaymentOrder", Order=43, Form=XmlSchemaForm.Unqualified)]
        public short PaymentOrderValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PaymentOrder property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PaymentOrderValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> PaymentOrder
        {
            get
            {
                if (this.PaymentOrderValueSpecified)
                {
                    return this.PaymentOrderValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PaymentOrderValue = value.GetValueOrDefault();
                this.PaymentOrderValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PaymentOverlimitOption", Order=44, Form=XmlSchemaForm.Unqualified)]
        public short PaymentOverlimitOptionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PaymentOverlimitOption property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PaymentOverlimitOptionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> PaymentOverlimitOption
        {
            get
            {
                if (this.PaymentOverlimitOptionValueSpecified)
                {
                    return this.PaymentOverlimitOptionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PaymentOverlimitOptionValue = value.GetValueOrDefault();
                this.PaymentOverlimitOptionValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PaymentPercentage", Order=45, Form=XmlSchemaForm.Unqualified)]
        public decimal PaymentPercentageValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PaymentPercentage property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PaymentPercentageValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<decimal> PaymentPercentage
        {
            get
            {
                if (this.PaymentPercentageValueSpecified)
                {
                    return this.PaymentPercentageValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PaymentPercentageValue = value.GetValueOrDefault();
                this.PaymentPercentageValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PaymentRoundToIncrement", Order=46, Form=XmlSchemaForm.Unqualified)]
        public decimal PaymentRoundToIncrementValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PaymentRoundToIncrement property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PaymentRoundToIncrementValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<decimal> PaymentRoundToIncrement
        {
            get
            {
                if (this.PaymentRoundToIncrementValueSpecified)
                {
                    return this.PaymentRoundToIncrementValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PaymentRoundToIncrementValue = value.GetValueOrDefault();
                this.PaymentRoundToIncrementValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PaymentRoundingMethod", Order=47, Form=XmlSchemaForm.Unqualified)]
        public short PaymentRoundingMethodValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PaymentRoundingMethod property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PaymentRoundingMethodValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> PaymentRoundingMethod
        {
            get
            {
                if (this.PaymentRoundingMethodValueSpecified)
                {
                    return this.PaymentRoundingMethodValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PaymentRoundingMethodValue = value.GetValueOrDefault();
                this.PaymentRoundingMethodValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("PmtApplicationPriority", Order=48, Form=XmlSchemaForm.Unqualified)]
        public string PmtApplicationPriority { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<IntTypePromoBtDraftRangeHigh> _promoBtDraftRangeHigh;
        
        [XmlElementAttribute("PromoBtDraftRangeHigh", Order=49, Form=XmlSchemaForm.Unqualified)]
        public Collection<IntTypePromoBtDraftRangeHigh> PromoBtDraftRangeHigh
        {
            get
            {
                return _promoBtDraftRangeHigh;
            }
            set
            {
                _promoBtDraftRangeHigh = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PromoBtDraftRangeHigh collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool PromoBtDraftRangeHighSpecified
        {
            get
            {
                return ((this.PromoBtDraftRangeHigh != null) 
                            && (this.PromoBtDraftRangeHigh.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<IntTypePromoBtDraftRangeLow> _promoBtDraftRangeLow;
        
        [XmlElementAttribute("PromoBtDraftRangeLow", Order=50, Form=XmlSchemaForm.Unqualified)]
        public Collection<IntTypePromoBtDraftRangeLow> PromoBtDraftRangeLow
        {
            get
            {
                return _promoBtDraftRangeLow;
            }
            set
            {
                _promoBtDraftRangeLow = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PromoBtDraftRangeLow collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool PromoBtDraftRangeLowSpecified
        {
            get
            {
                return ((this.PromoBtDraftRangeLow != null) 
                            && (this.PromoBtDraftRangeLow.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<IntTypePromoCaDraftRangeHigh> _promoCaDraftRangeHigh;
        
        [XmlElementAttribute("PromoCaDraftRangeHigh", Order=51, Form=XmlSchemaForm.Unqualified)]
        public Collection<IntTypePromoCaDraftRangeHigh> PromoCaDraftRangeHigh
        {
            get
            {
                return _promoCaDraftRangeHigh;
            }
            set
            {
                _promoCaDraftRangeHigh = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PromoCaDraftRangeHigh collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool PromoCaDraftRangeHighSpecified
        {
            get
            {
                return ((this.PromoCaDraftRangeHigh != null) 
                            && (this.PromoCaDraftRangeHigh.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<IntTypePromoCaDraftRangeLow> _promoCaDraftRangeLow;
        
        [XmlElementAttribute("PromoCaDraftRangeLow", Order=52, Form=XmlSchemaForm.Unqualified)]
        public Collection<IntTypePromoCaDraftRangeLow> PromoCaDraftRangeLow
        {
            get
            {
                return _promoCaDraftRangeLow;
            }
            set
            {
                _promoCaDraftRangeLow = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PromoCaDraftRangeLow collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool PromoCaDraftRangeLowSpecified
        {
            get
            {
                return ((this.PromoCaDraftRangeLow != null) 
                            && (this.PromoCaDraftRangeLow.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<IntTypePromoExpirationDate> _promoExpirationDate;
        
        [XmlElementAttribute("PromoExpirationDate", Order=53, Form=XmlSchemaForm.Unqualified)]
        public Collection<IntTypePromoExpirationDate> PromoExpirationDate
        {
            get
            {
                return _promoExpirationDate;
            }
            set
            {
                _promoExpirationDate = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PromoExpirationDate collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool PromoExpirationDateSpecified
        {
            get
            {
                return ((this.PromoExpirationDate != null) 
                            && (this.PromoExpirationDate.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<IntTypePromoExpirationDays> _promoExpirationDays;
        
        [XmlElementAttribute("PromoExpirationDays", Order=54, Form=XmlSchemaForm.Unqualified)]
        public Collection<IntTypePromoExpirationDays> PromoExpirationDays
        {
            get
            {
                return _promoExpirationDays;
            }
            set
            {
                _promoExpirationDays = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PromoExpirationDays collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool PromoExpirationDaysSpecified
        {
            get
            {
                return ((this.PromoExpirationDays != null) 
                            && (this.PromoExpirationDays.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<IntTypePromoNewTransApplication> _promoNewTransApplication;
        
        [XmlElementAttribute("PromoNewTransApplication", Order=55, Form=XmlSchemaForm.Unqualified)]
        public Collection<IntTypePromoNewTransApplication> PromoNewTransApplication
        {
            get
            {
                return _promoNewTransApplication;
            }
            set
            {
                _promoNewTransApplication = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PromoNewTransApplication collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool PromoNewTransApplicationSpecified
        {
            get
            {
                return ((this.PromoNewTransApplication != null) 
                            && (this.PromoNewTransApplication.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<IntTypePromoTerminationDate> _promoTerminationDate;
        
        [XmlElementAttribute("PromoTerminationDate", Order=56, Form=XmlSchemaForm.Unqualified)]
        public Collection<IntTypePromoTerminationDate> PromoTerminationDate
        {
            get
            {
                return _promoTerminationDate;
            }
            set
            {
                _promoTerminationDate = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PromoTerminationDate collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool PromoTerminationDateSpecified
        {
            get
            {
                return ((this.PromoTerminationDate != null) 
                            && (this.PromoTerminationDate.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<IntTypePromoTerminationDays> _promoTerminationDays;
        
        [XmlElementAttribute("PromoTerminationDays", Order=57, Form=XmlSchemaForm.Unqualified)]
        public Collection<IntTypePromoTerminationDays> PromoTerminationDays
        {
            get
            {
                return _promoTerminationDays;
            }
            set
            {
                _promoTerminationDays = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PromoTerminationDays collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool PromoTerminationDaysSpecified
        {
            get
            {
                return ((this.PromoTerminationDays != null) 
                            && (this.PromoTerminationDays.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PuInterestPeriodOption", Order=58, Form=XmlSchemaForm.Unqualified)]
        public short PuInterestPeriodOptionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PuInterestPeriodOption property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PuInterestPeriodOptionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> PuInterestPeriodOption
        {
            get
            {
                if (this.PuInterestPeriodOptionValueSpecified)
                {
                    return this.PuInterestPeriodOptionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PuInterestPeriodOptionValue = value.GetValueOrDefault();
                this.PuInterestPeriodOptionValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PurchaseGraceOption", Order=59, Form=XmlSchemaForm.Unqualified)]
        public short PurchaseGraceOptionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PurchaseGraceOption property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PurchaseGraceOptionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> PurchaseGraceOption
        {
            get
            {
                if (this.PurchaseGraceOptionValueSpecified)
                {
                    return this.PurchaseGraceOptionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PurchaseGraceOptionValue = value.GetValueOrDefault();
                this.PurchaseGraceOptionValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<IntTypePurchaseInterestRate> _purchaseInterestRate;
        
        [XmlElementAttribute("PurchaseInterestRate", Order=60, Form=XmlSchemaForm.Unqualified)]
        public Collection<IntTypePurchaseInterestRate> PurchaseInterestRate
        {
            get
            {
                return _purchaseInterestRate;
            }
            set
            {
                _purchaseInterestRate = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PurchaseInterestRate collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool PurchaseInterestRateSpecified
        {
            get
            {
                return ((this.PurchaseInterestRate != null) 
                            && (this.PurchaseInterestRate.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<IntTypePurchaseSplitBal> _purchaseSplitBal;
        
        [XmlElementAttribute("PurchaseSplitBal", Order=61, Form=XmlSchemaForm.Unqualified)]
        public Collection<IntTypePurchaseSplitBal> PurchaseSplitBal
        {
            get
            {
                return _purchaseSplitBal;
            }
            set
            {
                _purchaseSplitBal = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PurchaseSplitBal collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool PurchaseSplitBalSpecified
        {
            get
            {
                return ((this.PurchaseSplitBal != null) 
                            && (this.PurchaseSplitBal.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<IntTypePurchaseSplitRate> _purchaseSplitRate;
        
        [XmlElementAttribute("PurchaseSplitRate", Order=62, Form=XmlSchemaForm.Unqualified)]
        public Collection<IntTypePurchaseSplitRate> PurchaseSplitRate
        {
            get
            {
                return _purchaseSplitRate;
            }
            set
            {
                _purchaseSplitRate = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PurchaseSplitRate collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool PurchaseSplitRateSpecified
        {
            get
            {
                return ((this.PurchaseSplitRate != null) 
                            && (this.PurchaseSplitRate.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<IntTypePurchaseVarRateIndicator> _purchaseVarRateIndicator;
        
        [XmlElementAttribute("PurchaseVarRateIndicator", Order=63, Form=XmlSchemaForm.Unqualified)]
        public Collection<IntTypePurchaseVarRateIndicator> PurchaseVarRateIndicator
        {
            get
            {
                return _purchaseVarRateIndicator;
            }
            set
            {
                _purchaseVarRateIndicator = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PurchaseVarRateIndicator collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool PurchaseVarRateIndicatorSpecified
        {
            get
            {
                return ((this.PurchaseVarRateIndicator != null) 
                            && (this.PurchaseVarRateIndicator.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<IntTypeRateSetPmtApplication> _rateSetPmtApplication;
        
        [XmlElementAttribute("RateSetPmtApplication", Order=64, Form=XmlSchemaForm.Unqualified)]
        public Collection<IntTypeRateSetPmtApplication> RateSetPmtApplication
        {
            get
            {
                return _rateSetPmtApplication;
            }
            set
            {
                _rateSetPmtApplication = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RateSetPmtApplication collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool RateSetPmtApplicationSpecified
        {
            get
            {
                return ((this.RateSetPmtApplication != null) 
                            && (this.RateSetPmtApplication.Count != 0));
            }
        }
        
        [XmlElementAttribute("Version_1", Order=65, Form=XmlSchemaForm.Unqualified)]
        public ParameterService.VersionType Version1 { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<XmlElement> _any;
        
        [XmlAnyElementAttribute(Order=66)]
        public Collection<XmlElement> Any
        {
            get
            {
                return _any;
            }
            set
            {
                _any = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return ((this.Any != null) 
                            && (this.Any.Count != 0));
            }
        }
    }
}
