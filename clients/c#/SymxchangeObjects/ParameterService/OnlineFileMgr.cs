//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 2.1.1182.0 using the following command:
// xscgen C:\Users\tbuese\Desktop\Symxchange\ParameterService/*.xsd --sf --un --uc --order --cn -0 --collectionSettersMode=Public -o C:\Users\tbuese\Desktop\Symxchange\ParameterService\generated-output -n ParameterService
namespace ParameterService
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.Diagnostics;
    using System.Xml;
    using System.Xml.Schema;
    using System.Xml.Serialization;
    
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1182.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("OnlineFileMgr", Namespace="http://www.symxchange.generated.symitar.com/crud/parameter/dto/retrieve")]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    [XmlRootAttribute("OnlineFileMgr", Namespace="http://www.symxchange.generated.symitar.com/crud/parameter/dto/retrieve")]
    public partial class OnlineFileMgr
    {
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CycleActiveFrom", Order=0, Form=XmlSchemaForm.Unqualified)]
        public short CycleActiveFromValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CycleActiveFrom property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CycleActiveFromValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> CycleActiveFrom
        {
            get
            {
                if (this.CycleActiveFromValueSpecified)
                {
                    return this.CycleActiveFromValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CycleActiveFromValue = value.GetValueOrDefault();
                this.CycleActiveFromValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CycleActiveUntil", Order=1, Form=XmlSchemaForm.Unqualified)]
        public short CycleActiveUntilValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CycleActiveUntil property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CycleActiveUntilValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> CycleActiveUntil
        {
            get
            {
                if (this.CycleActiveUntilValueSpecified)
                {
                    return this.CycleActiveUntilValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CycleActiveUntilValue = value.GetValueOrDefault();
                this.CycleActiveUntilValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HighPriorityFraudTrackType", Order=2, Form=XmlSchemaForm.Unqualified)]
        public short HighPriorityFraudTrackTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HighPriorityFraudTrackType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HighPriorityFraudTrackTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> HighPriorityFraudTrackType
        {
            get
            {
                if (this.HighPriorityFraudTrackTypeValueSpecified)
                {
                    return this.HighPriorityFraudTrackTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HighPriorityFraudTrackTypeValue = value.GetValueOrDefault();
                this.HighPriorityFraudTrackTypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("JournalFormat", Order=3, Form=XmlSchemaForm.Unqualified)]
        public short JournalFormatValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the JournalFormat property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool JournalFormatValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> JournalFormat
        {
            get
            {
                if (this.JournalFormatValueSpecified)
                {
                    return this.JournalFormatValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.JournalFormatValue = value.GetValueOrDefault();
                this.JournalFormatValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PauseBetweenCycles", Order=4, Form=XmlSchemaForm.Unqualified)]
        public short PauseBetweenCyclesValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PauseBetweenCycles property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PauseBetweenCyclesValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> PauseBetweenCycles
        {
            get
            {
                if (this.PauseBetweenCyclesValueSpecified)
                {
                    return this.PauseBetweenCyclesValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PauseBetweenCyclesValue = value.GetValueOrDefault();
                this.PauseBetweenCyclesValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SaveRejectedMsgsInDialog", Order=5, Form=XmlSchemaForm.Unqualified)]
        public bool SaveRejectedMsgsInDialogValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SaveRejectedMsgsInDialog property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SaveRejectedMsgsInDialogValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SaveRejectedMsgsInDialog
        {
            get
            {
                if (this.SaveRejectedMsgsInDialogValueSpecified)
                {
                    return this.SaveRejectedMsgsInDialogValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SaveRejectedMsgsInDialogValue = value.GetValueOrDefault();
                this.SaveRejectedMsgsInDialogValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SendDeleteOnDataException", Order=6, Form=XmlSchemaForm.Unqualified)]
        public bool SendDeleteOnDataExceptionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SendDeleteOnDataException property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SendDeleteOnDataExceptionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SendDeleteOnDataException
        {
            get
            {
                if (this.SendDeleteOnDataExceptionValueSpecified)
                {
                    return this.SendDeleteOnDataExceptionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SendDeleteOnDataExceptionValue = value.GetValueOrDefault();
                this.SendDeleteOnDataExceptionValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("Version_1", Order=7, Form=XmlSchemaForm.Unqualified)]
        public ParameterService.VersionType Version1 { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<XmlElement> _any;
        
        [XmlAnyElementAttribute(Order=8)]
        public Collection<XmlElement> Any
        {
            get
            {
                return _any;
            }
            set
            {
                _any = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return ((this.Any != null) 
                            && (this.Any.Count != 0));
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="OnlineFileMgr" /> class.</para>
        /// </summary>
        public OnlineFileMgr()
        {
            this._any = new Collection<XmlElement>();
        }
    }
}
