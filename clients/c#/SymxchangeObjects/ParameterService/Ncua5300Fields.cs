//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 2.1.1182.0 using the following command:
// xscgen C:\Users\tbuese\Desktop\Symxchange\ParameterService/*.xsd --sf --un --uc --order --cn -0 --collectionSettersMode=Public -o C:\Users\tbuese\Desktop\Symxchange\ParameterService\generated-output -n ParameterService
namespace ParameterService
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.Diagnostics;
    using System.Xml;
    using System.Xml.Schema;
    using System.Xml.Serialization;
    
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1182.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("Ncua5300Fields", Namespace="http://www.symxchange.generated.symitar.com/crud/parameter/dto/retrieve")]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    [XmlRootAttribute("Ncua5300Fields", Namespace="http://www.symxchange.generated.symitar.com/crud/parameter/dto/retrieve")]
    public partial class Ncua5300Fields
    {
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AccruedDividends", Order=0, Form=XmlSchemaForm.Unqualified)]
        public bool AccruedDividendsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AccruedDividends property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AccruedDividendsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AccruedDividends
        {
            get
            {
                if (this.AccruedDividendsValueSpecified)
                {
                    return this.AccruedDividendsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AccruedDividendsValue = value.GetValueOrDefault();
                this.AccruedDividendsValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AccruedInterestonInvestment", Order=1, Form=XmlSchemaForm.Unqualified)]
        public bool AccruedInterestonInvestmentValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AccruedInterestonInvestment property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AccruedInterestonInvestmentValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AccruedInterestonInvestment
        {
            get
            {
                if (this.AccruedInterestonInvestmentValueSpecified)
                {
                    return this.AccruedInterestonInvestmentValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AccruedInterestonInvestmentValue = value.GetValueOrDefault();
                this.AccruedInterestonInvestmentValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AccruedInterestonLoans", Order=2, Form=XmlSchemaForm.Unqualified)]
        public bool AccruedInterestonLoansValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AccruedInterestonLoans property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AccruedInterestonLoansValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AccruedInterestonLoans
        {
            get
            {
                if (this.AccruedInterestonLoansValueSpecified)
                {
                    return this.AccruedInterestonLoansValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AccruedInterestonLoansValue = value.GetValueOrDefault();
                this.AccruedInterestonLoansValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AccumGainsAvailSale", Order=3, Form=XmlSchemaForm.Unqualified)]
        public bool AccumGainsAvailSaleValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AccumGainsAvailSale property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AccumGainsAvailSaleValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AccumGainsAvailSale
        {
            get
            {
                if (this.AccumGainsAvailSaleValueSpecified)
                {
                    return this.AccumGainsAvailSaleValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AccumGainsAvailSaleValue = value.GetValueOrDefault();
                this.AccumGainsAvailSaleValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AccumGainsCashFlow", Order=4, Form=XmlSchemaForm.Unqualified)]
        public bool AccumGainsCashFlowValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AccumGainsCashFlow property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AccumGainsCashFlowValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AccumGainsCashFlow
        {
            get
            {
                if (this.AccumGainsCashFlowValueSpecified)
                {
                    return this.AccumGainsCashFlowValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AccumGainsCashFlowValue = value.GetValueOrDefault();
                this.AccumGainsCashFlowValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AgriculturalLoans", Order=5, Form=XmlSchemaForm.Unqualified)]
        public bool AgriculturalLoansValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AgriculturalLoans property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AgriculturalLoansValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AgriculturalLoans
        {
            get
            {
                if (this.AgriculturalLoansValueSpecified)
                {
                    return this.AgriculturalLoansValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AgriculturalLoansValue = value.GetValueOrDefault();
                this.AgriculturalLoansValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AllBankruptcyWarnList", Order=6, Form=XmlSchemaForm.Unqualified)]
        public bool AllBankruptcyWarnListValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AllBankruptcyWarnList property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AllBankruptcyWarnListValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AllBankruptcyWarnList
        {
            get
            {
                if (this.AllBankruptcyWarnListValueSpecified)
                {
                    return this.AllBankruptcyWarnListValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AllBankruptcyWarnListValue = value.GetValueOrDefault();
                this.AllBankruptcyWarnListValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _allOtherAssets;
        
        [XmlElementAttribute("AllOtherAssets", Order=7, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> AllOtherAssets
        {
            get
            {
                return _allOtherAssets;
            }
            set
            {
                _allOtherAssets = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the AllOtherAssets collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool AllOtherAssetsSpecified
        {
            get
            {
                return ((this.AllOtherAssets != null) 
                            && (this.AllOtherAssets.Count != 0));
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Ncua5300Fields" /> class.</para>
        /// </summary>
        public Ncua5300Fields()
        {
            this._allOtherAssets = new Collection<short>();
            this._tAggrCashOutlayInCuso = new Collection<short>();
            this._tAmountLoanedToCuso = new Collection<short>();
            this._tNameOfCuso = new Collection<short>();
            this._tValueOfInvInCuso = new Collection<short>();
            this._any = new Collection<XmlElement>();
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AllOtherInvestments", Order=8, Form=XmlSchemaForm.Unqualified)]
        public bool AllOtherInvestmentsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AllOtherInvestments property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AllOtherInvestmentsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AllOtherInvestments
        {
            get
            {
                if (this.AllOtherInvestmentsValueSpecified)
                {
                    return this.AllOtherInvestmentsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AllOtherInvestmentsValue = value.GetValueOrDefault();
                this.AllOtherInvestmentsValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AllOtherInvestmtCcu", Order=9, Form=XmlSchemaForm.Unqualified)]
        public bool AllOtherInvestmtCcuValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AllOtherInvestmtCcu property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AllOtherInvestmtCcuValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AllOtherInvestmtCcu
        {
            get
            {
                if (this.AllOtherInvestmtCcuValueSpecified)
                {
                    return this.AllOtherInvestmtCcuValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AllOtherInvestmtCcuValue = value.GetValueOrDefault();
                this.AllOtherInvestmtCcuValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AllOtherNonRealEstLoans", Order=10, Form=XmlSchemaForm.Unqualified)]
        public bool AllOtherNonRealEstLoansValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AllOtherNonRealEstLoans property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AllOtherNonRealEstLoansValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AllOtherNonRealEstLoans
        {
            get
            {
                if (this.AllOtherNonRealEstLoansValueSpecified)
                {
                    return this.AllOtherNonRealEstLoansValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AllOtherNonRealEstLoansValue = value.GetValueOrDefault();
                this.AllOtherNonRealEstLoansValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AllOtherShares", Order=11, Form=XmlSchemaForm.Unqualified)]
        public bool AllOtherSharesValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AllOtherShares property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AllOtherSharesValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AllOtherShares
        {
            get
            {
                if (this.AllOtherSharesValueSpecified)
                {
                    return this.AllOtherSharesValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AllOtherSharesValue = value.GetValueOrDefault();
                this.AllOtherSharesValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AllOtherUnsecLoans", Order=12, Form=XmlSchemaForm.Unqualified)]
        public bool AllOtherUnsecLoansValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AllOtherUnsecLoans property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AllOtherUnsecLoansValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AllOtherUnsecLoans
        {
            get
            {
                if (this.AllOtherUnsecLoansValueSpecified)
                {
                    return this.AllOtherUnsecLoansValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AllOtherUnsecLoansValue = value.GetValueOrDefault();
                this.AllOtherUnsecLoansValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AllowanceLoanLease", Order=13, Form=XmlSchemaForm.Unqualified)]
        public bool AllowanceLoanLeaseValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AllowanceLoanLease property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AllowanceLoanLeaseValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AllowanceLoanLease
        {
            get
            {
                if (this.AllowanceLoanLeaseValueSpecified)
                {
                    return this.AllowanceLoanLeaseValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AllowanceLoanLeaseValue = value.GetValueOrDefault();
                this.AllowanceLoanLeaseValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ApOtherLiabilities", Order=14, Form=XmlSchemaForm.Unqualified)]
        public bool ApOtherLiabilitiesValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ApOtherLiabilities property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ApOtherLiabilitiesValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ApOtherLiabilities
        {
            get
            {
                if (this.ApOtherLiabilitiesValueSpecified)
                {
                    return this.ApOtherLiabilitiesValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ApOtherLiabilitiesValue = value.GetValueOrDefault();
                this.ApOtherLiabilitiesValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AppropNonConformInvstm", Order=15, Form=XmlSchemaForm.Unqualified)]
        public bool AppropNonConformInvstmValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AppropNonConformInvstm property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AppropNonConformInvstmValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AppropNonConformInvstm
        {
            get
            {
                if (this.AppropNonConformInvstmValueSpecified)
                {
                    return this.AppropNonConformInvstmValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AppropNonConformInvstmValue = value.GetValueOrDefault();
                this.AppropNonConformInvstmValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AvailforSaleSecurities", Order=16, Form=XmlSchemaForm.Unqualified)]
        public bool AvailforSaleSecuritiesValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AvailforSaleSecurities property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AvailforSaleSecuritiesValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AvailforSaleSecurities
        {
            get
            {
                if (this.AvailforSaleSecuritiesValueSpecified)
                {
                    return this.AvailforSaleSecuritiesValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AvailforSaleSecuritiesValue = value.GetValueOrDefault();
                this.AvailforSaleSecuritiesValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Bankruptcy11WarnList", Order=17, Form=XmlSchemaForm.Unqualified)]
        public bool Bankruptcy11WarnListValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Bankruptcy11WarnList property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool Bankruptcy11WarnListValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Bankruptcy11WarnList
        {
            get
            {
                if (this.Bankruptcy11WarnListValueSpecified)
                {
                    return this.Bankruptcy11WarnListValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.Bankruptcy11WarnListValue = value.GetValueOrDefault();
                this.Bankruptcy11WarnListValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Bankruptcy13WarnList", Order=18, Form=XmlSchemaForm.Unqualified)]
        public bool Bankruptcy13WarnListValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Bankruptcy13WarnList property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool Bankruptcy13WarnListValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Bankruptcy13WarnList
        {
            get
            {
                if (this.Bankruptcy13WarnListValueSpecified)
                {
                    return this.Bankruptcy13WarnListValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.Bankruptcy13WarnListValue = value.GetValueOrDefault();
                this.Bankruptcy13WarnListValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Bankruptcy7WarnList", Order=19, Form=XmlSchemaForm.Unqualified)]
        public bool Bankruptcy7WarnListValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Bankruptcy7WarnList property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool Bankruptcy7WarnListValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Bankruptcy7WarnList
        {
            get
            {
                if (this.Bankruptcy7WarnListValueSpecified)
                {
                    return this.Bankruptcy7WarnListValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.Bankruptcy7WarnListValue = value.GetValueOrDefault();
                this.Bankruptcy7WarnListValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CashEquivalents", Order=20, Form=XmlSchemaForm.Unqualified)]
        public bool CashEquivalentsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CashEquivalents property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CashEquivalentsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CashEquivalents
        {
            get
            {
                if (this.CashEquivalentsValueSpecified)
                {
                    return this.CashEquivalentsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CashEquivalentsValue = value.GetValueOrDefault();
                this.CashEquivalentsValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CashOnDepositCcu", Order=21, Form=XmlSchemaForm.Unqualified)]
        public bool CashOnDepositCcuValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CashOnDepositCcu property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CashOnDepositCcuValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CashOnDepositCcu
        {
            get
            {
                if (this.CashOnDepositCcuValueSpecified)
                {
                    return this.CashOnDepositCcuValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CashOnDepositCcuValue = value.GetValueOrDefault();
                this.CashOnDepositCcuValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CashOnDepositOtherFi", Order=22, Form=XmlSchemaForm.Unqualified)]
        public bool CashOnDepositOtherFiValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CashOnDepositOtherFi property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CashOnDepositOtherFiValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CashOnDepositOtherFi
        {
            get
            {
                if (this.CashOnDepositOtherFiValueSpecified)
                {
                    return this.CashOnDepositOtherFiValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CashOnDepositOtherFiValue = value.GetValueOrDefault();
                this.CashOnDepositOtherFiValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CashonHand", Order=23, Form=XmlSchemaForm.Unqualified)]
        public bool CashonHandValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CashonHand property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CashonHandValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CashonHand
        {
            get
            {
                if (this.CashonHandValueSpecified)
                {
                    return this.CashonHandValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CashonHandValue = value.GetValueOrDefault();
                this.CashonHandValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ConstructionLoans", Order=24, Form=XmlSchemaForm.Unqualified)]
        public bool ConstructionLoansValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ConstructionLoans property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ConstructionLoansValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ConstructionLoans
        {
            get
            {
                if (this.ConstructionLoansValueSpecified)
                {
                    return this.ConstructionLoansValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ConstructionLoansValue = value.GetValueOrDefault();
                this.ConstructionLoansValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DepositsinBanks", Order=25, Form=XmlSchemaForm.Unqualified)]
        public bool DepositsinBanksValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DepositsinBanks property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DepositsinBanksValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DepositsinBanks
        {
            get
            {
                if (this.DepositsinBanksValueSpecified)
                {
                    return this.DepositsinBanksValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DepositsinBanksValue = value.GetValueOrDefault();
                this.DepositsinBanksValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DividendsonShares", Order=26, Form=XmlSchemaForm.Unqualified)]
        public bool DividendsonSharesValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DividendsonShares property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DividendsonSharesValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DividendsonShares
        {
            get
            {
                if (this.DividendsonSharesValueSpecified)
                {
                    return this.DividendsonSharesValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DividendsonSharesValue = value.GetValueOrDefault();
                this.DividendsonSharesValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DlrRsrvLoansOutsrcedLend", Order=27, Form=XmlSchemaForm.Unqualified)]
        public bool DlrRsrvLoansOutsrcedLendValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DlrRsrvLoansOutsrcedLend property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DlrRsrvLoansOutsrcedLendValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DlrRsrvLoansOutsrcedLend
        {
            get
            {
                if (this.DlrRsrvLoansOutsrcedLendValueSpecified)
                {
                    return this.DlrRsrvLoansOutsrcedLendValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DlrRsrvLoansOutsrcedLendValue = value.GetValueOrDefault();
                this.DlrRsrvLoansOutsrcedLendValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DlrRsrvLoansPointOfSale", Order=28, Form=XmlSchemaForm.Unqualified)]
        public bool DlrRsrvLoansPointOfSaleValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DlrRsrvLoansPointOfSale property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DlrRsrvLoansPointOfSaleValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DlrRsrvLoansPointOfSale
        {
            get
            {
                if (this.DlrRsrvLoansPointOfSaleValueSpecified)
                {
                    return this.DlrRsrvLoansPointOfSaleValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DlrRsrvLoansPointOfSaleValue = value.GetValueOrDefault();
                this.DlrRsrvLoansPointOfSaleValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DrawsAgainstLinesofCredit", Order=29, Form=XmlSchemaForm.Unqualified)]
        public bool DrawsAgainstLinesofCreditValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DrawsAgainstLinesofCredit property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DrawsAgainstLinesofCreditValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DrawsAgainstLinesofCredit
        {
            get
            {
                if (this.DrawsAgainstLinesofCreditValueSpecified)
                {
                    return this.DrawsAgainstLinesofCreditValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DrawsAgainstLinesofCreditValue = value.GetValueOrDefault();
                this.DrawsAgainstLinesofCreditValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("EducationalPromoExp", Order=30, Form=XmlSchemaForm.Unqualified)]
        public bool EducationalPromoExpValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EducationalPromoExp property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool EducationalPromoExpValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> EducationalPromoExp
        {
            get
            {
                if (this.EducationalPromoExpValueSpecified)
                {
                    return this.EducationalPromoExpValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EducationalPromoExpValue = value.GetValueOrDefault();
                this.EducationalPromoExpValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("EmployeeBenefitMemberShares", Order=31, Form=XmlSchemaForm.Unqualified)]
        public bool EmployeeBenefitMemberSharesValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EmployeeBenefitMemberShares property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool EmployeeBenefitMemberSharesValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> EmployeeBenefitMemberShares
        {
            get
            {
                if (this.EmployeeBenefitMemberSharesValueSpecified)
                {
                    return this.EmployeeBenefitMemberSharesValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EmployeeBenefitMemberSharesValue = value.GetValueOrDefault();
                this.EmployeeBenefitMemberSharesValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("EmployeeBenefitNonMemberShr", Order=32, Form=XmlSchemaForm.Unqualified)]
        public bool EmployeeBenefitNonMemberShrValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EmployeeBenefitNonMemberShr property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool EmployeeBenefitNonMemberShrValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> EmployeeBenefitNonMemberShr
        {
            get
            {
                if (this.EmployeeBenefitNonMemberShrValueSpecified)
                {
                    return this.EmployeeBenefitNonMemberShrValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EmployeeBenefitNonMemberShrValue = value.GetValueOrDefault();
                this.EmployeeBenefitNonMemberShrValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("EmployeeCompensation", Order=33, Form=XmlSchemaForm.Unqualified)]
        public bool EmployeeCompensationValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EmployeeCompensation property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool EmployeeCompensationValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> EmployeeCompensation
        {
            get
            {
                if (this.EmployeeCompensationValueSpecified)
                {
                    return this.EmployeeCompensationValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EmployeeCompensationValue = value.GetValueOrDefault();
                this.EmployeeCompensationValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("FeeIncome", Order=34, Form=XmlSchemaForm.Unqualified)]
        public bool FeeIncomeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FeeIncome property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FeeIncomeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> FeeIncome
        {
            get
            {
                if (this.FeeIncomeValueSpecified)
                {
                    return this.FeeIncomeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FeeIncomeValue = value.GetValueOrDefault();
                this.FeeIncomeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Field529PlanMemberDeposits", Order=35, Form=XmlSchemaForm.Unqualified)]
        public bool Field529PlanMemberDepositsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Field529PlanMemberDeposits property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool Field529PlanMemberDepositsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Field529PlanMemberDeposits
        {
            get
            {
                if (this.Field529PlanMemberDepositsValueSpecified)
                {
                    return this.Field529PlanMemberDepositsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.Field529PlanMemberDepositsValue = value.GetValueOrDefault();
                this.Field529PlanMemberDepositsValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("FirstMortgOtherFixed", Order=36, Form=XmlSchemaForm.Unqualified)]
        public bool FirstMortgOtherFixedValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FirstMortgOtherFixed property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FirstMortgOtherFixedValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> FirstMortgOtherFixed
        {
            get
            {
                if (this.FirstMortgOtherFixedValueSpecified)
                {
                    return this.FirstMortgOtherFixedValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FirstMortgOtherFixedValue = value.GetValueOrDefault();
                this.FirstMortgOtherFixedValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("FirstMortgageAdjustable", Order=37, Form=XmlSchemaForm.Unqualified)]
        public bool FirstMortgageAdjustableValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FirstMortgageAdjustable property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FirstMortgageAdjustableValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> FirstMortgageAdjustable
        {
            get
            {
                if (this.FirstMortgageAdjustableValueSpecified)
                {
                    return this.FirstMortgageAdjustableValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FirstMortgageAdjustableValue = value.GetValueOrDefault();
                this.FirstMortgageAdjustableValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("FirstMortgageBalloon", Order=38, Form=XmlSchemaForm.Unqualified)]
        public bool FirstMortgageBalloonValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FirstMortgageBalloon property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FirstMortgageBalloonValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> FirstMortgageBalloon
        {
            get
            {
                if (this.FirstMortgageBalloonValueSpecified)
                {
                    return this.FirstMortgageBalloonValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FirstMortgageBalloonValue = value.GetValueOrDefault();
                this.FirstMortgageBalloonValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("FirstMortgageFixed", Order=39, Form=XmlSchemaForm.Unqualified)]
        public bool FirstMortgageFixedValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FirstMortgageFixed property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FirstMortgageFixedValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> FirstMortgageFixed
        {
            get
            {
                if (this.FirstMortgageFixedValueSpecified)
                {
                    return this.FirstMortgageFixedValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FirstMortgageFixedValue = value.GetValueOrDefault();
                this.FirstMortgageFixedValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("FirstMtgIntOnlyOptPayment", Order=40, Form=XmlSchemaForm.Unqualified)]
        public bool FirstMtgIntOnlyOptPaymentValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FirstMtgIntOnlyOptPayment property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FirstMtgIntOnlyOptPaymentValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> FirstMtgIntOnlyOptPayment
        {
            get
            {
                if (this.FirstMtgIntOnlyOptPaymentValueSpecified)
                {
                    return this.FirstMtgIntOnlyOptPaymentValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FirstMtgIntOnlyOptPaymentValue = value.GetValueOrDefault();
                this.FirstMtgIntOnlyOptPaymentValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("FirstMtgResidentialConsLoans", Order=41, Form=XmlSchemaForm.Unqualified)]
        public bool FirstMtgResidentialConsLoansValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FirstMtgResidentialConsLoans property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FirstMtgResidentialConsLoansValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> FirstMtgResidentialConsLoans
        {
            get
            {
                if (this.FirstMtgResidentialConsLoansValueSpecified)
                {
                    return this.FirstMtgResidentialConsLoansValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FirstMtgResidentialConsLoansValue = value.GetValueOrDefault();
                this.FirstMtgResidentialConsLoansValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ForeclosedandRepoAuto", Order=42, Form=XmlSchemaForm.Unqualified)]
        public bool ForeclosedandRepoAutoValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ForeclosedandRepoAuto property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ForeclosedandRepoAutoValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ForeclosedandRepoAuto
        {
            get
            {
                if (this.ForeclosedandRepoAutoValueSpecified)
                {
                    return this.ForeclosedandRepoAutoValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ForeclosedandRepoAutoValue = value.GetValueOrDefault();
                this.ForeclosedandRepoAutoValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ForeclosedandRepoOther", Order=43, Form=XmlSchemaForm.Unqualified)]
        public bool ForeclosedandRepoOtherValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ForeclosedandRepoOther property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ForeclosedandRepoOtherValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ForeclosedandRepoOther
        {
            get
            {
                if (this.ForeclosedandRepoOtherValueSpecified)
                {
                    return this.ForeclosedandRepoOtherValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ForeclosedandRepoOtherValue = value.GetValueOrDefault();
                this.ForeclosedandRepoOtherValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ForeclosedandRepoRealEst", Order=44, Form=XmlSchemaForm.Unqualified)]
        public bool ForeclosedandRepoRealEstValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ForeclosedandRepoRealEst property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ForeclosedandRepoRealEstValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ForeclosedandRepoRealEst
        {
            get
            {
                if (this.ForeclosedandRepoRealEstValueSpecified)
                {
                    return this.ForeclosedandRepoRealEstValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ForeclosedandRepoRealEstValue = value.GetValueOrDefault();
                this.ForeclosedandRepoRealEstValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("GainonDisposition", Order=45, Form=XmlSchemaForm.Unqualified)]
        public bool GainonDispositionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GainonDisposition property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool GainonDispositionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> GainonDisposition
        {
            get
            {
                if (this.GainonDispositionValueSpecified)
                {
                    return this.GainonDispositionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.GainonDispositionValue = value.GetValueOrDefault();
                this.GainonDispositionValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("GainonInvestments", Order=46, Form=XmlSchemaForm.Unqualified)]
        public bool GainonInvestmentsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GainonInvestments property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool GainonInvestmentsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> GainonInvestments
        {
            get
            {
                if (this.GainonInvestmentsValueSpecified)
                {
                    return this.GainonInvestmentsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.GainonInvestmentsValue = value.GetValueOrDefault();
                this.GainonInvestmentsValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HealthSavingsAccounts", Order=47, Form=XmlSchemaForm.Unqualified)]
        public bool HealthSavingsAccountsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HealthSavingsAccounts property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HealthSavingsAccountsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HealthSavingsAccounts
        {
            get
            {
                if (this.HealthSavingsAccountsValueSpecified)
                {
                    return this.HealthSavingsAccountsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HealthSavingsAccountsValue = value.GetValueOrDefault();
                this.HealthSavingsAccountsValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HeldToMatSecurities", Order=48, Form=XmlSchemaForm.Unqualified)]
        public bool HeldToMatSecuritiesValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HeldToMatSecurities property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HeldToMatSecuritiesValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HeldToMatSecurities
        {
            get
            {
                if (this.HeldToMatSecuritiesValueSpecified)
                {
                    return this.HeldToMatSecuritiesValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HeldToMatSecuritiesValue = value.GetValueOrDefault();
                this.HeldToMatSecuritiesValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IncomefromInvestments", Order=49, Form=XmlSchemaForm.Unqualified)]
        public bool IncomefromInvestmentsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IncomefromInvestments property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IncomefromInvestmentsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IncomefromInvestments
        {
            get
            {
                if (this.IncomefromInvestmentsValueSpecified)
                {
                    return this.IncomefromInvestmentsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IncomefromInvestmentsValue = value.GetValueOrDefault();
                this.IncomefromInvestmentsValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InterestRefunded", Order=50, Form=XmlSchemaForm.Unqualified)]
        public bool InterestRefundedValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InterestRefunded property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InterestRefundedValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InterestRefunded
        {
            get
            {
                if (this.InterestRefundedValueSpecified)
                {
                    return this.InterestRefundedValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InterestRefundedValue = value.GetValueOrDefault();
                this.InterestRefundedValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InterestonBorrowed", Order=51, Form=XmlSchemaForm.Unqualified)]
        public bool InterestonBorrowedValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InterestonBorrowed property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InterestonBorrowedValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InterestonBorrowed
        {
            get
            {
                if (this.InterestonBorrowedValueSpecified)
                {
                    return this.InterestonBorrowedValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InterestonBorrowedValue = value.GetValueOrDefault();
                this.InterestonBorrowedValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InterestonDeposits", Order=52, Form=XmlSchemaForm.Unqualified)]
        public bool InterestonDepositsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InterestonDeposits property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InterestonDepositsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InterestonDeposits
        {
            get
            {
                if (this.InterestonDepositsValueSpecified)
                {
                    return this.InterestonDepositsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InterestonDepositsValue = value.GetValueOrDefault();
                this.InterestonDepositsValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InterestonLoans", Order=53, Form=XmlSchemaForm.Unqualified)]
        public bool InterestonLoansValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InterestonLoans property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InterestonLoansValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InterestonLoans
        {
            get
            {
                if (this.InterestonLoansValueSpecified)
                {
                    return this.InterestonLoansValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InterestonLoansValue = value.GetValueOrDefault();
                this.InterestonLoansValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IraKeoghAccounts", Order=54, Form=XmlSchemaForm.Unqualified)]
        public bool IraKeoghAccountsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IraKeoghAccounts property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IraKeoghAccountsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IraKeoghAccounts
        {
            get
            {
                if (this.IraKeoghAccountsValueSpecified)
                {
                    return this.IraKeoghAccountsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IraKeoghAccountsValue = value.GetValueOrDefault();
                this.IraKeoghAccountsValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LandandBuilding", Order=55, Form=XmlSchemaForm.Unqualified)]
        public bool LandandBuildingValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LandandBuilding property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LandandBuildingValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LandandBuilding
        {
            get
            {
                if (this.LandandBuildingValueSpecified)
                {
                    return this.LandandBuildingValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LandandBuildingValue = value.GetValueOrDefault();
                this.LandandBuildingValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LeasesReceivable", Order=56, Form=XmlSchemaForm.Unqualified)]
        public bool LeasesReceivableValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LeasesReceivable property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LeasesReceivableValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LeasesReceivable
        {
            get
            {
                if (this.LeasesReceivableValueSpecified)
                {
                    return this.LeasesReceivableValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LeasesReceivableValue = value.GetValueOrDefault();
                this.LeasesReceivableValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LnsExclRealEstSoldInFull", Order=57, Form=XmlSchemaForm.Unqualified)]
        public bool LnsExclRealEstSoldInFullValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LnsExclRealEstSoldInFull property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LnsExclRealEstSoldInFullValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LnsExclRealEstSoldInFull
        {
            get
            {
                if (this.LnsExclRealEstSoldInFullValueSpecified)
                {
                    return this.LnsExclRealEstSoldInFullValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LnsExclRealEstSoldInFullValue = value.GetValueOrDefault();
                this.LnsExclRealEstSoldInFullValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LoanServicingExpense", Order=58, Form=XmlSchemaForm.Unqualified)]
        public bool LoanServicingExpenseValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LoanServicingExpense property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LoanServicingExpenseValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LoanServicingExpense
        {
            get
            {
                if (this.LoanServicingExpenseValueSpecified)
                {
                    return this.LoanServicingExpenseValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LoanServicingExpenseValue = value.GetValueOrDefault();
                this.LoanServicingExpenseValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LoansGrantedYtd", Order=59, Form=XmlSchemaForm.Unqualified)]
        public bool LoansGrantedYtdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LoansGrantedYtd property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LoansGrantedYtdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LoansGrantedYtd
        {
            get
            {
                if (this.LoansGrantedYtdValueSpecified)
                {
                    return this.LoansGrantedYtdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LoansGrantedYtdValue = value.GetValueOrDefault();
                this.LoansGrantedYtdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LoansHeldforSale", Order=60, Form=XmlSchemaForm.Unqualified)]
        public bool LoansHeldforSaleValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LoansHeldforSale property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LoansHeldforSaleValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LoansHeldforSale
        {
            get
            {
                if (this.LoansHeldforSaleValueSpecified)
                {
                    return this.LoansHeldforSaleValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LoansHeldforSaleValue = value.GetValueOrDefault();
                this.LoansHeldforSaleValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LoansOutstToCuOff", Order=61, Form=XmlSchemaForm.Unqualified)]
        public bool LoansOutstToCuOffValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LoansOutstToCuOff property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LoansOutstToCuOffValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LoansOutstToCuOff
        {
            get
            {
                if (this.LoansOutstToCuOffValueSpecified)
                {
                    return this.LoansOutstToCuOffValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LoansOutstToCuOffValue = value.GetValueOrDefault();
                this.LoansOutstToCuOffValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LoansPurchasedOtherFi", Order=62, Form=XmlSchemaForm.Unqualified)]
        public bool LoansPurchasedOtherFiValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LoansPurchasedOtherFi property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LoansPurchasedOtherFiValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LoansPurchasedOtherFi
        {
            get
            {
                if (this.LoansPurchasedOtherFiValueSpecified)
                {
                    return this.LoansPurchasedOtherFiValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LoansPurchasedOtherFiValue = value.GetValueOrDefault();
                this.LoansPurchasedOtherFiValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LoansToAndInvInNatPerCu", Order=63, Form=XmlSchemaForm.Unqualified)]
        public bool LoansToAndInvInNatPerCuValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LoansToAndInvInNatPerCu property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LoansToAndInvInNatPerCuValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LoansToAndInvInNatPerCu
        {
            get
            {
                if (this.LoansToAndInvInNatPerCuValueSpecified)
                {
                    return this.LoansToAndInvInNatPerCuValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LoansToAndInvInNatPerCuValue = value.GetValueOrDefault();
                this.LoansToAndInvInNatPerCuValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MemberBusLoanExclAgrLoan", Order=64, Form=XmlSchemaForm.Unqualified)]
        public bool MemberBusLoanExclAgrLoanValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MemberBusLoanExclAgrLoan property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MemberBusLoanExclAgrLoanValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MemberBusLoanExclAgrLoan
        {
            get
            {
                if (this.MemberBusLoanExclAgrLoanValueSpecified)
                {
                    return this.MemberBusLoanExclAgrLoanValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MemberBusLoanExclAgrLoanValue = value.GetValueOrDefault();
                this.MemberBusLoanExclAgrLoanValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MemberBusinessLoans", Order=65, Form=XmlSchemaForm.Unqualified)]
        public bool MemberBusinessLoansValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MemberBusinessLoans property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MemberBusinessLoansValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MemberBusinessLoans
        {
            get
            {
                if (this.MemberBusinessLoansValueSpecified)
                {
                    return this.MemberBusinessLoansValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MemberBusinessLoansValue = value.GetValueOrDefault();
                this.MemberBusinessLoansValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MemberGovernmentDepositors", Order=66, Form=XmlSchemaForm.Unqualified)]
        public bool MemberGovernmentDepositorsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MemberGovernmentDepositors property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MemberGovernmentDepositorsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MemberGovernmentDepositors
        {
            get
            {
                if (this.MemberGovernmentDepositorsValueSpecified)
                {
                    return this.MemberGovernmentDepositorsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MemberGovernmentDepositorsValue = value.GetValueOrDefault();
                this.MemberGovernmentDepositorsValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MemberInsurance", Order=67, Form=XmlSchemaForm.Unqualified)]
        public bool MemberInsuranceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MemberInsurance property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MemberInsuranceValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MemberInsurance
        {
            get
            {
                if (this.MemberInsuranceValueSpecified)
                {
                    return this.MemberInsuranceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MemberInsuranceValue = value.GetValueOrDefault();
                this.MemberInsuranceValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MembershipCapitalCcu", Order=68, Form=XmlSchemaForm.Unqualified)]
        public bool MembershipCapitalCcuValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MembershipCapitalCcu property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MembershipCapitalCcuValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MembershipCapitalCcu
        {
            get
            {
                if (this.MembershipCapitalCcuValueSpecified)
                {
                    return this.MembershipCapitalCcuValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MembershipCapitalCcuValue = value.GetValueOrDefault();
                this.MembershipCapitalCcuValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MiscEquity", Order=69, Form=XmlSchemaForm.Unqualified)]
        public bool MiscEquityValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MiscEquity property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MiscEquityValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MiscEquity
        {
            get
            {
                if (this.MiscEquityValueSpecified)
                {
                    return this.MiscEquityValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MiscEquityValue = value.GetValueOrDefault();
                this.MiscEquityValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MiscOperatingExpense", Order=70, Form=XmlSchemaForm.Unqualified)]
        public bool MiscOperatingExpenseValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MiscOperatingExpense property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MiscOperatingExpenseValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MiscOperatingExpense
        {
            get
            {
                if (this.MiscOperatingExpenseValueSpecified)
                {
                    return this.MiscOperatingExpenseValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MiscOperatingExpenseValue = value.GetValueOrDefault();
                this.MiscOperatingExpenseValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MoneyMarketShares", Order=71, Form=XmlSchemaForm.Unqualified)]
        public bool MoneyMarketSharesValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MoneyMarketShares property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MoneyMarketSharesValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MoneyMarketShares
        {
            get
            {
                if (this.MoneyMarketSharesValueSpecified)
                {
                    return this.MoneyMarketSharesValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MoneyMarketSharesValue = value.GetValueOrDefault();
                this.MoneyMarketSharesValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("NcuaShareInsurance", Order=72, Form=XmlSchemaForm.Unqualified)]
        public bool NcuaShareInsuranceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NcuaShareInsurance property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool NcuaShareInsuranceValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> NcuaShareInsurance
        {
            get
            {
                if (this.NcuaShareInsuranceValueSpecified)
                {
                    return this.NcuaShareInsuranceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NcuaShareInsuranceValue = value.GetValueOrDefault();
                this.NcuaShareInsuranceValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("NetIncome", Order=73, Form=XmlSchemaForm.Unqualified)]
        public bool NetIncomeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NetIncome property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool NetIncomeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> NetIncome
        {
            get
            {
                if (this.NetIncomeValueSpecified)
                {
                    return this.NetIncomeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NetIncomeValue = value.GetValueOrDefault();
                this.NetIncomeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("NewVehicleLoans", Order=74, Form=XmlSchemaForm.Unqualified)]
        public bool NewVehicleLoansValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NewVehicleLoans property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool NewVehicleLoansValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> NewVehicleLoans
        {
            get
            {
                if (this.NewVehicleLoansValueSpecified)
                {
                    return this.NewVehicleLoansValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NewVehicleLoansValue = value.GetValueOrDefault();
                this.NewVehicleLoansValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("NonDollarDenominatedDeposit", Order=75, Form=XmlSchemaForm.Unqualified)]
        public bool NonDollarDenominatedDepositValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NonDollarDenominatedDeposit property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool NonDollarDenominatedDepositValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> NonDollarDenominatedDeposit
        {
            get
            {
                if (this.NonDollarDenominatedDepositValueSpecified)
                {
                    return this.NonDollarDenominatedDepositValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NonDollarDenominatedDepositValue = value.GetValueOrDefault();
                this.NonDollarDenominatedDepositValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("NonMemberDeposits", Order=76, Form=XmlSchemaForm.Unqualified)]
        public bool NonMemberDepositsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NonMemberDeposits property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool NonMemberDepositsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> NonMemberDeposits
        {
            get
            {
                if (this.NonMemberDepositsValueSpecified)
                {
                    return this.NonMemberDepositsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NonMemberDepositsValue = value.GetValueOrDefault();
                this.NonMemberDepositsValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("NonmemberGovernmentDepositor", Order=77, Form=XmlSchemaForm.Unqualified)]
        public bool NonmemberGovernmentDepositorValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NonmemberGovernmentDepositor property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool NonmemberGovernmentDepositorValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> NonmemberGovernmentDepositor
        {
            get
            {
                if (this.NonmemberGovernmentDepositorValueSpecified)
                {
                    return this.NonmemberGovernmentDepositorValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NonmemberGovernmentDepositorValue = value.GetValueOrDefault();
                this.NonmemberGovernmentDepositorValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OfficeOccupancyExp", Order=78, Form=XmlSchemaForm.Unqualified)]
        public bool OfficeOccupancyExpValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OfficeOccupancyExp property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OfficeOccupancyExpValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> OfficeOccupancyExp
        {
            get
            {
                if (this.OfficeOccupancyExpValueSpecified)
                {
                    return this.OfficeOccupancyExpValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OfficeOccupancyExpValue = value.GetValueOrDefault();
                this.OfficeOccupancyExpValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OfficeOperationsExp", Order=79, Form=XmlSchemaForm.Unqualified)]
        public bool OfficeOperationsExpValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OfficeOperationsExp property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OfficeOperationsExpValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> OfficeOperationsExp
        {
            get
            {
                if (this.OfficeOperationsExpValueSpecified)
                {
                    return this.OfficeOperationsExpValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OfficeOperationsExpValue = value.GetValueOrDefault();
                this.OfficeOperationsExpValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OperatingFees", Order=80, Form=XmlSchemaForm.Unqualified)]
        public bool OperatingFeesValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OperatingFees property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OperatingFeesValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> OperatingFees
        {
            get
            {
                if (this.OperatingFeesValueSpecified)
                {
                    return this.OperatingFeesValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OperatingFeesValue = value.GetValueOrDefault();
                this.OperatingFeesValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OtherComprIncome", Order=81, Form=XmlSchemaForm.Unqualified)]
        public bool OtherComprIncomeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OtherComprIncome property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OtherComprIncomeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> OtherComprIncome
        {
            get
            {
                if (this.OtherComprIncomeValueSpecified)
                {
                    return this.OtherComprIncomeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OtherComprIncomeValue = value.GetValueOrDefault();
                this.OtherComprIncomeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OtherFixedAssets", Order=82, Form=XmlSchemaForm.Unqualified)]
        public bool OtherFixedAssetsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OtherFixedAssets property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OtherFixedAssetsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> OtherFixedAssets
        {
            get
            {
                if (this.OtherFixedAssetsValueSpecified)
                {
                    return this.OtherFixedAssetsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OtherFixedAssetsValue = value.GetValueOrDefault();
                this.OtherFixedAssetsValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OtherNonOperIncome", Order=83, Form=XmlSchemaForm.Unqualified)]
        public bool OtherNonOperIncomeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OtherNonOperIncome property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OtherNonOperIncomeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> OtherNonOperIncome
        {
            get
            {
                if (this.OtherNonOperIncomeValueSpecified)
                {
                    return this.OtherNonOperIncomeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OtherNonOperIncomeValue = value.GetValueOrDefault();
                this.OtherNonOperIncomeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OtherNotes", Order=84, Form=XmlSchemaForm.Unqualified)]
        public bool OtherNotesValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OtherNotes property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OtherNotesValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> OtherNotes
        {
            get
            {
                if (this.OtherNotesValueSpecified)
                {
                    return this.OtherNotesValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OtherNotesValue = value.GetValueOrDefault();
                this.OtherNotesValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OtherOperatingIncome", Order=85, Form=XmlSchemaForm.Unqualified)]
        public bool OtherOperatingIncomeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OtherOperatingIncome property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OtherOperatingIncomeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> OtherOperatingIncome
        {
            get
            {
                if (this.OtherOperatingIncomeValueSpecified)
                {
                    return this.OtherOperatingIncomeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OtherOperatingIncomeValue = value.GetValueOrDefault();
                this.OtherOperatingIncomeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OtherReClosedEndAdj", Order=86, Form=XmlSchemaForm.Unqualified)]
        public bool OtherReClosedEndAdjValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OtherReClosedEndAdj property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OtherReClosedEndAdjValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> OtherReClosedEndAdj
        {
            get
            {
                if (this.OtherReClosedEndAdjValueSpecified)
                {
                    return this.OtherReClosedEndAdjValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OtherReClosedEndAdjValue = value.GetValueOrDefault();
                this.OtherReClosedEndAdjValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OtherReClosedEndFixed", Order=87, Form=XmlSchemaForm.Unqualified)]
        public bool OtherReClosedEndFixedValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OtherReClosedEndFixed property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OtherReClosedEndFixedValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> OtherReClosedEndFixed
        {
            get
            {
                if (this.OtherReClosedEndFixedValueSpecified)
                {
                    return this.OtherReClosedEndFixedValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OtherReClosedEndFixedValue = value.GetValueOrDefault();
                this.OtherReClosedEndFixedValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OtherReOpenEndAdj", Order=88, Form=XmlSchemaForm.Unqualified)]
        public bool OtherReOpenEndAdjValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OtherReOpenEndAdj property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OtherReOpenEndAdjValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> OtherReOpenEndAdj
        {
            get
            {
                if (this.OtherReOpenEndAdjValueSpecified)
                {
                    return this.OtherReOpenEndAdjValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OtherReOpenEndAdjValue = value.GetValueOrDefault();
                this.OtherReOpenEndAdjValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OtherReOpenEndFixed", Order=89, Form=XmlSchemaForm.Unqualified)]
        public bool OtherReOpenEndFixedValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OtherReOpenEndFixed property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OtherReOpenEndFixedValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> OtherReOpenEndFixed
        {
            get
            {
                if (this.OtherReOpenEndFixedValueSpecified)
                {
                    return this.OtherReOpenEndFixedValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OtherReOpenEndFixedValue = value.GetValueOrDefault();
                this.OtherReOpenEndFixedValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OtherRealEstate", Order=90, Form=XmlSchemaForm.Unqualified)]
        public bool OtherRealEstateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OtherRealEstate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OtherRealEstateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> OtherRealEstate
        {
            get
            {
                if (this.OtherRealEstateValueSpecified)
                {
                    return this.OtherRealEstateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OtherRealEstateValue = value.GetValueOrDefault();
                this.OtherRealEstateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OtherReserves", Order=91, Form=XmlSchemaForm.Unqualified)]
        public bool OtherReservesValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OtherReserves property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OtherReservesValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> OtherReserves
        {
            get
            {
                if (this.OtherReservesValueSpecified)
                {
                    return this.OtherReservesValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OtherReservesValue = value.GetValueOrDefault();
                this.OtherReservesValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OtherUninsdNonmemberShares", Order=92, Form=XmlSchemaForm.Unqualified)]
        public bool OtherUninsdNonmemberSharesValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OtherUninsdNonmemberShares property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OtherUninsdNonmemberSharesValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> OtherUninsdNonmemberShares
        {
            get
            {
                if (this.OtherUninsdNonmemberSharesValueSpecified)
                {
                    return this.OtherUninsdNonmemberSharesValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OtherUninsdNonmemberSharesValue = value.GetValueOrDefault();
                this.OtherUninsdNonmemberSharesValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OtherUninsuredMemberShares", Order=93, Form=XmlSchemaForm.Unqualified)]
        public bool OtherUninsuredMemberSharesValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OtherUninsuredMemberShares property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OtherUninsuredMemberSharesValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> OtherUninsuredMemberShares
        {
            get
            {
                if (this.OtherUninsuredMemberSharesValueSpecified)
                {
                    return this.OtherUninsuredMemberSharesValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OtherUninsuredMemberSharesValue = value.GetValueOrDefault();
                this.OtherUninsuredMemberSharesValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PaidInCapitalCcu", Order=94, Form=XmlSchemaForm.Unqualified)]
        public bool PaidInCapitalCcuValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PaidInCapitalCcu property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PaidInCapitalCcuValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PaidInCapitalCcu
        {
            get
            {
                if (this.PaidInCapitalCcuValueSpecified)
                {
                    return this.PaidInCapitalCcuValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PaidInCapitalCcuValue = value.GetValueOrDefault();
                this.PaidInCapitalCcuValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ProfOutsideServices", Order=95, Form=XmlSchemaForm.Unqualified)]
        public bool ProfOutsideServicesValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ProfOutsideServices property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ProfOutsideServicesValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ProfOutsideServices
        {
            get
            {
                if (this.ProfOutsideServicesValueSpecified)
                {
                    return this.ProfOutsideServicesValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ProfOutsideServicesValue = value.GetValueOrDefault();
                this.ProfOutsideServicesValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ProvisionForLlLosses", Order=96, Form=XmlSchemaForm.Unqualified)]
        public bool ProvisionForLlLossesValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ProvisionForLlLosses property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ProvisionForLlLossesValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ProvisionForLlLosses
        {
            get
            {
                if (this.ProvisionForLlLossesValueSpecified)
                {
                    return this.ProvisionForLlLossesValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ProvisionForLlLossesValue = value.GetValueOrDefault();
                this.ProvisionForLlLossesValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PurchBusLoansMembers", Order=97, Form=XmlSchemaForm.Unqualified)]
        public bool PurchBusLoansMembersValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PurchBusLoansMembers property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PurchBusLoansMembersValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PurchBusLoansMembers
        {
            get
            {
                if (this.PurchBusLoansMembersValueSpecified)
                {
                    return this.PurchBusLoansMembersValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PurchBusLoansMembersValue = value.GetValueOrDefault();
                this.PurchBusLoansMembersValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PurchBusLoansNonmbrs", Order=98, Form=XmlSchemaForm.Unqualified)]
        public bool PurchBusLoansNonmbrsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PurchBusLoansNonmbrs property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PurchBusLoansNonmbrsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PurchBusLoansNonmbrs
        {
            get
            {
                if (this.PurchBusLoansNonmbrsValueSpecified)
                {
                    return this.PurchBusLoansNonmbrsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PurchBusLoansNonmbrsValue = value.GetValueOrDefault();
                this.PurchBusLoansNonmbrsValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("RegularReserves", Order=99, Form=XmlSchemaForm.Unqualified)]
        public bool RegularReservesValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RegularReserves property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool RegularReservesValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> RegularReserves
        {
            get
            {
                if (this.RegularReservesValueSpecified)
                {
                    return this.RegularReservesValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RegularReservesValue = value.GetValueOrDefault();
                this.RegularReservesValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("RegularShares", Order=100, Form=XmlSchemaForm.Unqualified)]
        public bool RegularSharesValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RegularShares property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool RegularSharesValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> RegularShares
        {
            get
            {
                if (this.RegularSharesValueSpecified)
                {
                    return this.RegularSharesValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RegularSharesValue = value.GetValueOrDefault();
                this.RegularSharesValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ReverseRepurchAgreem", Order=101, Form=XmlSchemaForm.Unqualified)]
        public bool ReverseRepurchAgreemValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ReverseRepurchAgreem property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ReverseRepurchAgreemValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ReverseRepurchAgreem
        {
            get
            {
                if (this.ReverseRepurchAgreemValueSpecified)
                {
                    return this.ReverseRepurchAgreemValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ReverseRepurchAgreemValue = value.GetValueOrDefault();
                this.ReverseRepurchAgreemValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ShareCertificates", Order=102, Form=XmlSchemaForm.Unqualified)]
        public bool ShareCertificatesValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ShareCertificates property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ShareCertificatesValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ShareCertificates
        {
            get
            {
                if (this.ShareCertificatesValueSpecified)
                {
                    return this.ShareCertificatesValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ShareCertificatesValue = value.GetValueOrDefault();
                this.ShareCertificatesValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ShareDrafts", Order=103, Form=XmlSchemaForm.Unqualified)]
        public bool ShareDraftsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ShareDrafts property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ShareDraftsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ShareDrafts
        {
            get
            {
                if (this.ShareDraftsValueSpecified)
                {
                    return this.ShareDraftsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ShareDraftsValue = value.GetValueOrDefault();
                this.ShareDraftsValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SubordinatedDebt", Order=104, Form=XmlSchemaForm.Unqualified)]
        public bool SubordinatedDebtValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SubordinatedDebt property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SubordinatedDebtValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SubordinatedDebt
        {
            get
            {
                if (this.SubordinatedDebtValueSpecified)
                {
                    return this.SubordinatedDebtValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SubordinatedDebtValue = value.GetValueOrDefault();
                this.SubordinatedDebtValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _tAggrCashOutlayInCuso;
        
        [XmlElementAttribute("TAggrCashOutlayInCuso", Order=105, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> TAggrCashOutlayInCuso
        {
            get
            {
                return _tAggrCashOutlayInCuso;
            }
            set
            {
                _tAggrCashOutlayInCuso = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TAggrCashOutlayInCuso collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool TAggrCashOutlayInCusoSpecified
        {
            get
            {
                return ((this.TAggrCashOutlayInCuso != null) 
                            && (this.TAggrCashOutlayInCuso.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _tAmountLoanedToCuso;
        
        [XmlElementAttribute("TAmountLoanedToCuso", Order=106, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> TAmountLoanedToCuso
        {
            get
            {
                return _tAmountLoanedToCuso;
            }
            set
            {
                _tAmountLoanedToCuso = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TAmountLoanedToCuso collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool TAmountLoanedToCusoSpecified
        {
            get
            {
                return ((this.TAmountLoanedToCuso != null) 
                            && (this.TAmountLoanedToCuso.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _tNameOfCuso;
        
        [XmlElementAttribute("TNameOfCuso", Order=107, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> TNameOfCuso
        {
            get
            {
                return _tNameOfCuso;
            }
            set
            {
                _tNameOfCuso = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TNameOfCuso collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool TNameOfCusoSpecified
        {
            get
            {
                return ((this.TNameOfCuso != null) 
                            && (this.TNameOfCuso.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _tValueOfInvInCuso;
        
        [XmlElementAttribute("TValueOfInvInCuso", Order=108, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> TValueOfInvInCuso
        {
            get
            {
                return _tValueOfInvInCuso;
            }
            set
            {
                _tValueOfInvInCuso = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TValueOfInvInCuso collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool TValueOfInvInCusoSpecified
        {
            get
            {
                return ((this.TValueOfInvInCuso != null) 
                            && (this.TValueOfInvInCuso.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TotalAllOtherLoans", Order=109, Form=XmlSchemaForm.Unqualified)]
        public bool TotalAllOtherLoansValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalAllOtherLoans property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TotalAllOtherLoansValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TotalAllOtherLoans
        {
            get
            {
                if (this.TotalAllOtherLoansValueSpecified)
                {
                    return this.TotalAllOtherLoansValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TotalAllOtherLoansValue = value.GetValueOrDefault();
                this.TotalAllOtherLoansValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TradingProfits", Order=110, Form=XmlSchemaForm.Unqualified)]
        public bool TradingProfitsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TradingProfits property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TradingProfitsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TradingProfits
        {
            get
            {
                if (this.TradingProfitsValueSpecified)
                {
                    return this.TradingProfitsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TradingProfitsValue = value.GetValueOrDefault();
                this.TradingProfitsValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TradingSecurities", Order=111, Form=XmlSchemaForm.Unqualified)]
        public bool TradingSecuritiesValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TradingSecurities property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TradingSecuritiesValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TradingSecurities
        {
            get
            {
                if (this.TradingSecuritiesValueSpecified)
                {
                    return this.TradingSecuritiesValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TradingSecuritiesValue = value.GetValueOrDefault();
                this.TradingSecuritiesValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TransfertoRegReserve", Order=112, Form=XmlSchemaForm.Unqualified)]
        public bool TransfertoRegReserveValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TransfertoRegReserve property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TransfertoRegReserveValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TransfertoRegReserve
        {
            get
            {
                if (this.TransfertoRegReserveValueSpecified)
                {
                    return this.TransfertoRegReserveValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TransfertoRegReserveValue = value.GetValueOrDefault();
                this.TransfertoRegReserveValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TravelandConfExpense", Order=113, Form=XmlSchemaForm.Unqualified)]
        public bool TravelandConfExpenseValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TravelandConfExpense property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TravelandConfExpenseValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TravelandConfExpense
        {
            get
            {
                if (this.TravelandConfExpenseValueSpecified)
                {
                    return this.TravelandConfExpenseValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TravelandConfExpenseValue = value.GetValueOrDefault();
                this.TravelandConfExpenseValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UndividedEarnings", Order=114, Form=XmlSchemaForm.Unqualified)]
        public bool UndividedEarningsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UndividedEarnings property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UndividedEarningsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UndividedEarnings
        {
            get
            {
                if (this.UndividedEarningsValueSpecified)
                {
                    return this.UndividedEarningsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UndividedEarningsValue = value.GetValueOrDefault();
                this.UndividedEarningsValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UninsSecondaryCapital", Order=115, Form=XmlSchemaForm.Unqualified)]
        public bool UninsSecondaryCapitalValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UninsSecondaryCapital property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UninsSecondaryCapitalValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UninsSecondaryCapital
        {
            get
            {
                if (this.UninsSecondaryCapitalValueSpecified)
                {
                    return this.UninsSecondaryCapitalValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UninsSecondaryCapitalValue = value.GetValueOrDefault();
                this.UninsSecondaryCapitalValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UnsecuredBusinessLoans", Order=116, Form=XmlSchemaForm.Unqualified)]
        public bool UnsecuredBusinessLoansValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UnsecuredBusinessLoans property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UnsecuredBusinessLoansValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UnsecuredBusinessLoans
        {
            get
            {
                if (this.UnsecuredBusinessLoansValueSpecified)
                {
                    return this.UnsecuredBusinessLoansValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UnsecuredBusinessLoansValue = value.GetValueOrDefault();
                this.UnsecuredBusinessLoansValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UnsecuredCcLoans", Order=117, Form=XmlSchemaForm.Unqualified)]
        public bool UnsecuredCcLoansValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UnsecuredCcLoans property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UnsecuredCcLoansValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UnsecuredCcLoans
        {
            get
            {
                if (this.UnsecuredCcLoansValueSpecified)
                {
                    return this.UnsecuredCcLoansValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UnsecuredCcLoansValue = value.GetValueOrDefault();
                this.UnsecuredCcLoansValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UnsecuredCcLoansGl", Order=118, Form=XmlSchemaForm.Unqualified)]
        public bool UnsecuredCcLoansGlValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UnsecuredCcLoansGl property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UnsecuredCcLoansGlValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UnsecuredCcLoansGl
        {
            get
            {
                if (this.UnsecuredCcLoansGlValueSpecified)
                {
                    return this.UnsecuredCcLoansGlValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UnsecuredCcLoansGlValue = value.GetValueOrDefault();
                this.UnsecuredCcLoansGlValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UsedVehicleLoans", Order=119, Form=XmlSchemaForm.Unqualified)]
        public bool UsedVehicleLoansValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UsedVehicleLoans property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UsedVehicleLoansValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UsedVehicleLoans
        {
            get
            {
                if (this.UsedVehicleLoansValueSpecified)
                {
                    return this.UsedVehicleLoansValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UsedVehicleLoansValue = value.GetValueOrDefault();
                this.UsedVehicleLoansValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("Version_1", Order=120, Form=XmlSchemaForm.Unqualified)]
        public ParameterService.VersionType Version1 { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<XmlElement> _any;
        
        [XmlAnyElementAttribute(Order=121)]
        public Collection<XmlElement> Any
        {
            get
            {
                return _any;
            }
            set
            {
                _any = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return ((this.Any != null) 
                            && (this.Any.Count != 0));
            }
        }
    }
}
