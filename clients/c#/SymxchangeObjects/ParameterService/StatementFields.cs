//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 2.1.1182.0 using the following command:
// xscgen C:\Users\tbuese\Desktop\Symxchange\ParameterService/*.xsd --sf --un --uc --order --cn -0 --collectionSettersMode=Public -o C:\Users\tbuese\Desktop\Symxchange\ParameterService\generated-output -n ParameterService
namespace ParameterService
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.Diagnostics;
    using System.Xml;
    using System.Xml.Schema;
    using System.Xml.Serialization;
    
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1182.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("StatementFields", Namespace="http://www.symxchange.generated.symitar.com/crud/parameter/dto/retrieve")]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    [XmlRootAttribute("StatementFields", Namespace="http://www.symxchange.generated.symitar.com/crud/parameter/dto/retrieve")]
    public partial class StatementFields
    {
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AccountTrackingTypes", Order=0, Form=XmlSchemaForm.Unqualified)]
        public bool AccountTrackingTypesValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AccountTrackingTypes property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AccountTrackingTypesValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AccountTrackingTypes
        {
            get
            {
                if (this.AccountTrackingTypesValueSpecified)
                {
                    return this.AccountTrackingTypesValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AccountTrackingTypesValue = value.GetValueOrDefault();
                this.AccountTrackingTypesValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Ach", Order=1, Form=XmlSchemaForm.Unqualified)]
        public bool AchValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Ach property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AchValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Ach
        {
            get
            {
                if (this.AchValueSpecified)
                {
                    return this.AchValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AchValue = value.GetValueOrDefault();
                this.AchValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AchTransactions", Order=2, Form=XmlSchemaForm.Unqualified)]
        public bool AchTransactionsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AchTransactions property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AchTransactionsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AchTransactions
        {
            get
            {
                if (this.AchTransactionsValueSpecified)
                {
                    return this.AchTransactionsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AchTransactionsValue = value.GetValueOrDefault();
                this.AchTransactionsValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AdditionalPrincipal", Order=3, Form=XmlSchemaForm.Unqualified)]
        public bool AdditionalPrincipalValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AdditionalPrincipal property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AdditionalPrincipalValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AdditionalPrincipal
        {
            get
            {
                if (this.AdditionalPrincipalValueSpecified)
                {
                    return this.AdditionalPrincipalValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AdditionalPrincipalValue = value.GetValueOrDefault();
                this.AdditionalPrincipalValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _amtDueExpDateStmtMsgCode;
        
        [XmlElementAttribute("AmtDueExpDateStmtMsgCode", Order=4, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> AmtDueExpDateStmtMsgCode
        {
            get
            {
                return _amtDueExpDateStmtMsgCode;
            }
            set
            {
                _amtDueExpDateStmtMsgCode = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the AmtDueExpDateStmtMsgCode collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool AmtDueExpDateStmtMsgCodeSpecified
        {
            get
            {
                return ((this.AmtDueExpDateStmtMsgCode != null) 
                            && (this.AmtDueExpDateStmtMsgCode.Count != 0));
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="StatementFields" /> class.</para>
        /// </summary>
        public StatementFields()
        {
            this._amtDueExpDateStmtMsgCode = new Collection<short>();
            this._beginPromoBal = new Collection<short>();
            this._collateralList = new Collection<short>();
            this._complaintCorrStmtMsgCode = new Collection<short>();
            this._contactInformation = new Collection<short>();
            this._customStmtMsgCollList = new Collection<short>();
            this._customStmtMsgLoanTypes = new Collection<short>();
            this._customStmtMsgPurposeList = new Collection<short>();
            this._delinquencyDateStmtMsgCode = new Collection<short>();
            this._delqAmtDueHistoryOption = new Collection<short>();
            this._dqContactInformation = new Collection<short>();
            this._endingPromoBal = new Collection<short>();
            this._generalStatementMessageCode = new Collection<short>();
            this._institutionAddressLine = new Collection<short>();
            this._lnLine = new Collection<short>();
            this._loanTypes = new Collection<short>();
            this._ltChgStatementMsgCode = new Collection<short>();
            this._pmtCutoffTimeStmtMsgCode = new Collection<short>();
            this._promoBalance = new Collection<short>();
            this._promoDescription = new Collection<short>();
            this._promoTermination = new Collection<short>();
            this._purposeList = new Collection<short>();
            this._relMsgLine11 = new Collection<short>();
            this._relMsgLine110 = new Collection<short>();
            this._relMsgLine12 = new Collection<short>();
            this._relMsgLine13 = new Collection<short>();
            this._relMsgLine14 = new Collection<short>();
            this._relMsgLine15 = new Collection<short>();
            this._relMsgLine16 = new Collection<short>();
            this._relMsgLine17 = new Collection<short>();
            this._relMsgLine18 = new Collection<short>();
            this._relMsgLine19 = new Collection<short>();
            this._relMsgLine21 = new Collection<short>();
            this._relMsgLine210 = new Collection<short>();
            this._relMsgLine22 = new Collection<short>();
            this._relMsgLine23 = new Collection<short>();
            this._relMsgLine24 = new Collection<short>();
            this._relMsgLine25 = new Collection<short>();
            this._relMsgLine26 = new Collection<short>();
            this._relMsgLine27 = new Collection<short>();
            this._relMsgLine28 = new Collection<short>();
            this._relMsgLine29 = new Collection<short>();
            this._relationshipCodes = new Collection<short>();
            this._servicerAddress = new Collection<short>();
            this._svLine = new Collection<short>();
            this._any = new Collection<XmlElement>();
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Atm", Order=5, Form=XmlSchemaForm.Unqualified)]
        public bool AtmValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Atm property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AtmValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Atm
        {
            get
            {
                if (this.AtmValueSpecified)
                {
                    return this.AtmValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AtmValue = value.GetValueOrDefault();
                this.AtmValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AtmSummaryLoanTypes", Order=6, Form=XmlSchemaForm.Unqualified)]
        public bool AtmSummaryLoanTypesValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AtmSummaryLoanTypes property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AtmSummaryLoanTypesValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AtmSummaryLoanTypes
        {
            get
            {
                if (this.AtmSummaryLoanTypesValueSpecified)
                {
                    return this.AtmSummaryLoanTypesValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AtmSummaryLoanTypesValue = value.GetValueOrDefault();
                this.AtmSummaryLoanTypesValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AtmSummaryShareTypes", Order=7, Form=XmlSchemaForm.Unqualified)]
        public bool AtmSummaryShareTypesValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AtmSummaryShareTypes property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AtmSummaryShareTypesValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AtmSummaryShareTypes
        {
            get
            {
                if (this.AtmSummaryShareTypesValueSpecified)
                {
                    return this.AtmSummaryShareTypesValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AtmSummaryShareTypesValue = value.GetValueOrDefault();
                this.AtmSummaryShareTypesValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AudioResponse", Order=8, Form=XmlSchemaForm.Unqualified)]
        public bool AudioResponseValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AudioResponse property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AudioResponseValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AudioResponse
        {
            get
            {
                if (this.AudioResponseValueSpecified)
                {
                    return this.AudioResponseValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AudioResponseValue = value.GetValueOrDefault();
                this.AudioResponseValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AvailBalTransfer", Order=9, Form=XmlSchemaForm.Unqualified)]
        public bool AvailBalTransferValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AvailBalTransfer property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AvailBalTransferValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AvailBalTransfer
        {
            get
            {
                if (this.AvailBalTransferValueSpecified)
                {
                    return this.AvailBalTransferValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AvailBalTransferValue = value.GetValueOrDefault();
                this.AvailBalTransferValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AvailCashAdvance", Order=10, Form=XmlSchemaForm.Unqualified)]
        public bool AvailCashAdvanceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AvailCashAdvance property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AvailCashAdvanceValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AvailCashAdvance
        {
            get
            {
                if (this.AvailCashAdvanceValueSpecified)
                {
                    return this.AvailCashAdvanceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AvailCashAdvanceValue = value.GetValueOrDefault();
                this.AvailCashAdvanceValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AvailCombinedCaBt", Order=11, Form=XmlSchemaForm.Unqualified)]
        public bool AvailCombinedCaBtValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AvailCombinedCaBt property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AvailCombinedCaBtValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AvailCombinedCaBt
        {
            get
            {
                if (this.AvailCombinedCaBtValueSpecified)
                {
                    return this.AvailCombinedCaBtValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AvailCombinedCaBtValue = value.GetValueOrDefault();
                this.AvailCombinedCaBtValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BalTransferLimit", Order=12, Form=XmlSchemaForm.Unqualified)]
        public bool BalTransferLimitValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BalTransferLimit property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BalTransferLimitValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BalTransferLimit
        {
            get
            {
                if (this.BalTransferLimitValueSpecified)
                {
                    return this.BalTransferLimitValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BalTransferLimitValue = value.GetValueOrDefault();
                this.BalTransferLimitValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _beginPromoBal;
        
        [XmlElementAttribute("BeginPromoBal", Order=13, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> BeginPromoBal
        {
            get
            {
                return _beginPromoBal;
            }
            set
            {
                _beginPromoBal = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the BeginPromoBal collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool BeginPromoBalSpecified
        {
            get
            {
                return ((this.BeginPromoBal != null) 
                            && (this.BeginPromoBal.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BeginRegularBal", Order=14, Form=XmlSchemaForm.Unqualified)]
        public bool BeginRegularBalValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BeginRegularBal property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BeginRegularBalValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BeginRegularBal
        {
            get
            {
                if (this.BeginRegularBalValueSpecified)
                {
                    return this.BeginRegularBalValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BeginRegularBalValue = value.GetValueOrDefault();
                this.BeginRegularBalValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BeginningBalance", Order=15, Form=XmlSchemaForm.Unqualified)]
        public bool BeginningBalanceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BeginningBalance property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BeginningBalanceValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BeginningBalance
        {
            get
            {
                if (this.BeginningBalanceValueSpecified)
                {
                    return this.BeginningBalanceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BeginningBalanceValue = value.GetValueOrDefault();
                this.BeginningBalanceValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BillFeeAmount", Order=16, Form=XmlSchemaForm.Unqualified)]
        public bool BillFeeAmountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BillFeeAmount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BillFeeAmountValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BillFeeAmount
        {
            get
            {
                if (this.BillFeeAmountValueSpecified)
                {
                    return this.BillFeeAmountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BillFeeAmountValue = value.GetValueOrDefault();
                this.BillFeeAmountValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BillPayment", Order=17, Form=XmlSchemaForm.Unqualified)]
        public bool BillPaymentValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BillPayment property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BillPaymentValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BillPayment
        {
            get
            {
                if (this.BillPaymentValueSpecified)
                {
                    return this.BillPaymentValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BillPaymentValue = value.GetValueOrDefault();
                this.BillPaymentValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Bulk", Order=18, Form=XmlSchemaForm.Unqualified)]
        public bool BulkValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Bulk property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BulkValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Bulk
        {
            get
            {
                if (this.BulkValueSpecified)
                {
                    return this.BulkValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BulkValue = value.GetValueOrDefault();
                this.BulkValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CardTypesinTranHistory", Order=19, Form=XmlSchemaForm.Unqualified)]
        public bool CardTypesinTranHistoryValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CardTypesinTranHistory property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CardTypesinTranHistoryValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CardTypesinTranHistory
        {
            get
            {
                if (this.CardTypesinTranHistoryValueSpecified)
                {
                    return this.CardTypesinTranHistoryValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CardTypesinTranHistoryValue = value.GetValueOrDefault();
                this.CardTypesinTranHistoryValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Cash", Order=20, Form=XmlSchemaForm.Unqualified)]
        public bool CashValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Cash property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CashValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Cash
        {
            get
            {
                if (this.CashValueSpecified)
                {
                    return this.CashValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CashValue = value.GetValueOrDefault();
                this.CashValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CashAdvanceLimit", Order=21, Form=XmlSchemaForm.Unqualified)]
        public bool CashAdvanceLimitValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CashAdvanceLimit property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CashAdvanceLimitValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CashAdvanceLimit
        {
            get
            {
                if (this.CashAdvanceLimitValueSpecified)
                {
                    return this.CashAdvanceLimitValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CashAdvanceLimitValue = value.GetValueOrDefault();
                this.CashAdvanceLimitValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Chapter4Withholding", Order=22, Form=XmlSchemaForm.Unqualified)]
        public bool Chapter4WithholdingValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Chapter4Withholding property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool Chapter4WithholdingValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Chapter4Withholding
        {
            get
            {
                if (this.Chapter4WithholdingValueSpecified)
                {
                    return this.Chapter4WithholdingValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.Chapter4WithholdingValue = value.GetValueOrDefault();
                this.Chapter4WithholdingValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Check", Order=23, Form=XmlSchemaForm.Unqualified)]
        public bool CheckValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Check property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CheckValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Check
        {
            get
            {
                if (this.CheckValueSpecified)
                {
                    return this.CheckValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CheckValue = value.GetValueOrDefault();
                this.CheckValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CheckHoldCommentPrtOption", Order=24, Form=XmlSchemaForm.Unqualified)]
        public bool CheckHoldCommentPrtOptionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CheckHoldCommentPrtOption property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CheckHoldCommentPrtOptionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CheckHoldCommentPrtOption
        {
            get
            {
                if (this.CheckHoldCommentPrtOptionValueSpecified)
                {
                    return this.CheckHoldCommentPrtOptionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CheckHoldCommentPrtOptionValue = value.GetValueOrDefault();
                this.CheckHoldCommentPrtOptionValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CheckHoldPrintOption", Order=25, Form=XmlSchemaForm.Unqualified)]
        public bool CheckHoldPrintOptionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CheckHoldPrintOption property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CheckHoldPrintOptionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CheckHoldPrintOption
        {
            get
            {
                if (this.CheckHoldPrintOptionValueSpecified)
                {
                    return this.CheckHoldPrintOptionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CheckHoldPrintOptionValue = value.GetValueOrDefault();
                this.CheckHoldPrintOptionValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _collateralList;
        
        [XmlElementAttribute("CollateralList", Order=26, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> CollateralList
        {
            get
            {
                return _collateralList;
            }
            set
            {
                _collateralList = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CollateralList collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool CollateralListSpecified
        {
            get
            {
                return ((this.CollateralList != null) 
                            && (this.CollateralList.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CombinedCaBtLimit", Order=27, Form=XmlSchemaForm.Unqualified)]
        public bool CombinedCaBtLimitValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CombinedCaBtLimit property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CombinedCaBtLimitValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CombinedCaBtLimit
        {
            get
            {
                if (this.CombinedCaBtLimitValueSpecified)
                {
                    return this.CombinedCaBtLimitValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CombinedCaBtLimitValue = value.GetValueOrDefault();
                this.CombinedCaBtLimitValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _complaintCorrStmtMsgCode;
        
        [XmlElementAttribute("ComplaintCorrStmtMsgCode", Order=28, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> ComplaintCorrStmtMsgCode
        {
            get
            {
                return _complaintCorrStmtMsgCode;
            }
            set
            {
                _complaintCorrStmtMsgCode = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ComplaintCorrStmtMsgCode collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool ComplaintCorrStmtMsgCodeSpecified
        {
            get
            {
                return ((this.ComplaintCorrStmtMsgCode != null) 
                            && (this.ComplaintCorrStmtMsgCode.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _contactInformation;
        
        [XmlElementAttribute("ContactInformation", Order=29, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> ContactInformation
        {
            get
            {
                return _contactInformation;
            }
            set
            {
                _contactInformation = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ContactInformation collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool ContactInformationSpecified
        {
            get
            {
                return ((this.ContactInformation != null) 
                            && (this.ContactInformation.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditAvailable", Order=30, Form=XmlSchemaForm.Unqualified)]
        public bool CreditAvailableValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditAvailable property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditAvailableValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CreditAvailable
        {
            get
            {
                if (this.CreditAvailableValueSpecified)
                {
                    return this.CreditAvailableValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditAvailableValue = value.GetValueOrDefault();
                this.CreditAvailableValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditCarSepForIds", Order=31, Form=XmlSchemaForm.Unqualified)]
        public bool CreditCarSepForIdsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditCarSepForIds property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditCarSepForIdsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CreditCarSepForIds
        {
            get
            {
                if (this.CreditCarSepForIdsValueSpecified)
                {
                    return this.CreditCarSepForIdsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditCarSepForIdsValue = value.GetValueOrDefault();
                this.CreditCarSepForIdsValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditCard", Order=32, Form=XmlSchemaForm.Unqualified)]
        public bool CreditCardValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditCard property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditCardValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CreditCard
        {
            get
            {
                if (this.CreditCardValueSpecified)
                {
                    return this.CreditCardValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditCardValue = value.GetValueOrDefault();
                this.CreditCardValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditCardCouponSummary", Order=33, Form=XmlSchemaForm.Unqualified)]
        public bool CreditCardCouponSummaryValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditCardCouponSummary property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditCardCouponSummaryValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CreditCardCouponSummary
        {
            get
            {
                if (this.CreditCardCouponSummaryValueSpecified)
                {
                    return this.CreditCardCouponSummaryValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditCardCouponSummaryValue = value.GetValueOrDefault();
                this.CreditCardCouponSummaryValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditCardDigitLength", Order=34, Form=XmlSchemaForm.Unqualified)]
        public bool CreditCardDigitLengthValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditCardDigitLength property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditCardDigitLengthValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CreditCardDigitLength
        {
            get
            {
                if (this.CreditCardDigitLengthValueSpecified)
                {
                    return this.CreditCardDigitLengthValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditCardDigitLengthValue = value.GetValueOrDefault();
                this.CreditCardDigitLengthValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditCardDigitStart", Order=35, Form=XmlSchemaForm.Unqualified)]
        public bool CreditCardDigitStartValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditCardDigitStart property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditCardDigitStartValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CreditCardDigitStart
        {
            get
            {
                if (this.CreditCardDigitStartValueSpecified)
                {
                    return this.CreditCardDigitStartValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditCardDigitStartValue = value.GetValueOrDefault();
                this.CreditCardDigitStartValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditCardInactiveZeroBal", Order=36, Form=XmlSchemaForm.Unqualified)]
        public bool CreditCardInactiveZeroBalValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditCardInactiveZeroBal property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditCardInactiveZeroBalValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CreditCardInactiveZeroBal
        {
            get
            {
                if (this.CreditCardInactiveZeroBalValueSpecified)
                {
                    return this.CreditCardInactiveZeroBalValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditCardInactiveZeroBalValue = value.GetValueOrDefault();
                this.CreditCardInactiveZeroBalValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditCardMinPmtDisclOpt", Order=37, Form=XmlSchemaForm.Unqualified)]
        public bool CreditCardMinPmtDisclOptValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditCardMinPmtDisclOpt property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditCardMinPmtDisclOptValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CreditCardMinPmtDisclOpt
        {
            get
            {
                if (this.CreditCardMinPmtDisclOptValueSpecified)
                {
                    return this.CreditCardMinPmtDisclOptValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditCardMinPmtDisclOptValue = value.GetValueOrDefault();
                this.CreditCardMinPmtDisclOptValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditCardPayment", Order=38, Form=XmlSchemaForm.Unqualified)]
        public bool CreditCardPaymentValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditCardPayment property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditCardPaymentValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CreditCardPayment
        {
            get
            {
                if (this.CreditCardPaymentValueSpecified)
                {
                    return this.CreditCardPaymentValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditCardPaymentValue = value.GetValueOrDefault();
                this.CreditCardPaymentValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditCardPrinting", Order=39, Form=XmlSchemaForm.Unqualified)]
        public bool CreditCardPrintingValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditCardPrinting property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditCardPrintingValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CreditCardPrinting
        {
            get
            {
                if (this.CreditCardPrintingValueSpecified)
                {
                    return this.CreditCardPrintingValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditCardPrintingValue = value.GetValueOrDefault();
                this.CreditCardPrintingValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditCardPromotionsTable", Order=40, Form=XmlSchemaForm.Unqualified)]
        public bool CreditCardPromotionsTableValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditCardPromotionsTable property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditCardPromotionsTableValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CreditCardPromotionsTable
        {
            get
            {
                if (this.CreditCardPromotionsTableValueSpecified)
                {
                    return this.CreditCardPromotionsTableValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditCardPromotionsTableValue = value.GetValueOrDefault();
                this.CreditCardPromotionsTableValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditCardSepforSummaries", Order=41, Form=XmlSchemaForm.Unqualified)]
        public bool CreditCardSepforSummariesValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditCardSepforSummaries property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditCardSepforSummariesValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CreditCardSepforSummaries
        {
            get
            {
                if (this.CreditCardSepforSummariesValueSpecified)
                {
                    return this.CreditCardSepforSummariesValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditCardSepforSummariesValue = value.GetValueOrDefault();
                this.CreditCardSepforSummariesValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditCounselingPhone", Order=42, Form=XmlSchemaForm.Unqualified)]
        public bool CreditCounselingPhoneValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditCounselingPhone property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditCounselingPhoneValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CreditCounselingPhone
        {
            get
            {
                if (this.CreditCounselingPhoneValueSpecified)
                {
                    return this.CreditCounselingPhoneValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditCounselingPhoneValue = value.GetValueOrDefault();
                this.CreditCounselingPhoneValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditLimit", Order=43, Form=XmlSchemaForm.Unqualified)]
        public bool CreditLimitValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditLimit property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditLimitValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CreditLimit
        {
            get
            {
                if (this.CreditLimitValueSpecified)
                {
                    return this.CreditLimitValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditLimitValue = value.GetValueOrDefault();
                this.CreditLimitValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _customStmtMsgCollList;
        
        [XmlElementAttribute("CustomStmtMsgCollList", Order=44, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> CustomStmtMsgCollList
        {
            get
            {
                return _customStmtMsgCollList;
            }
            set
            {
                _customStmtMsgCollList = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CustomStmtMsgCollList collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool CustomStmtMsgCollListSpecified
        {
            get
            {
                return ((this.CustomStmtMsgCollList != null) 
                            && (this.CustomStmtMsgCollList.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _customStmtMsgLoanTypes;
        
        [XmlElementAttribute("CustomStmtMsgLoanTypes", Order=45, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> CustomStmtMsgLoanTypes
        {
            get
            {
                return _customStmtMsgLoanTypes;
            }
            set
            {
                _customStmtMsgLoanTypes = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CustomStmtMsgLoanTypes collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool CustomStmtMsgLoanTypesSpecified
        {
            get
            {
                return ((this.CustomStmtMsgLoanTypes != null) 
                            && (this.CustomStmtMsgLoanTypes.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CustomStmtMsgOptionCount", Order=46, Form=XmlSchemaForm.Unqualified)]
        public bool CustomStmtMsgOptionCountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CustomStmtMsgOptionCount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CustomStmtMsgOptionCountValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CustomStmtMsgOptionCount
        {
            get
            {
                if (this.CustomStmtMsgOptionCountValueSpecified)
                {
                    return this.CustomStmtMsgOptionCountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CustomStmtMsgOptionCountValue = value.GetValueOrDefault();
                this.CustomStmtMsgOptionCountValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _customStmtMsgPurposeList;
        
        [XmlElementAttribute("CustomStmtMsgPurposeList", Order=47, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> CustomStmtMsgPurposeList
        {
            get
            {
                return _customStmtMsgPurposeList;
            }
            set
            {
                _customStmtMsgPurposeList = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CustomStmtMsgPurposeList collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool CustomStmtMsgPurposeListSpecified
        {
            get
            {
                return ((this.CustomStmtMsgPurposeList != null) 
                            && (this.CustomStmtMsgPurposeList.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DebitCard", Order=48, Form=XmlSchemaForm.Unqualified)]
        public bool DebitCardValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DebitCard property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DebitCardValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DebitCard
        {
            get
            {
                if (this.DebitCardValueSpecified)
                {
                    return this.DebitCardValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DebitCardValue = value.GetValueOrDefault();
                this.DebitCardValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _delinquencyDateStmtMsgCode;
        
        [XmlElementAttribute("DelinquencyDateStmtMsgCode", Order=49, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> DelinquencyDateStmtMsgCode
        {
            get
            {
                return _delinquencyDateStmtMsgCode;
            }
            set
            {
                _delinquencyDateStmtMsgCode = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DelinquencyDateStmtMsgCode collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool DelinquencyDateStmtMsgCodeSpecified
        {
            get
            {
                return ((this.DelinquencyDateStmtMsgCode != null) 
                            && (this.DelinquencyDateStmtMsgCode.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _delqAmtDueHistoryOption;
        
        [XmlElementAttribute("DelqAmtDueHistoryOption", Order=50, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> DelqAmtDueHistoryOption
        {
            get
            {
                return _delqAmtDueHistoryOption;
            }
            set
            {
                _delqAmtDueHistoryOption = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DelqAmtDueHistoryOption collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool DelqAmtDueHistoryOptionSpecified
        {
            get
            {
                return ((this.DelqAmtDueHistoryOption != null) 
                            && (this.DelqAmtDueHistoryOption.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Deposit", Order=51, Form=XmlSchemaForm.Unqualified)]
        public bool DepositValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Deposit property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DepositValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Deposit
        {
            get
            {
                if (this.DepositValueSpecified)
                {
                    return this.DepositValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DepositValue = value.GetValueOrDefault();
                this.DepositValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Dividend", Order=52, Form=XmlSchemaForm.Unqualified)]
        public bool DividendValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Dividend property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DividendValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Dividend
        {
            get
            {
                if (this.DividendValueSpecified)
                {
                    return this.DividendValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DividendValue = value.GetValueOrDefault();
                this.DividendValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DividendPrinting", Order=53, Form=XmlSchemaForm.Unqualified)]
        public bool DividendPrintingValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DividendPrinting property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DividendPrintingValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DividendPrinting
        {
            get
            {
                if (this.DividendPrintingValueSpecified)
                {
                    return this.DividendPrintingValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DividendPrintingValue = value.GetValueOrDefault();
                this.DividendPrintingValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DividendYtd", Order=54, Form=XmlSchemaForm.Unqualified)]
        public bool DividendYtdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DividendYtd property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DividendYtdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DividendYtd
        {
            get
            {
                if (this.DividendYtdValueSpecified)
                {
                    return this.DividendYtdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DividendYtdValue = value.GetValueOrDefault();
                this.DividendYtdValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _dqContactInformation;
        
        [XmlElementAttribute("DqContactInformation", Order=55, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> DqContactInformation
        {
            get
            {
                return _dqContactInformation;
            }
            set
            {
                _dqContactInformation = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DqContactInformation collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool DqContactInformationSpecified
        {
            get
            {
                return ((this.DqContactInformation != null) 
                            && (this.DqContactInformation.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Draft", Order=56, Form=XmlSchemaForm.Unqualified)]
        public bool DraftValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Draft property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DraftValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Draft
        {
            get
            {
                if (this.DraftValueSpecified)
                {
                    return this.DraftValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DraftValue = value.GetValueOrDefault();
                this.DraftValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DraftSummaryLoanTypes", Order=57, Form=XmlSchemaForm.Unqualified)]
        public bool DraftSummaryLoanTypesValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DraftSummaryLoanTypes property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DraftSummaryLoanTypesValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DraftSummaryLoanTypes
        {
            get
            {
                if (this.DraftSummaryLoanTypesValueSpecified)
                {
                    return this.DraftSummaryLoanTypesValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DraftSummaryLoanTypesValue = value.GetValueOrDefault();
                this.DraftSummaryLoanTypesValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DraftSummaryShareTypes", Order=58, Form=XmlSchemaForm.Unqualified)]
        public bool DraftSummaryShareTypesValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DraftSummaryShareTypes property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DraftSummaryShareTypesValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DraftSummaryShareTypes
        {
            get
            {
                if (this.DraftSummaryShareTypesValueSpecified)
                {
                    return this.DraftSummaryShareTypesValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DraftSummaryShareTypesValue = value.GetValueOrDefault();
                this.DraftSummaryShareTypesValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("EarlyWdPenalty", Order=59, Form=XmlSchemaForm.Unqualified)]
        public bool EarlyWdPenaltyValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EarlyWdPenalty property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool EarlyWdPenaltyValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> EarlyWdPenalty
        {
            get
            {
                if (this.EarlyWdPenaltyValueSpecified)
                {
                    return this.EarlyWdPenaltyValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EarlyWdPenaltyValue = value.GetValueOrDefault();
                this.EarlyWdPenaltyValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("EndingBalance", Order=60, Form=XmlSchemaForm.Unqualified)]
        public bool EndingBalanceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EndingBalance property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool EndingBalanceValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> EndingBalance
        {
            get
            {
                if (this.EndingBalanceValueSpecified)
                {
                    return this.EndingBalanceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EndingBalanceValue = value.GetValueOrDefault();
                this.EndingBalanceValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _endingPromoBal;
        
        [XmlElementAttribute("EndingPromoBal", Order=61, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> EndingPromoBal
        {
            get
            {
                return _endingPromoBal;
            }
            set
            {
                _endingPromoBal = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the EndingPromoBal collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool EndingPromoBalSpecified
        {
            get
            {
                return ((this.EndingPromoBal != null) 
                            && (this.EndingPromoBal.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("EndingRegularBal", Order=62, Form=XmlSchemaForm.Unqualified)]
        public bool EndingRegularBalValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EndingRegularBal property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool EndingRegularBalValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> EndingRegularBal
        {
            get
            {
                if (this.EndingRegularBalValueSpecified)
                {
                    return this.EndingRegularBalValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EndingRegularBalValue = value.GetValueOrDefault();
                this.EndingRegularBalValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Escrow", Order=63, Form=XmlSchemaForm.Unqualified)]
        public bool EscrowValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Escrow property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool EscrowValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Escrow
        {
            get
            {
                if (this.EscrowValueSpecified)
                {
                    return this.EscrowValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EscrowValue = value.GetValueOrDefault();
                this.EscrowValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("EscrowAmount", Order=64, Form=XmlSchemaForm.Unqualified)]
        public bool EscrowAmountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EscrowAmount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool EscrowAmountValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> EscrowAmount
        {
            get
            {
                if (this.EscrowAmountValueSpecified)
                {
                    return this.EscrowAmountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EscrowAmountValue = value.GetValueOrDefault();
                this.EscrowAmountValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("EscrowUnpaid", Order=65, Form=XmlSchemaForm.Unqualified)]
        public bool EscrowUnpaidValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EscrowUnpaid property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool EscrowUnpaidValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> EscrowUnpaid
        {
            get
            {
                if (this.EscrowUnpaidValueSpecified)
                {
                    return this.EscrowUnpaidValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EscrowUnpaidValue = value.GetValueOrDefault();
                this.EscrowUnpaidValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ExternalLoanTrackingTypes", Order=66, Form=XmlSchemaForm.Unqualified)]
        public bool ExternalLoanTrackingTypesValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ExternalLoanTrackingTypes property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ExternalLoanTrackingTypesValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ExternalLoanTrackingTypes
        {
            get
            {
                if (this.ExternalLoanTrackingTypesValueSpecified)
                {
                    return this.ExternalLoanTrackingTypesValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ExternalLoanTrackingTypesValue = value.GetValueOrDefault();
                this.ExternalLoanTrackingTypesValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("FasterPayments", Order=67, Form=XmlSchemaForm.Unqualified)]
        public bool FasterPaymentsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FasterPayments property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FasterPaymentsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> FasterPayments
        {
            get
            {
                if (this.FasterPaymentsValueSpecified)
                {
                    return this.FasterPaymentsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FasterPaymentsValue = value.GetValueOrDefault();
                this.FasterPaymentsValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Fee", Order=68, Form=XmlSchemaForm.Unqualified)]
        public bool FeeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Fee property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FeeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Fee
        {
            get
            {
                if (this.FeeValueSpecified)
                {
                    return this.FeeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FeeValue = value.GetValueOrDefault();
                this.FeeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("FeesChargedYtd", Order=69, Form=XmlSchemaForm.Unqualified)]
        public bool FeesChargedYtdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FeesChargedYtd property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FeesChargedYtdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> FeesChargedYtd
        {
            get
            {
                if (this.FeesChargedYtdValueSpecified)
                {
                    return this.FeesChargedYtdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FeesChargedYtdValue = value.GetValueOrDefault();
                this.FeesChargedYtdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Format", Order=70, Form=XmlSchemaForm.Unqualified)]
        public bool FormatValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Format property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FormatValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Format
        {
            get
            {
                if (this.FormatValueSpecified)
                {
                    return this.FormatValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FormatValue = value.GetValueOrDefault();
                this.FormatValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _generalStatementMessageCode;
        
        [XmlElementAttribute("GeneralStatementMessageCode", Order=71, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> GeneralStatementMessageCode
        {
            get
            {
                return _generalStatementMessageCode;
            }
            set
            {
                _generalStatementMessageCode = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the GeneralStatementMessageCode collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool GeneralStatementMessageCodeSpecified
        {
            get
            {
                return ((this.GeneralStatementMessageCode != null) 
                            && (this.GeneralStatementMessageCode.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HomeBanking", Order=72, Form=XmlSchemaForm.Unqualified)]
        public bool HomeBankingValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HomeBanking property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HomeBankingValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HomeBanking
        {
            get
            {
                if (this.HomeBankingValueSpecified)
                {
                    return this.HomeBankingValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HomeBankingValue = value.GetValueOrDefault();
                this.HomeBankingValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HomeEquityCollateralCodes", Order=73, Form=XmlSchemaForm.Unqualified)]
        public bool HomeEquityCollateralCodesValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HomeEquityCollateralCodes property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HomeEquityCollateralCodesValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HomeEquityCollateralCodes
        {
            get
            {
                if (this.HomeEquityCollateralCodesValueSpecified)
                {
                    return this.HomeEquityCollateralCodesValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HomeEquityCollateralCodesValue = value.GetValueOrDefault();
                this.HomeEquityCollateralCodesValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HouseholdOption", Order=74, Form=XmlSchemaForm.Unqualified)]
        public bool HouseholdOptionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HouseholdOption property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HouseholdOptionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HouseholdOption
        {
            get
            {
                if (this.HouseholdOptionValueSpecified)
                {
                    return this.HouseholdOptionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HouseholdOptionValue = value.GetValueOrDefault();
                this.HouseholdOptionValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InclLateChgUnpaidChgAmt", Order=75, Form=XmlSchemaForm.Unqualified)]
        public bool InclLateChgUnpaidChgAmtValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InclLateChgUnpaidChgAmt property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InclLateChgUnpaidChgAmtValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InclLateChgUnpaidChgAmt
        {
            get
            {
                if (this.InclLateChgUnpaidChgAmtValueSpecified)
                {
                    return this.InclLateChgUnpaidChgAmtValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InclLateChgUnpaidChgAmtValue = value.GetValueOrDefault();
                this.InclLateChgUnpaidChgAmtValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InclWaivedLateChargeAmt", Order=76, Form=XmlSchemaForm.Unqualified)]
        public bool InclWaivedLateChargeAmtValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InclWaivedLateChargeAmt property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InclWaivedLateChargeAmtValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InclWaivedLateChargeAmt
        {
            get
            {
                if (this.InclWaivedLateChargeAmtValueSpecified)
                {
                    return this.InclWaivedLateChargeAmtValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InclWaivedLateChargeAmtValue = value.GetValueOrDefault();
                this.InclWaivedLateChargeAmtValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InclWireOriginatorComment", Order=77, Form=XmlSchemaForm.Unqualified)]
        public bool InclWireOriginatorCommentValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InclWireOriginatorComment property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InclWireOriginatorCommentValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InclWireOriginatorComment
        {
            get
            {
                if (this.InclWireOriginatorCommentValueSpecified)
                {
                    return this.InclWireOriginatorCommentValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InclWireOriginatorCommentValue = value.GetValueOrDefault();
                this.InclWireOriginatorCommentValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Include000FeeComments", Order=78, Form=XmlSchemaForm.Unqualified)]
        public bool Include000FeeCommentsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Include000FeeComments property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool Include000FeeCommentsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Include000FeeComments
        {
            get
            {
                if (this.Include000FeeCommentsValueSpecified)
                {
                    return this.Include000FeeCommentsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.Include000FeeCommentsValue = value.GetValueOrDefault();
                this.Include000FeeCommentsValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IncludeAchCheckComments", Order=79, Form=XmlSchemaForm.Unqualified)]
        public bool IncludeAchCheckCommentsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IncludeAchCheckComments property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IncludeAchCheckCommentsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IncludeAchCheckComments
        {
            get
            {
                if (this.IncludeAchCheckCommentsValueSpecified)
                {
                    return this.IncludeAchCheckCommentsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IncludeAchCheckCommentsValue = value.GetValueOrDefault();
                this.IncludeAchCheckCommentsValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IncludeAchEccComments", Order=80, Form=XmlSchemaForm.Unqualified)]
        public bool IncludeAchEccCommentsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IncludeAchEccComments property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IncludeAchEccCommentsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IncludeAchEccComments
        {
            get
            {
                if (this.IncludeAchEccCommentsValueSpecified)
                {
                    return this.IncludeAchEccCommentsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IncludeAchEccCommentsValue = value.GetValueOrDefault();
                this.IncludeAchEccCommentsValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IncludeAchTraceComments", Order=81, Form=XmlSchemaForm.Unqualified)]
        public bool IncludeAchTraceCommentsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IncludeAchTraceComments property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IncludeAchTraceCommentsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IncludeAchTraceComments
        {
            get
            {
                if (this.IncludeAchTraceCommentsValueSpecified)
                {
                    return this.IncludeAchTraceCommentsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IncludeAchTraceCommentsValue = value.GetValueOrDefault();
                this.IncludeAchTraceCommentsValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IncludeAddlPrincipalComment", Order=82, Form=XmlSchemaForm.Unqualified)]
        public bool IncludeAddlPrincipalCommentValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IncludeAddlPrincipalComment property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IncludeAddlPrincipalCommentValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IncludeAddlPrincipalComment
        {
            get
            {
                if (this.IncludeAddlPrincipalCommentValueSpecified)
                {
                    return this.IncludeAddlPrincipalCommentValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IncludeAddlPrincipalCommentValue = value.GetValueOrDefault();
                this.IncludeAddlPrincipalCommentValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IncludeBalanceSummary", Order=83, Form=XmlSchemaForm.Unqualified)]
        public bool IncludeBalanceSummaryValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IncludeBalanceSummary property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IncludeBalanceSummaryValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IncludeBalanceSummary
        {
            get
            {
                if (this.IncludeBalanceSummaryValueSpecified)
                {
                    return this.IncludeBalanceSummaryValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IncludeBalanceSummaryValue = value.GetValueOrDefault();
                this.IncludeBalanceSummaryValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IncludeBulkDepositComments", Order=84, Form=XmlSchemaForm.Unqualified)]
        public bool IncludeBulkDepositCommentsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IncludeBulkDepositComments property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IncludeBulkDepositCommentsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IncludeBulkDepositComments
        {
            get
            {
                if (this.IncludeBulkDepositCommentsValueSpecified)
                {
                    return this.IncludeBulkDepositCommentsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IncludeBulkDepositCommentsValue = value.GetValueOrDefault();
                this.IncludeBulkDepositCommentsValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IncludeCdMoTcComments", Order=85, Form=XmlSchemaForm.Unqualified)]
        public bool IncludeCdMoTcCommentsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IncludeCdMoTcComments property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IncludeCdMoTcCommentsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IncludeCdMoTcComments
        {
            get
            {
                if (this.IncludeCdMoTcCommentsValueSpecified)
                {
                    return this.IncludeCdMoTcCommentsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IncludeCdMoTcCommentsValue = value.GetValueOrDefault();
                this.IncludeCdMoTcCommentsValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IncludeCheckCashingComment", Order=86, Form=XmlSchemaForm.Unqualified)]
        public bool IncludeCheckCashingCommentValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IncludeCheckCashingComment property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IncludeCheckCashingCommentValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IncludeCheckCashingComment
        {
            get
            {
                if (this.IncludeCheckCashingCommentValueSpecified)
                {
                    return this.IncludeCheckCashingCommentValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IncludeCheckCashingCommentValue = value.GetValueOrDefault();
                this.IncludeCheckCashingCommentValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IncludeCkDisbursedComments", Order=87, Form=XmlSchemaForm.Unqualified)]
        public bool IncludeCkDisbursedCommentsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IncludeCkDisbursedComments property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IncludeCkDisbursedCommentsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IncludeCkDisbursedComments
        {
            get
            {
                if (this.IncludeCkDisbursedCommentsValueSpecified)
                {
                    return this.IncludeCkDisbursedCommentsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IncludeCkDisbursedCommentsValue = value.GetValueOrDefault();
                this.IncludeCkDisbursedCommentsValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IncludeCkReceivedComments", Order=88, Form=XmlSchemaForm.Unqualified)]
        public bool IncludeCkReceivedCommentsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IncludeCkReceivedComments property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IncludeCkReceivedCommentsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IncludeCkReceivedComments
        {
            get
            {
                if (this.IncludeCkReceivedCommentsValueSpecified)
                {
                    return this.IncludeCkReceivedCommentsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IncludeCkReceivedCommentsValue = value.GetValueOrDefault();
                this.IncludeCkReceivedCommentsValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IncludeDivAccrualInfofor", Order=89, Form=XmlSchemaForm.Unqualified)]
        public bool IncludeDivAccrualInfoforValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IncludeDivAccrualInfofor property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IncludeDivAccrualInfoforValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IncludeDivAccrualInfofor
        {
            get
            {
                if (this.IncludeDivAccrualInfoforValueSpecified)
                {
                    return this.IncludeDivAccrualInfoforValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IncludeDivAccrualInfoforValue = value.GetValueOrDefault();
                this.IncludeDivAccrualInfoforValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IncludeDividendAccrualInfo", Order=90, Form=XmlSchemaForm.Unqualified)]
        public bool IncludeDividendAccrualInfoValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IncludeDividendAccrualInfo property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IncludeDividendAccrualInfoValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IncludeDividendAccrualInfo
        {
            get
            {
                if (this.IncludeDividendAccrualInfoValueSpecified)
                {
                    return this.IncludeDividendAccrualInfoValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IncludeDividendAccrualInfoValue = value.GetValueOrDefault();
                this.IncludeDividendAccrualInfoValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IncludeFrFdComments", Order=91, Form=XmlSchemaForm.Unqualified)]
        public bool IncludeFrFdCommentsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IncludeFrFdComments property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IncludeFrFdCommentsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IncludeFrFdComments
        {
            get
            {
                if (this.IncludeFrFdCommentsValueSpecified)
                {
                    return this.IncludeFrFdCommentsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IncludeFrFdCommentsValue = value.GetValueOrDefault();
                this.IncludeFrFdCommentsValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IncludeIntAccrualInfofor", Order=92, Form=XmlSchemaForm.Unqualified)]
        public bool IncludeIntAccrualInfoforValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IncludeIntAccrualInfofor property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IncludeIntAccrualInfoforValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IncludeIntAccrualInfofor
        {
            get
            {
                if (this.IncludeIntAccrualInfoforValueSpecified)
                {
                    return this.IncludeIntAccrualInfoforValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IncludeIntAccrualInfoforValue = value.GetValueOrDefault();
                this.IncludeIntAccrualInfoforValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IncludeInterestAccrualInfo", Order=93, Form=XmlSchemaForm.Unqualified)]
        public bool IncludeInterestAccrualInfoValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IncludeInterestAccrualInfo property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IncludeInterestAccrualInfoValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IncludeInterestAccrualInfo
        {
            get
            {
                if (this.IncludeInterestAccrualInfoValueSpecified)
                {
                    return this.IncludeInterestAccrualInfoValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IncludeInterestAccrualInfoValue = value.GetValueOrDefault();
                this.IncludeInterestAccrualInfoValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IncludeMccComments", Order=94, Form=XmlSchemaForm.Unqualified)]
        public bool IncludeMccCommentsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IncludeMccComments property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IncludeMccCommentsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IncludeMccComments
        {
            get
            {
                if (this.IncludeMccCommentsValueSpecified)
                {
                    return this.IncludeMccCommentsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IncludeMccCommentsValue = value.GetValueOrDefault();
                this.IncludeMccCommentsValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IncludeMembersRemarks", Order=95, Form=XmlSchemaForm.Unqualified)]
        public bool IncludeMembersRemarksValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IncludeMembersRemarks property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IncludeMembersRemarksValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IncludeMembersRemarks
        {
            get
            {
                if (this.IncludeMembersRemarksValueSpecified)
                {
                    return this.IncludeMembersRemarksValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IncludeMembersRemarksValue = value.GetValueOrDefault();
                this.IncludeMembersRemarksValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IncludePreviousYearsTotals", Order=96, Form=XmlSchemaForm.Unqualified)]
        public bool IncludePreviousYearsTotalsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IncludePreviousYearsTotals property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IncludePreviousYearsTotalsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IncludePreviousYearsTotals
        {
            get
            {
                if (this.IncludePreviousYearsTotalsValueSpecified)
                {
                    return this.IncludePreviousYearsTotalsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IncludePreviousYearsTotalsValue = value.GetValueOrDefault();
                this.IncludePreviousYearsTotalsValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InquiryLine", Order=97, Form=XmlSchemaForm.Unqualified)]
        public bool InquiryLineValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InquiryLine property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InquiryLineValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InquiryLine
        {
            get
            {
                if (this.InquiryLineValueSpecified)
                {
                    return this.InquiryLineValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InquiryLineValue = value.GetValueOrDefault();
                this.InquiryLineValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _institutionAddressLine;
        
        [XmlElementAttribute("InstitutionAddressLine", Order=98, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> InstitutionAddressLine
        {
            get
            {
                return _institutionAddressLine;
            }
            set
            {
                _institutionAddressLine = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the InstitutionAddressLine collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool InstitutionAddressLineSpecified
        {
            get
            {
                return ((this.InstitutionAddressLine != null) 
                            && (this.InstitutionAddressLine.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Insurance", Order=99, Form=XmlSchemaForm.Unqualified)]
        public bool InsuranceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Insurance property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InsuranceValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Insurance
        {
            get
            {
                if (this.InsuranceValueSpecified)
                {
                    return this.InsuranceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InsuranceValue = value.GetValueOrDefault();
                this.InsuranceValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InterestChargedYtd", Order=100, Form=XmlSchemaForm.Unqualified)]
        public bool InterestChargedYtdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InterestChargedYtd property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InterestChargedYtdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InterestChargedYtd
        {
            get
            {
                if (this.InterestChargedYtdValueSpecified)
                {
                    return this.InterestChargedYtdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InterestChargedYtdValue = value.GetValueOrDefault();
                this.InterestChargedYtdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InterestPrinting", Order=101, Form=XmlSchemaForm.Unqualified)]
        public bool InterestPrintingValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InterestPrinting property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InterestPrintingValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InterestPrinting
        {
            get
            {
                if (this.InterestPrintingValueSpecified)
                {
                    return this.InterestPrintingValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InterestPrintingValue = value.GetValueOrDefault();
                this.InterestPrintingValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InterestRefund", Order=102, Form=XmlSchemaForm.Unqualified)]
        public bool InterestRefundValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InterestRefund property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InterestRefundValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InterestRefund
        {
            get
            {
                if (this.InterestRefundValueSpecified)
                {
                    return this.InterestRefundValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InterestRefundValue = value.GetValueOrDefault();
                this.InterestRefundValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InterestYtd", Order=103, Form=XmlSchemaForm.Unqualified)]
        public bool InterestYtdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InterestYtd property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InterestYtdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InterestYtd
        {
            get
            {
                if (this.InterestYtdValueSpecified)
                {
                    return this.InterestYtdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InterestYtdValue = value.GetValueOrDefault();
                this.InterestYtdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InterestYtdLease", Order=104, Form=XmlSchemaForm.Unqualified)]
        public bool InterestYtdLeaseValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InterestYtdLease property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InterestYtdLeaseValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InterestYtdLease
        {
            get
            {
                if (this.InterestYtdLeaseValueSpecified)
                {
                    return this.InterestYtdLeaseValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InterestYtdLeaseValue = value.GetValueOrDefault();
                this.InterestYtdLeaseValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IrsWithholding", Order=105, Form=XmlSchemaForm.Unqualified)]
        public bool IrsWithholdingValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IrsWithholding property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IrsWithholdingValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IrsWithholding
        {
            get
            {
                if (this.IrsWithholdingValueSpecified)
                {
                    return this.IrsWithholdingValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IrsWithholdingValue = value.GetValueOrDefault();
                this.IrsWithholdingValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("JournalVoucher", Order=106, Form=XmlSchemaForm.Unqualified)]
        public bool JournalVoucherValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the JournalVoucher property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool JournalVoucherValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> JournalVoucher
        {
            get
            {
                if (this.JournalVoucherValueSpecified)
                {
                    return this.JournalVoucherValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.JournalVoucherValue = value.GetValueOrDefault();
                this.JournalVoucherValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Kiosk", Order=107, Form=XmlSchemaForm.Unqualified)]
        public bool KioskValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Kiosk property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool KioskValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Kiosk
        {
            get
            {
                if (this.KioskValueSpecified)
                {
                    return this.KioskValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.KioskValue = value.GetValueOrDefault();
                this.KioskValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LateCharge", Order=108, Form=XmlSchemaForm.Unqualified)]
        public bool LateChargeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LateCharge property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LateChargeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LateCharge
        {
            get
            {
                if (this.LateChargeValueSpecified)
                {
                    return this.LateChargeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LateChargeValue = value.GetValueOrDefault();
                this.LateChargeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LateChargesUnpaid", Order=109, Form=XmlSchemaForm.Unqualified)]
        public bool LateChargesUnpaidValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LateChargesUnpaid property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LateChargesUnpaidValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LateChargesUnpaid
        {
            get
            {
                if (this.LateChargesUnpaidValueSpecified)
                {
                    return this.LateChargesUnpaidValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LateChargesUnpaidValue = value.GetValueOrDefault();
                this.LateChargesUnpaidValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _lnLine;
        
        [XmlElementAttribute("LnLine", Order=110, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> LnLine
        {
            get
            {
                return _lnLine;
            }
            set
            {
                _lnLine = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the LnLine collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool LnLineSpecified
        {
            get
            {
                return ((this.LnLine != null) 
                            && (this.LnLine.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LoanAddon", Order=111, Form=XmlSchemaForm.Unqualified)]
        public bool LoanAddonValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LoanAddon property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LoanAddonValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LoanAddon
        {
            get
            {
                if (this.LoanAddonValueSpecified)
                {
                    return this.LoanAddonValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LoanAddonValue = value.GetValueOrDefault();
                this.LoanAddonValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LoanTrackingTypes", Order=112, Form=XmlSchemaForm.Unqualified)]
        public bool LoanTrackingTypesValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LoanTrackingTypes property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LoanTrackingTypesValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LoanTrackingTypes
        {
            get
            {
                if (this.LoanTrackingTypesValueSpecified)
                {
                    return this.LoanTrackingTypesValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LoanTrackingTypesValue = value.GetValueOrDefault();
                this.LoanTrackingTypesValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _loanTypes;
        
        [XmlElementAttribute("LoanTypes", Order=113, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> LoanTypes
        {
            get
            {
                return _loanTypes;
            }
            set
            {
                _loanTypes = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the LoanTypes collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool LoanTypesSpecified
        {
            get
            {
                return ((this.LoanTypes != null) 
                            && (this.LoanTypes.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LocAvailAbleDqDays", Order=114, Form=XmlSchemaForm.Unqualified)]
        public bool LocAvailAbleDqDaysValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LocAvailAbleDqDays property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LocAvailAbleDqDaysValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LocAvailAbleDqDays
        {
            get
            {
                if (this.LocAvailAbleDqDaysValueSpecified)
                {
                    return this.LocAvailAbleDqDaysValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LocAvailAbleDqDaysValue = value.GetValueOrDefault();
                this.LocAvailAbleDqDaysValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LostStolenCardPhone", Order=115, Form=XmlSchemaForm.Unqualified)]
        public bool LostStolenCardPhoneValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LostStolenCardPhone property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LostStolenCardPhoneValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LostStolenCardPhone
        {
            get
            {
                if (this.LostStolenCardPhoneValueSpecified)
                {
                    return this.LostStolenCardPhoneValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LostStolenCardPhoneValue = value.GetValueOrDefault();
                this.LostStolenCardPhoneValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _ltChgStatementMsgCode;
        
        [XmlElementAttribute("LtChgStatementMsgCode", Order=116, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> LtChgStatementMsgCode
        {
            get
            {
                return _ltChgStatementMsgCode;
            }
            set
            {
                _ltChgStatementMsgCode = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the LtChgStatementMsgCode collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool LtChgStatementMsgCodeSpecified
        {
            get
            {
                return ((this.LtChgStatementMsgCode != null) 
                            && (this.LtChgStatementMsgCode.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MailCodeCforClosedAccts", Order=117, Form=XmlSchemaForm.Unqualified)]
        public bool MailCodeCforClosedAcctsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MailCodeCforClosedAccts property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MailCodeCforClosedAcctsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MailCodeCforClosedAccts
        {
            get
            {
                if (this.MailCodeCforClosedAcctsValueSpecified)
                {
                    return this.MailCodeCforClosedAcctsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MailCodeCforClosedAcctsValue = value.GetValueOrDefault();
                this.MailCodeCforClosedAcctsValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MakeCheckPayableto", Order=118, Form=XmlSchemaForm.Unqualified)]
        public bool MakeCheckPayabletoValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MakeCheckPayableto property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MakeCheckPayabletoValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MakeCheckPayableto
        {
            get
            {
                if (this.MakeCheckPayabletoValueSpecified)
                {
                    return this.MakeCheckPayabletoValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MakeCheckPayabletoValue = value.GetValueOrDefault();
                this.MakeCheckPayabletoValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MaskBeneficiarySsn", Order=119, Form=XmlSchemaForm.Unqualified)]
        public bool MaskBeneficiarySsnValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MaskBeneficiarySsn property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MaskBeneficiarySsnValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MaskBeneficiarySsn
        {
            get
            {
                if (this.MaskBeneficiarySsnValueSpecified)
                {
                    return this.MaskBeneficiarySsnValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MaskBeneficiarySsnValue = value.GetValueOrDefault();
                this.MaskBeneficiarySsnValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MemberRemarks", Order=120, Form=XmlSchemaForm.Unqualified)]
        public bool MemberRemarksValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MemberRemarks property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MemberRemarksValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MemberRemarks
        {
            get
            {
                if (this.MemberRemarksValueSpecified)
                {
                    return this.MemberRemarksValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MemberRemarksValue = value.GetValueOrDefault();
                this.MemberRemarksValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MerchantCategoryCode", Order=121, Form=XmlSchemaForm.Unqualified)]
        public bool MerchantCategoryCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MerchantCategoryCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MerchantCategoryCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MerchantCategoryCode
        {
            get
            {
                if (this.MerchantCategoryCodeValueSpecified)
                {
                    return this.MerchantCategoryCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MerchantCategoryCodeValue = value.GetValueOrDefault();
                this.MerchantCategoryCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MinBalforMinPmtDiscl", Order=122, Form=XmlSchemaForm.Unqualified)]
        public bool MinBalforMinPmtDisclValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MinBalforMinPmtDiscl property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MinBalforMinPmtDisclValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MinBalforMinPmtDiscl
        {
            get
            {
                if (this.MinBalforMinPmtDisclValueSpecified)
                {
                    return this.MinBalforMinPmtDisclValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MinBalforMinPmtDisclValue = value.GetValueOrDefault();
                this.MinBalforMinPmtDisclValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MinimumInterestDue", Order=123, Form=XmlSchemaForm.Unqualified)]
        public bool MinimumInterestDueValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MinimumInterestDue property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MinimumInterestDueValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MinimumInterestDue
        {
            get
            {
                if (this.MinimumInterestDueValueSpecified)
                {
                    return this.MinimumInterestDueValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MinimumInterestDueValue = value.GetValueOrDefault();
                this.MinimumInterestDueValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MortgageStatementOptionCoun", Order=124, Form=XmlSchemaForm.Unqualified)]
        public bool MortgageStatementOptionCounValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MortgageStatementOptionCoun property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MortgageStatementOptionCounValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MortgageStatementOptionCoun
        {
            get
            {
                if (this.MortgageStatementOptionCounValueSpecified)
                {
                    return this.MortgageStatementOptionCounValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MortgageStatementOptionCounValue = value.GetValueOrDefault();
                this.MortgageStatementOptionCounValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("NegativeSignOption", Order=125, Form=XmlSchemaForm.Unqualified)]
        public bool NegativeSignOptionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NegativeSignOption property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool NegativeSignOptionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> NegativeSignOption
        {
            get
            {
                if (this.NegativeSignOptionValueSpecified)
                {
                    return this.NegativeSignOptionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NegativeSignOptionValue = value.GetValueOrDefault();
                this.NegativeSignOptionValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("NewLoan", Order=126, Form=XmlSchemaForm.Unqualified)]
        public bool NewLoanValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NewLoan property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool NewLoanValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> NewLoan
        {
            get
            {
                if (this.NewLoanValueSpecified)
                {
                    return this.NewLoanValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NewLoanValue = value.GetValueOrDefault();
                this.NewLoanValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("NewSharefee", Order=127, Form=XmlSchemaForm.Unqualified)]
        public bool NewSharefeeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NewSharefee property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool NewSharefeeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> NewSharefee
        {
            get
            {
                if (this.NewSharefeeValueSpecified)
                {
                    return this.NewSharefeeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NewSharefeeValue = value.GetValueOrDefault();
                this.NewSharefeeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("NonCertificateMaturityDate", Order=128, Form=XmlSchemaForm.Unqualified)]
        public bool NonCertificateMaturityDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NonCertificateMaturityDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool NonCertificateMaturityDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> NonCertificateMaturityDate
        {
            get
            {
                if (this.NonCertificateMaturityDateValueSpecified)
                {
                    return this.NonCertificateMaturityDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NonCertificateMaturityDateValue = value.GetValueOrDefault();
                this.NonCertificateMaturityDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("NontaxDividendYtd", Order=129, Form=XmlSchemaForm.Unqualified)]
        public bool NontaxDividendYtdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NontaxDividendYtd property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool NontaxDividendYtdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> NontaxDividendYtd
        {
            get
            {
                if (this.NontaxDividendYtdValueSpecified)
                {
                    return this.NontaxDividendYtdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NontaxDividendYtdValue = value.GetValueOrDefault();
                this.NontaxDividendYtdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("NumberofpagesthisBatch", Order=130, Form=XmlSchemaForm.Unqualified)]
        public bool NumberofpagesthisBatchValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NumberofpagesthisBatch property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool NumberofpagesthisBatchValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> NumberofpagesthisBatch
        {
            get
            {
                if (this.NumberofpagesthisBatchValueSpecified)
                {
                    return this.NumberofpagesthisBatchValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NumberofpagesthisBatchValue = value.GetValueOrDefault();
                this.NumberofpagesthisBatchValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("NumberoftimesGenerated", Order=131, Form=XmlSchemaForm.Unqualified)]
        public bool NumberoftimesGeneratedValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NumberoftimesGenerated property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool NumberoftimesGeneratedValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> NumberoftimesGenerated
        {
            get
            {
                if (this.NumberoftimesGeneratedValueSpecified)
                {
                    return this.NumberoftimesGeneratedValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NumberoftimesGeneratedValue = value.GetValueOrDefault();
                this.NumberoftimesGeneratedValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OriginalBalance", Order=132, Form=XmlSchemaForm.Unqualified)]
        public bool OriginalBalanceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OriginalBalance property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OriginalBalanceValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> OriginalBalance
        {
            get
            {
                if (this.OriginalBalanceValueSpecified)
                {
                    return this.OriginalBalanceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OriginalBalanceValue = value.GetValueOrDefault();
                this.OriginalBalanceValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OverdraftItemFeeDesc", Order=133, Form=XmlSchemaForm.Unqualified)]
        public bool OverdraftItemFeeDescValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OverdraftItemFeeDesc property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OverdraftItemFeeDescValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> OverdraftItemFeeDesc
        {
            get
            {
                if (this.OverdraftItemFeeDescValueSpecified)
                {
                    return this.OverdraftItemFeeDescValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OverdraftItemFeeDescValue = value.GetValueOrDefault();
                this.OverdraftItemFeeDescValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Overdrawn", Order=134, Form=XmlSchemaForm.Unqualified)]
        public bool OverdrawnValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Overdrawn property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OverdrawnValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Overdrawn
        {
            get
            {
                if (this.OverdrawnValueSpecified)
                {
                    return this.OverdrawnValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OverdrawnValue = value.GetValueOrDefault();
                this.OverdrawnValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Payment", Order=135, Form=XmlSchemaForm.Unqualified)]
        public bool PaymentValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Payment property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PaymentValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Payment
        {
            get
            {
                if (this.PaymentValueSpecified)
                {
                    return this.PaymentValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PaymentValue = value.GetValueOrDefault();
                this.PaymentValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PaymentPrintOption", Order=136, Form=XmlSchemaForm.Unqualified)]
        public bool PaymentPrintOptionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PaymentPrintOption property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PaymentPrintOptionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PaymentPrintOption
        {
            get
            {
                if (this.PaymentPrintOptionValueSpecified)
                {
                    return this.PaymentPrintOptionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PaymentPrintOptionValue = value.GetValueOrDefault();
                this.PaymentPrintOptionValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PaymentSlipPrintingOption", Order=137, Form=XmlSchemaForm.Unqualified)]
        public bool PaymentSlipPrintingOptionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PaymentSlipPrintingOption property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PaymentSlipPrintingOptionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PaymentSlipPrintingOption
        {
            get
            {
                if (this.PaymentSlipPrintingOptionValueSpecified)
                {
                    return this.PaymentSlipPrintingOptionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PaymentSlipPrintingOptionValue = value.GetValueOrDefault();
                this.PaymentSlipPrintingOptionValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Payroll", Order=138, Form=XmlSchemaForm.Unqualified)]
        public bool PayrollValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Payroll property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PayrollValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Payroll
        {
            get
            {
                if (this.PayrollValueSpecified)
                {
                    return this.PayrollValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PayrollValue = value.GetValueOrDefault();
                this.PayrollValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PenaltyYtd", Order=139, Form=XmlSchemaForm.Unqualified)]
        public bool PenaltyYtdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PenaltyYtd property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PenaltyYtdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PenaltyYtd
        {
            get
            {
                if (this.PenaltyYtdValueSpecified)
                {
                    return this.PenaltyYtdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PenaltyYtdValue = value.GetValueOrDefault();
                this.PenaltyYtdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PintAprInfo", Order=140, Form=XmlSchemaForm.Unqualified)]
        public bool PintAprInfoValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PintAprInfo property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PintAprInfoValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PintAprInfo
        {
            get
            {
                if (this.PintAprInfoValueSpecified)
                {
                    return this.PintAprInfoValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PintAprInfoValue = value.GetValueOrDefault();
                this.PintAprInfoValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _pmtCutoffTimeStmtMsgCode;
        
        [XmlElementAttribute("PmtCutoffTimeStmtMsgCode", Order=141, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> PmtCutoffTimeStmtMsgCode
        {
            get
            {
                return _pmtCutoffTimeStmtMsgCode;
            }
            set
            {
                _pmtCutoffTimeStmtMsgCode = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PmtCutoffTimeStmtMsgCode collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool PmtCutoffTimeStmtMsgCodeSpecified
        {
            get
            {
                return ((this.PmtCutoffTimeStmtMsgCode != null) 
                            && (this.PmtCutoffTimeStmtMsgCode.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Pos", Order=142, Form=XmlSchemaForm.Unqualified)]
        public bool PosValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Pos property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PosValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Pos
        {
            get
            {
                if (this.PosValueSpecified)
                {
                    return this.PosValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PosValue = value.GetValueOrDefault();
                this.PosValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PostponedLateChg", Order=143, Form=XmlSchemaForm.Unqualified)]
        public bool PostponedLateChgValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PostponedLateChg property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PostponedLateChgValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PostponedLateChg
        {
            get
            {
                if (this.PostponedLateChgValueSpecified)
                {
                    return this.PostponedLateChgValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PostponedLateChgValue = value.GetValueOrDefault();
                this.PostponedLateChgValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrincipalPaymentDesc", Order=144, Form=XmlSchemaForm.Unqualified)]
        public bool PrincipalPaymentDescValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrincipalPaymentDesc property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrincipalPaymentDescValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrincipalPaymentDesc
        {
            get
            {
                if (this.PrincipalPaymentDescValueSpecified)
                {
                    return this.PrincipalPaymentDescValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrincipalPaymentDescValue = value.GetValueOrDefault();
                this.PrincipalPaymentDescValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrintAccountReference", Order=145, Form=XmlSchemaForm.Unqualified)]
        public bool PrintAccountReferenceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrintAccountReference property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrintAccountReferenceValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrintAccountReference
        {
            get
            {
                if (this.PrintAccountReferenceValueSpecified)
                {
                    return this.PrintAccountReferenceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrintAccountReferenceValue = value.GetValueOrDefault();
                this.PrintAccountReferenceValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrintAcctRelationshipCode", Order=146, Form=XmlSchemaForm.Unqualified)]
        public bool PrintAcctRelationshipCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrintAcctRelationshipCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrintAcctRelationshipCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrintAcctRelationshipCode
        {
            get
            {
                if (this.PrintAcctRelationshipCodeValueSpecified)
                {
                    return this.PrintAcctRelationshipCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrintAcctRelationshipCodeValue = value.GetValueOrDefault();
                this.PrintAcctRelationshipCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrintAddlInstrStmtDiscl", Order=147, Form=XmlSchemaForm.Unqualified)]
        public bool PrintAddlInstrStmtDisclValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrintAddlInstrStmtDiscl property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrintAddlInstrStmtDisclValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrintAddlInstrStmtDiscl
        {
            get
            {
                if (this.PrintAddlInstrStmtDisclValueSpecified)
                {
                    return this.PrintAddlInstrStmtDisclValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrintAddlInstrStmtDisclValue = value.GetValueOrDefault();
                this.PrintAddlInstrStmtDisclValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrintAddrStmtDisclosure", Order=148, Form=XmlSchemaForm.Unqualified)]
        public bool PrintAddrStmtDisclosureValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrintAddrStmtDisclosure property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrintAddrStmtDisclosureValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrintAddrStmtDisclosure
        {
            get
            {
                if (this.PrintAddrStmtDisclosureValueSpecified)
                {
                    return this.PrintAddrStmtDisclosureValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrintAddrStmtDisclosureValue = value.GetValueOrDefault();
                this.PrintAddrStmtDisclosureValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrintCreditCardLoanId", Order=149, Form=XmlSchemaForm.Unqualified)]
        public bool PrintCreditCardLoanIdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrintCreditCardLoanId property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrintCreditCardLoanIdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrintCreditCardLoanId
        {
            get
            {
                if (this.PrintCreditCardLoanIdValueSpecified)
                {
                    return this.PrintCreditCardLoanIdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrintCreditCardLoanIdValue = value.GetValueOrDefault();
                this.PrintCreditCardLoanIdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrintDraftTracerNumbers", Order=150, Form=XmlSchemaForm.Unqualified)]
        public bool PrintDraftTracerNumbersValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrintDraftTracerNumbers property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrintDraftTracerNumbersValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrintDraftTracerNumbers
        {
            get
            {
                if (this.PrintDraftTracerNumbersValueSpecified)
                {
                    return this.PrintDraftTracerNumbersValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrintDraftTracerNumbersValue = value.GetValueOrDefault();
                this.PrintDraftTracerNumbersValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrintIraContributionTotals", Order=151, Form=XmlSchemaForm.Unqualified)]
        public bool PrintIraContributionTotalsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrintIraContributionTotals property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrintIraContributionTotalsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrintIraContributionTotals
        {
            get
            {
                if (this.PrintIraContributionTotalsValueSpecified)
                {
                    return this.PrintIraContributionTotalsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrintIraContributionTotalsValue = value.GetValueOrDefault();
                this.PrintIraContributionTotalsValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrintNameTypes", Order=152, Form=XmlSchemaForm.Unqualified)]
        public bool PrintNameTypesValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrintNameTypes property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrintNameTypesValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrintNameTypes
        {
            get
            {
                if (this.PrintNameTypesValueSpecified)
                {
                    return this.PrintNameTypesValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrintNameTypesValue = value.GetValueOrDefault();
                this.PrintNameTypesValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrintOdpFeeAmountTotals", Order=153, Form=XmlSchemaForm.Unqualified)]
        public bool PrintOdpFeeAmountTotalsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrintOdpFeeAmountTotals property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrintOdpFeeAmountTotalsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrintOdpFeeAmountTotals
        {
            get
            {
                if (this.PrintOdpFeeAmountTotalsValueSpecified)
                {
                    return this.PrintOdpFeeAmountTotalsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrintOdpFeeAmountTotalsValue = value.GetValueOrDefault();
                this.PrintOdpFeeAmountTotalsValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrintOtherAccountInfo", Order=154, Form=XmlSchemaForm.Unqualified)]
        public bool PrintOtherAccountInfoValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrintOtherAccountInfo property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrintOtherAccountInfoValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrintOtherAccountInfo
        {
            get
            {
                if (this.PrintOtherAccountInfoValueSpecified)
                {
                    return this.PrintOtherAccountInfoValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrintOtherAccountInfoValue = value.GetValueOrDefault();
                this.PrintOtherAccountInfoValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrintPhoneStmtDisclosure", Order=155, Form=XmlSchemaForm.Unqualified)]
        public bool PrintPhoneStmtDisclosureValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrintPhoneStmtDisclosure property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrintPhoneStmtDisclosureValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrintPhoneStmtDisclosure
        {
            get
            {
                if (this.PrintPhoneStmtDisclosureValueSpecified)
                {
                    return this.PrintPhoneStmtDisclosureValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrintPhoneStmtDisclosureValue = value.GetValueOrDefault();
                this.PrintPhoneStmtDisclosureValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrintSocialSecurityNumber", Order=156, Form=XmlSchemaForm.Unqualified)]
        public bool PrintSocialSecurityNumberValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrintSocialSecurityNumber property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrintSocialSecurityNumberValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrintSocialSecurityNumber
        {
            get
            {
                if (this.PrintSocialSecurityNumberValueSpecified)
                {
                    return this.PrintSocialSecurityNumberValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrintSocialSecurityNumberValue = value.GetValueOrDefault();
                this.PrintSocialSecurityNumberValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrintStmtDisclosure", Order=157, Form=XmlSchemaForm.Unqualified)]
        public bool PrintStmtDisclosureValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrintStmtDisclosure property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrintStmtDisclosureValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrintStmtDisclosure
        {
            get
            {
                if (this.PrintStmtDisclosureValueSpecified)
                {
                    return this.PrintStmtDisclosureValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrintStmtDisclosureValue = value.GetValueOrDefault();
                this.PrintStmtDisclosureValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrintStmtEscrowUnpaidBal", Order=158, Form=XmlSchemaForm.Unqualified)]
        public bool PrintStmtEscrowUnpaidBalValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrintStmtEscrowUnpaidBal property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrintStmtEscrowUnpaidBalValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrintStmtEscrowUnpaidBal
        {
            get
            {
                if (this.PrintStmtEscrowUnpaidBalValueSpecified)
                {
                    return this.PrintStmtEscrowUnpaidBalValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrintStmtEscrowUnpaidBalValue = value.GetValueOrDefault();
                this.PrintStmtEscrowUnpaidBalValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrintStmtLateChgUnpaidBal", Order=159, Form=XmlSchemaForm.Unqualified)]
        public bool PrintStmtLateChgUnpaidBalValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrintStmtLateChgUnpaidBal property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrintStmtLateChgUnpaidBalValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrintStmtLateChgUnpaidBal
        {
            get
            {
                if (this.PrintStmtLateChgUnpaidBalValueSpecified)
                {
                    return this.PrintStmtLateChgUnpaidBalValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrintStmtLateChgUnpaidBalValue = value.GetValueOrDefault();
                this.PrintStmtLateChgUnpaidBalValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrintStmtUnappliedPmtBal", Order=160, Form=XmlSchemaForm.Unqualified)]
        public bool PrintStmtUnappliedPmtBalValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrintStmtUnappliedPmtBal property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrintStmtUnappliedPmtBalValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrintStmtUnappliedPmtBal
        {
            get
            {
                if (this.PrintStmtUnappliedPmtBalValueSpecified)
                {
                    return this.PrintStmtUnappliedPmtBalValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrintStmtUnappliedPmtBalValue = value.GetValueOrDefault();
                this.PrintStmtUnappliedPmtBalValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrintTransferAcctNumbers", Order=161, Form=XmlSchemaForm.Unqualified)]
        public bool PrintTransferAcctNumbersValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrintTransferAcctNumbers property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrintTransferAcctNumbersValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrintTransferAcctNumbers
        {
            get
            {
                if (this.PrintTransferAcctNumbersValueSpecified)
                {
                    return this.PrintTransferAcctNumbersValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrintTransferAcctNumbersValue = value.GetValueOrDefault();
                this.PrintTransferAcctNumbersValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrintWebsiteStmtDisclosure", Order=162, Form=XmlSchemaForm.Unqualified)]
        public bool PrintWebsiteStmtDisclosureValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrintWebsiteStmtDisclosure property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrintWebsiteStmtDisclosureValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrintWebsiteStmtDisclosure
        {
            get
            {
                if (this.PrintWebsiteStmtDisclosureValueSpecified)
                {
                    return this.PrintWebsiteStmtDisclosureValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrintWebsiteStmtDisclosureValue = value.GetValueOrDefault();
                this.PrintWebsiteStmtDisclosureValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrintnextDividend", Order=163, Form=XmlSchemaForm.Unqualified)]
        public bool PrintnextDividendValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrintnextDividend property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrintnextDividendValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrintnextDividend
        {
            get
            {
                if (this.PrintnextDividendValueSpecified)
                {
                    return this.PrintnextDividendValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrintnextDividendValue = value.GetValueOrDefault();
                this.PrintnextDividendValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _promoBalance;
        
        [XmlElementAttribute("PromoBalance", Order=164, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> PromoBalance
        {
            get
            {
                return _promoBalance;
            }
            set
            {
                _promoBalance = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PromoBalance collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool PromoBalanceSpecified
        {
            get
            {
                return ((this.PromoBalance != null) 
                            && (this.PromoBalance.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _promoDescription;
        
        [XmlElementAttribute("PromoDescription", Order=165, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> PromoDescription
        {
            get
            {
                return _promoDescription;
            }
            set
            {
                _promoDescription = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PromoDescription collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool PromoDescriptionSpecified
        {
            get
            {
                return ((this.PromoDescription != null) 
                            && (this.PromoDescription.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _promoTermination;
        
        [XmlElementAttribute("PromoTermination", Order=166, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> PromoTermination
        {
            get
            {
                return _promoTermination;
            }
            set
            {
                _promoTermination = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PromoTermination collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool PromoTerminationSpecified
        {
            get
            {
                return ((this.PromoTermination != null) 
                            && (this.PromoTermination.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _purposeList;
        
        [XmlElementAttribute("PurposeList", Order=167, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> PurposeList
        {
            get
            {
                return _purposeList;
            }
            set
            {
                _purposeList = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PurposeList collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool PurposeListSpecified
        {
            get
            {
                return ((this.PurposeList != null) 
                            && (this.PurposeList.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Recurring", Order=168, Form=XmlSchemaForm.Unqualified)]
        public bool RecurringValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Recurring property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool RecurringValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Recurring
        {
            get
            {
                if (this.RecurringValueSpecified)
                {
                    return this.RecurringValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RecurringValue = value.GetValueOrDefault();
                this.RecurringValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Refinance", Order=169, Form=XmlSchemaForm.Unqualified)]
        public bool RefinanceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Refinance property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool RefinanceValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Refinance
        {
            get
            {
                if (this.RefinanceValueSpecified)
                {
                    return this.RefinanceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RefinanceValue = value.GetValueOrDefault();
                this.RefinanceValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("RegZYtdTotalsPrintOption", Order=170, Form=XmlSchemaForm.Unqualified)]
        public bool RegZYtdTotalsPrintOptionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RegZYtdTotalsPrintOption property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool RegZYtdTotalsPrintOptionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> RegZYtdTotalsPrintOption
        {
            get
            {
                if (this.RegZYtdTotalsPrintOptionValueSpecified)
                {
                    return this.RegZYtdTotalsPrintOptionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RegZYtdTotalsPrintOptionValue = value.GetValueOrDefault();
                this.RegZYtdTotalsPrintOptionValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("RegularBalance", Order=171, Form=XmlSchemaForm.Unqualified)]
        public bool RegularBalanceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RegularBalance property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool RegularBalanceValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> RegularBalance
        {
            get
            {
                if (this.RegularBalanceValueSpecified)
                {
                    return this.RegularBalanceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RegularBalanceValue = value.GetValueOrDefault();
                this.RegularBalanceValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _relMsgLine11;
        
        [XmlElementAttribute("RelMsgLine11", Order=172, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> RelMsgLine11
        {
            get
            {
                return _relMsgLine11;
            }
            set
            {
                _relMsgLine11 = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RelMsgLine11 collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool RelMsgLine11Specified
        {
            get
            {
                return ((this.RelMsgLine11 != null) 
                            && (this.RelMsgLine11.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _relMsgLine110;
        
        [XmlElementAttribute("RelMsgLine110", Order=173, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> RelMsgLine110
        {
            get
            {
                return _relMsgLine110;
            }
            set
            {
                _relMsgLine110 = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RelMsgLine110 collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool RelMsgLine110Specified
        {
            get
            {
                return ((this.RelMsgLine110 != null) 
                            && (this.RelMsgLine110.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _relMsgLine12;
        
        [XmlElementAttribute("RelMsgLine12", Order=174, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> RelMsgLine12
        {
            get
            {
                return _relMsgLine12;
            }
            set
            {
                _relMsgLine12 = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RelMsgLine12 collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool RelMsgLine12Specified
        {
            get
            {
                return ((this.RelMsgLine12 != null) 
                            && (this.RelMsgLine12.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _relMsgLine13;
        
        [XmlElementAttribute("RelMsgLine13", Order=175, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> RelMsgLine13
        {
            get
            {
                return _relMsgLine13;
            }
            set
            {
                _relMsgLine13 = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RelMsgLine13 collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool RelMsgLine13Specified
        {
            get
            {
                return ((this.RelMsgLine13 != null) 
                            && (this.RelMsgLine13.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _relMsgLine14;
        
        [XmlElementAttribute("RelMsgLine14", Order=176, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> RelMsgLine14
        {
            get
            {
                return _relMsgLine14;
            }
            set
            {
                _relMsgLine14 = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RelMsgLine14 collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool RelMsgLine14Specified
        {
            get
            {
                return ((this.RelMsgLine14 != null) 
                            && (this.RelMsgLine14.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _relMsgLine15;
        
        [XmlElementAttribute("RelMsgLine15", Order=177, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> RelMsgLine15
        {
            get
            {
                return _relMsgLine15;
            }
            set
            {
                _relMsgLine15 = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RelMsgLine15 collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool RelMsgLine15Specified
        {
            get
            {
                return ((this.RelMsgLine15 != null) 
                            && (this.RelMsgLine15.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _relMsgLine16;
        
        [XmlElementAttribute("RelMsgLine16", Order=178, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> RelMsgLine16
        {
            get
            {
                return _relMsgLine16;
            }
            set
            {
                _relMsgLine16 = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RelMsgLine16 collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool RelMsgLine16Specified
        {
            get
            {
                return ((this.RelMsgLine16 != null) 
                            && (this.RelMsgLine16.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _relMsgLine17;
        
        [XmlElementAttribute("RelMsgLine17", Order=179, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> RelMsgLine17
        {
            get
            {
                return _relMsgLine17;
            }
            set
            {
                _relMsgLine17 = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RelMsgLine17 collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool RelMsgLine17Specified
        {
            get
            {
                return ((this.RelMsgLine17 != null) 
                            && (this.RelMsgLine17.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _relMsgLine18;
        
        [XmlElementAttribute("RelMsgLine18", Order=180, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> RelMsgLine18
        {
            get
            {
                return _relMsgLine18;
            }
            set
            {
                _relMsgLine18 = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RelMsgLine18 collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool RelMsgLine18Specified
        {
            get
            {
                return ((this.RelMsgLine18 != null) 
                            && (this.RelMsgLine18.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _relMsgLine19;
        
        [XmlElementAttribute("RelMsgLine19", Order=181, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> RelMsgLine19
        {
            get
            {
                return _relMsgLine19;
            }
            set
            {
                _relMsgLine19 = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RelMsgLine19 collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool RelMsgLine19Specified
        {
            get
            {
                return ((this.RelMsgLine19 != null) 
                            && (this.RelMsgLine19.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _relMsgLine21;
        
        [XmlElementAttribute("RelMsgLine21", Order=182, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> RelMsgLine21
        {
            get
            {
                return _relMsgLine21;
            }
            set
            {
                _relMsgLine21 = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RelMsgLine21 collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool RelMsgLine21Specified
        {
            get
            {
                return ((this.RelMsgLine21 != null) 
                            && (this.RelMsgLine21.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _relMsgLine210;
        
        [XmlElementAttribute("RelMsgLine210", Order=183, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> RelMsgLine210
        {
            get
            {
                return _relMsgLine210;
            }
            set
            {
                _relMsgLine210 = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RelMsgLine210 collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool RelMsgLine210Specified
        {
            get
            {
                return ((this.RelMsgLine210 != null) 
                            && (this.RelMsgLine210.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _relMsgLine22;
        
        [XmlElementAttribute("RelMsgLine22", Order=184, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> RelMsgLine22
        {
            get
            {
                return _relMsgLine22;
            }
            set
            {
                _relMsgLine22 = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RelMsgLine22 collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool RelMsgLine22Specified
        {
            get
            {
                return ((this.RelMsgLine22 != null) 
                            && (this.RelMsgLine22.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _relMsgLine23;
        
        [XmlElementAttribute("RelMsgLine23", Order=185, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> RelMsgLine23
        {
            get
            {
                return _relMsgLine23;
            }
            set
            {
                _relMsgLine23 = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RelMsgLine23 collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool RelMsgLine23Specified
        {
            get
            {
                return ((this.RelMsgLine23 != null) 
                            && (this.RelMsgLine23.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _relMsgLine24;
        
        [XmlElementAttribute("RelMsgLine24", Order=186, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> RelMsgLine24
        {
            get
            {
                return _relMsgLine24;
            }
            set
            {
                _relMsgLine24 = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RelMsgLine24 collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool RelMsgLine24Specified
        {
            get
            {
                return ((this.RelMsgLine24 != null) 
                            && (this.RelMsgLine24.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _relMsgLine25;
        
        [XmlElementAttribute("RelMsgLine25", Order=187, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> RelMsgLine25
        {
            get
            {
                return _relMsgLine25;
            }
            set
            {
                _relMsgLine25 = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RelMsgLine25 collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool RelMsgLine25Specified
        {
            get
            {
                return ((this.RelMsgLine25 != null) 
                            && (this.RelMsgLine25.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _relMsgLine26;
        
        [XmlElementAttribute("RelMsgLine26", Order=188, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> RelMsgLine26
        {
            get
            {
                return _relMsgLine26;
            }
            set
            {
                _relMsgLine26 = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RelMsgLine26 collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool RelMsgLine26Specified
        {
            get
            {
                return ((this.RelMsgLine26 != null) 
                            && (this.RelMsgLine26.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _relMsgLine27;
        
        [XmlElementAttribute("RelMsgLine27", Order=189, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> RelMsgLine27
        {
            get
            {
                return _relMsgLine27;
            }
            set
            {
                _relMsgLine27 = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RelMsgLine27 collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool RelMsgLine27Specified
        {
            get
            {
                return ((this.RelMsgLine27 != null) 
                            && (this.RelMsgLine27.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _relMsgLine28;
        
        [XmlElementAttribute("RelMsgLine28", Order=190, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> RelMsgLine28
        {
            get
            {
                return _relMsgLine28;
            }
            set
            {
                _relMsgLine28 = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RelMsgLine28 collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool RelMsgLine28Specified
        {
            get
            {
                return ((this.RelMsgLine28 != null) 
                            && (this.RelMsgLine28.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _relMsgLine29;
        
        [XmlElementAttribute("RelMsgLine29", Order=191, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> RelMsgLine29
        {
            get
            {
                return _relMsgLine29;
            }
            set
            {
                _relMsgLine29 = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RelMsgLine29 collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool RelMsgLine29Specified
        {
            get
            {
                return ((this.RelMsgLine29 != null) 
                            && (this.RelMsgLine29.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _relationshipCodes;
        
        [XmlElementAttribute("RelationshipCodes", Order=192, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> RelationshipCodes
        {
            get
            {
                return _relationshipCodes;
            }
            set
            {
                _relationshipCodes = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RelationshipCodes collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool RelationshipCodesSpecified
        {
            get
            {
                return ((this.RelationshipCodes != null) 
                            && (this.RelationshipCodes.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SalesTaxAmount", Order=193, Form=XmlSchemaForm.Unqualified)]
        public bool SalesTaxAmountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SalesTaxAmount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SalesTaxAmountValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SalesTaxAmount
        {
            get
            {
                if (this.SalesTaxAmountValueSpecified)
                {
                    return this.SalesTaxAmountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SalesTaxAmountValue = value.GetValueOrDefault();
                this.SalesTaxAmountValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SeparatePrintoutOption", Order=194, Form=XmlSchemaForm.Unqualified)]
        public bool SeparatePrintoutOptionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SeparatePrintoutOption property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SeparatePrintoutOptionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SeparatePrintoutOption
        {
            get
            {
                if (this.SeparatePrintoutOptionValueSpecified)
                {
                    return this.SeparatePrintoutOptionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SeparatePrintoutOptionValue = value.GetValueOrDefault();
                this.SeparatePrintoutOptionValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SeparatorForIds", Order=195, Form=XmlSchemaForm.Unqualified)]
        public bool SeparatorForIdsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SeparatorForIds property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SeparatorForIdsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SeparatorForIds
        {
            get
            {
                if (this.SeparatorForIdsValueSpecified)
                {
                    return this.SeparatorForIdsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SeparatorForIdsValue = value.GetValueOrDefault();
                this.SeparatorForIdsValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SeparatorforBalanceSummary", Order=196, Form=XmlSchemaForm.Unqualified)]
        public bool SeparatorforBalanceSummaryValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SeparatorforBalanceSummary property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SeparatorforBalanceSummaryValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SeparatorforBalanceSummary
        {
            get
            {
                if (this.SeparatorforBalanceSummaryValueSpecified)
                {
                    return this.SeparatorforBalanceSummaryValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SeparatorforBalanceSummaryValue = value.GetValueOrDefault();
                this.SeparatorforBalanceSummaryValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SeparatorforSummaries", Order=197, Form=XmlSchemaForm.Unqualified)]
        public bool SeparatorforSummariesValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SeparatorforSummaries property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SeparatorforSummariesValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SeparatorforSummaries
        {
            get
            {
                if (this.SeparatorforSummariesValueSpecified)
                {
                    return this.SeparatorforSummariesValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SeparatorforSummariesValue = value.GetValueOrDefault();
                this.SeparatorforSummariesValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _servicerAddress;
        
        [XmlElementAttribute("ServicerAddress", Order=198, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> ServicerAddress
        {
            get
            {
                return _servicerAddress;
            }
            set
            {
                _servicerAddress = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ServicerAddress collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool ServicerAddressSpecified
        {
            get
            {
                return ((this.ServicerAddress != null) 
                            && (this.ServicerAddress.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ShareTrackingTypes", Order=199, Form=XmlSchemaForm.Unqualified)]
        public bool ShareTrackingTypesValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ShareTrackingTypes property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ShareTrackingTypesValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ShareTrackingTypes
        {
            get
            {
                if (this.ShareTrackingTypesValueSpecified)
                {
                    return this.ShareTrackingTypesValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ShareTrackingTypesValue = value.GetValueOrDefault();
                this.ShareTrackingTypesValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SharedBranch", Order=200, Form=XmlSchemaForm.Unqualified)]
        public bool SharedBranchValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SharedBranch property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SharedBranchValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SharedBranch
        {
            get
            {
                if (this.SharedBranchValueSpecified)
                {
                    return this.SharedBranchValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SharedBranchValue = value.GetValueOrDefault();
                this.SharedBranchValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SortOrder", Order=201, Form=XmlSchemaForm.Unqualified)]
        public bool SortOrderValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SortOrder property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SortOrderValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SortOrder
        {
            get
            {
                if (this.SortOrderValueSpecified)
                {
                    return this.SortOrderValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SortOrderValue = value.GetValueOrDefault();
                this.SortOrderValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SpecifyBranchStmtDisclosure", Order=202, Form=XmlSchemaForm.Unqualified)]
        public bool SpecifyBranchStmtDisclosureValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SpecifyBranchStmtDisclosure property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SpecifyBranchStmtDisclosureValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SpecifyBranchStmtDisclosure
        {
            get
            {
                if (this.SpecifyBranchStmtDisclosureValueSpecified)
                {
                    return this.SpecifyBranchStmtDisclosureValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SpecifyBranchStmtDisclosureValue = value.GetValueOrDefault();
                this.SpecifyBranchStmtDisclosureValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SpecifyOvlStmtDisclosureFe", Order=203, Form=XmlSchemaForm.Unqualified)]
        public bool SpecifyOvlStmtDisclosureFeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SpecifyOvlStmtDisclosureFe property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SpecifyOvlStmtDisclosureFeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SpecifyOvlStmtDisclosureFe
        {
            get
            {
                if (this.SpecifyOvlStmtDisclosureFeValueSpecified)
                {
                    return this.SpecifyOvlStmtDisclosureFeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SpecifyOvlStmtDisclosureFeValue = value.GetValueOrDefault();
                this.SpecifyOvlStmtDisclosureFeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("StateWithholdYtd", Order=204, Form=XmlSchemaForm.Unqualified)]
        public bool StateWithholdYtdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StateWithholdYtd property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool StateWithholdYtdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> StateWithholdYtd
        {
            get
            {
                if (this.StateWithholdYtdValueSpecified)
                {
                    return this.StateWithholdYtdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.StateWithholdYtdValue = value.GetValueOrDefault();
                this.StateWithholdYtdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("StateWithholding", Order=205, Form=XmlSchemaForm.Unqualified)]
        public bool StateWithholdingValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StateWithholding property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool StateWithholdingValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> StateWithholding
        {
            get
            {
                if (this.StateWithholdingValueSpecified)
                {
                    return this.StateWithholdingValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.StateWithholdingValue = value.GetValueOrDefault();
                this.StateWithholdingValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("StatementBatchNumber", Order=206, Form=XmlSchemaForm.Unqualified)]
        public bool StatementBatchNumberValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StatementBatchNumber property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool StatementBatchNumberValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> StatementBatchNumber
        {
            get
            {
                if (this.StatementBatchNumberValueSpecified)
                {
                    return this.StatementBatchNumberValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.StatementBatchNumberValue = value.GetValueOrDefault();
                this.StatementBatchNumberValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("StatementCutoffDate", Order=207, Form=XmlSchemaForm.Unqualified)]
        public bool StatementCutoffDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StatementCutoffDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool StatementCutoffDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> StatementCutoffDate
        {
            get
            {
                if (this.StatementCutoffDateValueSpecified)
                {
                    return this.StatementCutoffDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.StatementCutoffDateValue = value.GetValueOrDefault();
                this.StatementCutoffDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("StatementGroupList", Order=208, Form=XmlSchemaForm.Unqualified)]
        public bool StatementGroupListValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StatementGroupList property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool StatementGroupListValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> StatementGroupList
        {
            get
            {
                if (this.StatementGroupListValueSpecified)
                {
                    return this.StatementGroupListValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.StatementGroupListValue = value.GetValueOrDefault();
                this.StatementGroupListValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("StatementSortCount", Order=209, Form=XmlSchemaForm.Unqualified)]
        public bool StatementSortCountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StatementSortCount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool StatementSortCountValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> StatementSortCount
        {
            get
            {
                if (this.StatementSortCountValueSpecified)
                {
                    return this.StatementSortCountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.StatementSortCountValue = value.GetValueOrDefault();
                this.StatementSortCountValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("StatementSortRecord", Order=210, Form=XmlSchemaForm.Unqualified)]
        public bool StatementSortRecordValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StatementSortRecord property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool StatementSortRecordValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> StatementSortRecord
        {
            get
            {
                if (this.StatementSortRecordValueSpecified)
                {
                    return this.StatementSortRecordValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.StatementSortRecordValue = value.GetValueOrDefault();
                this.StatementSortRecordValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("StmtDisclosureAddrSource", Order=211, Form=XmlSchemaForm.Unqualified)]
        public bool StmtDisclosureAddrSourceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StmtDisclosureAddrSource property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool StmtDisclosureAddrSourceValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> StmtDisclosureAddrSource
        {
            get
            {
                if (this.StmtDisclosureAddrSourceValueSpecified)
                {
                    return this.StmtDisclosureAddrSourceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.StmtDisclosureAddrSourceValue = value.GetValueOrDefault();
                this.StmtDisclosureAddrSourceValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("StopPayPrintOption", Order=212, Form=XmlSchemaForm.Unqualified)]
        public bool StopPayPrintOptionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StopPayPrintOption property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool StopPayPrintOptionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> StopPayPrintOption
        {
            get
            {
                if (this.StopPayPrintOptionValueSpecified)
                {
                    return this.StopPayPrintOptionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.StopPayPrintOptionValue = value.GetValueOrDefault();
                this.StopPayPrintOptionValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Subformat", Order=213, Form=XmlSchemaForm.Unqualified)]
        public bool SubformatValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Subformat property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SubformatValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Subformat
        {
            get
            {
                if (this.SubformatValueSpecified)
                {
                    return this.SubformatValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SubformatValue = value.GetValueOrDefault();
                this.SubformatValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SuppressAcctNumberZeros", Order=214, Form=XmlSchemaForm.Unqualified)]
        public bool SuppressAcctNumberZerosValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SuppressAcctNumberZeros property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SuppressAcctNumberZerosValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SuppressAcctNumberZeros
        {
            get
            {
                if (this.SuppressAcctNumberZerosValueSpecified)
                {
                    return this.SuppressAcctNumberZerosValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SuppressAcctNumberZerosValue = value.GetValueOrDefault();
                this.SuppressAcctNumberZerosValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _svLine;
        
        [XmlElementAttribute("SvLine", Order=215, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> SvLine
        {
            get
            {
                return _svLine;
            }
            set
            {
                _svLine = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the SvLine collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool SvLineSpecified
        {
            get
            {
                return ((this.SvLine != null) 
                            && (this.SvLine.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TotIntPdFromOpenLease", Order=216, Form=XmlSchemaForm.Unqualified)]
        public bool TotIntPdFromOpenLeaseValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotIntPdFromOpenLease property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TotIntPdFromOpenLeaseValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TotIntPdFromOpenLease
        {
            get
            {
                if (this.TotIntPdFromOpenLeaseValueSpecified)
                {
                    return this.TotIntPdFromOpenLeaseValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TotIntPdFromOpenLeaseValue = value.GetValueOrDefault();
                this.TotIntPdFromOpenLeaseValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TotalAggregatePaid", Order=217, Form=XmlSchemaForm.Unqualified)]
        public bool TotalAggregatePaidValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalAggregatePaid property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TotalAggregatePaidValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TotalAggregatePaid
        {
            get
            {
                if (this.TotalAggregatePaidValueSpecified)
                {
                    return this.TotalAggregatePaidValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TotalAggregatePaidValue = value.GetValueOrDefault();
                this.TotalAggregatePaidValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TotalInterestPaid", Order=218, Form=XmlSchemaForm.Unqualified)]
        public bool TotalInterestPaidValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalInterestPaid property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TotalInterestPaidValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TotalInterestPaid
        {
            get
            {
                if (this.TotalInterestPaidValueSpecified)
                {
                    return this.TotalInterestPaidValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TotalInterestPaidValue = value.GetValueOrDefault();
                this.TotalInterestPaidValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TotalLoanBKBalance", Order=219, Form=XmlSchemaForm.Unqualified)]
        public bool TotalLoanBkBalanceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalLoanBkBalance property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TotalLoanBkBalanceValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TotalLoanBkBalance
        {
            get
            {
                if (this.TotalLoanBkBalanceValueSpecified)
                {
                    return this.TotalLoanBkBalanceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TotalLoanBkBalanceValue = value.GetValueOrDefault();
                this.TotalLoanBkBalanceValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TotalLoanBalance", Order=220, Form=XmlSchemaForm.Unqualified)]
        public bool TotalLoanBalanceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalLoanBalance property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TotalLoanBalanceValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TotalLoanBalance
        {
            get
            {
                if (this.TotalLoanBalanceValueSpecified)
                {
                    return this.TotalLoanBalanceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TotalLoanBalanceValue = value.GetValueOrDefault();
                this.TotalLoanBalanceValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TotalLoanCount", Order=221, Form=XmlSchemaForm.Unqualified)]
        public bool TotalLoanCountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalLoanCount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TotalLoanCountValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TotalLoanCount
        {
            get
            {
                if (this.TotalLoanCountValueSpecified)
                {
                    return this.TotalLoanCountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TotalLoanCountValue = value.GetValueOrDefault();
                this.TotalLoanCountValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TotalLoanInterestYtd", Order=222, Form=XmlSchemaForm.Unqualified)]
        public bool TotalLoanInterestYtdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalLoanInterestYtd property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TotalLoanInterestYtdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TotalLoanInterestYtd
        {
            get
            {
                if (this.TotalLoanInterestYtdValueSpecified)
                {
                    return this.TotalLoanInterestYtdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TotalLoanInterestYtdValue = value.GetValueOrDefault();
                this.TotalLoanInterestYtdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TotalOtherAcctCount", Order=223, Form=XmlSchemaForm.Unqualified)]
        public bool TotalOtherAcctCountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalOtherAcctCount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TotalOtherAcctCountValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TotalOtherAcctCount
        {
            get
            {
                if (this.TotalOtherAcctCountValueSpecified)
                {
                    return this.TotalOtherAcctCountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TotalOtherAcctCountValue = value.GetValueOrDefault();
                this.TotalOtherAcctCountValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TotalShareBalance", Order=224, Form=XmlSchemaForm.Unqualified)]
        public bool TotalShareBalanceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalShareBalance property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TotalShareBalanceValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TotalShareBalance
        {
            get
            {
                if (this.TotalShareBalanceValueSpecified)
                {
                    return this.TotalShareBalanceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TotalShareBalanceValue = value.GetValueOrDefault();
                this.TotalShareBalanceValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TotalShareCount", Order=225, Form=XmlSchemaForm.Unqualified)]
        public bool TotalShareCountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalShareCount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TotalShareCountValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TotalShareCount
        {
            get
            {
                if (this.TotalShareCountValueSpecified)
                {
                    return this.TotalShareCountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TotalShareCountValue = value.GetValueOrDefault();
                this.TotalShareCountValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TotalShareDividendYtd", Order=226, Form=XmlSchemaForm.Unqualified)]
        public bool TotalShareDividendYtdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalShareDividendYtd property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TotalShareDividendYtdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TotalShareDividendYtd
        {
            get
            {
                if (this.TotalShareDividendYtdValueSpecified)
                {
                    return this.TotalShareDividendYtdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TotalShareDividendYtdValue = value.GetValueOrDefault();
                this.TotalShareDividendYtdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TotalSharePenaltyYtd", Order=227, Form=XmlSchemaForm.Unqualified)]
        public bool TotalSharePenaltyYtdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalSharePenaltyYtd property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TotalSharePenaltyYtdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TotalSharePenaltyYtd
        {
            get
            {
                if (this.TotalSharePenaltyYtdValueSpecified)
                {
                    return this.TotalSharePenaltyYtdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TotalSharePenaltyYtdValue = value.GetValueOrDefault();
                this.TotalSharePenaltyYtdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TotalShareStateWithholdYtd", Order=228, Form=XmlSchemaForm.Unqualified)]
        public bool TotalShareStateWithholdYtdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalShareStateWithholdYtd property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TotalShareStateWithholdYtdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TotalShareStateWithholdYtd
        {
            get
            {
                if (this.TotalShareStateWithholdYtdValueSpecified)
                {
                    return this.TotalShareStateWithholdYtdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TotalShareStateWithholdYtdValue = value.GetValueOrDefault();
                this.TotalShareStateWithholdYtdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TotalShareWithholdYtd", Order=229, Form=XmlSchemaForm.Unqualified)]
        public bool TotalShareWithholdYtdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalShareWithholdYtd property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TotalShareWithholdYtdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TotalShareWithholdYtd
        {
            get
            {
                if (this.TotalShareWithholdYtdValueSpecified)
                {
                    return this.TotalShareWithholdYtdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TotalShareWithholdYtdValue = value.GetValueOrDefault();
                this.TotalShareWithholdYtdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TotalStatementCount", Order=230, Form=XmlSchemaForm.Unqualified)]
        public bool TotalStatementCountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalStatementCount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TotalStatementCountValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TotalStatementCount
        {
            get
            {
                if (this.TotalStatementCountValueSpecified)
                {
                    return this.TotalStatementCountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TotalStatementCountValue = value.GetValueOrDefault();
                this.TotalStatementCountValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TransactionPrintOrder", Order=231, Form=XmlSchemaForm.Unqualified)]
        public bool TransactionPrintOrderValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TransactionPrintOrder property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TransactionPrintOrderValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TransactionPrintOrder
        {
            get
            {
                if (this.TransactionPrintOrderValueSpecified)
                {
                    return this.TransactionPrintOrderValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TransactionPrintOrderValue = value.GetValueOrDefault();
                this.TransactionPrintOrderValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UnappliedPartialPayment", Order=232, Form=XmlSchemaForm.Unqualified)]
        public bool UnappliedPartialPaymentValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UnappliedPartialPayment property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UnappliedPartialPaymentValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UnappliedPartialPayment
        {
            get
            {
                if (this.UnappliedPartialPaymentValueSpecified)
                {
                    return this.UnappliedPartialPaymentValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UnappliedPartialPaymentValue = value.GetValueOrDefault();
                this.UnappliedPartialPaymentValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UnappliedPartialPmtChg", Order=233, Form=XmlSchemaForm.Unqualified)]
        public bool UnappliedPartialPmtChgValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UnappliedPartialPmtChg property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UnappliedPartialPmtChgValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UnappliedPartialPmtChg
        {
            get
            {
                if (this.UnappliedPartialPmtChgValueSpecified)
                {
                    return this.UnappliedPartialPmtChgValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UnappliedPartialPmtChgValue = value.GetValueOrDefault();
                this.UnappliedPartialPmtChgValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UnpaidItemFeeDesc", Order=234, Form=XmlSchemaForm.Unqualified)]
        public bool UnpaidItemFeeDescValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UnpaidItemFeeDesc property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UnpaidItemFeeDescValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UnpaidItemFeeDesc
        {
            get
            {
                if (this.UnpaidItemFeeDescValueSpecified)
                {
                    return this.UnpaidItemFeeDescValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UnpaidItemFeeDescValue = value.GetValueOrDefault();
                this.UnpaidItemFeeDescValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UseAlternateAddress", Order=235, Form=XmlSchemaForm.Unqualified)]
        public bool UseAlternateAddressValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UseAlternateAddress property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UseAlternateAddressValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UseAlternateAddress
        {
            get
            {
                if (this.UseAlternateAddressValueSpecified)
                {
                    return this.UseAlternateAddressValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UseAlternateAddressValue = value.GetValueOrDefault();
                this.UseAlternateAddressValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UseLoanOvlStmtDisclosureF", Order=236, Form=XmlSchemaForm.Unqualified)]
        public bool UseLoanOvlStmtDisclosureFValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UseLoanOvlStmtDisclosureF property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UseLoanOvlStmtDisclosureFValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UseLoanOvlStmtDisclosureF
        {
            get
            {
                if (this.UseLoanOvlStmtDisclosureFValueSpecified)
                {
                    return this.UseLoanOvlStmtDisclosureFValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UseLoanOvlStmtDisclosureFValue = value.GetValueOrDefault();
                this.UseLoanOvlStmtDisclosureFValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UseTabularStatementFormat", Order=237, Form=XmlSchemaForm.Unqualified)]
        public bool UseTabularStatementFormatValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UseTabularStatementFormat property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UseTabularStatementFormatValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UseTabularStatementFormat
        {
            get
            {
                if (this.UseTabularStatementFormatValueSpecified)
                {
                    return this.UseTabularStatementFormatValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UseTabularStatementFormatValue = value.GetValueOrDefault();
                this.UseTabularStatementFormatValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UserDefinedSourceCode0", Order=238, Form=XmlSchemaForm.Unqualified)]
        public bool UserDefinedSourceCode0Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UserDefinedSourceCode0 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UserDefinedSourceCode0ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UserDefinedSourceCode0
        {
            get
            {
                if (this.UserDefinedSourceCode0ValueSpecified)
                {
                    return this.UserDefinedSourceCode0Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UserDefinedSourceCode0Value = value.GetValueOrDefault();
                this.UserDefinedSourceCode0ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UserDefinedSourceCode1", Order=239, Form=XmlSchemaForm.Unqualified)]
        public bool UserDefinedSourceCode1Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UserDefinedSourceCode1 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UserDefinedSourceCode1ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UserDefinedSourceCode1
        {
            get
            {
                if (this.UserDefinedSourceCode1ValueSpecified)
                {
                    return this.UserDefinedSourceCode1Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UserDefinedSourceCode1Value = value.GetValueOrDefault();
                this.UserDefinedSourceCode1ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UserDefinedSourceCode2", Order=240, Form=XmlSchemaForm.Unqualified)]
        public bool UserDefinedSourceCode2Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UserDefinedSourceCode2 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UserDefinedSourceCode2ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UserDefinedSourceCode2
        {
            get
            {
                if (this.UserDefinedSourceCode2ValueSpecified)
                {
                    return this.UserDefinedSourceCode2Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UserDefinedSourceCode2Value = value.GetValueOrDefault();
                this.UserDefinedSourceCode2ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UserDefinedSourceCode3", Order=241, Form=XmlSchemaForm.Unqualified)]
        public bool UserDefinedSourceCode3Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UserDefinedSourceCode3 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UserDefinedSourceCode3ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UserDefinedSourceCode3
        {
            get
            {
                if (this.UserDefinedSourceCode3ValueSpecified)
                {
                    return this.UserDefinedSourceCode3Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UserDefinedSourceCode3Value = value.GetValueOrDefault();
                this.UserDefinedSourceCode3ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UserDefinedSourceCode4", Order=242, Form=XmlSchemaForm.Unqualified)]
        public bool UserDefinedSourceCode4Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UserDefinedSourceCode4 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UserDefinedSourceCode4ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UserDefinedSourceCode4
        {
            get
            {
                if (this.UserDefinedSourceCode4ValueSpecified)
                {
                    return this.UserDefinedSourceCode4Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UserDefinedSourceCode4Value = value.GetValueOrDefault();
                this.UserDefinedSourceCode4ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UserDefinedSourceCode5", Order=243, Form=XmlSchemaForm.Unqualified)]
        public bool UserDefinedSourceCode5Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UserDefinedSourceCode5 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UserDefinedSourceCode5ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UserDefinedSourceCode5
        {
            get
            {
                if (this.UserDefinedSourceCode5ValueSpecified)
                {
                    return this.UserDefinedSourceCode5Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UserDefinedSourceCode5Value = value.GetValueOrDefault();
                this.UserDefinedSourceCode5ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UserDefinedSourceCode6", Order=244, Form=XmlSchemaForm.Unqualified)]
        public bool UserDefinedSourceCode6Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UserDefinedSourceCode6 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UserDefinedSourceCode6ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UserDefinedSourceCode6
        {
            get
            {
                if (this.UserDefinedSourceCode6ValueSpecified)
                {
                    return this.UserDefinedSourceCode6Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UserDefinedSourceCode6Value = value.GetValueOrDefault();
                this.UserDefinedSourceCode6ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UserDefinedSourceCode7", Order=245, Form=XmlSchemaForm.Unqualified)]
        public bool UserDefinedSourceCode7Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UserDefinedSourceCode7 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UserDefinedSourceCode7ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UserDefinedSourceCode7
        {
            get
            {
                if (this.UserDefinedSourceCode7ValueSpecified)
                {
                    return this.UserDefinedSourceCode7Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UserDefinedSourceCode7Value = value.GetValueOrDefault();
                this.UserDefinedSourceCode7ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UserDefinedSourceCode8", Order=246, Form=XmlSchemaForm.Unqualified)]
        public bool UserDefinedSourceCode8Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UserDefinedSourceCode8 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UserDefinedSourceCode8ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UserDefinedSourceCode8
        {
            get
            {
                if (this.UserDefinedSourceCode8ValueSpecified)
                {
                    return this.UserDefinedSourceCode8Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UserDefinedSourceCode8Value = value.GetValueOrDefault();
                this.UserDefinedSourceCode8ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UserDefinedSourceCode9", Order=247, Form=XmlSchemaForm.Unqualified)]
        public bool UserDefinedSourceCode9Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UserDefinedSourceCode9 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UserDefinedSourceCode9ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UserDefinedSourceCode9
        {
            get
            {
                if (this.UserDefinedSourceCode9ValueSpecified)
                {
                    return this.UserDefinedSourceCode9Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UserDefinedSourceCode9Value = value.GetValueOrDefault();
                this.UserDefinedSourceCode9ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("WaivedLateCharge", Order=248, Form=XmlSchemaForm.Unqualified)]
        public bool WaivedLateChargeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the WaivedLateCharge property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool WaivedLateChargeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> WaivedLateCharge
        {
            get
            {
                if (this.WaivedLateChargeValueSpecified)
                {
                    return this.WaivedLateChargeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.WaivedLateChargeValue = value.GetValueOrDefault();
                this.WaivedLateChargeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("WdDepSummaryLoanTypes", Order=249, Form=XmlSchemaForm.Unqualified)]
        public bool WdDepSummaryLoanTypesValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the WdDepSummaryLoanTypes property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool WdDepSummaryLoanTypesValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> WdDepSummaryLoanTypes
        {
            get
            {
                if (this.WdDepSummaryLoanTypesValueSpecified)
                {
                    return this.WdDepSummaryLoanTypesValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.WdDepSummaryLoanTypesValue = value.GetValueOrDefault();
                this.WdDepSummaryLoanTypesValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("WdDepSummaryShareTypes", Order=250, Form=XmlSchemaForm.Unqualified)]
        public bool WdDepSummaryShareTypesValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the WdDepSummaryShareTypes property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool WdDepSummaryShareTypesValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> WdDepSummaryShareTypes
        {
            get
            {
                if (this.WdDepSummaryShareTypesValueSpecified)
                {
                    return this.WdDepSummaryShareTypesValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.WdDepSummaryShareTypesValue = value.GetValueOrDefault();
                this.WdDepSummaryShareTypesValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Wire", Order=251, Form=XmlSchemaForm.Unqualified)]
        public bool WireValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Wire property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool WireValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Wire
        {
            get
            {
                if (this.WireValueSpecified)
                {
                    return this.WireValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.WireValue = value.GetValueOrDefault();
                this.WireValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("WireOriginator", Order=252, Form=XmlSchemaForm.Unqualified)]
        public bool WireOriginatorValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the WireOriginator property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool WireOriginatorValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> WireOriginator
        {
            get
            {
                if (this.WireOriginatorValueSpecified)
                {
                    return this.WireOriginatorValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.WireOriginatorValue = value.GetValueOrDefault();
                this.WireOriginatorValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Withdrawal", Order=253, Form=XmlSchemaForm.Unqualified)]
        public bool WithdrawalValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Withdrawal property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool WithdrawalValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Withdrawal
        {
            get
            {
                if (this.WithdrawalValueSpecified)
                {
                    return this.WithdrawalValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.WithdrawalValue = value.GetValueOrDefault();
                this.WithdrawalValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("WithholdingYtd", Order=254, Form=XmlSchemaForm.Unqualified)]
        public bool WithholdingYtdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the WithholdingYtd property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool WithholdingYtdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> WithholdingYtd
        {
            get
            {
                if (this.WithholdingYtdValueSpecified)
                {
                    return this.WithholdingYtdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.WithholdingYtdValue = value.GetValueOrDefault();
                this.WithholdingYtdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("YtdTotalPrinting", Order=255, Form=XmlSchemaForm.Unqualified)]
        public bool YtdTotalPrintingValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the YtdTotalPrinting property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool YtdTotalPrintingValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> YtdTotalPrinting
        {
            get
            {
                if (this.YtdTotalPrintingValueSpecified)
                {
                    return this.YtdTotalPrintingValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.YtdTotalPrintingValue = value.GetValueOrDefault();
                this.YtdTotalPrintingValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("Version_1", Order=256, Form=XmlSchemaForm.Unqualified)]
        public ParameterService.VersionType Version1 { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<XmlElement> _any;
        
        [XmlAnyElementAttribute(Order=257)]
        public Collection<XmlElement> Any
        {
            get
            {
                return _any;
            }
            set
            {
                _any = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return ((this.Any != null) 
                            && (this.Any.Count != 0));
            }
        }
    }
}
