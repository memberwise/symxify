//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 2.1.1182.0 using the following command:
// xscgen C:\Users\tbuese\Desktop\Symxchange\ParameterService/*.xsd --sf --un --uc --order --cn -0 --collectionSettersMode=Public -o C:\Users\tbuese\Desktop\Symxchange\ParameterService\generated-output -n ParameterService
namespace ParameterService
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.Diagnostics;
    using System.Xml;
    using System.Xml.Schema;
    using System.Xml.Serialization;
    
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1182.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("WireMisc", Namespace="http://www.symxchange.generated.symitar.com/crud/parameter/dto/retrieve")]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    [XmlRootAttribute("WireMisc", Namespace="http://www.symxchange.generated.symitar.com/crud/parameter/dto/retrieve")]
    public partial class WireMisc
    {
        
        [XmlElementAttribute("DefaultBusinessFunctionCode", Order=0, Form=XmlSchemaForm.Unqualified)]
        public string DefaultBusinessFunctionCode { get; set; }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("FedFormat", Order=1, Form=XmlSchemaForm.Unqualified)]
        public short FedFormatValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FedFormat property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FedFormatValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> FedFormat
        {
            get
            {
                if (this.FedFormatValueSpecified)
                {
                    return this.FedFormatValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FedFormatValue = value.GetValueOrDefault();
                this.FedFormatValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("IncomingCorpWireGlOffset", Order=2, Form=XmlSchemaForm.Unqualified)]
        public string IncomingCorpWireGlOffset { get; set; }
        
        [XmlElementAttribute("IncomingMemberWireGlOffset", Order=3, Form=XmlSchemaForm.Unqualified)]
        public string IncomingMemberWireGlOffset { get; set; }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IncomingWireDepServiceCode", Order=4, Form=XmlSchemaForm.Unqualified)]
        public short IncomingWireDepServiceCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IncomingWireDepServiceCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IncomingWireDepServiceCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> IncomingWireDepServiceCode
        {
            get
            {
                if (this.IncomingWireDepServiceCodeValueSpecified)
                {
                    return this.IncomingWireDepServiceCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IncomingWireDepServiceCodeValue = value.GetValueOrDefault();
                this.IncomingWireDepServiceCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("NewWireCutoffTime", Order=5, Form=XmlSchemaForm.Unqualified)]
        public short NewWireCutoffTimeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NewWireCutoffTime property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool NewWireCutoffTimeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> NewWireCutoffTime
        {
            get
            {
                if (this.NewWireCutoffTimeValueSpecified)
                {
                    return this.NewWireCutoffTimeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NewWireCutoffTimeValue = value.GetValueOrDefault();
                this.NewWireCutoffTimeValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("OutgoingCorpWireGlOffset", Order=6, Form=XmlSchemaForm.Unqualified)]
        public string OutgoingCorpWireGlOffset { get; set; }
        
        [XmlElementAttribute("OutgoingMemberWireGlOffset", Order=7, Form=XmlSchemaForm.Unqualified)]
        public string OutgoingMemberWireGlOffset { get; set; }
        
        [XmlElementAttribute("OutgoingWesternUnionGlOffs", Order=8, Form=XmlSchemaForm.Unqualified)]
        public string OutgoingWesternUnionGlOffs { get; set; }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OutgoingWireListSrvcCode", Order=9, Form=XmlSchemaForm.Unqualified)]
        public short OutgoingWireListSrvcCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OutgoingWireListSrvcCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OutgoingWireListSrvcCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> OutgoingWireListSrvcCode
        {
            get
            {
                if (this.OutgoingWireListSrvcCodeValueSpecified)
                {
                    return this.OutgoingWireListSrvcCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OutgoingWireListSrvcCodeValue = value.GetValueOrDefault();
                this.OutgoingWireListSrvcCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OutgoingWireWdServiceCode", Order=10, Form=XmlSchemaForm.Unqualified)]
        public short OutgoingWireWdServiceCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OutgoingWireWdServiceCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OutgoingWireWdServiceCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> OutgoingWireWdServiceCode
        {
            get
            {
                if (this.OutgoingWireWdServiceCodeValueSpecified)
                {
                    return this.OutgoingWireWdServiceCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OutgoingWireWdServiceCodeValue = value.GetValueOrDefault();
                this.OutgoingWireWdServiceCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PreAuthWireCutoffTime", Order=11, Form=XmlSchemaForm.Unqualified)]
        public short PreAuthWireCutoffTimeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PreAuthWireCutoffTime property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PreAuthWireCutoffTimeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> PreAuthWireCutoffTime
        {
            get
            {
                if (this.PreAuthWireCutoffTimeValueSpecified)
                {
                    return this.PreAuthWireCutoffTimeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PreAuthWireCutoffTimeValue = value.GetValueOrDefault();
                this.PreAuthWireCutoffTimeValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("SenderFi", Order=12, Form=XmlSchemaForm.Unqualified)]
        public string SenderFi { get; set; }
        
        [XmlElementAttribute("SenderName", Order=13, Form=XmlSchemaForm.Unqualified)]
        public string SenderName { get; set; }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Threshold", Order=14, Form=XmlSchemaForm.Unqualified)]
        public decimal ThresholdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Threshold property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ThresholdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<decimal> Threshold
        {
            get
            {
                if (this.ThresholdValueSpecified)
                {
                    return this.ThresholdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ThresholdValue = value.GetValueOrDefault();
                this.ThresholdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("WesternUnionXferCutoffTime", Order=15, Form=XmlSchemaForm.Unqualified)]
        public short WesternUnionXferCutoffTimeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the WesternUnionXferCutoffTime property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool WesternUnionXferCutoffTimeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> WesternUnionXferCutoffTime
        {
            get
            {
                if (this.WesternUnionXferCutoffTimeValueSpecified)
                {
                    return this.WesternUnionXferCutoffTimeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.WesternUnionXferCutoffTimeValue = value.GetValueOrDefault();
                this.WesternUnionXferCutoffTimeValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("Version_1", Order=16, Form=XmlSchemaForm.Unqualified)]
        public ParameterService.VersionType Version1 { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<XmlElement> _any;
        
        [XmlAnyElementAttribute(Order=17)]
        public Collection<XmlElement> Any
        {
            get
            {
                return _any;
            }
            set
            {
                _any = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return ((this.Any != null) 
                            && (this.Any.Count != 0));
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="WireMisc" /> class.</para>
        /// </summary>
        public WireMisc()
        {
            this._any = new Collection<XmlElement>();
        }
    }
}
