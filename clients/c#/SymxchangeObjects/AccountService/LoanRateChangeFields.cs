//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 2.1.1182.0 using the following command:
// xscgen C:\Users\tbuese\Desktop\Symxchange\AccountService/*.xsd --sf --un --uc --order --cn -0 --collectionSettersMode=Public -o C:\Users\tbuese\Desktop\Symxchange\AccountService\generated-output -n AccountService
namespace AccountService
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.Diagnostics;
    using System.Xml;
    using System.Xml.Schema;
    using System.Xml.Serialization;
    
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1182.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("LoanRateChangeFields", Namespace="http://www.symxchange.generated.symitar.com/crud/account/dto/retrieve")]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    [XmlRootAttribute("LoanRateChangeFields", Namespace="http://www.symxchange.generated.symitar.com/crud/account/dto/retrieve")]
    public partial class LoanRateChangeFields
    {
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreationDate", Order=0, Form=XmlSchemaForm.Unqualified)]
        public bool CreationDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreationDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreationDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CreationDate
        {
            get
            {
                if (this.CreationDateValueSpecified)
                {
                    return this.CreationDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreationDateValue = value.GetValueOrDefault();
                this.CreationDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Id", Order=1, Form=XmlSchemaForm.Unqualified)]
        public bool IdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Id property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Id
        {
            get
            {
                if (this.IdValueSpecified)
                {
                    return this.IdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IdValue = value.GetValueOrDefault();
                this.IdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IndexRate", Order=2, Form=XmlSchemaForm.Unqualified)]
        public bool IndexRateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IndexRate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IndexRateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IndexRate
        {
            get
            {
                if (this.IndexRateValueSpecified)
                {
                    return this.IndexRateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IndexRateValue = value.GetValueOrDefault();
                this.IndexRateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InterestRate", Order=3, Form=XmlSchemaForm.Unqualified)]
        public bool InterestRateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InterestRate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InterestRateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InterestRate
        {
            get
            {
                if (this.InterestRateValueSpecified)
                {
                    return this.InterestRateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InterestRateValue = value.GetValueOrDefault();
                this.InterestRateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Locator", Order=4, Form=XmlSchemaForm.Unqualified)]
        public bool LocatorValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Locator property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LocatorValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Locator
        {
            get
            {
                if (this.LocatorValueSpecified)
                {
                    return this.LocatorValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LocatorValue = value.GetValueOrDefault();
                this.LocatorValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PaymentChangeDate", Order=5, Form=XmlSchemaForm.Unqualified)]
        public bool PaymentChangeDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PaymentChangeDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PaymentChangeDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PaymentChangeDate
        {
            get
            {
                if (this.PaymentChangeDateValueSpecified)
                {
                    return this.PaymentChangeDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PaymentChangeDateValue = value.GetValueOrDefault();
                this.PaymentChangeDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PeriodicStartDate", Order=6, Form=XmlSchemaForm.Unqualified)]
        public bool PeriodicStartDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PeriodicStartDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PeriodicStartDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PeriodicStartDate
        {
            get
            {
                if (this.PeriodicStartDateValueSpecified)
                {
                    return this.PeriodicStartDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PeriodicStartDateValue = value.GetValueOrDefault();
                this.PeriodicStartDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PeriodicStartRate", Order=7, Form=XmlSchemaForm.Unqualified)]
        public bool PeriodicStartRateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PeriodicStartRate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PeriodicStartRateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PeriodicStartRate
        {
            get
            {
                if (this.PeriodicStartRateValueSpecified)
                {
                    return this.PeriodicStartRateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PeriodicStartRateValue = value.GetValueOrDefault();
                this.PeriodicStartRateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("RateChangeDate", Order=8, Form=XmlSchemaForm.Unqualified)]
        public bool RateChangeDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RateChangeDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool RateChangeDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> RateChangeDate
        {
            get
            {
                if (this.RateChangeDateValueSpecified)
                {
                    return this.RateChangeDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RateChangeDateValue = value.GetValueOrDefault();
                this.RateChangeDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ReamortizedPayment", Order=9, Form=XmlSchemaForm.Unqualified)]
        public bool ReamortizedPaymentValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ReamortizedPayment property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ReamortizedPaymentValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ReamortizedPayment
        {
            get
            {
                if (this.ReamortizedPaymentValueSpecified)
                {
                    return this.ReamortizedPaymentValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ReamortizedPaymentValue = value.GetValueOrDefault();
                this.ReamortizedPaymentValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("RecordChangeDate", Order=10, Form=XmlSchemaForm.Unqualified)]
        public bool RecordChangeDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RecordChangeDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool RecordChangeDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> RecordChangeDate
        {
            get
            {
                if (this.RecordChangeDateValueSpecified)
                {
                    return this.RecordChangeDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RecordChangeDateValue = value.GetValueOrDefault();
                this.RecordChangeDateValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("Version_1", Order=11, Form=XmlSchemaForm.Unqualified)]
        public AccountService.VersionType Version1 { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<XmlElement> _any;
        
        [XmlAnyElementAttribute(Order=12)]
        public Collection<XmlElement> Any
        {
            get
            {
                return _any;
            }
            set
            {
                _any = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return ((this.Any != null) 
                            && (this.Any.Count != 0));
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="LoanRateChangeFields" /> class.</para>
        /// </summary>
        public LoanRateChangeFields()
        {
            this._any = new Collection<XmlElement>();
        }
    }
}
