//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 2.1.1182.0 using the following command:
// xscgen C:\Users\tbuese\Desktop\Symxchange\AccountService/*.xsd --sf --un --uc --order --cn -0 --collectionSettersMode=Public -o C:\Users\tbuese\Desktop\Symxchange\AccountService\generated-output -n AccountService
namespace AccountService
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.Diagnostics;
    using System.Xml;
    using System.Xml.Schema;
    using System.Xml.Serialization;
    
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1182.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("LoanAppFields", Namespace="http://www.symxchange.generated.symitar.com/crud/account/dto/retrieve")]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    [XmlRootAttribute("LoanAppFields", Namespace="http://www.symxchange.generated.symitar.com/crud/account/dto/retrieve")]
    public partial class LoanAppFields
    {
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AccountType", Order=0, Form=XmlSchemaForm.Unqualified)]
        public bool AccountTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AccountType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AccountTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AccountType
        {
            get
            {
                if (this.AccountTypeValueSpecified)
                {
                    return this.AccountTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AccountTypeValue = value.GetValueOrDefault();
                this.AccountTypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AmortizationSchd", Order=1, Form=XmlSchemaForm.Unqualified)]
        public bool AmortizationSchdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AmortizationSchd property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AmortizationSchdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AmortizationSchd
        {
            get
            {
                if (this.AmortizationSchdValueSpecified)
                {
                    return this.AmortizationSchdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AmortizationSchdValue = value.GetValueOrDefault();
                this.AmortizationSchdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AmortizationSchdType", Order=2, Form=XmlSchemaForm.Unqualified)]
        public bool AmortizationSchdTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AmortizationSchdType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AmortizationSchdTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AmortizationSchdType
        {
            get
            {
                if (this.AmortizationSchdTypeValueSpecified)
                {
                    return this.AmortizationSchdTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AmortizationSchdTypeValue = value.GetValueOrDefault();
                this.AmortizationSchdTypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ApplicationDate", Order=3, Form=XmlSchemaForm.Unqualified)]
        public bool ApplicationDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ApplicationDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ApplicationDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ApplicationDate
        {
            get
            {
                if (this.ApplicationDateValueSpecified)
                {
                    return this.ApplicationDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ApplicationDateValue = value.GetValueOrDefault();
                this.ApplicationDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ApplyAsBilled", Order=4, Form=XmlSchemaForm.Unqualified)]
        public bool ApplyAsBilledValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ApplyAsBilled property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ApplyAsBilledValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ApplyAsBilled
        {
            get
            {
                if (this.ApplyAsBilledValueSpecified)
                {
                    return this.ApplyAsBilledValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ApplyAsBilledValue = value.GetValueOrDefault();
                this.ApplyAsBilledValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AppraisalOffset", Order=5, Form=XmlSchemaForm.Unqualified)]
        public bool AppraisalOffsetValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AppraisalOffset property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AppraisalOffsetValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AppraisalOffset
        {
            get
            {
                if (this.AppraisalOffsetValueSpecified)
                {
                    return this.AppraisalOffsetValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AppraisalOffsetValue = value.GetValueOrDefault();
                this.AppraisalOffsetValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AppraisedAmount", Order=6, Form=XmlSchemaForm.Unqualified)]
        public bool AppraisedAmountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AppraisedAmount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AppraisedAmountValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AppraisedAmount
        {
            get
            {
                if (this.AppraisedAmountValueSpecified)
                {
                    return this.AppraisedAmountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AppraisedAmountValue = value.GetValueOrDefault();
                this.AppraisedAmountValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ApprovalAmount", Order=7, Form=XmlSchemaForm.Unqualified)]
        public bool ApprovalAmountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ApprovalAmount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ApprovalAmountValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ApprovalAmount
        {
            get
            {
                if (this.ApprovalAmountValueSpecified)
                {
                    return this.ApprovalAmountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ApprovalAmountValue = value.GetValueOrDefault();
                this.ApprovalAmountValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ApprovalCode", Order=8, Form=XmlSchemaForm.Unqualified)]
        public bool ApprovalCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ApprovalCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ApprovalCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ApprovalCode
        {
            get
            {
                if (this.ApprovalCodeValueSpecified)
                {
                    return this.ApprovalCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ApprovalCodeValue = value.GetValueOrDefault();
                this.ApprovalCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ApprovalDate", Order=9, Form=XmlSchemaForm.Unqualified)]
        public bool ApprovalDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ApprovalDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ApprovalDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ApprovalDate
        {
            get
            {
                if (this.ApprovalDateValueSpecified)
                {
                    return this.ApprovalDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ApprovalDateValue = value.GetValueOrDefault();
                this.ApprovalDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Apr", Order=10, Form=XmlSchemaForm.Unqualified)]
        public bool AprValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Apr property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AprValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Apr
        {
            get
            {
                if (this.AprValueSpecified)
                {
                    return this.AprValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AprValue = value.GetValueOrDefault();
                this.AprValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AssessorParcelNumber", Order=11, Form=XmlSchemaForm.Unqualified)]
        public bool AssessorParcelNumberValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AssessorParcelNumber property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AssessorParcelNumberValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AssessorParcelNumber
        {
            get
            {
                if (this.AssessorParcelNumberValueSpecified)
                {
                    return this.AssessorParcelNumberValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AssessorParcelNumberValue = value.GetValueOrDefault();
                this.AssessorParcelNumberValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BalloonAmount", Order=12, Form=XmlSchemaForm.Unqualified)]
        public bool BalloonAmountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BalloonAmount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BalloonAmountValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BalloonAmount
        {
            get
            {
                if (this.BalloonAmountValueSpecified)
                {
                    return this.BalloonAmountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BalloonAmountValue = value.GetValueOrDefault();
                this.BalloonAmountValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BalloonDate", Order=13, Form=XmlSchemaForm.Unqualified)]
        public bool BalloonDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BalloonDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BalloonDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BalloonDate
        {
            get
            {
                if (this.BalloonDateValueSpecified)
                {
                    return this.BalloonDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BalloonDateValue = value.GetValueOrDefault();
                this.BalloonDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BillingDefaultDays", Order=14, Form=XmlSchemaForm.Unqualified)]
        public bool BillingDefaultDaysValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BillingDefaultDays property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BillingDefaultDaysValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BillingDefaultDays
        {
            get
            {
                if (this.BillingDefaultDaysValueSpecified)
                {
                    return this.BillingDefaultDaysValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BillingDefaultDaysValue = value.GetValueOrDefault();
                this.BillingDefaultDaysValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BillingMethod", Order=15, Form=XmlSchemaForm.Unqualified)]
        public bool BillingMethodValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BillingMethod property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BillingMethodValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BillingMethod
        {
            get
            {
                if (this.BillingMethodValueSpecified)
                {
                    return this.BillingMethodValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BillingMethodValue = value.GetValueOrDefault();
                this.BillingMethodValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BillingNotice", Order=16, Form=XmlSchemaForm.Unqualified)]
        public bool BillingNoticeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BillingNotice property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BillingNoticeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BillingNotice
        {
            get
            {
                if (this.BillingNoticeValueSpecified)
                {
                    return this.BillingNoticeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BillingNoticeValue = value.GetValueOrDefault();
                this.BillingNoticeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BillingNoticeMin", Order=17, Form=XmlSchemaForm.Unqualified)]
        public bool BillingNoticeMinValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BillingNoticeMin property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BillingNoticeMinValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BillingNoticeMin
        {
            get
            {
                if (this.BillingNoticeMinValueSpecified)
                {
                    return this.BillingNoticeMinValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BillingNoticeMinValue = value.GetValueOrDefault();
                this.BillingNoticeMinValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BorrowDate", Order=18, Form=XmlSchemaForm.Unqualified)]
        public bool BorrowDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BorrowDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BorrowDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BorrowDate
        {
            get
            {
                if (this.BorrowDateValueSpecified)
                {
                    return this.BorrowDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BorrowDateValue = value.GetValueOrDefault();
                this.BorrowDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Branch", Order=19, Form=XmlSchemaForm.Unqualified)]
        public bool BranchValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Branch property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BranchValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Branch
        {
            get
            {
                if (this.BranchValueSpecified)
                {
                    return this.BranchValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BranchValue = value.GetValueOrDefault();
                this.BranchValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BtLimitMax", Order=20, Form=XmlSchemaForm.Unqualified)]
        public bool BtLimitMaxValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BtLimitMax property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BtLimitMaxValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BtLimitMax
        {
            get
            {
                if (this.BtLimitMaxValueSpecified)
                {
                    return this.BtLimitMaxValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BtLimitMaxValue = value.GetValueOrDefault();
                this.BtLimitMaxValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BtPercent", Order=21, Form=XmlSchemaForm.Unqualified)]
        public bool BtPercentValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BtPercent property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BtPercentValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BtPercent
        {
            get
            {
                if (this.BtPercentValueSpecified)
                {
                    return this.BtPercentValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BtPercentValue = value.GetValueOrDefault();
                this.BtPercentValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _bureauScore;
        
        [XmlElementAttribute("BureauScore", Order=22, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> BureauScore
        {
            get
            {
                return _bureauScore;
            }
            set
            {
                _bureauScore = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the BureauScore collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool BureauScoreSpecified
        {
            get
            {
                return ((this.BureauScore != null) 
                            && (this.BureauScore.Count != 0));
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="LoanAppFields" /> class.</para>
        /// </summary>
        public LoanAppFields()
        {
            this._bureauScore = new Collection<short>();
            this._cbiLocator = new Collection<short>();
            this._completedActions = new Collection<short>();
            this._cuTotalsAcctNumber = new Collection<short>();
            this._debtRatio = new Collection<short>();
            this._debtRatioType = new Collection<short>();
            this._denialReason = new Collection<short>();
            this._hmdaAutoUnderwritingResOther = new Collection<short>();
            this._hmdaAutoUnderwritingResult = new Collection<short>();
            this._hmdaAutoUnderwritingSys = new Collection<short>();
            this._hmdaAutoUnderwritingSysOther = new Collection<short>();
            this._hmdaDenialReasonOther = new Collection<short>();
            this._any = new Collection<XmlElement>();
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CaLimitMax", Order=23, Form=XmlSchemaForm.Unqualified)]
        public bool CaLimitMaxValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CaLimitMax property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CaLimitMaxValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CaLimitMax
        {
            get
            {
                if (this.CaLimitMaxValueSpecified)
                {
                    return this.CaLimitMaxValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CaLimitMaxValue = value.GetValueOrDefault();
                this.CaLimitMaxValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CaPercent", Order=24, Form=XmlSchemaForm.Unqualified)]
        public bool CaPercentValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CaPercent property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CaPercentValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CaPercent
        {
            get
            {
                if (this.CaPercentValueSpecified)
                {
                    return this.CaPercentValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CaPercentValue = value.GetValueOrDefault();
                this.CaPercentValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CallItemSchd", Order=25, Form=XmlSchemaForm.Unqualified)]
        public bool CallItemSchdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CallItemSchd property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CallItemSchdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CallItemSchd
        {
            get
            {
                if (this.CallItemSchdValueSpecified)
                {
                    return this.CallItemSchdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CallItemSchdValue = value.GetValueOrDefault();
                this.CallItemSchdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CallItemSchdType", Order=26, Form=XmlSchemaForm.Unqualified)]
        public bool CallItemSchdTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CallItemSchdType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CallItemSchdTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CallItemSchdType
        {
            get
            {
                if (this.CallItemSchdTypeValueSpecified)
                {
                    return this.CallItemSchdTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CallItemSchdTypeValue = value.GetValueOrDefault();
                this.CallItemSchdTypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CancellationDate", Order=27, Form=XmlSchemaForm.Unqualified)]
        public bool CancellationDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CancellationDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CancellationDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CancellationDate
        {
            get
            {
                if (this.CancellationDateValueSpecified)
                {
                    return this.CancellationDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CancellationDateValue = value.GetValueOrDefault();
                this.CancellationDateValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _cbiLocator;
        
        [XmlElementAttribute("CbiLocator", Order=28, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> CbiLocator
        {
            get
            {
                return _cbiLocator;
            }
            set
            {
                _cbiLocator = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CbiLocator collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool CbiLocatorSpecified
        {
            get
            {
                return ((this.CbiLocator != null) 
                            && (this.CbiLocator.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CensusTract", Order=29, Form=XmlSchemaForm.Unqualified)]
        public bool CensusTractValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CensusTract property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CensusTractValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CensusTract
        {
            get
            {
                if (this.CensusTractValueSpecified)
                {
                    return this.CensusTractValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CensusTractValue = value.GetValueOrDefault();
                this.CensusTractValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CitySalesTaxRate", Order=30, Form=XmlSchemaForm.Unqualified)]
        public bool CitySalesTaxRateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CitySalesTaxRate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CitySalesTaxRateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CitySalesTaxRate
        {
            get
            {
                if (this.CitySalesTaxRateValueSpecified)
                {
                    return this.CitySalesTaxRateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CitySalesTaxRateValue = value.GetValueOrDefault();
                this.CitySalesTaxRateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ClosingDate", Order=31, Form=XmlSchemaForm.Unqualified)]
        public bool ClosingDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ClosingDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ClosingDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ClosingDate
        {
            get
            {
                if (this.ClosingDateValueSpecified)
                {
                    return this.ClosingDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ClosingDateValue = value.GetValueOrDefault();
                this.ClosingDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CntySalesTaxRate", Order=32, Form=XmlSchemaForm.Unqualified)]
        public bool CntySalesTaxRateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CntySalesTaxRate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CntySalesTaxRateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CntySalesTaxRate
        {
            get
            {
                if (this.CntySalesTaxRateValueSpecified)
                {
                    return this.CntySalesTaxRateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CntySalesTaxRateValue = value.GetValueOrDefault();
                this.CntySalesTaxRateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CollateralCode", Order=33, Form=XmlSchemaForm.Unqualified)]
        public bool CollateralCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CollateralCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CollateralCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CollateralCode
        {
            get
            {
                if (this.CollateralCodeValueSpecified)
                {
                    return this.CollateralCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CollateralCodeValue = value.GetValueOrDefault();
                this.CollateralCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CollateralDate", Order=34, Form=XmlSchemaForm.Unqualified)]
        public bool CollateralDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CollateralDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CollateralDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CollateralDate
        {
            get
            {
                if (this.CollateralDateValueSpecified)
                {
                    return this.CollateralDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CollateralDateValue = value.GetValueOrDefault();
                this.CollateralDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CombinedCaBtLimitMax", Order=35, Form=XmlSchemaForm.Unqualified)]
        public bool CombinedCaBtLimitMaxValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CombinedCaBtLimitMax property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CombinedCaBtLimitMaxValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CombinedCaBtLimitMax
        {
            get
            {
                if (this.CombinedCaBtLimitMaxValueSpecified)
                {
                    return this.CombinedCaBtLimitMaxValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CombinedCaBtLimitMaxValue = value.GetValueOrDefault();
                this.CombinedCaBtLimitMaxValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CombinedCaBtPercent", Order=36, Form=XmlSchemaForm.Unqualified)]
        public bool CombinedCaBtPercentValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CombinedCaBtPercent property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CombinedCaBtPercentValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CombinedCaBtPercent
        {
            get
            {
                if (this.CombinedCaBtPercentValueSpecified)
                {
                    return this.CombinedCaBtPercentValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CombinedCaBtPercentValue = value.GetValueOrDefault();
                this.CombinedCaBtPercentValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ComboLnSegmentMax", Order=37, Form=XmlSchemaForm.Unqualified)]
        public bool ComboLnSegmentMaxValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ComboLnSegmentMax property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ComboLnSegmentMaxValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ComboLnSegmentMax
        {
            get
            {
                if (this.ComboLnSegmentMaxValueSpecified)
                {
                    return this.ComboLnSegmentMaxValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ComboLnSegmentMaxValue = value.GetValueOrDefault();
                this.ComboLnSegmentMaxValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ComboPmtOrderMeth", Order=38, Form=XmlSchemaForm.Unqualified)]
        public bool ComboPmtOrderMethValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ComboPmtOrderMeth property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ComboPmtOrderMethValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ComboPmtOrderMeth
        {
            get
            {
                if (this.ComboPmtOrderMethValueSpecified)
                {
                    return this.ComboPmtOrderMethValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ComboPmtOrderMethValue = value.GetValueOrDefault();
                this.ComboPmtOrderMethValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ComboSeg0PmtOrder", Order=39, Form=XmlSchemaForm.Unqualified)]
        public bool ComboSeg0PmtOrderValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ComboSeg0PmtOrder property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ComboSeg0PmtOrderValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ComboSeg0PmtOrder
        {
            get
            {
                if (this.ComboSeg0PmtOrderValueSpecified)
                {
                    return this.ComboSeg0PmtOrderValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ComboSeg0PmtOrderValue = value.GetValueOrDefault();
                this.ComboSeg0PmtOrderValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _completedActions;
        
        [XmlElementAttribute("CompletedActions", Order=40, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> CompletedActions
        {
            get
            {
                return _completedActions;
            }
            set
            {
                _completedActions = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CompletedActions collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool CompletedActionsSpecified
        {
            get
            {
                return ((this.CompletedActions != null) 
                            && (this.CompletedActions.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CounterOfferExpireDate", Order=41, Form=XmlSchemaForm.Unqualified)]
        public bool CounterOfferExpireDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CounterOfferExpireDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CounterOfferExpireDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CounterOfferExpireDate
        {
            get
            {
                if (this.CounterOfferExpireDateValueSpecified)
                {
                    return this.CounterOfferExpireDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CounterOfferExpireDateValue = value.GetValueOrDefault();
                this.CounterOfferExpireDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CounteredOrigAmt", Order=42, Form=XmlSchemaForm.Unqualified)]
        public bool CounteredOrigAmtValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CounteredOrigAmt property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CounteredOrigAmtValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CounteredOrigAmt
        {
            get
            {
                if (this.CounteredOrigAmtValueSpecified)
                {
                    return this.CounteredOrigAmtValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CounteredOrigAmtValue = value.GetValueOrDefault();
                this.CounteredOrigAmtValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreatedAtBranch", Order=43, Form=XmlSchemaForm.Unqualified)]
        public bool CreatedAtBranchValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreatedAtBranch property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreatedAtBranchValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CreatedAtBranch
        {
            get
            {
                if (this.CreatedAtBranchValueSpecified)
                {
                    return this.CreatedAtBranchValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreatedAtBranchValue = value.GetValueOrDefault();
                this.CreatedAtBranchValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreatedByUser", Order=44, Form=XmlSchemaForm.Unqualified)]
        public bool CreatedByUserValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreatedByUser property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreatedByUserValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CreatedByUser
        {
            get
            {
                if (this.CreatedByUserValueSpecified)
                {
                    return this.CreatedByUserValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreatedByUserValue = value.GetValueOrDefault();
                this.CreatedByUserValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreationDate", Order=45, Form=XmlSchemaForm.Unqualified)]
        public bool CreationDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreationDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreationDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CreationDate
        {
            get
            {
                if (this.CreationDateValueSpecified)
                {
                    return this.CreationDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreationDateValue = value.GetValueOrDefault();
                this.CreationDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditBureau", Order=46, Form=XmlSchemaForm.Unqualified)]
        public bool CreditBureauValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditBureau property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditBureauValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CreditBureau
        {
            get
            {
                if (this.CreditBureauValueSpecified)
                {
                    return this.CreditBureauValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditBureauValue = value.GetValueOrDefault();
                this.CreditBureauValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditLimit", Order=47, Form=XmlSchemaForm.Unqualified)]
        public bool CreditLimitValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditLimit property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditLimitValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CreditLimit
        {
            get
            {
                if (this.CreditLimitValueSpecified)
                {
                    return this.CreditLimitValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditLimitValue = value.GetValueOrDefault();
                this.CreditLimitValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditScore", Order=48, Form=XmlSchemaForm.Unqualified)]
        public bool CreditScoreValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditScore property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditScoreValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CreditScore
        {
            get
            {
                if (this.CreditScoreValueSpecified)
                {
                    return this.CreditScoreValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditScoreValue = value.GetValueOrDefault();
                this.CreditScoreValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditScoreType", Order=49, Form=XmlSchemaForm.Unqualified)]
        public bool CreditScoreTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditScoreType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditScoreTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CreditScoreType
        {
            get
            {
                if (this.CreditScoreTypeValueSpecified)
                {
                    return this.CreditScoreTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditScoreTypeValue = value.GetValueOrDefault();
                this.CreditScoreTypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CuTotalCertIras", Order=50, Form=XmlSchemaForm.Unqualified)]
        public bool CuTotalCertIrasValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CuTotalCertIras property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CuTotalCertIrasValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CuTotalCertIras
        {
            get
            {
                if (this.CuTotalCertIrasValueSpecified)
                {
                    return this.CuTotalCertIrasValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CuTotalCertIrasValue = value.GetValueOrDefault();
                this.CuTotalCertIrasValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CuTotalClosedEndLoans", Order=51, Form=XmlSchemaForm.Unqualified)]
        public bool CuTotalClosedEndLoansValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CuTotalClosedEndLoans property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CuTotalClosedEndLoansValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CuTotalClosedEndLoans
        {
            get
            {
                if (this.CuTotalClosedEndLoansValueSpecified)
                {
                    return this.CuTotalClosedEndLoansValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CuTotalClosedEndLoansValue = value.GetValueOrDefault();
                this.CuTotalClosedEndLoansValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CuTotalClosedEndPayments", Order=52, Form=XmlSchemaForm.Unqualified)]
        public bool CuTotalClosedEndPaymentsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CuTotalClosedEndPayments property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CuTotalClosedEndPaymentsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CuTotalClosedEndPayments
        {
            get
            {
                if (this.CuTotalClosedEndPaymentsValueSpecified)
                {
                    return this.CuTotalClosedEndPaymentsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CuTotalClosedEndPaymentsValue = value.GetValueOrDefault();
                this.CuTotalClosedEndPaymentsValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CuTotalCredCardPayments", Order=53, Form=XmlSchemaForm.Unqualified)]
        public bool CuTotalCredCardPaymentsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CuTotalCredCardPayments property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CuTotalCredCardPaymentsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CuTotalCredCardPayments
        {
            get
            {
                if (this.CuTotalCredCardPaymentsValueSpecified)
                {
                    return this.CuTotalCredCardPaymentsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CuTotalCredCardPaymentsValue = value.GetValueOrDefault();
                this.CuTotalCredCardPaymentsValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CuTotalCreditCardLoans", Order=54, Form=XmlSchemaForm.Unqualified)]
        public bool CuTotalCreditCardLoansValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CuTotalCreditCardLoans property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CuTotalCreditCardLoansValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CuTotalCreditCardLoans
        {
            get
            {
                if (this.CuTotalCreditCardLoansValueSpecified)
                {
                    return this.CuTotalCreditCardLoansValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CuTotalCreditCardLoansValue = value.GetValueOrDefault();
                this.CuTotalCreditCardLoansValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CuTotalCreditLimit", Order=55, Form=XmlSchemaForm.Unqualified)]
        public bool CuTotalCreditLimitValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CuTotalCreditLimit property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CuTotalCreditLimitValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CuTotalCreditLimit
        {
            get
            {
                if (this.CuTotalCreditLimitValueSpecified)
                {
                    return this.CuTotalCreditLimitValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CuTotalCreditLimitValue = value.GetValueOrDefault();
                this.CuTotalCreditLimitValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CuTotalDrafts", Order=56, Form=XmlSchemaForm.Unqualified)]
        public bool CuTotalDraftsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CuTotalDrafts property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CuTotalDraftsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CuTotalDrafts
        {
            get
            {
                if (this.CuTotalDraftsValueSpecified)
                {
                    return this.CuTotalDraftsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CuTotalDraftsValue = value.GetValueOrDefault();
                this.CuTotalDraftsValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CuTotalLocLoans", Order=57, Form=XmlSchemaForm.Unqualified)]
        public bool CuTotalLocLoansValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CuTotalLocLoans property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CuTotalLocLoansValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CuTotalLocLoans
        {
            get
            {
                if (this.CuTotalLocLoansValueSpecified)
                {
                    return this.CuTotalLocLoansValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CuTotalLocLoansValue = value.GetValueOrDefault();
                this.CuTotalLocLoansValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CuTotalLocPayments", Order=58, Form=XmlSchemaForm.Unqualified)]
        public bool CuTotalLocPaymentsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CuTotalLocPayments property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CuTotalLocPaymentsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CuTotalLocPayments
        {
            get
            {
                if (this.CuTotalLocPaymentsValueSpecified)
                {
                    return this.CuTotalLocPaymentsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CuTotalLocPaymentsValue = value.GetValueOrDefault();
                this.CuTotalLocPaymentsValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CuTotalOpenEndLoans", Order=59, Form=XmlSchemaForm.Unqualified)]
        public bool CuTotalOpenEndLoansValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CuTotalOpenEndLoans property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CuTotalOpenEndLoansValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CuTotalOpenEndLoans
        {
            get
            {
                if (this.CuTotalOpenEndLoansValueSpecified)
                {
                    return this.CuTotalOpenEndLoansValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CuTotalOpenEndLoansValue = value.GetValueOrDefault();
                this.CuTotalOpenEndLoansValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CuTotalOpenEndPayments", Order=60, Form=XmlSchemaForm.Unqualified)]
        public bool CuTotalOpenEndPaymentsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CuTotalOpenEndPayments property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CuTotalOpenEndPaymentsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CuTotalOpenEndPayments
        {
            get
            {
                if (this.CuTotalOpenEndPaymentsValueSpecified)
                {
                    return this.CuTotalOpenEndPaymentsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CuTotalOpenEndPaymentsValue = value.GetValueOrDefault();
                this.CuTotalOpenEndPaymentsValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CuTotalShares", Order=61, Form=XmlSchemaForm.Unqualified)]
        public bool CuTotalSharesValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CuTotalShares property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CuTotalSharesValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CuTotalShares
        {
            get
            {
                if (this.CuTotalSharesValueSpecified)
                {
                    return this.CuTotalSharesValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CuTotalSharesValue = value.GetValueOrDefault();
                this.CuTotalSharesValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _cuTotalsAcctNumber;
        
        [XmlElementAttribute("CuTotalsAcctNumber", Order=62, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> CuTotalsAcctNumber
        {
            get
            {
                return _cuTotalsAcctNumber;
            }
            set
            {
                _cuTotalsAcctNumber = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CuTotalsAcctNumber collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool CuTotalsAcctNumberSpecified
        {
            get
            {
                return ((this.CuTotalsAcctNumber != null) 
                            && (this.CuTotalsAcctNumber.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DealerCity", Order=63, Form=XmlSchemaForm.Unqualified)]
        public bool DealerCityValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DealerCity property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DealerCityValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DealerCity
        {
            get
            {
                if (this.DealerCityValueSpecified)
                {
                    return this.DealerCityValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DealerCityValue = value.GetValueOrDefault();
                this.DealerCityValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DealerCode", Order=64, Form=XmlSchemaForm.Unqualified)]
        public bool DealerCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DealerCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DealerCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DealerCode
        {
            get
            {
                if (this.DealerCodeValueSpecified)
                {
                    return this.DealerCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DealerCodeValue = value.GetValueOrDefault();
                this.DealerCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DealerCounty", Order=65, Form=XmlSchemaForm.Unqualified)]
        public bool DealerCountyValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DealerCounty property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DealerCountyValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DealerCounty
        {
            get
            {
                if (this.DealerCountyValueSpecified)
                {
                    return this.DealerCountyValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DealerCountyValue = value.GetValueOrDefault();
                this.DealerCountyValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DealerReserve", Order=66, Form=XmlSchemaForm.Unqualified)]
        public bool DealerReserveValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DealerReserve property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DealerReserveValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DealerReserve
        {
            get
            {
                if (this.DealerReserveValueSpecified)
                {
                    return this.DealerReserveValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DealerReserveValue = value.GetValueOrDefault();
                this.DealerReserveValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DealerState", Order=67, Form=XmlSchemaForm.Unqualified)]
        public bool DealerStateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DealerState property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DealerStateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DealerState
        {
            get
            {
                if (this.DealerStateValueSpecified)
                {
                    return this.DealerStateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DealerStateValue = value.GetValueOrDefault();
                this.DealerStateValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _debtRatio;
        
        [XmlElementAttribute("DebtRatio", Order=68, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> DebtRatio
        {
            get
            {
                return _debtRatio;
            }
            set
            {
                _debtRatio = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DebtRatio collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool DebtRatioSpecified
        {
            get
            {
                return ((this.DebtRatio != null) 
                            && (this.DebtRatio.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _debtRatioType;
        
        [XmlElementAttribute("DebtRatioType", Order=69, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> DebtRatioType
        {
            get
            {
                return _debtRatioType;
            }
            set
            {
                _debtRatioType = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DebtRatioType collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool DebtRatioTypeSpecified
        {
            get
            {
                return ((this.DebtRatioType != null) 
                            && (this.DebtRatioType.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DecisionCode", Order=70, Form=XmlSchemaForm.Unqualified)]
        public bool DecisionCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DecisionCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DecisionCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DecisionCode
        {
            get
            {
                if (this.DecisionCodeValueSpecified)
                {
                    return this.DecisionCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DecisionCodeValue = value.GetValueOrDefault();
                this.DecisionCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DecisionDate", Order=71, Form=XmlSchemaForm.Unqualified)]
        public bool DecisionDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DecisionDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DecisionDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DecisionDate
        {
            get
            {
                if (this.DecisionDateValueSpecified)
                {
                    return this.DecisionDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DecisionDateValue = value.GetValueOrDefault();
                this.DecisionDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DenialDate", Order=72, Form=XmlSchemaForm.Unqualified)]
        public bool DenialDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DenialDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DenialDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DenialDate
        {
            get
            {
                if (this.DenialDateValueSpecified)
                {
                    return this.DenialDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DenialDateValue = value.GetValueOrDefault();
                this.DenialDateValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _denialReason;
        
        [XmlElementAttribute("DenialReason", Order=73, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> DenialReason
        {
            get
            {
                return _denialReason;
            }
            set
            {
                _denialReason = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DenialReason collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool DenialReasonSpecified
        {
            get
            {
                return ((this.DenialReason != null) 
                            && (this.DenialReason.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DiscountRate", Order=74, Form=XmlSchemaForm.Unqualified)]
        public bool DiscountRateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DiscountRate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DiscountRateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DiscountRate
        {
            get
            {
                if (this.DiscountRateValueSpecified)
                {
                    return this.DiscountRateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DiscountRateValue = value.GetValueOrDefault();
                this.DiscountRateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DqCalculationMethod", Order=75, Form=XmlSchemaForm.Unqualified)]
        public bool DqCalculationMethodValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DqCalculationMethod property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DqCalculationMethodValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DqCalculationMethod
        {
            get
            {
                if (this.DqCalculationMethodValueSpecified)
                {
                    return this.DqCalculationMethodValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DqCalculationMethodValue = value.GetValueOrDefault();
                this.DqCalculationMethodValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DueDateAdvanceCode", Order=76, Form=XmlSchemaForm.Unqualified)]
        public bool DueDateAdvanceCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DueDateAdvanceCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DueDateAdvanceCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DueDateAdvanceCode
        {
            get
            {
                if (this.DueDateAdvanceCodeValueSpecified)
                {
                    return this.DueDateAdvanceCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DueDateAdvanceCodeValue = value.GetValueOrDefault();
                this.DueDateAdvanceCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DueDay1", Order=77, Form=XmlSchemaForm.Unqualified)]
        public bool DueDay1Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DueDay1 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DueDay1ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DueDay1
        {
            get
            {
                if (this.DueDay1ValueSpecified)
                {
                    return this.DueDay1Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DueDay1Value = value.GetValueOrDefault();
                this.DueDay1ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DueDay2", Order=78, Form=XmlSchemaForm.Unqualified)]
        public bool DueDay2Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DueDay2 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DueDay2ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DueDay2
        {
            get
            {
                if (this.DueDay2ValueSpecified)
                {
                    return this.DueDay2Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DueDay2Value = value.GetValueOrDefault();
                this.DueDay2ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("EcoaCode", Order=79, Form=XmlSchemaForm.Unqualified)]
        public bool EcoaCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EcoaCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool EcoaCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> EcoaCode
        {
            get
            {
                if (this.EcoaCodeValueSpecified)
                {
                    return this.EcoaCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EcoaCodeValue = value.GetValueOrDefault();
                this.EcoaCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("EffectiveApr", Order=80, Form=XmlSchemaForm.Unqualified)]
        public bool EffectiveAprValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EffectiveApr property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool EffectiveAprValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> EffectiveApr
        {
            get
            {
                if (this.EffectiveAprValueSpecified)
                {
                    return this.EffectiveAprValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EffectiveAprValue = value.GetValueOrDefault();
                this.EffectiveAprValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("EffectiveDate", Order=81, Form=XmlSchemaForm.Unqualified)]
        public bool EffectiveDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EffectiveDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool EffectiveDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> EffectiveDate
        {
            get
            {
                if (this.EffectiveDateValueSpecified)
                {
                    return this.EffectiveDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EffectiveDateValue = value.GetValueOrDefault();
                this.EffectiveDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("EscrowAmount", Order=82, Form=XmlSchemaForm.Unqualified)]
        public bool EscrowAmountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EscrowAmount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool EscrowAmountValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> EscrowAmount
        {
            get
            {
                if (this.EscrowAmountValueSpecified)
                {
                    return this.EscrowAmountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EscrowAmountValue = value.GetValueOrDefault();
                this.EscrowAmountValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("EscrowId", Order=83, Form=XmlSchemaForm.Unqualified)]
        public bool EscrowIdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EscrowId property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool EscrowIdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> EscrowId
        {
            get
            {
                if (this.EscrowIdValueSpecified)
                {
                    return this.EscrowIdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EscrowIdValue = value.GetValueOrDefault();
                this.EscrowIdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Event", Order=84, Form=XmlSchemaForm.Unqualified)]
        public bool EventValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Event property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool EventValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Event
        {
            get
            {
                if (this.EventValueSpecified)
                {
                    return this.EventValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EventValue = value.GetValueOrDefault();
                this.EventValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("EventDate", Order=85, Form=XmlSchemaForm.Unqualified)]
        public bool EventDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EventDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool EventDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> EventDate
        {
            get
            {
                if (this.EventDateValueSpecified)
                {
                    return this.EventDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EventDateValue = value.GetValueOrDefault();
                this.EventDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ExceedLevelPmtAmt", Order=86, Form=XmlSchemaForm.Unqualified)]
        public bool ExceedLevelPmtAmtValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ExceedLevelPmtAmt property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ExceedLevelPmtAmtValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ExceedLevelPmtAmt
        {
            get
            {
                if (this.ExceedLevelPmtAmtValueSpecified)
                {
                    return this.ExceedLevelPmtAmtValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ExceedLevelPmtAmtValue = value.GetValueOrDefault();
                this.ExceedLevelPmtAmtValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ExistIngLoanBalance", Order=87, Form=XmlSchemaForm.Unqualified)]
        public bool ExistIngLoanBalanceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ExistIngLoanBalance property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ExistIngLoanBalanceValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ExistIngLoanBalance
        {
            get
            {
                if (this.ExistIngLoanBalanceValueSpecified)
                {
                    return this.ExistIngLoanBalanceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ExistIngLoanBalanceValue = value.GetValueOrDefault();
                this.ExistIngLoanBalanceValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ExistIngLoanId", Order=88, Form=XmlSchemaForm.Unqualified)]
        public bool ExistIngLoanIdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ExistIngLoanId property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ExistIngLoanIdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ExistIngLoanId
        {
            get
            {
                if (this.ExistIngLoanIdValueSpecified)
                {
                    return this.ExistIngLoanIdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ExistIngLoanIdValue = value.GetValueOrDefault();
                this.ExistIngLoanIdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ExpirationDate", Order=89, Form=XmlSchemaForm.Unqualified)]
        public bool ExpirationDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ExpirationDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ExpirationDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ExpirationDate
        {
            get
            {
                if (this.ExpirationDateValueSpecified)
                {
                    return this.ExpirationDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ExpirationDateValue = value.GetValueOrDefault();
                this.ExpirationDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Fasb91Code", Order=90, Form=XmlSchemaForm.Unqualified)]
        public bool Fasb91CodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Fasb91Code property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool Fasb91CodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Fasb91Code
        {
            get
            {
                if (this.Fasb91CodeValueSpecified)
                {
                    return this.Fasb91CodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.Fasb91CodeValue = value.GetValueOrDefault();
                this.Fasb91CodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("FirstDueDate", Order=91, Form=XmlSchemaForm.Unqualified)]
        public bool FirstDueDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FirstDueDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FirstDueDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> FirstDueDate
        {
            get
            {
                if (this.FirstDueDateValueSpecified)
                {
                    return this.FirstDueDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FirstDueDateValue = value.GetValueOrDefault();
                this.FirstDueDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("FirstInsBirthDate", Order=92, Form=XmlSchemaForm.Unqualified)]
        public bool FirstInsBirthDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FirstInsBirthDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FirstInsBirthDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> FirstInsBirthDate
        {
            get
            {
                if (this.FirstInsBirthDateValueSpecified)
                {
                    return this.FirstInsBirthDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FirstInsBirthDateValue = value.GetValueOrDefault();
                this.FirstInsBirthDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("FixedDealerCityTaxRate", Order=93, Form=XmlSchemaForm.Unqualified)]
        public bool FixedDealerCityTaxRateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FixedDealerCityTaxRate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FixedDealerCityTaxRateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> FixedDealerCityTaxRate
        {
            get
            {
                if (this.FixedDealerCityTaxRateValueSpecified)
                {
                    return this.FixedDealerCityTaxRateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FixedDealerCityTaxRateValue = value.GetValueOrDefault();
                this.FixedDealerCityTaxRateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("FixedDealerCountyTaxRate", Order=94, Form=XmlSchemaForm.Unqualified)]
        public bool FixedDealerCountyTaxRateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FixedDealerCountyTaxRate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FixedDealerCountyTaxRateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> FixedDealerCountyTaxRate
        {
            get
            {
                if (this.FixedDealerCountyTaxRateValueSpecified)
                {
                    return this.FixedDealerCountyTaxRateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FixedDealerCountyTaxRateValue = value.GetValueOrDefault();
                this.FixedDealerCountyTaxRateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("FixedDealerStateTaxRate", Order=95, Form=XmlSchemaForm.Unqualified)]
        public bool FixedDealerStateTaxRateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FixedDealerStateTaxRate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FixedDealerStateTaxRateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> FixedDealerStateTaxRate
        {
            get
            {
                if (this.FixedDealerStateTaxRateValueSpecified)
                {
                    return this.FixedDealerStateTaxRateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FixedDealerStateTaxRateValue = value.GetValueOrDefault();
                this.FixedDealerStateTaxRateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("FixedLesseeCityTaxRate", Order=96, Form=XmlSchemaForm.Unqualified)]
        public bool FixedLesseeCityTaxRateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FixedLesseeCityTaxRate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FixedLesseeCityTaxRateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> FixedLesseeCityTaxRate
        {
            get
            {
                if (this.FixedLesseeCityTaxRateValueSpecified)
                {
                    return this.FixedLesseeCityTaxRateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FixedLesseeCityTaxRateValue = value.GetValueOrDefault();
                this.FixedLesseeCityTaxRateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("FixedLesseeCountyTaxRate", Order=97, Form=XmlSchemaForm.Unqualified)]
        public bool FixedLesseeCountyTaxRateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FixedLesseeCountyTaxRate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FixedLesseeCountyTaxRateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> FixedLesseeCountyTaxRate
        {
            get
            {
                if (this.FixedLesseeCountyTaxRateValueSpecified)
                {
                    return this.FixedLesseeCountyTaxRateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FixedLesseeCountyTaxRateValue = value.GetValueOrDefault();
                this.FixedLesseeCountyTaxRateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("FixedLesseeStateTaxRate", Order=98, Form=XmlSchemaForm.Unqualified)]
        public bool FixedLesseeStateTaxRateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FixedLesseeStateTaxRate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FixedLesseeStateTaxRateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> FixedLesseeStateTaxRate
        {
            get
            {
                if (this.FixedLesseeStateTaxRateValueSpecified)
                {
                    return this.FixedLesseeStateTaxRateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FixedLesseeStateTaxRateValue = value.GetValueOrDefault();
                this.FixedLesseeStateTaxRateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("FormType", Order=99, Form=XmlSchemaForm.Unqualified)]
        public bool FormTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FormType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FormTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> FormType
        {
            get
            {
                if (this.FormTypeValueSpecified)
                {
                    return this.FormTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FormTypeValue = value.GetValueOrDefault();
                this.FormTypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("GrossMonthlyPay1", Order=100, Form=XmlSchemaForm.Unqualified)]
        public bool GrossMonthlyPay1Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GrossMonthlyPay1 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool GrossMonthlyPay1ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> GrossMonthlyPay1
        {
            get
            {
                if (this.GrossMonthlyPay1ValueSpecified)
                {
                    return this.GrossMonthlyPay1Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.GrossMonthlyPay1Value = value.GetValueOrDefault();
                this.GrossMonthlyPay1ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("GrossMonthlyPay2", Order=101, Form=XmlSchemaForm.Unqualified)]
        public bool GrossMonthlyPay2Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GrossMonthlyPay2 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool GrossMonthlyPay2ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> GrossMonthlyPay2
        {
            get
            {
                if (this.GrossMonthlyPay2ValueSpecified)
                {
                    return this.GrossMonthlyPay2Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.GrossMonthlyPay2Value = value.GetValueOrDefault();
                this.GrossMonthlyPay2ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HighRiskCode", Order=102, Form=XmlSchemaForm.Unqualified)]
        public bool HighRiskCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HighRiskCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HighRiskCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HighRiskCode
        {
            get
            {
                if (this.HighRiskCodeValueSpecified)
                {
                    return this.HighRiskCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HighRiskCodeValue = value.GetValueOrDefault();
                this.HighRiskCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HmdaActionTaken", Order=103, Form=XmlSchemaForm.Unqualified)]
        public bool HmdaActionTakenValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HmdaActionTaken property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HmdaActionTakenValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HmdaActionTaken
        {
            get
            {
                if (this.HmdaActionTakenValueSpecified)
                {
                    return this.HmdaActionTakenValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HmdaActionTakenValue = value.GetValueOrDefault();
                this.HmdaActionTakenValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HmdaActionTakenDate", Order=104, Form=XmlSchemaForm.Unqualified)]
        public bool HmdaActionTakenDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HmdaActionTakenDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HmdaActionTakenDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HmdaActionTakenDate
        {
            get
            {
                if (this.HmdaActionTakenDateValueSpecified)
                {
                    return this.HmdaActionTakenDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HmdaActionTakenDateValue = value.GetValueOrDefault();
                this.HmdaActionTakenDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HmdaAnnualIncome", Order=105, Form=XmlSchemaForm.Unqualified)]
        public bool HmdaAnnualIncomeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HmdaAnnualIncome property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HmdaAnnualIncomeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HmdaAnnualIncome
        {
            get
            {
                if (this.HmdaAnnualIncomeValueSpecified)
                {
                    return this.HmdaAnnualIncomeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HmdaAnnualIncomeValue = value.GetValueOrDefault();
                this.HmdaAnnualIncomeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HmdaAnnualIncomeNa", Order=106, Form=XmlSchemaForm.Unqualified)]
        public bool HmdaAnnualIncomeNaValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HmdaAnnualIncomeNa property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HmdaAnnualIncomeNaValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HmdaAnnualIncomeNa
        {
            get
            {
                if (this.HmdaAnnualIncomeNaValueSpecified)
                {
                    return this.HmdaAnnualIncomeNaValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HmdaAnnualIncomeNaValue = value.GetValueOrDefault();
                this.HmdaAnnualIncomeNaValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HmdaApplicationDateNa", Order=107, Form=XmlSchemaForm.Unqualified)]
        public bool HmdaApplicationDateNaValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HmdaApplicationDateNa property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HmdaApplicationDateNaValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HmdaApplicationDateNa
        {
            get
            {
                if (this.HmdaApplicationDateNaValueSpecified)
                {
                    return this.HmdaApplicationDateNaValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HmdaApplicationDateNaValue = value.GetValueOrDefault();
                this.HmdaApplicationDateNaValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _hmdaAutoUnderwritingResOther;
        
        [XmlElementAttribute("HmdaAutoUnderwritingResOther", Order=108, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> HmdaAutoUnderwritingResOther
        {
            get
            {
                return _hmdaAutoUnderwritingResOther;
            }
            set
            {
                _hmdaAutoUnderwritingResOther = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the HmdaAutoUnderwritingResOther collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool HmdaAutoUnderwritingResOtherSpecified
        {
            get
            {
                return ((this.HmdaAutoUnderwritingResOther != null) 
                            && (this.HmdaAutoUnderwritingResOther.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _hmdaAutoUnderwritingResult;
        
        [XmlElementAttribute("HmdaAutoUnderwritingResult", Order=109, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> HmdaAutoUnderwritingResult
        {
            get
            {
                return _hmdaAutoUnderwritingResult;
            }
            set
            {
                _hmdaAutoUnderwritingResult = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the HmdaAutoUnderwritingResult collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool HmdaAutoUnderwritingResultSpecified
        {
            get
            {
                return ((this.HmdaAutoUnderwritingResult != null) 
                            && (this.HmdaAutoUnderwritingResult.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _hmdaAutoUnderwritingSys;
        
        [XmlElementAttribute("HmdaAutoUnderwritingSys", Order=110, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> HmdaAutoUnderwritingSys
        {
            get
            {
                return _hmdaAutoUnderwritingSys;
            }
            set
            {
                _hmdaAutoUnderwritingSys = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the HmdaAutoUnderwritingSys collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool HmdaAutoUnderwritingSysSpecified
        {
            get
            {
                return ((this.HmdaAutoUnderwritingSys != null) 
                            && (this.HmdaAutoUnderwritingSys.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _hmdaAutoUnderwritingSysOther;
        
        [XmlElementAttribute("HmdaAutoUnderwritingSysOther", Order=111, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> HmdaAutoUnderwritingSysOther
        {
            get
            {
                return _hmdaAutoUnderwritingSysOther;
            }
            set
            {
                _hmdaAutoUnderwritingSysOther = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the HmdaAutoUnderwritingSysOther collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool HmdaAutoUnderwritingSysOtherSpecified
        {
            get
            {
                return ((this.HmdaAutoUnderwritingSysOther != null) 
                            && (this.HmdaAutoUnderwritingSysOther.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HmdaBusOrCommPurposeInd", Order=112, Form=XmlSchemaForm.Unqualified)]
        public bool HmdaBusOrCommPurposeIndValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HmdaBusOrCommPurposeInd property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HmdaBusOrCommPurposeIndValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HmdaBusOrCommPurposeInd
        {
            get
            {
                if (this.HmdaBusOrCommPurposeIndValueSpecified)
                {
                    return this.HmdaBusOrCommPurposeIndValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HmdaBusOrCommPurposeIndValue = value.GetValueOrDefault();
                this.HmdaBusOrCommPurposeIndValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HmdaCensusTract", Order=113, Form=XmlSchemaForm.Unqualified)]
        public bool HmdaCensusTractValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HmdaCensusTract property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HmdaCensusTractValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HmdaCensusTract
        {
            get
            {
                if (this.HmdaCensusTractValueSpecified)
                {
                    return this.HmdaCensusTractValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HmdaCensusTractValue = value.GetValueOrDefault();
                this.HmdaCensusTractValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HmdaCensusTractNa", Order=114, Form=XmlSchemaForm.Unqualified)]
        public bool HmdaCensusTractNaValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HmdaCensusTractNa property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HmdaCensusTractNaValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HmdaCensusTractNa
        {
            get
            {
                if (this.HmdaCensusTractNaValueSpecified)
                {
                    return this.HmdaCensusTractNaValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HmdaCensusTractNaValue = value.GetValueOrDefault();
                this.HmdaCensusTractNaValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HmdaConstructionMethod", Order=115, Form=XmlSchemaForm.Unqualified)]
        public bool HmdaConstructionMethodValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HmdaConstructionMethod property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HmdaConstructionMethodValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HmdaConstructionMethod
        {
            get
            {
                if (this.HmdaConstructionMethodValueSpecified)
                {
                    return this.HmdaConstructionMethodValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HmdaConstructionMethodValue = value.GetValueOrDefault();
                this.HmdaConstructionMethodValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HmdaDebtRationA", Order=116, Form=XmlSchemaForm.Unqualified)]
        public bool HmdaDebtRationAValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HmdaDebtRationA property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HmdaDebtRationAValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HmdaDebtRationA
        {
            get
            {
                if (this.HmdaDebtRationAValueSpecified)
                {
                    return this.HmdaDebtRationAValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HmdaDebtRationAValue = value.GetValueOrDefault();
                this.HmdaDebtRationAValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _hmdaDenialReasonOther;
        
        [XmlElementAttribute("HmdaDenialReasonOther", Order=117, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> HmdaDenialReasonOther
        {
            get
            {
                return _hmdaDenialReasonOther;
            }
            set
            {
                _hmdaDenialReasonOther = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the HmdaDenialReasonOther collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool HmdaDenialReasonOtherSpecified
        {
            get
            {
                return ((this.HmdaDenialReasonOther != null) 
                            && (this.HmdaDenialReasonOther.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HmdaDiscountPoints", Order=118, Form=XmlSchemaForm.Unqualified)]
        public bool HmdaDiscountPointsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HmdaDiscountPoints property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HmdaDiscountPointsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HmdaDiscountPoints
        {
            get
            {
                if (this.HmdaDiscountPointsValueSpecified)
                {
                    return this.HmdaDiscountPointsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HmdaDiscountPointsValue = value.GetValueOrDefault();
                this.HmdaDiscountPointsValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HmdaDiscountPointsNa", Order=119, Form=XmlSchemaForm.Unqualified)]
        public bool HmdaDiscountPointsNaValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HmdaDiscountPointsNa property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HmdaDiscountPointsNaValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HmdaDiscountPointsNa
        {
            get
            {
                if (this.HmdaDiscountPointsNaValueSpecified)
                {
                    return this.HmdaDiscountPointsNaValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HmdaDiscountPointsNaValue = value.GetValueOrDefault();
                this.HmdaDiscountPointsNaValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HmdaHoePastAtUs", Order=120, Form=XmlSchemaForm.Unqualified)]
        public bool HmdaHoePastAtUsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HmdaHoePastAtUs property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HmdaHoePastAtUsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HmdaHoePastAtUs
        {
            get
            {
                if (this.HmdaHoePastAtUsValueSpecified)
                {
                    return this.HmdaHoePastAtUsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HmdaHoePastAtUsValue = value.GetValueOrDefault();
                this.HmdaHoePastAtUsValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HmdaInitPayableToInst", Order=121, Form=XmlSchemaForm.Unqualified)]
        public bool HmdaInitPayableToInstValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HmdaInitPayableToInst property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HmdaInitPayableToInstValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HmdaInitPayableToInst
        {
            get
            {
                if (this.HmdaInitPayableToInstValueSpecified)
                {
                    return this.HmdaInitPayableToInstValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HmdaInitPayableToInstValue = value.GetValueOrDefault();
                this.HmdaInitPayableToInstValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HmdaIntOnlyPmtInd", Order=122, Form=XmlSchemaForm.Unqualified)]
        public bool HmdaIntOnlyPmtIndValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HmdaIntOnlyPmtInd property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HmdaIntOnlyPmtIndValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HmdaIntOnlyPmtInd
        {
            get
            {
                if (this.HmdaIntOnlyPmtIndValueSpecified)
                {
                    return this.HmdaIntOnlyPmtIndValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HmdaIntOnlyPmtIndValue = value.GetValueOrDefault();
                this.HmdaIntOnlyPmtIndValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HmdaInterestRateNa", Order=123, Form=XmlSchemaForm.Unqualified)]
        public bool HmdaInterestRateNaValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HmdaInterestRateNa property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HmdaInterestRateNaValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HmdaInterestRateNa
        {
            get
            {
                if (this.HmdaInterestRateNaValueSpecified)
                {
                    return this.HmdaInterestRateNaValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HmdaInterestRateNaValue = value.GetValueOrDefault();
                this.HmdaInterestRateNaValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HmdaIntroRatePeriod", Order=124, Form=XmlSchemaForm.Unqualified)]
        public bool HmdaIntroRatePeriodValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HmdaIntroRatePeriod property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HmdaIntroRatePeriodValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HmdaIntroRatePeriod
        {
            get
            {
                if (this.HmdaIntroRatePeriodValueSpecified)
                {
                    return this.HmdaIntroRatePeriodValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HmdaIntroRatePeriodValue = value.GetValueOrDefault();
                this.HmdaIntroRatePeriodValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HmdaIntroRatePeriodNa", Order=125, Form=XmlSchemaForm.Unqualified)]
        public bool HmdaIntroRatePeriodNaValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HmdaIntroRatePeriodNa property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HmdaIntroRatePeriodNaValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HmdaIntroRatePeriodNa
        {
            get
            {
                if (this.HmdaIntroRatePeriodNaValueSpecified)
                {
                    return this.HmdaIntroRatePeriodNaValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HmdaIntroRatePeriodNaValue = value.GetValueOrDefault();
                this.HmdaIntroRatePeriodNaValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HmdaLenderCredits", Order=126, Form=XmlSchemaForm.Unqualified)]
        public bool HmdaLenderCreditsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HmdaLenderCredits property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HmdaLenderCreditsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HmdaLenderCredits
        {
            get
            {
                if (this.HmdaLenderCreditsValueSpecified)
                {
                    return this.HmdaLenderCreditsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HmdaLenderCreditsValue = value.GetValueOrDefault();
                this.HmdaLenderCreditsValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HmdaLenderCreditsNa", Order=127, Form=XmlSchemaForm.Unqualified)]
        public bool HmdaLenderCreditsNaValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HmdaLenderCreditsNa property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HmdaLenderCreditsNaValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HmdaLenderCreditsNa
        {
            get
            {
                if (this.HmdaLenderCreditsNaValueSpecified)
                {
                    return this.HmdaLenderCreditsNaValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HmdaLenderCreditsNaValue = value.GetValueOrDefault();
                this.HmdaLenderCreditsNaValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HmdaLienStatus", Order=128, Form=XmlSchemaForm.Unqualified)]
        public bool HmdaLienStatusValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HmdaLienStatus property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HmdaLienStatusValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HmdaLienStatus
        {
            get
            {
                if (this.HmdaLienStatusValueSpecified)
                {
                    return this.HmdaLienStatusValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HmdaLienStatusValue = value.GetValueOrDefault();
                this.HmdaLienStatusValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HmdaLoanPurpose", Order=129, Form=XmlSchemaForm.Unqualified)]
        public bool HmdaLoanPurposeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HmdaLoanPurpose property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HmdaLoanPurposeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HmdaLoanPurpose
        {
            get
            {
                if (this.HmdaLoanPurposeValueSpecified)
                {
                    return this.HmdaLoanPurposeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HmdaLoanPurposeValue = value.GetValueOrDefault();
                this.HmdaLoanPurposeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HmdaLoanTermNa", Order=130, Form=XmlSchemaForm.Unqualified)]
        public bool HmdaLoanTermNaValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HmdaLoanTermNa property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HmdaLoanTermNaValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HmdaLoanTermNa
        {
            get
            {
                if (this.HmdaLoanTermNaValueSpecified)
                {
                    return this.HmdaLoanTermNaValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HmdaLoanTermNaValue = value.GetValueOrDefault();
                this.HmdaLoanTermNaValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HmdaLoanToValueNa", Order=131, Form=XmlSchemaForm.Unqualified)]
        public bool HmdaLoanToValueNaValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HmdaLoanToValueNa property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HmdaLoanToValueNaValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HmdaLoanToValueNa
        {
            get
            {
                if (this.HmdaLoanToValueNaValueSpecified)
                {
                    return this.HmdaLoanToValueNaValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HmdaLoanToValueNaValue = value.GetValueOrDefault();
                this.HmdaLoanToValueNaValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HmdaLoanType", Order=132, Form=XmlSchemaForm.Unqualified)]
        public bool HmdaLoanTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HmdaLoanType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HmdaLoanTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HmdaLoanType
        {
            get
            {
                if (this.HmdaLoanTypeValueSpecified)
                {
                    return this.HmdaLoanTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HmdaLoanTypeValue = value.GetValueOrDefault();
                this.HmdaLoanTypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HmdaMfdHomeSecPropType", Order=133, Form=XmlSchemaForm.Unqualified)]
        public bool HmdaMfdHomeSecPropTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HmdaMfdHomeSecPropType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HmdaMfdHomeSecPropTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HmdaMfdHomeSecPropType
        {
            get
            {
                if (this.HmdaMfdHomeSecPropTypeValueSpecified)
                {
                    return this.HmdaMfdHomeSecPropTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HmdaMfdHomeSecPropTypeValue = value.GetValueOrDefault();
                this.HmdaMfdHomeSecPropTypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HmdaMfdHomelandPropInt", Order=134, Form=XmlSchemaForm.Unqualified)]
        public bool HmdaMfdHomelandPropIntValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HmdaMfdHomelandPropInt property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HmdaMfdHomelandPropIntValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HmdaMfdHomelandPropInt
        {
            get
            {
                if (this.HmdaMfdHomelandPropIntValueSpecified)
                {
                    return this.HmdaMfdHomelandPropIntValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HmdaMfdHomelandPropIntValue = value.GetValueOrDefault();
                this.HmdaMfdHomelandPropIntValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HmdaMultifamilyAffordUnits", Order=135, Form=XmlSchemaForm.Unqualified)]
        public bool HmdaMultifamilyAffordUnitsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HmdaMultifamilyAffordUnits property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HmdaMultifamilyAffordUnitsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HmdaMultifamilyAffordUnits
        {
            get
            {
                if (this.HmdaMultifamilyAffordUnitsValueSpecified)
                {
                    return this.HmdaMultifamilyAffordUnitsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HmdaMultifamilyAffordUnitsValue = value.GetValueOrDefault();
                this.HmdaMultifamilyAffordUnitsValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HmdaMultifamilyAffordUnitsNa", Order=136, Form=XmlSchemaForm.Unqualified)]
        public bool HmdaMultifamilyAffordUnitsNaValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HmdaMultifamilyAffordUnitsNa property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HmdaMultifamilyAffordUnitsNaValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HmdaMultifamilyAffordUnitsNa
        {
            get
            {
                if (this.HmdaMultifamilyAffordUnitsNaValueSpecified)
                {
                    return this.HmdaMultifamilyAffordUnitsNaValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HmdaMultifamilyAffordUnitsNaValue = value.GetValueOrDefault();
                this.HmdaMultifamilyAffordUnitsNaValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HmdaNegAmortInd", Order=137, Form=XmlSchemaForm.Unqualified)]
        public bool HmdaNegAmortIndValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HmdaNegAmortInd property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HmdaNegAmortIndValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HmdaNegAmortInd
        {
            get
            {
                if (this.HmdaNegAmortIndValueSpecified)
                {
                    return this.HmdaNegAmortIndValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HmdaNegAmortIndValue = value.GetValueOrDefault();
                this.HmdaNegAmortIndValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HmdaNmlsrId", Order=138, Form=XmlSchemaForm.Unqualified)]
        public bool HmdaNmlsrIdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HmdaNmlsrId property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HmdaNmlsrIdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HmdaNmlsrId
        {
            get
            {
                if (this.HmdaNmlsrIdValueSpecified)
                {
                    return this.HmdaNmlsrIdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HmdaNmlsrIdValue = value.GetValueOrDefault();
                this.HmdaNmlsrIdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HmdaNmlsrIdNa", Order=139, Form=XmlSchemaForm.Unqualified)]
        public bool HmdaNmlsrIdNaValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HmdaNmlsrIdNa property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HmdaNmlsrIdNaValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HmdaNmlsrIdNa
        {
            get
            {
                if (this.HmdaNmlsrIdNaValueSpecified)
                {
                    return this.HmdaNmlsrIdNaValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HmdaNmlsrIdNaValue = value.GetValueOrDefault();
                this.HmdaNmlsrIdNaValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HmdaOccupancyType", Order=140, Form=XmlSchemaForm.Unqualified)]
        public bool HmdaOccupancyTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HmdaOccupancyType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HmdaOccupancyTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HmdaOccupancyType
        {
            get
            {
                if (this.HmdaOccupancyTypeValueSpecified)
                {
                    return this.HmdaOccupancyTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HmdaOccupancyTypeValue = value.GetValueOrDefault();
                this.HmdaOccupancyTypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HmdaOeLocInd", Order=141, Form=XmlSchemaForm.Unqualified)]
        public bool HmdaOeLocIndValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HmdaOeLocInd property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HmdaOeLocIndValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HmdaOeLocInd
        {
            get
            {
                if (this.HmdaOeLocIndValueSpecified)
                {
                    return this.HmdaOeLocIndValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HmdaOeLocIndValue = value.GetValueOrDefault();
                this.HmdaOeLocIndValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HmdaOriginationCharges", Order=142, Form=XmlSchemaForm.Unqualified)]
        public bool HmdaOriginationChargesValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HmdaOriginationCharges property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HmdaOriginationChargesValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HmdaOriginationCharges
        {
            get
            {
                if (this.HmdaOriginationChargesValueSpecified)
                {
                    return this.HmdaOriginationChargesValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HmdaOriginationChargesValue = value.GetValueOrDefault();
                this.HmdaOriginationChargesValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HmdaOriginationChargesNa", Order=143, Form=XmlSchemaForm.Unqualified)]
        public bool HmdaOriginationChargesNaValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HmdaOriginationChargesNa property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HmdaOriginationChargesNaValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HmdaOriginationChargesNa
        {
            get
            {
                if (this.HmdaOriginationChargesNaValueSpecified)
                {
                    return this.HmdaOriginationChargesNaValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HmdaOriginationChargesNaValue = value.GetValueOrDefault();
                this.HmdaOriginationChargesNaValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HmdaOtherNonAmortFeatures", Order=144, Form=XmlSchemaForm.Unqualified)]
        public bool HmdaOtherNonAmortFeaturesValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HmdaOtherNonAmortFeatures property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HmdaOtherNonAmortFeaturesValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HmdaOtherNonAmortFeatures
        {
            get
            {
                if (this.HmdaOtherNonAmortFeaturesValueSpecified)
                {
                    return this.HmdaOtherNonAmortFeaturesValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HmdaOtherNonAmortFeaturesValue = value.GetValueOrDefault();
                this.HmdaOtherNonAmortFeaturesValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HmdaPreapproval", Order=145, Form=XmlSchemaForm.Unqualified)]
        public bool HmdaPreapprovalValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HmdaPreapproval property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HmdaPreapprovalValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HmdaPreapproval
        {
            get
            {
                if (this.HmdaPreapprovalValueSpecified)
                {
                    return this.HmdaPreapprovalValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HmdaPreapprovalValue = value.GetValueOrDefault();
                this.HmdaPreapprovalValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HmdaPrepaymentPenaltyTerm", Order=146, Form=XmlSchemaForm.Unqualified)]
        public bool HmdaPrepaymentPenaltyTermValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HmdaPrepaymentPenaltyTerm property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HmdaPrepaymentPenaltyTermValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HmdaPrepaymentPenaltyTerm
        {
            get
            {
                if (this.HmdaPrepaymentPenaltyTermValueSpecified)
                {
                    return this.HmdaPrepaymentPenaltyTermValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HmdaPrepaymentPenaltyTermValue = value.GetValueOrDefault();
                this.HmdaPrepaymentPenaltyTermValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HmdaPrepaymentPenaltyTermNa", Order=147, Form=XmlSchemaForm.Unqualified)]
        public bool HmdaPrepaymentPenaltyTermNaValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HmdaPrepaymentPenaltyTermNa property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HmdaPrepaymentPenaltyTermNaValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HmdaPrepaymentPenaltyTermNa
        {
            get
            {
                if (this.HmdaPrepaymentPenaltyTermNaValueSpecified)
                {
                    return this.HmdaPrepaymentPenaltyTermNaValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HmdaPrepaymentPenaltyTermNaValue = value.GetValueOrDefault();
                this.HmdaPrepaymentPenaltyTermNaValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HmdaPropertyCity", Order=148, Form=XmlSchemaForm.Unqualified)]
        public bool HmdaPropertyCityValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HmdaPropertyCity property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HmdaPropertyCityValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HmdaPropertyCity
        {
            get
            {
                if (this.HmdaPropertyCityValueSpecified)
                {
                    return this.HmdaPropertyCityValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HmdaPropertyCityValue = value.GetValueOrDefault();
                this.HmdaPropertyCityValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HmdaPropertyCityNa", Order=149, Form=XmlSchemaForm.Unqualified)]
        public bool HmdaPropertyCityNaValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HmdaPropertyCityNa property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HmdaPropertyCityNaValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HmdaPropertyCityNa
        {
            get
            {
                if (this.HmdaPropertyCityNaValueSpecified)
                {
                    return this.HmdaPropertyCityNaValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HmdaPropertyCityNaValue = value.GetValueOrDefault();
                this.HmdaPropertyCityNaValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HmdaPropertyCounty", Order=150, Form=XmlSchemaForm.Unqualified)]
        public bool HmdaPropertyCountyValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HmdaPropertyCounty property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HmdaPropertyCountyValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HmdaPropertyCounty
        {
            get
            {
                if (this.HmdaPropertyCountyValueSpecified)
                {
                    return this.HmdaPropertyCountyValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HmdaPropertyCountyValue = value.GetValueOrDefault();
                this.HmdaPropertyCountyValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HmdaPropertyCountyNa", Order=151, Form=XmlSchemaForm.Unqualified)]
        public bool HmdaPropertyCountyNaValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HmdaPropertyCountyNa property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HmdaPropertyCountyNaValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HmdaPropertyCountyNa
        {
            get
            {
                if (this.HmdaPropertyCountyNaValueSpecified)
                {
                    return this.HmdaPropertyCountyNaValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HmdaPropertyCountyNaValue = value.GetValueOrDefault();
                this.HmdaPropertyCountyNaValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HmdaPropertyState", Order=152, Form=XmlSchemaForm.Unqualified)]
        public bool HmdaPropertyStateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HmdaPropertyState property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HmdaPropertyStateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HmdaPropertyState
        {
            get
            {
                if (this.HmdaPropertyStateValueSpecified)
                {
                    return this.HmdaPropertyStateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HmdaPropertyStateValue = value.GetValueOrDefault();
                this.HmdaPropertyStateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HmdaPropertyStateNa", Order=153, Form=XmlSchemaForm.Unqualified)]
        public bool HmdaPropertyStateNaValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HmdaPropertyStateNa property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HmdaPropertyStateNaValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HmdaPropertyStateNa
        {
            get
            {
                if (this.HmdaPropertyStateNaValueSpecified)
                {
                    return this.HmdaPropertyStateNaValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HmdaPropertyStateNaValue = value.GetValueOrDefault();
                this.HmdaPropertyStateNaValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HmdaPropertyStreetAddress", Order=154, Form=XmlSchemaForm.Unqualified)]
        public bool HmdaPropertyStreetAddressValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HmdaPropertyStreetAddress property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HmdaPropertyStreetAddressValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HmdaPropertyStreetAddress
        {
            get
            {
                if (this.HmdaPropertyStreetAddressValueSpecified)
                {
                    return this.HmdaPropertyStreetAddressValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HmdaPropertyStreetAddressValue = value.GetValueOrDefault();
                this.HmdaPropertyStreetAddressValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HmdaPropertyStreetAddressNa", Order=155, Form=XmlSchemaForm.Unqualified)]
        public bool HmdaPropertyStreetAddressNaValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HmdaPropertyStreetAddressNa property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HmdaPropertyStreetAddressNaValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HmdaPropertyStreetAddressNa
        {
            get
            {
                if (this.HmdaPropertyStreetAddressNaValueSpecified)
                {
                    return this.HmdaPropertyStreetAddressNaValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HmdaPropertyStreetAddressNaValue = value.GetValueOrDefault();
                this.HmdaPropertyStreetAddressNaValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HmdaPropertyValue", Order=156, Form=XmlSchemaForm.Unqualified)]
        public bool HmdaPropertyValueValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HmdaPropertyValue property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HmdaPropertyValueValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HmdaPropertyValue
        {
            get
            {
                if (this.HmdaPropertyValueValueSpecified)
                {
                    return this.HmdaPropertyValueValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HmdaPropertyValueValue = value.GetValueOrDefault();
                this.HmdaPropertyValueValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HmdaPropertyValueNa", Order=157, Form=XmlSchemaForm.Unqualified)]
        public bool HmdaPropertyValueNaValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HmdaPropertyValueNa property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HmdaPropertyValueNaValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HmdaPropertyValueNa
        {
            get
            {
                if (this.HmdaPropertyValueNaValueSpecified)
                {
                    return this.HmdaPropertyValueNaValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HmdaPropertyValueNaValue = value.GetValueOrDefault();
                this.HmdaPropertyValueNaValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HmdaPropertyZipCode", Order=158, Form=XmlSchemaForm.Unqualified)]
        public bool HmdaPropertyZipCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HmdaPropertyZipCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HmdaPropertyZipCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HmdaPropertyZipCode
        {
            get
            {
                if (this.HmdaPropertyZipCodeValueSpecified)
                {
                    return this.HmdaPropertyZipCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HmdaPropertyZipCodeValue = value.GetValueOrDefault();
                this.HmdaPropertyZipCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HmdaPropertyZipCodeNa", Order=159, Form=XmlSchemaForm.Unqualified)]
        public bool HmdaPropertyZipCodeNaValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HmdaPropertyZipCodeNa property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HmdaPropertyZipCodeNaValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HmdaPropertyZipCodeNa
        {
            get
            {
                if (this.HmdaPropertyZipCodeNaValueSpecified)
                {
                    return this.HmdaPropertyZipCodeNaValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HmdaPropertyZipCodeNaValue = value.GetValueOrDefault();
                this.HmdaPropertyZipCodeNaValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HmdaPurchaserType", Order=160, Form=XmlSchemaForm.Unqualified)]
        public bool HmdaPurchaserTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HmdaPurchaserType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HmdaPurchaserTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HmdaPurchaserType
        {
            get
            {
                if (this.HmdaPurchaserTypeValueSpecified)
                {
                    return this.HmdaPurchaserTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HmdaPurchaserTypeValue = value.GetValueOrDefault();
                this.HmdaPurchaserTypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HmdaRateSpread", Order=161, Form=XmlSchemaForm.Unqualified)]
        public bool HmdaRateSpreadValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HmdaRateSpread property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HmdaRateSpreadValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HmdaRateSpread
        {
            get
            {
                if (this.HmdaRateSpreadValueSpecified)
                {
                    return this.HmdaRateSpreadValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HmdaRateSpreadValue = value.GetValueOrDefault();
                this.HmdaRateSpreadValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HmdaRateSpreadNa", Order=162, Form=XmlSchemaForm.Unqualified)]
        public bool HmdaRateSpreadNaValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HmdaRateSpreadNa property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HmdaRateSpreadNaValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HmdaRateSpreadNa
        {
            get
            {
                if (this.HmdaRateSpreadNaValueSpecified)
                {
                    return this.HmdaRateSpreadNaValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HmdaRateSpreadNaValue = value.GetValueOrDefault();
                this.HmdaRateSpreadNaValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HmdaRateSpreadSign", Order=163, Form=XmlSchemaForm.Unqualified)]
        public bool HmdaRateSpreadSignValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HmdaRateSpreadSign property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HmdaRateSpreadSignValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HmdaRateSpreadSign
        {
            get
            {
                if (this.HmdaRateSpreadSignValueSpecified)
                {
                    return this.HmdaRateSpreadSignValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HmdaRateSpreadSignValue = value.GetValueOrDefault();
                this.HmdaRateSpreadSignValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HmdaRevMortInd", Order=164, Form=XmlSchemaForm.Unqualified)]
        public bool HmdaRevMortIndValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HmdaRevMortInd property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HmdaRevMortIndValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HmdaRevMortInd
        {
            get
            {
                if (this.HmdaRevMortIndValueSpecified)
                {
                    return this.HmdaRevMortIndValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HmdaRevMortIndValue = value.GetValueOrDefault();
                this.HmdaRevMortIndValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HmdaSubmissionOfApMethod", Order=165, Form=XmlSchemaForm.Unqualified)]
        public bool HmdaSubmissionOfApMethodValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HmdaSubmissionOfApMethod property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HmdaSubmissionOfApMethodValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HmdaSubmissionOfApMethod
        {
            get
            {
                if (this.HmdaSubmissionOfApMethodValueSpecified)
                {
                    return this.HmdaSubmissionOfApMethodValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HmdaSubmissionOfApMethodValue = value.GetValueOrDefault();
                this.HmdaSubmissionOfApMethodValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HmdaTotalLoanCosts", Order=166, Form=XmlSchemaForm.Unqualified)]
        public bool HmdaTotalLoanCostsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HmdaTotalLoanCosts property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HmdaTotalLoanCostsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HmdaTotalLoanCosts
        {
            get
            {
                if (this.HmdaTotalLoanCostsValueSpecified)
                {
                    return this.HmdaTotalLoanCostsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HmdaTotalLoanCostsValue = value.GetValueOrDefault();
                this.HmdaTotalLoanCostsValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HmdaTotalLoanCostsNa", Order=167, Form=XmlSchemaForm.Unqualified)]
        public bool HmdaTotalLoanCostsNaValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HmdaTotalLoanCostsNa property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HmdaTotalLoanCostsNaValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HmdaTotalLoanCostsNa
        {
            get
            {
                if (this.HmdaTotalLoanCostsNaValueSpecified)
                {
                    return this.HmdaTotalLoanCostsNaValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HmdaTotalLoanCostsNaValue = value.GetValueOrDefault();
                this.HmdaTotalLoanCostsNaValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HmdaTotalPointsFees", Order=168, Form=XmlSchemaForm.Unqualified)]
        public bool HmdaTotalPointsFeesValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HmdaTotalPointsFees property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HmdaTotalPointsFeesValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HmdaTotalPointsFees
        {
            get
            {
                if (this.HmdaTotalPointsFeesValueSpecified)
                {
                    return this.HmdaTotalPointsFeesValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HmdaTotalPointsFeesValue = value.GetValueOrDefault();
                this.HmdaTotalPointsFeesValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HmdaTotalPointsFeesNa", Order=169, Form=XmlSchemaForm.Unqualified)]
        public bool HmdaTotalPointsFeesNaValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HmdaTotalPointsFeesNa property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HmdaTotalPointsFeesNaValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HmdaTotalPointsFeesNa
        {
            get
            {
                if (this.HmdaTotalPointsFeesNaValueSpecified)
                {
                    return this.HmdaTotalPointsFeesNaValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HmdaTotalPointsFeesNaValue = value.GetValueOrDefault();
                this.HmdaTotalPointsFeesNaValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HmdaTotalUnits", Order=170, Form=XmlSchemaForm.Unqualified)]
        public bool HmdaTotalUnitsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HmdaTotalUnits property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HmdaTotalUnitsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HmdaTotalUnits
        {
            get
            {
                if (this.HmdaTotalUnitsValueSpecified)
                {
                    return this.HmdaTotalUnitsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HmdaTotalUnitsValue = value.GetValueOrDefault();
                this.HmdaTotalUnitsValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HmdaUniversalLoanIdentifier1", Order=171, Form=XmlSchemaForm.Unqualified)]
        public bool HmdaUniversalLoanIdentifier1Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HmdaUniversalLoanIdentifier1 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HmdaUniversalLoanIdentifier1ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HmdaUniversalLoanIdentifier1
        {
            get
            {
                if (this.HmdaUniversalLoanIdentifier1ValueSpecified)
                {
                    return this.HmdaUniversalLoanIdentifier1Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HmdaUniversalLoanIdentifier1Value = value.GetValueOrDefault();
                this.HmdaUniversalLoanIdentifier1ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HmdaUniversalLoanIdentifier2", Order=172, Form=XmlSchemaForm.Unqualified)]
        public bool HmdaUniversalLoanIdentifier2Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HmdaUniversalLoanIdentifier2 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HmdaUniversalLoanIdentifier2ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HmdaUniversalLoanIdentifier2
        {
            get
            {
                if (this.HmdaUniversalLoanIdentifier2ValueSpecified)
                {
                    return this.HmdaUniversalLoanIdentifier2Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HmdaUniversalLoanIdentifier2Value = value.GetValueOrDefault();
                this.HmdaUniversalLoanIdentifier2ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Id", Order=173, Form=XmlSchemaForm.Unqualified)]
        public bool IdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Id property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Id
        {
            get
            {
                if (this.IdValueSpecified)
                {
                    return this.IdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IdValue = value.GetValueOrDefault();
                this.IdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IndirectDealerNum", Order=174, Form=XmlSchemaForm.Unqualified)]
        public bool IndirectDealerNumValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IndirectDealerNum property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IndirectDealerNumValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IndirectDealerNum
        {
            get
            {
                if (this.IndirectDealerNumValueSpecified)
                {
                    return this.IndirectDealerNumValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IndirectDealerNumValue = value.GetValueOrDefault();
                this.IndirectDealerNumValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IndirectPlanId", Order=175, Form=XmlSchemaForm.Unqualified)]
        public bool IndirectPlanIdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IndirectPlanId property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IndirectPlanIdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IndirectPlanId
        {
            get
            {
                if (this.IndirectPlanIdValueSpecified)
                {
                    return this.IndirectPlanIdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IndirectPlanIdValue = value.GetValueOrDefault();
                this.IndirectPlanIdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InfoRequestDate", Order=176, Form=XmlSchemaForm.Unqualified)]
        public bool InfoRequestDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InfoRequestDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InfoRequestDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InfoRequestDate
        {
            get
            {
                if (this.InfoRequestDateValueSpecified)
                {
                    return this.InfoRequestDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InfoRequestDateValue = value.GetValueOrDefault();
                this.InfoRequestDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InitialBcdSettingOption", Order=177, Form=XmlSchemaForm.Unqualified)]
        public bool InitialBcdSettingOptionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InitialBcdSettingOption property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InitialBcdSettingOptionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InitialBcdSettingOption
        {
            get
            {
                if (this.InitialBcdSettingOptionValueSpecified)
                {
                    return this.InitialBcdSettingOptionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InitialBcdSettingOptionValue = value.GetValueOrDefault();
                this.InitialBcdSettingOptionValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InsurabilityCode", Order=178, Form=XmlSchemaForm.Unqualified)]
        public bool InsurabilityCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InsurabilityCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InsurabilityCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InsurabilityCode
        {
            get
            {
                if (this.InsurabilityCodeValueSpecified)
                {
                    return this.InsurabilityCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InsurabilityCodeValue = value.GetValueOrDefault();
                this.InsurabilityCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Insurance1Chosen", Order=179, Form=XmlSchemaForm.Unqualified)]
        public bool Insurance1ChosenValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Insurance1Chosen property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool Insurance1ChosenValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Insurance1Chosen
        {
            get
            {
                if (this.Insurance1ChosenValueSpecified)
                {
                    return this.Insurance1ChosenValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.Insurance1ChosenValue = value.GetValueOrDefault();
                this.Insurance1ChosenValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Insurance2Chosen", Order=180, Form=XmlSchemaForm.Unqualified)]
        public bool Insurance2ChosenValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Insurance2Chosen property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool Insurance2ChosenValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Insurance2Chosen
        {
            get
            {
                if (this.Insurance2ChosenValueSpecified)
                {
                    return this.Insurance2ChosenValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.Insurance2ChosenValue = value.GetValueOrDefault();
                this.Insurance2ChosenValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Insurance3Chosen", Order=181, Form=XmlSchemaForm.Unqualified)]
        public bool Insurance3ChosenValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Insurance3Chosen property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool Insurance3ChosenValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Insurance3Chosen
        {
            get
            {
                if (this.Insurance3ChosenValueSpecified)
                {
                    return this.Insurance3ChosenValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.Insurance3ChosenValue = value.GetValueOrDefault();
                this.Insurance3ChosenValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InsuranceMax", Order=182, Form=XmlSchemaForm.Unqualified)]
        public bool InsuranceMaxValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InsuranceMax property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InsuranceMaxValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InsuranceMax
        {
            get
            {
                if (this.InsuranceMaxValueSpecified)
                {
                    return this.InsuranceMaxValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InsuranceMaxValue = value.GetValueOrDefault();
                this.InsuranceMaxValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InsuranceType", Order=183, Form=XmlSchemaForm.Unqualified)]
        public bool InsuranceTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InsuranceType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InsuranceTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InsuranceType
        {
            get
            {
                if (this.InsuranceTypeValueSpecified)
                {
                    return this.InsuranceTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InsuranceTypeValue = value.GetValueOrDefault();
                this.InsuranceTypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InterestRate", Order=184, Form=XmlSchemaForm.Unqualified)]
        public bool InterestRateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InterestRate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InterestRateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InterestRate
        {
            get
            {
                if (this.InterestRateValueSpecified)
                {
                    return this.InterestRateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InterestRateValue = value.GetValueOrDefault();
                this.InterestRateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InterestType", Order=185, Form=XmlSchemaForm.Unqualified)]
        public bool InterestTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InterestType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InterestTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InterestType
        {
            get
            {
                if (this.InterestTypeValueSpecified)
                {
                    return this.InterestTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InterestTypeValue = value.GetValueOrDefault();
                this.InterestTypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LastFmDate", Order=186, Form=XmlSchemaForm.Unqualified)]
        public bool LastFmDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LastFmDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LastFmDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LastFmDate
        {
            get
            {
                if (this.LastFmDateValueSpecified)
                {
                    return this.LastFmDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LastFmDateValue = value.GetValueOrDefault();
                this.LastFmDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LeaseDispositionDate", Order=187, Form=XmlSchemaForm.Unqualified)]
        public bool LeaseDispositionDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LeaseDispositionDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LeaseDispositionDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LeaseDispositionDate
        {
            get
            {
                if (this.LeaseDispositionDateValueSpecified)
                {
                    return this.LeaseDispositionDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LeaseDispositionDateValue = value.GetValueOrDefault();
                this.LeaseDispositionDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LeaseDispositionFee", Order=188, Form=XmlSchemaForm.Unqualified)]
        public bool LeaseDispositionFeeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LeaseDispositionFee property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LeaseDispositionFeeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LeaseDispositionFee
        {
            get
            {
                if (this.LeaseDispositionFeeValueSpecified)
                {
                    return this.LeaseDispositionFeeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LeaseDispositionFeeValue = value.GetValueOrDefault();
                this.LeaseDispositionFeeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LeaseTerminateDate", Order=189, Form=XmlSchemaForm.Unqualified)]
        public bool LeaseTerminateDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LeaseTerminateDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LeaseTerminateDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LeaseTerminateDate
        {
            get
            {
                if (this.LeaseTerminateDateValueSpecified)
                {
                    return this.LeaseTerminateDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LeaseTerminateDateValue = value.GetValueOrDefault();
                this.LeaseTerminateDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LeaseTerminateFee", Order=190, Form=XmlSchemaForm.Unqualified)]
        public bool LeaseTerminateFeeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LeaseTerminateFee property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LeaseTerminateFeeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LeaseTerminateFee
        {
            get
            {
                if (this.LeaseTerminateFeeValueSpecified)
                {
                    return this.LeaseTerminateFeeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LeaseTerminateFeeValue = value.GetValueOrDefault();
                this.LeaseTerminateFeeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LesseeCity", Order=191, Form=XmlSchemaForm.Unqualified)]
        public bool LesseeCityValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LesseeCity property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LesseeCityValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LesseeCity
        {
            get
            {
                if (this.LesseeCityValueSpecified)
                {
                    return this.LesseeCityValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LesseeCityValue = value.GetValueOrDefault();
                this.LesseeCityValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LesseeCounty", Order=192, Form=XmlSchemaForm.Unqualified)]
        public bool LesseeCountyValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LesseeCounty property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LesseeCountyValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LesseeCounty
        {
            get
            {
                if (this.LesseeCountyValueSpecified)
                {
                    return this.LesseeCountyValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LesseeCountyValue = value.GetValueOrDefault();
                this.LesseeCountyValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LesseeState", Order=193, Form=XmlSchemaForm.Unqualified)]
        public bool LesseeStateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LesseeState property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LesseeStateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LesseeState
        {
            get
            {
                if (this.LesseeStateValueSpecified)
                {
                    return this.LesseeStateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LesseeStateValue = value.GetValueOrDefault();
                this.LesseeStateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LevelPaymentAmt", Order=194, Form=XmlSchemaForm.Unqualified)]
        public bool LevelPaymentAmtValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LevelPaymentAmt property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LevelPaymentAmtValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LevelPaymentAmt
        {
            get
            {
                if (this.LevelPaymentAmtValueSpecified)
                {
                    return this.LevelPaymentAmtValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LevelPaymentAmtValue = value.GetValueOrDefault();
                this.LevelPaymentAmtValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LevelPrincipalAmt", Order=195, Form=XmlSchemaForm.Unqualified)]
        public bool LevelPrincipalAmtValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LevelPrincipalAmt property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LevelPrincipalAmtValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LevelPrincipalAmt
        {
            get
            {
                if (this.LevelPrincipalAmtValueSpecified)
                {
                    return this.LevelPrincipalAmtValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LevelPrincipalAmtValue = value.GetValueOrDefault();
                this.LevelPrincipalAmtValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LimitExpirationDate", Order=196, Form=XmlSchemaForm.Unqualified)]
        public bool LimitExpirationDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LimitExpirationDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LimitExpirationDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LimitExpirationDate
        {
            get
            {
                if (this.LimitExpirationDateValueSpecified)
                {
                    return this.LimitExpirationDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LimitExpirationDateValue = value.GetValueOrDefault();
                this.LimitExpirationDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LoanAmount", Order=197, Form=XmlSchemaForm.Unqualified)]
        public bool LoanAmountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LoanAmount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LoanAmountValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LoanAmount
        {
            get
            {
                if (this.LoanAmountValueSpecified)
                {
                    return this.LoanAmountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LoanAmountValue = value.GetValueOrDefault();
                this.LoanAmountValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LoanCode", Order=198, Form=XmlSchemaForm.Unqualified)]
        public bool LoanCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LoanCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LoanCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LoanCode
        {
            get
            {
                if (this.LoanCodeValueSpecified)
                {
                    return this.LoanCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LoanCodeValue = value.GetValueOrDefault();
                this.LoanCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LoanDescription", Order=199, Form=XmlSchemaForm.Unqualified)]
        public bool LoanDescriptionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LoanDescription property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LoanDescriptionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LoanDescription
        {
            get
            {
                if (this.LoanDescriptionValueSpecified)
                {
                    return this.LoanDescriptionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LoanDescriptionValue = value.GetValueOrDefault();
                this.LoanDescriptionValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LoanMaturityDate", Order=200, Form=XmlSchemaForm.Unqualified)]
        public bool LoanMaturityDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LoanMaturityDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LoanMaturityDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LoanMaturityDate
        {
            get
            {
                if (this.LoanMaturityDateValueSpecified)
                {
                    return this.LoanMaturityDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LoanMaturityDateValue = value.GetValueOrDefault();
                this.LoanMaturityDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LoanReference", Order=201, Form=XmlSchemaForm.Unqualified)]
        public bool LoanReferenceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LoanReference property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LoanReferenceValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LoanReference
        {
            get
            {
                if (this.LoanReferenceValueSpecified)
                {
                    return this.LoanReferenceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LoanReferenceValue = value.GetValueOrDefault();
                this.LoanReferenceValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LoanToValueRatio", Order=202, Form=XmlSchemaForm.Unqualified)]
        public bool LoanToValueRatioValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LoanToValueRatio property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LoanToValueRatioValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LoanToValueRatio
        {
            get
            {
                if (this.LoanToValueRatioValueSpecified)
                {
                    return this.LoanToValueRatioValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LoanToValueRatioValue = value.GetValueOrDefault();
                this.LoanToValueRatioValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LoanType", Order=203, Form=XmlSchemaForm.Unqualified)]
        public bool LoanTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LoanType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LoanTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LoanType
        {
            get
            {
                if (this.LoanTypeValueSpecified)
                {
                    return this.LoanTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LoanTypeValue = value.GetValueOrDefault();
                this.LoanTypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MaxDueDateAdvancePeriod", Order=204, Form=XmlSchemaForm.Unqualified)]
        public bool MaxDueDateAdvancePeriodValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MaxDueDateAdvancePeriod property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MaxDueDateAdvancePeriodValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MaxDueDateAdvancePeriod
        {
            get
            {
                if (this.MaxDueDateAdvancePeriodValueSpecified)
                {
                    return this.MaxDueDateAdvancePeriodValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MaxDueDateAdvancePeriodValue = value.GetValueOrDefault();
                this.MaxDueDateAdvancePeriodValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MilitaryAprLoan", Order=205, Form=XmlSchemaForm.Unqualified)]
        public bool MilitaryAprLoanValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MilitaryAprLoan property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MilitaryAprLoanValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MilitaryAprLoan
        {
            get
            {
                if (this.MilitaryAprLoanValueSpecified)
                {
                    return this.MilitaryAprLoanValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MilitaryAprLoanValue = value.GetValueOrDefault();
                this.MilitaryAprLoanValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MinimumPayment", Order=206, Form=XmlSchemaForm.Unqualified)]
        public bool MinimumPaymentValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MinimumPayment property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MinimumPaymentValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MinimumPayment
        {
            get
            {
                if (this.MinimumPaymentValueSpecified)
                {
                    return this.MinimumPaymentValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MinimumPaymentValue = value.GetValueOrDefault();
                this.MinimumPaymentValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MtgNumProp", Order=207, Form=XmlSchemaForm.Unqualified)]
        public bool MtgNumPropValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MtgNumProp property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MtgNumPropValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MtgNumProp
        {
            get
            {
                if (this.MtgNumPropValueSpecified)
                {
                    return this.MtgNumPropValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MtgNumPropValue = value.GetValueOrDefault();
                this.MtgNumPropValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("NetMonthlyPay1", Order=208, Form=XmlSchemaForm.Unqualified)]
        public bool NetMonthlyPay1Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NetMonthlyPay1 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool NetMonthlyPay1ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> NetMonthlyPay1
        {
            get
            {
                if (this.NetMonthlyPay1ValueSpecified)
                {
                    return this.NetMonthlyPay1Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NetMonthlyPay1Value = value.GetValueOrDefault();
                this.NetMonthlyPay1ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("NetMonthlyPay2", Order=209, Form=XmlSchemaForm.Unqualified)]
        public bool NetMonthlyPay2Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NetMonthlyPay2 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool NetMonthlyPay2ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> NetMonthlyPay2
        {
            get
            {
                if (this.NetMonthlyPay2ValueSpecified)
                {
                    return this.NetMonthlyPay2Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NetMonthlyPay2Value = value.GetValueOrDefault();
                this.NetMonthlyPay2ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("NewSegCutoffDays", Order=210, Form=XmlSchemaForm.Unqualified)]
        public bool NewSegCutoffDaysValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NewSegCutoffDays property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool NewSegCutoffDaysValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> NewSegCutoffDays
        {
            get
            {
                if (this.NewSegCutoffDaysValueSpecified)
                {
                    return this.NewSegCutoffDaysValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NewSegCutoffDaysValue = value.GetValueOrDefault();
                this.NewSegCutoffDaysValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("NewSegCutoffOption", Order=211, Form=XmlSchemaForm.Unqualified)]
        public bool NewSegCutoffOptionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NewSegCutoffOption property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool NewSegCutoffOptionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> NewSegCutoffOption
        {
            get
            {
                if (this.NewSegCutoffOptionValueSpecified)
                {
                    return this.NewSegCutoffOptionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NewSegCutoffOptionValue = value.GetValueOrDefault();
                this.NewSegCutoffOptionValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("NotePurgeDate", Order=212, Form=XmlSchemaForm.Unqualified)]
        public bool NotePurgeDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NotePurgeDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool NotePurgeDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> NotePurgeDate
        {
            get
            {
                if (this.NotePurgeDateValueSpecified)
                {
                    return this.NotePurgeDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NotePurgeDateValue = value.GetValueOrDefault();
                this.NotePurgeDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OrigRiskGrade", Order=213, Form=XmlSchemaForm.Unqualified)]
        public bool OrigRiskGradeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OrigRiskGrade property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OrigRiskGradeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> OrigRiskGrade
        {
            get
            {
                if (this.OrigRiskGradeValueSpecified)
                {
                    return this.OrigRiskGradeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OrigRiskGradeValue = value.GetValueOrDefault();
                this.OrigRiskGradeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OriginalRate", Order=214, Form=XmlSchemaForm.Unqualified)]
        public bool OriginalRateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OriginalRate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OriginalRateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> OriginalRate
        {
            get
            {
                if (this.OriginalRateValueSpecified)
                {
                    return this.OriginalRateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OriginalRateValue = value.GetValueOrDefault();
                this.OriginalRateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OvlAuthFee", Order=215, Form=XmlSchemaForm.Unqualified)]
        public bool OvlAuthFeeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OvlAuthFee property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OvlAuthFeeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> OvlAuthFee
        {
            get
            {
                if (this.OvlAuthFeeValueSpecified)
                {
                    return this.OvlAuthFeeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OvlAuthFeeValue = value.GetValueOrDefault();
                this.OvlAuthFeeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OvlOptIn", Order=216, Form=XmlSchemaForm.Unqualified)]
        public bool OvlOptInValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OvlOptIn property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OvlOptInValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> OvlOptIn
        {
            get
            {
                if (this.OvlOptInValueSpecified)
                {
                    return this.OvlOptInValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OvlOptInValue = value.GetValueOrDefault();
                this.OvlOptInValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Payment", Order=217, Form=XmlSchemaForm.Unqualified)]
        public bool PaymentValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Payment property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PaymentValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Payment
        {
            get
            {
                if (this.PaymentValueSpecified)
                {
                    return this.PaymentValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PaymentValue = value.GetValueOrDefault();
                this.PaymentValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PaymentCalcType", Order=218, Form=XmlSchemaForm.Unqualified)]
        public bool PaymentCalcTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PaymentCalcType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PaymentCalcTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PaymentCalcType
        {
            get
            {
                if (this.PaymentCalcTypeValueSpecified)
                {
                    return this.PaymentCalcTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PaymentCalcTypeValue = value.GetValueOrDefault();
                this.PaymentCalcTypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PaymentFrequency", Order=219, Form=XmlSchemaForm.Unqualified)]
        public bool PaymentFrequencyValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PaymentFrequency property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PaymentFrequencyValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PaymentFrequency
        {
            get
            {
                if (this.PaymentFrequencyValueSpecified)
                {
                    return this.PaymentFrequencyValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PaymentFrequencyValue = value.GetValueOrDefault();
                this.PaymentFrequencyValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PaymentMethod", Order=220, Form=XmlSchemaForm.Unqualified)]
        public bool PaymentMethodValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PaymentMethod property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PaymentMethodValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PaymentMethod
        {
            get
            {
                if (this.PaymentMethodValueSpecified)
                {
                    return this.PaymentMethodValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PaymentMethodValue = value.GetValueOrDefault();
                this.PaymentMethodValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PaymentSkipStartDay", Order=221, Form=XmlSchemaForm.Unqualified)]
        public bool PaymentSkipStartDayValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PaymentSkipStartDay property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PaymentSkipStartDayValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PaymentSkipStartDay
        {
            get
            {
                if (this.PaymentSkipStartDayValueSpecified)
                {
                    return this.PaymentSkipStartDayValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PaymentSkipStartDayValue = value.GetValueOrDefault();
                this.PaymentSkipStartDayValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PaymentSkips", Order=222, Form=XmlSchemaForm.Unqualified)]
        public bool PaymentSkipsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PaymentSkips property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PaymentSkipsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PaymentSkips
        {
            get
            {
                if (this.PaymentSkipsValueSpecified)
                {
                    return this.PaymentSkipsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PaymentSkipsValue = value.GetValueOrDefault();
                this.PaymentSkipsValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PaymentType", Order=223, Form=XmlSchemaForm.Unqualified)]
        public bool PaymentTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PaymentType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PaymentTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PaymentType
        {
            get
            {
                if (this.PaymentTypeValueSpecified)
                {
                    return this.PaymentTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PaymentTypeValue = value.GetValueOrDefault();
                this.PaymentTypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PendingDate", Order=224, Form=XmlSchemaForm.Unqualified)]
        public bool PendingDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PendingDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PendingDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PendingDate
        {
            get
            {
                if (this.PendingDateValueSpecified)
                {
                    return this.PendingDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PendingDateValue = value.GetValueOrDefault();
                this.PendingDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PercentPrincipal", Order=225, Form=XmlSchemaForm.Unqualified)]
        public bool PercentPrincipalValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PercentPrincipal property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PercentPrincipalValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PercentPrincipal
        {
            get
            {
                if (this.PercentPrincipalValueSpecified)
                {
                    return this.PercentPrincipalValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PercentPrincipalValue = value.GetValueOrDefault();
                this.PercentPrincipalValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PmiAppraisedValue", Order=226, Form=XmlSchemaForm.Unqualified)]
        public bool PmiAppraisedValueValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PmiAppraisedValue property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PmiAppraisedValueValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PmiAppraisedValue
        {
            get
            {
                if (this.PmiAppraisedValueValueSpecified)
                {
                    return this.PmiAppraisedValueValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PmiAppraisedValueValue = value.GetValueOrDefault();
                this.PmiAppraisedValueValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PmiLtvRatio", Order=227, Form=XmlSchemaForm.Unqualified)]
        public bool PmiLtvRatioValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PmiLtvRatio property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PmiLtvRatioValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PmiLtvRatio
        {
            get
            {
                if (this.PmiLtvRatioValueSpecified)
                {
                    return this.PmiLtvRatioValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PmiLtvRatioValue = value.GetValueOrDefault();
                this.PmiLtvRatioValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PmiOriginalValue", Order=228, Form=XmlSchemaForm.Unqualified)]
        public bool PmiOriginalValueValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PmiOriginalValue property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PmiOriginalValueValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PmiOriginalValue
        {
            get
            {
                if (this.PmiOriginalValueValueSpecified)
                {
                    return this.PmiOriginalValueValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PmiOriginalValueValue = value.GetValueOrDefault();
                this.PmiOriginalValueValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PmiPurchasePrice", Order=229, Form=XmlSchemaForm.Unqualified)]
        public bool PmiPurchasePriceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PmiPurchasePrice property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PmiPurchasePriceValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PmiPurchasePrice
        {
            get
            {
                if (this.PmiPurchasePriceValueSpecified)
                {
                    return this.PmiPurchasePriceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PmiPurchasePriceValue = value.GetValueOrDefault();
                this.PmiPurchasePriceValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrefLocator", Order=230, Form=XmlSchemaForm.Unqualified)]
        public bool PrefLocatorValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrefLocator property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrefLocatorValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrefLocator
        {
            get
            {
                if (this.PrefLocatorValueSpecified)
                {
                    return this.PrefLocatorValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrefLocatorValue = value.GetValueOrDefault();
                this.PrefLocatorValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrepaidFinanceChg", Order=231, Form=XmlSchemaForm.Unqualified)]
        public bool PrepaidFinanceChgValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrepaidFinanceChg property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrepaidFinanceChgValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrepaidFinanceChg
        {
            get
            {
                if (this.PrepaidFinanceChgValueSpecified)
                {
                    return this.PrepaidFinanceChgValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrepaidFinanceChgValue = value.GetValueOrDefault();
                this.PrepaidFinanceChgValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ProcessorCode", Order=232, Form=XmlSchemaForm.Unqualified)]
        public bool ProcessorCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ProcessorCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ProcessorCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ProcessorCode
        {
            get
            {
                if (this.ProcessorCodeValueSpecified)
                {
                    return this.ProcessorCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ProcessorCodeValue = value.GetValueOrDefault();
                this.ProcessorCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PropertyAddressType", Order=233, Form=XmlSchemaForm.Unqualified)]
        public bool PropertyAddressTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PropertyAddressType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PropertyAddressTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PropertyAddressType
        {
            get
            {
                if (this.PropertyAddressTypeValueSpecified)
                {
                    return this.PropertyAddressTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PropertyAddressTypeValue = value.GetValueOrDefault();
                this.PropertyAddressTypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PropertyJurisdiction", Order=234, Form=XmlSchemaForm.Unqualified)]
        public bool PropertyJurisdictionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PropertyJurisdiction property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PropertyJurisdictionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PropertyJurisdiction
        {
            get
            {
                if (this.PropertyJurisdictionValueSpecified)
                {
                    return this.PropertyJurisdictionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PropertyJurisdictionValue = value.GetValueOrDefault();
                this.PropertyJurisdictionValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PurposeCode", Order=235, Form=XmlSchemaForm.Unqualified)]
        public bool PurposeCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PurposeCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PurposeCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PurposeCode
        {
            get
            {
                if (this.PurposeCodeValueSpecified)
                {
                    return this.PurposeCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PurposeCodeValue = value.GetValueOrDefault();
                this.PurposeCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PutItemSchd", Order=236, Form=XmlSchemaForm.Unqualified)]
        public bool PutItemSchdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PutItemSchd property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PutItemSchdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PutItemSchd
        {
            get
            {
                if (this.PutItemSchdValueSpecified)
                {
                    return this.PutItemSchdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PutItemSchdValue = value.GetValueOrDefault();
                this.PutItemSchdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PutItemSchdType", Order=237, Form=XmlSchemaForm.Unqualified)]
        public bool PutItemSchdTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PutItemSchdType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PutItemSchdTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PutItemSchdType
        {
            get
            {
                if (this.PutItemSchdTypeValueSpecified)
                {
                    return this.PutItemSchdTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PutItemSchdTypeValue = value.GetValueOrDefault();
                this.PutItemSchdTypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Queue", Order=238, Form=XmlSchemaForm.Unqualified)]
        public bool QueueValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Queue property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool QueueValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Queue
        {
            get
            {
                if (this.QueueValueSpecified)
                {
                    return this.QueueValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.QueueValue = value.GetValueOrDefault();
                this.QueueValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("QueueDate", Order=239, Form=XmlSchemaForm.Unqualified)]
        public bool QueueDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the QueueDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool QueueDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> QueueDate
        {
            get
            {
                if (this.QueueDateValueSpecified)
                {
                    return this.QueueDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.QueueDateValue = value.GetValueOrDefault();
                this.QueueDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("QueuePriority", Order=240, Form=XmlSchemaForm.Unqualified)]
        public bool QueuePriorityValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the QueuePriority property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool QueuePriorityValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> QueuePriority
        {
            get
            {
                if (this.QueuePriorityValueSpecified)
                {
                    return this.QueuePriorityValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.QueuePriorityValue = value.GetValueOrDefault();
                this.QueuePriorityValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("QueueTime", Order=241, Form=XmlSchemaForm.Unqualified)]
        public bool QueueTimeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the QueueTime property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool QueueTimeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> QueueTime
        {
            get
            {
                if (this.QueueTimeValueSpecified)
                {
                    return this.QueueTimeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.QueueTimeValue = value.GetValueOrDefault();
                this.QueueTimeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("RecordChangeDate", Order=242, Form=XmlSchemaForm.Unqualified)]
        public bool RecordChangeDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RecordChangeDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool RecordChangeDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> RecordChangeDate
        {
            get
            {
                if (this.RecordChangeDateValueSpecified)
                {
                    return this.RecordChangeDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RecordChangeDateValue = value.GetValueOrDefault();
                this.RecordChangeDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("RiskRate", Order=243, Form=XmlSchemaForm.Unqualified)]
        public bool RiskRateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RiskRate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool RiskRateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> RiskRate
        {
            get
            {
                if (this.RiskRateValueSpecified)
                {
                    return this.RiskRateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RiskRateValue = value.GetValueOrDefault();
                this.RiskRateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SalesTaxCityIndicator", Order=244, Form=XmlSchemaForm.Unqualified)]
        public bool SalesTaxCityIndicatorValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SalesTaxCityIndicator property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SalesTaxCityIndicatorValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SalesTaxCityIndicator
        {
            get
            {
                if (this.SalesTaxCityIndicatorValueSpecified)
                {
                    return this.SalesTaxCityIndicatorValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SalesTaxCityIndicatorValue = value.GetValueOrDefault();
                this.SalesTaxCityIndicatorValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SalesTaxCountyIndicator", Order=245, Form=XmlSchemaForm.Unqualified)]
        public bool SalesTaxCountyIndicatorValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SalesTaxCountyIndicator property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SalesTaxCountyIndicatorValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SalesTaxCountyIndicator
        {
            get
            {
                if (this.SalesTaxCountyIndicatorValueSpecified)
                {
                    return this.SalesTaxCountyIndicatorValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SalesTaxCountyIndicatorValue = value.GetValueOrDefault();
                this.SalesTaxCountyIndicatorValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SalesTaxRate", Order=246, Form=XmlSchemaForm.Unqualified)]
        public bool SalesTaxRateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SalesTaxRate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SalesTaxRateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SalesTaxRate
        {
            get
            {
                if (this.SalesTaxRateValueSpecified)
                {
                    return this.SalesTaxRateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SalesTaxRateValue = value.GetValueOrDefault();
                this.SalesTaxRateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SalesTaxStateIndicator", Order=247, Form=XmlSchemaForm.Unqualified)]
        public bool SalesTaxStateIndicatorValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SalesTaxStateIndicator property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SalesTaxStateIndicatorValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SalesTaxStateIndicator
        {
            get
            {
                if (this.SalesTaxStateIndicatorValueSpecified)
                {
                    return this.SalesTaxStateIndicatorValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SalesTaxStateIndicatorValue = value.GetValueOrDefault();
                this.SalesTaxStateIndicatorValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SecondAppPayment", Order=248, Form=XmlSchemaForm.Unqualified)]
        public bool SecondAppPaymentValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SecondAppPayment property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SecondAppPaymentValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SecondAppPayment
        {
            get
            {
                if (this.SecondAppPaymentValueSpecified)
                {
                    return this.SecondAppPaymentValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SecondAppPaymentValue = value.GetValueOrDefault();
                this.SecondAppPaymentValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SecondAppRequest", Order=249, Form=XmlSchemaForm.Unqualified)]
        public bool SecondAppRequestValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SecondAppRequest property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SecondAppRequestValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SecondAppRequest
        {
            get
            {
                if (this.SecondAppRequestValueSpecified)
                {
                    return this.SecondAppRequestValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SecondAppRequestValue = value.GetValueOrDefault();
                this.SecondAppRequestValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SecondAppRequestAmt", Order=250, Form=XmlSchemaForm.Unqualified)]
        public bool SecondAppRequestAmtValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SecondAppRequestAmt property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SecondAppRequestAmtValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SecondAppRequestAmt
        {
            get
            {
                if (this.SecondAppRequestAmtValueSpecified)
                {
                    return this.SecondAppRequestAmtValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SecondAppRequestAmtValue = value.GetValueOrDefault();
                this.SecondAppRequestAmtValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SecondInsBirthDate", Order=251, Form=XmlSchemaForm.Unqualified)]
        public bool SecondInsBirthDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SecondInsBirthDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SecondInsBirthDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SecondInsBirthDate
        {
            get
            {
                if (this.SecondInsBirthDateValueSpecified)
                {
                    return this.SecondInsBirthDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SecondInsBirthDateValue = value.GetValueOrDefault();
                this.SecondInsBirthDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SecuredCode", Order=252, Form=XmlSchemaForm.Unqualified)]
        public bool SecuredCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SecuredCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SecuredCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SecuredCode
        {
            get
            {
                if (this.SecuredCodeValueSpecified)
                {
                    return this.SecuredCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SecuredCodeValue = value.GetValueOrDefault();
                this.SecuredCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Seg0Description", Order=253, Form=XmlSchemaForm.Unqualified)]
        public bool Seg0DescriptionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Seg0Description property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool Seg0DescriptionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Seg0Description
        {
            get
            {
                if (this.Seg0DescriptionValueSpecified)
                {
                    return this.Seg0DescriptionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.Seg0DescriptionValue = value.GetValueOrDefault();
                this.Seg0DescriptionValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Seg0Payment", Order=254, Form=XmlSchemaForm.Unqualified)]
        public bool Seg0PaymentValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Seg0Payment property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool Seg0PaymentValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Seg0Payment
        {
            get
            {
                if (this.Seg0PaymentValueSpecified)
                {
                    return this.Seg0PaymentValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.Seg0PaymentValue = value.GetValueOrDefault();
                this.Seg0PaymentValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Seg0PaymentOrder", Order=255, Form=XmlSchemaForm.Unqualified)]
        public bool Seg0PaymentOrderValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Seg0PaymentOrder property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool Seg0PaymentOrderValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Seg0PaymentOrder
        {
            get
            {
                if (this.Seg0PaymentOrderValueSpecified)
                {
                    return this.Seg0PaymentOrderValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.Seg0PaymentOrderValue = value.GetValueOrDefault();
                this.Seg0PaymentOrderValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SinglePremiumDisability", Order=256, Form=XmlSchemaForm.Unqualified)]
        public bool SinglePremiumDisabilityValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SinglePremiumDisability property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SinglePremiumDisabilityValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SinglePremiumDisability
        {
            get
            {
                if (this.SinglePremiumDisabilityValueSpecified)
                {
                    return this.SinglePremiumDisabilityValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SinglePremiumDisabilityValue = value.GetValueOrDefault();
                this.SinglePremiumDisabilityValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SinglePremiumLife", Order=257, Form=XmlSchemaForm.Unqualified)]
        public bool SinglePremiumLifeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SinglePremiumLife property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SinglePremiumLifeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SinglePremiumLife
        {
            get
            {
                if (this.SinglePremiumLifeValueSpecified)
                {
                    return this.SinglePremiumLifeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SinglePremiumLifeValue = value.GetValueOrDefault();
                this.SinglePremiumLifeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("StateSalesTaxRate", Order=258, Form=XmlSchemaForm.Unqualified)]
        public bool StateSalesTaxRateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StateSalesTaxRate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool StateSalesTaxRateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> StateSalesTaxRate
        {
            get
            {
                if (this.StateSalesTaxRateValueSpecified)
                {
                    return this.StateSalesTaxRateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.StateSalesTaxRateValue = value.GetValueOrDefault();
                this.StateSalesTaxRateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SubType", Order=259, Form=XmlSchemaForm.Unqualified)]
        public bool SubTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SubType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SubTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SubType
        {
            get
            {
                if (this.SubTypeValueSpecified)
                {
                    return this.SubTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SubTypeValue = value.GetValueOrDefault();
                this.SubTypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TermMonths", Order=260, Form=XmlSchemaForm.Unqualified)]
        public bool TermMonthsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TermMonths property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TermMonthsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TermMonths
        {
            get
            {
                if (this.TermMonthsValueSpecified)
                {
                    return this.TermMonthsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TermMonthsValue = value.GetValueOrDefault();
                this.TermMonthsValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ThirdAppPayment", Order=261, Form=XmlSchemaForm.Unqualified)]
        public bool ThirdAppPaymentValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ThirdAppPayment property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ThirdAppPaymentValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ThirdAppPayment
        {
            get
            {
                if (this.ThirdAppPaymentValueSpecified)
                {
                    return this.ThirdAppPaymentValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ThirdAppPaymentValue = value.GetValueOrDefault();
                this.ThirdAppPaymentValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ThirdAppRequest", Order=262, Form=XmlSchemaForm.Unqualified)]
        public bool ThirdAppRequestValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ThirdAppRequest property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ThirdAppRequestValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ThirdAppRequest
        {
            get
            {
                if (this.ThirdAppRequestValueSpecified)
                {
                    return this.ThirdAppRequestValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ThirdAppRequestValue = value.GetValueOrDefault();
                this.ThirdAppRequestValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ThirdAppRequestAmt", Order=263, Form=XmlSchemaForm.Unqualified)]
        public bool ThirdAppRequestAmtValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ThirdAppRequestAmt property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ThirdAppRequestAmtValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ThirdAppRequestAmt
        {
            get
            {
                if (this.ThirdAppRequestAmtValueSpecified)
                {
                    return this.ThirdAppRequestAmtValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ThirdAppRequestAmtValue = value.GetValueOrDefault();
                this.ThirdAppRequestAmtValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TotalAssets", Order=264, Form=XmlSchemaForm.Unqualified)]
        public bool TotalAssetsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalAssets property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TotalAssetsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TotalAssets
        {
            get
            {
                if (this.TotalAssetsValueSpecified)
                {
                    return this.TotalAssetsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TotalAssetsValue = value.GetValueOrDefault();
                this.TotalAssetsValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TotalCreditLimits", Order=265, Form=XmlSchemaForm.Unqualified)]
        public bool TotalCreditLimitsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalCreditLimits property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TotalCreditLimitsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TotalCreditLimits
        {
            get
            {
                if (this.TotalCreditLimitsValueSpecified)
                {
                    return this.TotalCreditLimitsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TotalCreditLimitsValue = value.GetValueOrDefault();
                this.TotalCreditLimitsValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TotalExpenses", Order=266, Form=XmlSchemaForm.Unqualified)]
        public bool TotalExpensesValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalExpenses property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TotalExpensesValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TotalExpenses
        {
            get
            {
                if (this.TotalExpensesValueSpecified)
                {
                    return this.TotalExpensesValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TotalExpensesValue = value.GetValueOrDefault();
                this.TotalExpensesValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TotalIncome", Order=267, Form=XmlSchemaForm.Unqualified)]
        public bool TotalIncomeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalIncome property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TotalIncomeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TotalIncome
        {
            get
            {
                if (this.TotalIncomeValueSpecified)
                {
                    return this.TotalIncomeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TotalIncomeValue = value.GetValueOrDefault();
                this.TotalIncomeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TotalLiabilities", Order=268, Form=XmlSchemaForm.Unqualified)]
        public bool TotalLiabilitiesValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalLiabilities property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TotalLiabilitiesValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TotalLiabilities
        {
            get
            {
                if (this.TotalLiabilitiesValueSpecified)
                {
                    return this.TotalLiabilitiesValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TotalLiabilitiesValue = value.GetValueOrDefault();
                this.TotalLiabilitiesValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TransferAccountId", Order=269, Form=XmlSchemaForm.Unqualified)]
        public bool TransferAccountIdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TransferAccountId property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TransferAccountIdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TransferAccountId
        {
            get
            {
                if (this.TransferAccountIdValueSpecified)
                {
                    return this.TransferAccountIdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TransferAccountIdValue = value.GetValueOrDefault();
                this.TransferAccountIdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TransferAccountNumber", Order=270, Form=XmlSchemaForm.Unqualified)]
        public bool TransferAccountNumberValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TransferAccountNumber property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TransferAccountNumberValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TransferAccountNumber
        {
            get
            {
                if (this.TransferAccountNumberValueSpecified)
                {
                    return this.TransferAccountNumberValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TransferAccountNumberValue = value.GetValueOrDefault();
                this.TransferAccountNumberValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Type", Order=271, Form=XmlSchemaForm.Unqualified)]
        public bool TypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Type property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Type
        {
            get
            {
                if (this.TypeValueSpecified)
                {
                    return this.TypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TypeValue = value.GetValueOrDefault();
                this.TypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UnamortizedFees", Order=272, Form=XmlSchemaForm.Unqualified)]
        public bool UnamortizedFeesValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UnamortizedFees property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UnamortizedFeesValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UnamortizedFees
        {
            get
            {
                if (this.UnamortizedFeesValueSpecified)
                {
                    return this.UnamortizedFeesValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UnamortizedFeesValue = value.GetValueOrDefault();
                this.UnamortizedFeesValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UserAmount1", Order=273, Form=XmlSchemaForm.Unqualified)]
        public bool UserAmount1Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UserAmount1 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UserAmount1ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UserAmount1
        {
            get
            {
                if (this.UserAmount1ValueSpecified)
                {
                    return this.UserAmount1Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UserAmount1Value = value.GetValueOrDefault();
                this.UserAmount1ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UserAmount10", Order=274, Form=XmlSchemaForm.Unqualified)]
        public bool UserAmount10Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UserAmount10 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UserAmount10ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UserAmount10
        {
            get
            {
                if (this.UserAmount10ValueSpecified)
                {
                    return this.UserAmount10Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UserAmount10Value = value.GetValueOrDefault();
                this.UserAmount10ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UserAmount2", Order=275, Form=XmlSchemaForm.Unqualified)]
        public bool UserAmount2Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UserAmount2 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UserAmount2ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UserAmount2
        {
            get
            {
                if (this.UserAmount2ValueSpecified)
                {
                    return this.UserAmount2Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UserAmount2Value = value.GetValueOrDefault();
                this.UserAmount2ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UserAmount3", Order=276, Form=XmlSchemaForm.Unqualified)]
        public bool UserAmount3Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UserAmount3 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UserAmount3ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UserAmount3
        {
            get
            {
                if (this.UserAmount3ValueSpecified)
                {
                    return this.UserAmount3Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UserAmount3Value = value.GetValueOrDefault();
                this.UserAmount3ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UserAmount4", Order=277, Form=XmlSchemaForm.Unqualified)]
        public bool UserAmount4Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UserAmount4 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UserAmount4ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UserAmount4
        {
            get
            {
                if (this.UserAmount4ValueSpecified)
                {
                    return this.UserAmount4Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UserAmount4Value = value.GetValueOrDefault();
                this.UserAmount4ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UserAmount5", Order=278, Form=XmlSchemaForm.Unqualified)]
        public bool UserAmount5Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UserAmount5 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UserAmount5ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UserAmount5
        {
            get
            {
                if (this.UserAmount5ValueSpecified)
                {
                    return this.UserAmount5Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UserAmount5Value = value.GetValueOrDefault();
                this.UserAmount5ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UserAmount6", Order=279, Form=XmlSchemaForm.Unqualified)]
        public bool UserAmount6Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UserAmount6 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UserAmount6ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UserAmount6
        {
            get
            {
                if (this.UserAmount6ValueSpecified)
                {
                    return this.UserAmount6Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UserAmount6Value = value.GetValueOrDefault();
                this.UserAmount6ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UserAmount7", Order=280, Form=XmlSchemaForm.Unqualified)]
        public bool UserAmount7Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UserAmount7 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UserAmount7ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UserAmount7
        {
            get
            {
                if (this.UserAmount7ValueSpecified)
                {
                    return this.UserAmount7Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UserAmount7Value = value.GetValueOrDefault();
                this.UserAmount7ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UserAmount8", Order=281, Form=XmlSchemaForm.Unqualified)]
        public bool UserAmount8Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UserAmount8 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UserAmount8ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UserAmount8
        {
            get
            {
                if (this.UserAmount8ValueSpecified)
                {
                    return this.UserAmount8Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UserAmount8Value = value.GetValueOrDefault();
                this.UserAmount8ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UserAmount9", Order=282, Form=XmlSchemaForm.Unqualified)]
        public bool UserAmount9Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UserAmount9 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UserAmount9ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UserAmount9
        {
            get
            {
                if (this.UserAmount9ValueSpecified)
                {
                    return this.UserAmount9Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UserAmount9Value = value.GetValueOrDefault();
                this.UserAmount9ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UserChar1", Order=283, Form=XmlSchemaForm.Unqualified)]
        public bool UserChar1Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UserChar1 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UserChar1ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UserChar1
        {
            get
            {
                if (this.UserChar1ValueSpecified)
                {
                    return this.UserChar1Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UserChar1Value = value.GetValueOrDefault();
                this.UserChar1ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UserChar2", Order=284, Form=XmlSchemaForm.Unqualified)]
        public bool UserChar2Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UserChar2 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UserChar2ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UserChar2
        {
            get
            {
                if (this.UserChar2ValueSpecified)
                {
                    return this.UserChar2Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UserChar2Value = value.GetValueOrDefault();
                this.UserChar2ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UserChar3", Order=285, Form=XmlSchemaForm.Unqualified)]
        public bool UserChar3Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UserChar3 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UserChar3ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UserChar3
        {
            get
            {
                if (this.UserChar3ValueSpecified)
                {
                    return this.UserChar3Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UserChar3Value = value.GetValueOrDefault();
                this.UserChar3ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UserChar4", Order=286, Form=XmlSchemaForm.Unqualified)]
        public bool UserChar4Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UserChar4 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UserChar4ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UserChar4
        {
            get
            {
                if (this.UserChar4ValueSpecified)
                {
                    return this.UserChar4Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UserChar4Value = value.GetValueOrDefault();
                this.UserChar4ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UserCode1", Order=287, Form=XmlSchemaForm.Unqualified)]
        public bool UserCode1Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UserCode1 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UserCode1ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UserCode1
        {
            get
            {
                if (this.UserCode1ValueSpecified)
                {
                    return this.UserCode1Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UserCode1Value = value.GetValueOrDefault();
                this.UserCode1ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UserCode10", Order=288, Form=XmlSchemaForm.Unqualified)]
        public bool UserCode10Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UserCode10 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UserCode10ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UserCode10
        {
            get
            {
                if (this.UserCode10ValueSpecified)
                {
                    return this.UserCode10Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UserCode10Value = value.GetValueOrDefault();
                this.UserCode10ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UserCode2", Order=289, Form=XmlSchemaForm.Unqualified)]
        public bool UserCode2Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UserCode2 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UserCode2ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UserCode2
        {
            get
            {
                if (this.UserCode2ValueSpecified)
                {
                    return this.UserCode2Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UserCode2Value = value.GetValueOrDefault();
                this.UserCode2ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UserCode3", Order=290, Form=XmlSchemaForm.Unqualified)]
        public bool UserCode3Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UserCode3 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UserCode3ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UserCode3
        {
            get
            {
                if (this.UserCode3ValueSpecified)
                {
                    return this.UserCode3Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UserCode3Value = value.GetValueOrDefault();
                this.UserCode3ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UserCode4", Order=291, Form=XmlSchemaForm.Unqualified)]
        public bool UserCode4Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UserCode4 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UserCode4ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UserCode4
        {
            get
            {
                if (this.UserCode4ValueSpecified)
                {
                    return this.UserCode4Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UserCode4Value = value.GetValueOrDefault();
                this.UserCode4ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UserCode5", Order=292, Form=XmlSchemaForm.Unqualified)]
        public bool UserCode5Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UserCode5 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UserCode5ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UserCode5
        {
            get
            {
                if (this.UserCode5ValueSpecified)
                {
                    return this.UserCode5Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UserCode5Value = value.GetValueOrDefault();
                this.UserCode5ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UserCode6", Order=293, Form=XmlSchemaForm.Unqualified)]
        public bool UserCode6Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UserCode6 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UserCode6ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UserCode6
        {
            get
            {
                if (this.UserCode6ValueSpecified)
                {
                    return this.UserCode6Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UserCode6Value = value.GetValueOrDefault();
                this.UserCode6ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UserCode7", Order=294, Form=XmlSchemaForm.Unqualified)]
        public bool UserCode7Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UserCode7 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UserCode7ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UserCode7
        {
            get
            {
                if (this.UserCode7ValueSpecified)
                {
                    return this.UserCode7Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UserCode7Value = value.GetValueOrDefault();
                this.UserCode7ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UserCode8", Order=295, Form=XmlSchemaForm.Unqualified)]
        public bool UserCode8Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UserCode8 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UserCode8ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UserCode8
        {
            get
            {
                if (this.UserCode8ValueSpecified)
                {
                    return this.UserCode8Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UserCode8Value = value.GetValueOrDefault();
                this.UserCode8ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UserCode9", Order=296, Form=XmlSchemaForm.Unqualified)]
        public bool UserCode9Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UserCode9 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UserCode9ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UserCode9
        {
            get
            {
                if (this.UserCode9ValueSpecified)
                {
                    return this.UserCode9Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UserCode9Value = value.GetValueOrDefault();
                this.UserCode9ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UserDate1", Order=297, Form=XmlSchemaForm.Unqualified)]
        public bool UserDate1Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UserDate1 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UserDate1ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UserDate1
        {
            get
            {
                if (this.UserDate1ValueSpecified)
                {
                    return this.UserDate1Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UserDate1Value = value.GetValueOrDefault();
                this.UserDate1ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UserDate10", Order=298, Form=XmlSchemaForm.Unqualified)]
        public bool UserDate10Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UserDate10 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UserDate10ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UserDate10
        {
            get
            {
                if (this.UserDate10ValueSpecified)
                {
                    return this.UserDate10Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UserDate10Value = value.GetValueOrDefault();
                this.UserDate10ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UserDate2", Order=299, Form=XmlSchemaForm.Unqualified)]
        public bool UserDate2Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UserDate2 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UserDate2ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UserDate2
        {
            get
            {
                if (this.UserDate2ValueSpecified)
                {
                    return this.UserDate2Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UserDate2Value = value.GetValueOrDefault();
                this.UserDate2ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UserDate3", Order=300, Form=XmlSchemaForm.Unqualified)]
        public bool UserDate3Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UserDate3 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UserDate3ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UserDate3
        {
            get
            {
                if (this.UserDate3ValueSpecified)
                {
                    return this.UserDate3Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UserDate3Value = value.GetValueOrDefault();
                this.UserDate3ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UserDate4", Order=301, Form=XmlSchemaForm.Unqualified)]
        public bool UserDate4Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UserDate4 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UserDate4ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UserDate4
        {
            get
            {
                if (this.UserDate4ValueSpecified)
                {
                    return this.UserDate4Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UserDate4Value = value.GetValueOrDefault();
                this.UserDate4ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UserDate5", Order=302, Form=XmlSchemaForm.Unqualified)]
        public bool UserDate5Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UserDate5 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UserDate5ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UserDate5
        {
            get
            {
                if (this.UserDate5ValueSpecified)
                {
                    return this.UserDate5Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UserDate5Value = value.GetValueOrDefault();
                this.UserDate5ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UserDate6", Order=303, Form=XmlSchemaForm.Unqualified)]
        public bool UserDate6Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UserDate6 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UserDate6ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UserDate6
        {
            get
            {
                if (this.UserDate6ValueSpecified)
                {
                    return this.UserDate6Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UserDate6Value = value.GetValueOrDefault();
                this.UserDate6ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UserDate7", Order=304, Form=XmlSchemaForm.Unqualified)]
        public bool UserDate7Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UserDate7 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UserDate7ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UserDate7
        {
            get
            {
                if (this.UserDate7ValueSpecified)
                {
                    return this.UserDate7Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UserDate7Value = value.GetValueOrDefault();
                this.UserDate7ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UserDate8", Order=305, Form=XmlSchemaForm.Unqualified)]
        public bool UserDate8Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UserDate8 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UserDate8ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UserDate8
        {
            get
            {
                if (this.UserDate8ValueSpecified)
                {
                    return this.UserDate8Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UserDate8Value = value.GetValueOrDefault();
                this.UserDate8ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UserDate9", Order=306, Form=XmlSchemaForm.Unqualified)]
        public bool UserDate9Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UserDate9 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UserDate9ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UserDate9
        {
            get
            {
                if (this.UserDate9ValueSpecified)
                {
                    return this.UserDate9Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UserDate9Value = value.GetValueOrDefault();
                this.UserDate9ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UserNumber1", Order=307, Form=XmlSchemaForm.Unqualified)]
        public bool UserNumber1Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UserNumber1 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UserNumber1ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UserNumber1
        {
            get
            {
                if (this.UserNumber1ValueSpecified)
                {
                    return this.UserNumber1Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UserNumber1Value = value.GetValueOrDefault();
                this.UserNumber1ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UserNumber2", Order=308, Form=XmlSchemaForm.Unqualified)]
        public bool UserNumber2Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UserNumber2 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UserNumber2ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UserNumber2
        {
            get
            {
                if (this.UserNumber2ValueSpecified)
                {
                    return this.UserNumber2Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UserNumber2Value = value.GetValueOrDefault();
                this.UserNumber2ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UserQueue", Order=309, Form=XmlSchemaForm.Unqualified)]
        public bool UserQueueValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UserQueue property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UserQueueValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UserQueue
        {
            get
            {
                if (this.UserQueueValueSpecified)
                {
                    return this.UserQueueValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UserQueueValue = value.GetValueOrDefault();
                this.UserQueueValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UserRate1", Order=310, Form=XmlSchemaForm.Unqualified)]
        public bool UserRate1Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UserRate1 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UserRate1ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UserRate1
        {
            get
            {
                if (this.UserRate1ValueSpecified)
                {
                    return this.UserRate1Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UserRate1Value = value.GetValueOrDefault();
                this.UserRate1ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UserRate2", Order=311, Form=XmlSchemaForm.Unqualified)]
        public bool UserRate2Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UserRate2 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UserRate2ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UserRate2
        {
            get
            {
                if (this.UserRate2ValueSpecified)
                {
                    return this.UserRate2Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UserRate2Value = value.GetValueOrDefault();
                this.UserRate2ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Vin", Order=312, Form=XmlSchemaForm.Unqualified)]
        public bool VinValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Vin property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool VinValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Vin
        {
            get
            {
                if (this.VinValueSpecified)
                {
                    return this.VinValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.VinValue = value.GetValueOrDefault();
                this.VinValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("Version_1", Order=313, Form=XmlSchemaForm.Unqualified)]
        public AccountService.VersionType Version1 { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<XmlElement> _any;
        
        [XmlAnyElementAttribute(Order=314)]
        public Collection<XmlElement> Any
        {
            get
            {
                return _any;
            }
            set
            {
                _any = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return ((this.Any != null) 
                            && (this.Any.Count != 0));
            }
        }
    }
}
