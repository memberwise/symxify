//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 2.1.1182.0 using the following command:
// xscgen C:\Users\tbuese\Desktop\Symxchange\AccountService/*.xsd --sf --un --uc --order --cn -0 --collectionSettersMode=Public -o C:\Users\tbuese\Desktop\Symxchange\AccountService\generated-output -n AccountService
namespace AccountService
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.Diagnostics;
    using System.Xml;
    using System.Xml.Schema;
    using System.Xml.Serialization;
    
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1182.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("LoanEscrowFields", Namespace="http://www.symxchange.generated.symitar.com/crud/account/dto/retrieve")]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    [XmlRootAttribute("LoanEscrowFields", Namespace="http://www.symxchange.generated.symitar.com/crud/account/dto/retrieve")]
    public partial class LoanEscrowFields
    {
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Day1", Order=0, Form=XmlSchemaForm.Unqualified)]
        public bool Day1Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Day1 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool Day1ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Day1
        {
            get
            {
                if (this.Day1ValueSpecified)
                {
                    return this.Day1Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.Day1Value = value.GetValueOrDefault();
                this.Day1ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Day2", Order=1, Form=XmlSchemaForm.Unqualified)]
        public bool Day2Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Day2 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool Day2ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Day2
        {
            get
            {
                if (this.Day2ValueSpecified)
                {
                    return this.Day2Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.Day2Value = value.GetValueOrDefault();
                this.Day2ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DistribFrequency", Order=2, Form=XmlSchemaForm.Unqualified)]
        public bool DistribFrequencyValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DistribFrequency property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DistribFrequencyValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DistribFrequency
        {
            get
            {
                if (this.DistribFrequencyValueSpecified)
                {
                    return this.DistribFrequencyValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DistribFrequencyValue = value.GetValueOrDefault();
                this.DistribFrequencyValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("EscrowType", Order=3, Form=XmlSchemaForm.Unqualified)]
        public bool EscrowTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EscrowType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool EscrowTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> EscrowType
        {
            get
            {
                if (this.EscrowTypeValueSpecified)
                {
                    return this.EscrowTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EscrowTypeValue = value.GetValueOrDefault();
                this.EscrowTypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ExpirationDate", Order=4, Form=XmlSchemaForm.Unqualified)]
        public bool ExpirationDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ExpirationDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ExpirationDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ExpirationDate
        {
            get
            {
                if (this.ExpirationDateValueSpecified)
                {
                    return this.ExpirationDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ExpirationDateValue = value.GetValueOrDefault();
                this.ExpirationDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("FloodInsTracking", Order=5, Form=XmlSchemaForm.Unqualified)]
        public bool FloodInsTrackingValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FloodInsTracking property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FloodInsTrackingValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> FloodInsTracking
        {
            get
            {
                if (this.FloodInsTrackingValueSpecified)
                {
                    return this.FloodInsTrackingValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FloodInsTrackingValue = value.GetValueOrDefault();
                this.FloodInsTrackingValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ForcedPlacedIns", Order=6, Form=XmlSchemaForm.Unqualified)]
        public bool ForcedPlacedInsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ForcedPlacedIns property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ForcedPlacedInsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ForcedPlacedIns
        {
            get
            {
                if (this.ForcedPlacedInsValueSpecified)
                {
                    return this.ForcedPlacedInsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ForcedPlacedInsValue = value.GetValueOrDefault();
                this.ForcedPlacedInsValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InvoiceNumber", Order=7, Form=XmlSchemaForm.Unqualified)]
        public bool InvoiceNumberValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InvoiceNumber property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InvoiceNumberValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InvoiceNumber
        {
            get
            {
                if (this.InvoiceNumberValueSpecified)
                {
                    return this.InvoiceNumberValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InvoiceNumberValue = value.GetValueOrDefault();
                this.InvoiceNumberValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LastAmtNeededPmt", Order=8, Form=XmlSchemaForm.Unqualified)]
        public bool LastAmtNeededPmtValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LastAmtNeededPmt property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LastAmtNeededPmtValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LastAmtNeededPmt
        {
            get
            {
                if (this.LastAmtNeededPmtValueSpecified)
                {
                    return this.LastAmtNeededPmtValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LastAmtNeededPmtValue = value.GetValueOrDefault();
                this.LastAmtNeededPmtValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LastDateAnaCalc", Order=9, Form=XmlSchemaForm.Unqualified)]
        public bool LastDateAnaCalcValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LastDateAnaCalc property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LastDateAnaCalcValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LastDateAnaCalc
        {
            get
            {
                if (this.LastDateAnaCalcValueSpecified)
                {
                    return this.LastDateAnaCalcValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LastDateAnaCalcValue = value.GetValueOrDefault();
                this.LastDateAnaCalcValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LastDisbursAmt", Order=10, Form=XmlSchemaForm.Unqualified)]
        public bool LastDisbursAmtValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LastDisbursAmt property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LastDisbursAmtValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LastDisbursAmt
        {
            get
            {
                if (this.LastDisbursAmtValueSpecified)
                {
                    return this.LastDisbursAmtValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LastDisbursAmtValue = value.GetValueOrDefault();
                this.LastDisbursAmtValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LastDisbursDate", Order=11, Form=XmlSchemaForm.Unqualified)]
        public bool LastDisbursDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LastDisbursDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LastDisbursDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LastDisbursDate
        {
            get
            {
                if (this.LastDisbursDateValueSpecified)
                {
                    return this.LastDisbursDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LastDisbursDateValue = value.GetValueOrDefault();
                this.LastDisbursDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LastDisbursFreq", Order=12, Form=XmlSchemaForm.Unqualified)]
        public bool LastDisbursFreqValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LastDisbursFreq property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LastDisbursFreqValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LastDisbursFreq
        {
            get
            {
                if (this.LastDisbursFreqValueSpecified)
                {
                    return this.LastDisbursFreqValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LastDisbursFreqValue = value.GetValueOrDefault();
                this.LastDisbursFreqValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LastDisburseDay1", Order=13, Form=XmlSchemaForm.Unqualified)]
        public bool LastDisburseDay1Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LastDisburseDay1 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LastDisburseDay1ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LastDisburseDay1
        {
            get
            {
                if (this.LastDisburseDay1ValueSpecified)
                {
                    return this.LastDisburseDay1Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LastDisburseDay1Value = value.GetValueOrDefault();
                this.LastDisburseDay1ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LastDisburseDay2", Order=14, Form=XmlSchemaForm.Unqualified)]
        public bool LastDisburseDay2Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LastDisburseDay2 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LastDisburseDay2ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LastDisburseDay2
        {
            get
            {
                if (this.LastDisburseDay2ValueSpecified)
                {
                    return this.LastDisburseDay2Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LastDisburseDay2Value = value.GetValueOrDefault();
                this.LastDisburseDay2ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LastDistribAmount", Order=15, Form=XmlSchemaForm.Unqualified)]
        public bool LastDistribAmountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LastDistribAmount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LastDistribAmountValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LastDistribAmount
        {
            get
            {
                if (this.LastDistribAmountValueSpecified)
                {
                    return this.LastDistribAmountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LastDistribAmountValue = value.GetValueOrDefault();
                this.LastDistribAmountValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LastDistribDate", Order=16, Form=XmlSchemaForm.Unqualified)]
        public bool LastDistribDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LastDistribDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LastDistribDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LastDistribDate
        {
            get
            {
                if (this.LastDistribDateValueSpecified)
                {
                    return this.LastDistribDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LastDistribDateValue = value.GetValueOrDefault();
                this.LastDistribDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LastExpirationDate", Order=17, Form=XmlSchemaForm.Unqualified)]
        public bool LastExpirationDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LastExpirationDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LastExpirationDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LastExpirationDate
        {
            get
            {
                if (this.LastExpirationDateValueSpecified)
                {
                    return this.LastExpirationDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LastExpirationDateValue = value.GetValueOrDefault();
                this.LastExpirationDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LastMonthCushion", Order=18, Form=XmlSchemaForm.Unqualified)]
        public bool LastMonthCushionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LastMonthCushion property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LastMonthCushionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LastMonthCushion
        {
            get
            {
                if (this.LastMonthCushionValueSpecified)
                {
                    return this.LastMonthCushionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LastMonthCushionValue = value.GetValueOrDefault();
                this.LastMonthCushionValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LastNbrPmtsDue", Order=19, Form=XmlSchemaForm.Unqualified)]
        public bool LastNbrPmtsDueValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LastNbrPmtsDue property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LastNbrPmtsDueValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LastNbrPmtsDue
        {
            get
            {
                if (this.LastNbrPmtsDueValueSpecified)
                {
                    return this.LastNbrPmtsDueValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LastNbrPmtsDueValue = value.GetValueOrDefault();
                this.LastNbrPmtsDueValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LastTotAnnDisburs", Order=20, Form=XmlSchemaForm.Unqualified)]
        public bool LastTotAnnDisbursValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LastTotAnnDisburs property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LastTotAnnDisbursValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LastTotAnnDisburs
        {
            get
            {
                if (this.LastTotAnnDisbursValueSpecified)
                {
                    return this.LastTotAnnDisbursValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LastTotAnnDisbursValue = value.GetValueOrDefault();
                this.LastTotAnnDisbursValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LegalDescription", Order=21, Form=XmlSchemaForm.Unqualified)]
        public bool LegalDescriptionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LegalDescription property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LegalDescriptionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LegalDescription
        {
            get
            {
                if (this.LegalDescriptionValueSpecified)
                {
                    return this.LegalDescriptionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LegalDescriptionValue = value.GetValueOrDefault();
                this.LegalDescriptionValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Locator", Order=22, Form=XmlSchemaForm.Unqualified)]
        public bool LocatorValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Locator property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LocatorValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Locator
        {
            get
            {
                if (this.LocatorValueSpecified)
                {
                    return this.LocatorValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LocatorValue = value.GetValueOrDefault();
                this.LocatorValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("NextDistribAmount", Order=23, Form=XmlSchemaForm.Unqualified)]
        public bool NextDistribAmountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NextDistribAmount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool NextDistribAmountValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> NextDistribAmount
        {
            get
            {
                if (this.NextDistribAmountValueSpecified)
                {
                    return this.NextDistribAmountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NextDistribAmountValue = value.GetValueOrDefault();
                this.NextDistribAmountValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("NextDistribDate", Order=24, Form=XmlSchemaForm.Unqualified)]
        public bool NextDistribDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NextDistribDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool NextDistribDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> NextDistribDate
        {
            get
            {
                if (this.NextDistribDateValueSpecified)
                {
                    return this.NextDistribDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NextDistribDateValue = value.GetValueOrDefault();
                this.NextDistribDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ParcelNumber", Order=25, Form=XmlSchemaForm.Unqualified)]
        public bool ParcelNumberValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ParcelNumber property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ParcelNumberValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ParcelNumber
        {
            get
            {
                if (this.ParcelNumberValueSpecified)
                {
                    return this.ParcelNumberValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ParcelNumberValue = value.GetValueOrDefault();
                this.ParcelNumberValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PayDividend", Order=26, Form=XmlSchemaForm.Unqualified)]
        public bool PayDividendValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PayDividend property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PayDividendValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PayDividend
        {
            get
            {
                if (this.PayDividendValueSpecified)
                {
                    return this.PayDividendValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PayDividendValue = value.GetValueOrDefault();
                this.PayDividendValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PaymentPortion", Order=27, Form=XmlSchemaForm.Unqualified)]
        public bool PaymentPortionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PaymentPortion property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PaymentPortionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PaymentPortion
        {
            get
            {
                if (this.PaymentPortionValueSpecified)
                {
                    return this.PaymentPortionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PaymentPortionValue = value.GetValueOrDefault();
                this.PaymentPortionValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PmiCancelDate", Order=28, Form=XmlSchemaForm.Unqualified)]
        public bool PmiCancelDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PmiCancelDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PmiCancelDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PmiCancelDate
        {
            get
            {
                if (this.PmiCancelDateValueSpecified)
                {
                    return this.PmiCancelDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PmiCancelDateValue = value.GetValueOrDefault();
                this.PmiCancelDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PmiCancelNotice", Order=29, Form=XmlSchemaForm.Unqualified)]
        public bool PmiCancelNoticeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PmiCancelNotice property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PmiCancelNoticeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PmiCancelNotice
        {
            get
            {
                if (this.PmiCancelNoticeValueSpecified)
                {
                    return this.PmiCancelNoticeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PmiCancelNoticeValue = value.GetValueOrDefault();
                this.PmiCancelNoticeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PmiDisclosureDate", Order=30, Form=XmlSchemaForm.Unqualified)]
        public bool PmiDisclosureDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PmiDisclosureDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PmiDisclosureDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PmiDisclosureDate
        {
            get
            {
                if (this.PmiDisclosureDateValueSpecified)
                {
                    return this.PmiDisclosureDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PmiDisclosureDateValue = value.GetValueOrDefault();
                this.PmiDisclosureDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PmiEligNotices", Order=31, Form=XmlSchemaForm.Unqualified)]
        public bool PmiEligNoticesValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PmiEligNotices property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PmiEligNoticesValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PmiEligNotices
        {
            get
            {
                if (this.PmiEligNoticesValueSpecified)
                {
                    return this.PmiEligNoticesValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PmiEligNoticesValue = value.GetValueOrDefault();
                this.PmiEligNoticesValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PmiMidTermDate", Order=32, Form=XmlSchemaForm.Unqualified)]
        public bool PmiMidTermDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PmiMidTermDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PmiMidTermDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PmiMidTermDate
        {
            get
            {
                if (this.PmiMidTermDateValueSpecified)
                {
                    return this.PmiMidTermDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PmiMidTermDateValue = value.GetValueOrDefault();
                this.PmiMidTermDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PmiTermDate", Order=33, Form=XmlSchemaForm.Unqualified)]
        public bool PmiTermDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PmiTermDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PmiTermDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PmiTermDate
        {
            get
            {
                if (this.PmiTermDateValueSpecified)
                {
                    return this.PmiTermDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PmiTermDateValue = value.GetValueOrDefault();
                this.PmiTermDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PolicyAmount", Order=34, Form=XmlSchemaForm.Unqualified)]
        public bool PolicyAmountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PolicyAmount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PolicyAmountValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PolicyAmount
        {
            get
            {
                if (this.PolicyAmountValueSpecified)
                {
                    return this.PolicyAmountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PolicyAmountValue = value.GetValueOrDefault();
                this.PolicyAmountValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PolicyExpireDate", Order=35, Form=XmlSchemaForm.Unqualified)]
        public bool PolicyExpireDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PolicyExpireDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PolicyExpireDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PolicyExpireDate
        {
            get
            {
                if (this.PolicyExpireDateValueSpecified)
                {
                    return this.PolicyExpireDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PolicyExpireDateValue = value.GetValueOrDefault();
                this.PolicyExpireDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PolicyNumber", Order=36, Form=XmlSchemaForm.Unqualified)]
        public bool PolicyNumberValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PolicyNumber property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PolicyNumberValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PolicyNumber
        {
            get
            {
                if (this.PolicyNumberValueSpecified)
                {
                    return this.PolicyNumberValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PolicyNumberValue = value.GetValueOrDefault();
                this.PolicyNumberValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PolicyOrigDate", Order=37, Form=XmlSchemaForm.Unqualified)]
        public bool PolicyOrigDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PolicyOrigDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PolicyOrigDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PolicyOrigDate
        {
            get
            {
                if (this.PolicyOrigDateValueSpecified)
                {
                    return this.PolicyOrigDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PolicyOrigDateValue = value.GetValueOrDefault();
                this.PolicyOrigDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PolicyOwner", Order=38, Form=XmlSchemaForm.Unqualified)]
        public bool PolicyOwnerValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PolicyOwner property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PolicyOwnerValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PolicyOwner
        {
            get
            {
                if (this.PolicyOwnerValueSpecified)
                {
                    return this.PolicyOwnerValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PolicyOwnerValue = value.GetValueOrDefault();
                this.PolicyOwnerValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrevAmtNeededPmt", Order=39, Form=XmlSchemaForm.Unqualified)]
        public bool PrevAmtNeededPmtValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrevAmtNeededPmt property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrevAmtNeededPmtValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrevAmtNeededPmt
        {
            get
            {
                if (this.PrevAmtNeededPmtValueSpecified)
                {
                    return this.PrevAmtNeededPmtValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrevAmtNeededPmtValue = value.GetValueOrDefault();
                this.PrevAmtNeededPmtValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrevDateAnaCalc", Order=40, Form=XmlSchemaForm.Unqualified)]
        public bool PrevDateAnaCalcValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrevDateAnaCalc property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrevDateAnaCalcValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrevDateAnaCalc
        {
            get
            {
                if (this.PrevDateAnaCalcValueSpecified)
                {
                    return this.PrevDateAnaCalcValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrevDateAnaCalcValue = value.GetValueOrDefault();
                this.PrevDateAnaCalcValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrevDisbursAmt", Order=41, Form=XmlSchemaForm.Unqualified)]
        public bool PrevDisbursAmtValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrevDisbursAmt property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrevDisbursAmtValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrevDisbursAmt
        {
            get
            {
                if (this.PrevDisbursAmtValueSpecified)
                {
                    return this.PrevDisbursAmtValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrevDisbursAmtValue = value.GetValueOrDefault();
                this.PrevDisbursAmtValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrevDisbursDate", Order=42, Form=XmlSchemaForm.Unqualified)]
        public bool PrevDisbursDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrevDisbursDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrevDisbursDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrevDisbursDate
        {
            get
            {
                if (this.PrevDisbursDateValueSpecified)
                {
                    return this.PrevDisbursDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrevDisbursDateValue = value.GetValueOrDefault();
                this.PrevDisbursDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrevDisbursFreq", Order=43, Form=XmlSchemaForm.Unqualified)]
        public bool PrevDisbursFreqValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrevDisbursFreq property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrevDisbursFreqValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrevDisbursFreq
        {
            get
            {
                if (this.PrevDisbursFreqValueSpecified)
                {
                    return this.PrevDisbursFreqValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrevDisbursFreqValue = value.GetValueOrDefault();
                this.PrevDisbursFreqValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrevDisburseDay1", Order=44, Form=XmlSchemaForm.Unqualified)]
        public bool PrevDisburseDay1Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrevDisburseDay1 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrevDisburseDay1ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrevDisburseDay1
        {
            get
            {
                if (this.PrevDisburseDay1ValueSpecified)
                {
                    return this.PrevDisburseDay1Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrevDisburseDay1Value = value.GetValueOrDefault();
                this.PrevDisburseDay1ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrevDisburseDay2", Order=45, Form=XmlSchemaForm.Unqualified)]
        public bool PrevDisburseDay2Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrevDisburseDay2 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrevDisburseDay2ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrevDisburseDay2
        {
            get
            {
                if (this.PrevDisburseDay2ValueSpecified)
                {
                    return this.PrevDisburseDay2Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrevDisburseDay2Value = value.GetValueOrDefault();
                this.PrevDisburseDay2ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrevExpirationDate", Order=46, Form=XmlSchemaForm.Unqualified)]
        public bool PrevExpirationDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrevExpirationDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrevExpirationDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrevExpirationDate
        {
            get
            {
                if (this.PrevExpirationDateValueSpecified)
                {
                    return this.PrevExpirationDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrevExpirationDateValue = value.GetValueOrDefault();
                this.PrevExpirationDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrevMonthCushion", Order=47, Form=XmlSchemaForm.Unqualified)]
        public bool PrevMonthCushionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrevMonthCushion property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrevMonthCushionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrevMonthCushion
        {
            get
            {
                if (this.PrevMonthCushionValueSpecified)
                {
                    return this.PrevMonthCushionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrevMonthCushionValue = value.GetValueOrDefault();
                this.PrevMonthCushionValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrevNbrPmtsDue", Order=48, Form=XmlSchemaForm.Unqualified)]
        public bool PrevNbrPmtsDueValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrevNbrPmtsDue property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrevNbrPmtsDueValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrevNbrPmtsDue
        {
            get
            {
                if (this.PrevNbrPmtsDueValueSpecified)
                {
                    return this.PrevNbrPmtsDueValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrevNbrPmtsDueValue = value.GetValueOrDefault();
                this.PrevNbrPmtsDueValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrevTotAnnDisburs", Order=49, Form=XmlSchemaForm.Unqualified)]
        public bool PrevTotAnnDisbursValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrevTotAnnDisburs property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrevTotAnnDisbursValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrevTotAnnDisburs
        {
            get
            {
                if (this.PrevTotAnnDisbursValueSpecified)
                {
                    return this.PrevTotAnnDisbursValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrevTotAnnDisbursValue = value.GetValueOrDefault();
                this.PrevTotAnnDisbursValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrintDistribNotice", Order=50, Form=XmlSchemaForm.Unqualified)]
        public bool PrintDistribNoticeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrintDistribNotice property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrintDistribNoticeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrintDistribNotice
        {
            get
            {
                if (this.PrintDistribNoticeValueSpecified)
                {
                    return this.PrintDistribNoticeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrintDistribNoticeValue = value.GetValueOrDefault();
                this.PrintDistribNoticeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("RealEstateOwner", Order=51, Form=XmlSchemaForm.Unqualified)]
        public bool RealEstateOwnerValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RealEstateOwner property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool RealEstateOwnerValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> RealEstateOwner
        {
            get
            {
                if (this.RealEstateOwnerValueSpecified)
                {
                    return this.RealEstateOwnerValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RealEstateOwnerValue = value.GetValueOrDefault();
                this.RealEstateOwnerValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("RecordChangeDate", Order=52, Form=XmlSchemaForm.Unqualified)]
        public bool RecordChangeDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RecordChangeDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool RecordChangeDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> RecordChangeDate
        {
            get
            {
                if (this.RecordChangeDateValueSpecified)
                {
                    return this.RecordChangeDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RecordChangeDateValue = value.GetValueOrDefault();
                this.RecordChangeDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SavedAdjustPayment", Order=53, Form=XmlSchemaForm.Unqualified)]
        public bool SavedAdjustPaymentValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SavedAdjustPayment property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SavedAdjustPaymentValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SavedAdjustPayment
        {
            get
            {
                if (this.SavedAdjustPaymentValueSpecified)
                {
                    return this.SavedAdjustPaymentValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SavedAdjustPaymentValue = value.GetValueOrDefault();
                this.SavedAdjustPaymentValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TaxRefNumber", Order=54, Form=XmlSchemaForm.Unqualified)]
        public bool TaxRefNumberValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TaxRefNumber property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TaxRefNumberValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TaxRefNumber
        {
            get
            {
                if (this.TaxRefNumberValueSpecified)
                {
                    return this.TaxRefNumberValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TaxRefNumberValue = value.GetValueOrDefault();
                this.TaxRefNumberValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TrackingOnly", Order=55, Form=XmlSchemaForm.Unqualified)]
        public bool TrackingOnlyValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TrackingOnly property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TrackingOnlyValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TrackingOnly
        {
            get
            {
                if (this.TrackingOnlyValueSpecified)
                {
                    return this.TrackingOnlyValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TrackingOnlyValue = value.GetValueOrDefault();
                this.TrackingOnlyValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("VendorName", Order=56, Form=XmlSchemaForm.Unqualified)]
        public bool VendorNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the VendorName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool VendorNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> VendorName
        {
            get
            {
                if (this.VendorNameValueSpecified)
                {
                    return this.VendorNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.VendorNameValue = value.GetValueOrDefault();
                this.VendorNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("VendorNumber", Order=57, Form=XmlSchemaForm.Unqualified)]
        public bool VendorNumberValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the VendorNumber property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool VendorNumberValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> VendorNumber
        {
            get
            {
                if (this.VendorNumberValueSpecified)
                {
                    return this.VendorNumberValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.VendorNumberValue = value.GetValueOrDefault();
                this.VendorNumberValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("Version_1", Order=58, Form=XmlSchemaForm.Unqualified)]
        public AccountService.VersionType Version1 { get; set; }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PmiCancelReason", Order=59, Form=XmlSchemaForm.Unqualified)]
        public bool PmiCancelReasonValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PmiCancelReason property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PmiCancelReasonValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PmiCancelReason
        {
            get
            {
                if (this.PmiCancelReasonValueSpecified)
                {
                    return this.PmiCancelReasonValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PmiCancelReasonValue = value.GetValueOrDefault();
                this.PmiCancelReasonValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("Version_2", Order=60, Form=XmlSchemaForm.Unqualified)]
        public AccountService.VersionType Version2 { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<XmlElement> _any;
        
        [XmlAnyElementAttribute(Order=61)]
        public Collection<XmlElement> Any
        {
            get
            {
                return _any;
            }
            set
            {
                _any = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return ((this.Any != null) 
                            && (this.Any.Count != 0));
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="LoanEscrowFields" /> class.</para>
        /// </summary>
        public LoanEscrowFields()
        {
            this._any = new Collection<XmlElement>();
        }
    }
}
