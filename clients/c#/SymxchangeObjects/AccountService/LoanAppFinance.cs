//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 2.1.1182.0 using the following command:
// xscgen C:\Users\tbuese\Desktop\Symxchange\AccountService/*.xsd --sf --un --uc --order --cn -0 --collectionSettersMode=Public -o C:\Users\tbuese\Desktop\Symxchange\AccountService\generated-output -n AccountService
namespace AccountService
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.Diagnostics;
    using System.Xml;
    using System.Xml.Schema;
    using System.Xml.Serialization;
    
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1182.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("LoanAppFinance", Namespace="http://www.symxchange.generated.symitar.com/crud/account/dto/retrieve")]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    [XmlRootAttribute("LoanAppFinance", Namespace="http://www.symxchange.generated.symitar.com/crud/account/dto/retrieve")]
    public partial class LoanAppFinance
    {
        
        [XmlElementAttribute("Address", Order=0, Form=XmlSchemaForm.Unqualified)]
        public string Address { get; set; }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AssetStatus", Order=1, Form=XmlSchemaForm.Unqualified)]
        public short AssetStatusValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AssetStatus property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AssetStatusValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> AssetStatus
        {
            get
            {
                if (this.AssetStatusValueSpecified)
                {
                    return this.AssetStatusValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AssetStatusValue = value.GetValueOrDefault();
                this.AssetStatusValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AssetValue", Order=2, Form=XmlSchemaForm.Unqualified)]
        public decimal AssetValueValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AssetValue property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AssetValueValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<decimal> AssetValue
        {
            get
            {
                if (this.AssetValueValueSpecified)
                {
                    return this.AssetValueValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AssetValueValue = value.GetValueOrDefault();
                this.AssetValueValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditLimit", Order=3, Form=XmlSchemaForm.Unqualified)]
        public decimal CreditLimitValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditLimit property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditLimitValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<decimal> CreditLimit
        {
            get
            {
                if (this.CreditLimitValueSpecified)
                {
                    return this.CreditLimitValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditLimitValue = value.GetValueOrDefault();
                this.CreditLimitValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DebtRatioUseCode", Order=4, Form=XmlSchemaForm.Unqualified)]
        public short DebtRatioUseCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DebtRatioUseCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DebtRatioUseCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> DebtRatioUseCode
        {
            get
            {
                if (this.DebtRatioUseCodeValueSpecified)
                {
                    return this.DebtRatioUseCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DebtRatioUseCodeValue = value.GetValueOrDefault();
                this.DebtRatioUseCodeValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("Description", Order=5, Form=XmlSchemaForm.Unqualified)]
        public string Description { get; set; }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InterestRate", Order=6, Form=XmlSchemaForm.Unqualified)]
        public decimal InterestRateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InterestRate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InterestRateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<decimal> InterestRate
        {
            get
            {
                if (this.InterestRateValueSpecified)
                {
                    return this.InterestRateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InterestRateValue = value.GetValueOrDefault();
                this.InterestRateValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("ItemType", Order=7, Form=XmlSchemaForm.Unqualified)]
        public string ItemType { get; set; }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LiabilityBalance", Order=8, Form=XmlSchemaForm.Unqualified)]
        public decimal LiabilityBalanceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LiabilityBalance property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LiabilityBalanceValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<decimal> LiabilityBalance
        {
            get
            {
                if (this.LiabilityBalanceValueSpecified)
                {
                    return this.LiabilityBalanceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LiabilityBalanceValue = value.GetValueOrDefault();
                this.LiabilityBalanceValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LiabilityStatus", Order=9, Form=XmlSchemaForm.Unqualified)]
        public short LiabilityStatusValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LiabilityStatus property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LiabilityStatusValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> LiabilityStatus
        {
            get
            {
                if (this.LiabilityStatusValueSpecified)
                {
                    return this.LiabilityStatusValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LiabilityStatusValue = value.GetValueOrDefault();
                this.LiabilityStatusValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Locator", Order=10, Form=XmlSchemaForm.Unqualified)]
        public int LocatorValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Locator property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LocatorValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<int> Locator
        {
            get
            {
                if (this.LocatorValueSpecified)
                {
                    return this.LocatorValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LocatorValue = value.GetValueOrDefault();
                this.LocatorValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MonthlyExpense", Order=11, Form=XmlSchemaForm.Unqualified)]
        public decimal MonthlyExpenseValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MonthlyExpense property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MonthlyExpenseValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<decimal> MonthlyExpense
        {
            get
            {
                if (this.MonthlyExpenseValueSpecified)
                {
                    return this.MonthlyExpenseValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MonthlyExpenseValue = value.GetValueOrDefault();
                this.MonthlyExpenseValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MonthlyIncome", Order=12, Form=XmlSchemaForm.Unqualified)]
        public decimal MonthlyIncomeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MonthlyIncome property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MonthlyIncomeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<decimal> MonthlyIncome
        {
            get
            {
                if (this.MonthlyIncomeValueSpecified)
                {
                    return this.MonthlyIncomeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MonthlyIncomeValue = value.GetValueOrDefault();
                this.MonthlyIncomeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OwnerCode", Order=13, Form=XmlSchemaForm.Unqualified)]
        public short OwnerCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OwnerCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OwnerCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> OwnerCode
        {
            get
            {
                if (this.OwnerCodeValueSpecified)
                {
                    return this.OwnerCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OwnerCodeValue = value.GetValueOrDefault();
                this.OwnerCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("RecordChangeDate", Order=14, Form=XmlSchemaForm.Unqualified, DataType="date")]
        public DateTime RecordChangeDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RecordChangeDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool RecordChangeDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<DateTime> RecordChangeDate
        {
            get
            {
                if (this.RecordChangeDateValueSpecified)
                {
                    return this.RecordChangeDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RecordChangeDateValue = value.GetValueOrDefault();
                this.RecordChangeDateValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("Reference", Order=15, Form=XmlSchemaForm.Unqualified)]
        public string Reference { get; set; }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Type", Order=16, Form=XmlSchemaForm.Unqualified)]
        public short TypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Type property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> Type
        {
            get
            {
                if (this.TypeValueSpecified)
                {
                    return this.TypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TypeValue = value.GetValueOrDefault();
                this.TypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UserPledgeCode", Order=17, Form=XmlSchemaForm.Unqualified)]
        public short UserPledgeCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UserPledgeCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UserPledgeCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> UserPledgeCode
        {
            get
            {
                if (this.UserPledgeCodeValueSpecified)
                {
                    return this.UserPledgeCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UserPledgeCodeValue = value.GetValueOrDefault();
                this.UserPledgeCodeValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("Version_1", Order=18, Form=XmlSchemaForm.Unqualified)]
        public AccountService.VersionType Version1 { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<XmlElement> _any;
        
        [XmlAnyElementAttribute(Order=19)]
        public Collection<XmlElement> Any
        {
            get
            {
                return _any;
            }
            set
            {
                _any = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return ((this.Any != null) 
                            && (this.Any.Count != 0));
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="LoanAppFinance" /> class.</para>
        /// </summary>
        public LoanAppFinance()
        {
            this._any = new Collection<XmlElement>();
        }
    }
}
