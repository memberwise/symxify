//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 2.1.1182.0 using the following command:
// xscgen C:\Users\tbuese\Desktop\Symxchange\AccountService/*.xsd --sf --un --uc --order --cn -0 --collectionSettersMode=Public -o C:\Users\tbuese\Desktop\Symxchange\AccountService\generated-output -n AccountService
namespace AccountService
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.Diagnostics;
    using System.Xml;
    using System.Xml.Schema;
    using System.Xml.Serialization;
    
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1182.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("CredRepFields", Namespace="http://www.symxchange.generated.symitar.com/crud/account/dto/retrieve")]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class CredRepFields
    {
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AccessPin", Order=0, Form=XmlSchemaForm.Unqualified)]
        public bool AccessPinValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AccessPin property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AccessPinValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AccessPin
        {
            get
            {
                if (this.AccessPinValueSpecified)
                {
                    return this.AccessPinValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AccessPinValue = value.GetValueOrDefault();
                this.AccessPinValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ActionText", Order=1, Form=XmlSchemaForm.Unqualified)]
        public bool ActionTextValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ActionText property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ActionTextValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ActionText
        {
            get
            {
                if (this.ActionTextValueSpecified)
                {
                    return this.ActionTextValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ActionTextValue = value.GetValueOrDefault();
                this.ActionTextValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ActualPaymentAmt", Order=2, Form=XmlSchemaForm.Unqualified)]
        public bool ActualPaymentAmtValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ActualPaymentAmt property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ActualPaymentAmtValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ActualPaymentAmt
        {
            get
            {
                if (this.ActualPaymentAmtValueSpecified)
                {
                    return this.ActualPaymentAmtValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ActualPaymentAmtValue = value.GetValueOrDefault();
                this.ActualPaymentAmtValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AddrAnalysisOid", Order=3, Form=XmlSchemaForm.Unqualified)]
        public bool AddrAnalysisOidValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AddrAnalysisOid property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AddrAnalysisOidValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AddrAnalysisOid
        {
            get
            {
                if (this.AddrAnalysisOidValueSpecified)
                {
                    return this.AddrAnalysisOidValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AddrAnalysisOidValue = value.GetValueOrDefault();
                this.AddrAnalysisOidValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AddrVerifyAcct", Order=4, Form=XmlSchemaForm.Unqualified)]
        public bool AddrVerifyAcctValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AddrVerifyAcct property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AddrVerifyAcctValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AddrVerifyAcct
        {
            get
            {
                if (this.AddrVerifyAcctValueSpecified)
                {
                    return this.AddrVerifyAcctValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AddrVerifyAcctValue = value.GetValueOrDefault();
                this.AddrVerifyAcctValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _alias;
        
        [XmlElementAttribute("Alias", Order=5, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> Alias
        {
            get
            {
                return _alias;
            }
            set
            {
                _alias = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Alias collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool AliasSpecified
        {
            get
            {
                return ((this.Alias != null) 
                            && (this.Alias.Count != 0));
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="CredRepFields" /> class.</para>
        /// </summary>
        public CredRepFields()
        {
            this._alias = new Collection<short>();
            this._bre2Relation = new Collection<short>();
            this._chexTransId = new Collection<short>();
            this._dPower = new Collection<short>();
            this._decode = new Collection<short>();
            this._dep2Dependants = new Collection<short>();
            this._eqDecode = new Collection<short>();
            this._exp2Amount = new Collection<short>();
            this._exp2Freq = new Collection<short>();
            this._exp2OtherAmount = new Collection<short>();
            this._exp2OtherFreq = new Collection<short>();
            this._exp2ResidenceAmount = new Collection<short>();
            this._exp2ResidenceFreq = new Collection<short>();
            this._exp2ResidenceType = new Collection<short>();
            this._idNumber = new Collection<short>();
            this._idState = new Collection<short>();
            this._inc2OtherAmount = new Collection<short>();
            this._inc2OtherFreq = new Collection<short>();
            this._inc2SalaryAmount = new Collection<short>();
            this._inc2SalaryFreq = new Collection<short>();
            this._inc2TotalAmount = new Collection<short>();
            this._inc2TotalFreq = new Collection<short>();
            this._job2EmpPrevType = new Collection<short>();
            this._job2EmpType = new Collection<short>();
            this._job2Months = new Collection<short>();
            this._job2PrevMonths = new Collection<short>();
            this._job2PrevYears = new Collection<short>();
            this._job2Years = new Collection<short>();
            this._prdDecType10 = new Collection<short>();
            this._prdProductCode10 = new Collection<short>();
            this._redFlagComments = new Collection<short>();
            this._refNumber3 = new Collection<short>();
            this._res2Months = new Collection<short>();
            this._res2PrevMonths = new Collection<short>();
            this._res2PrevType = new Collection<short>();
            this._res2PrevYears = new Collection<short>();
            this._res2Type = new Collection<short>();
            this._res2Years = new Collection<short>();
            this._riskModel = new Collection<short>();
            this._scoreModel = new Collection<short>();
            this._ssnSearch = new Collection<short>();
            this._any = new Collection<XmlElement>();
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AppAlteredForged", Order=6, Form=XmlSchemaForm.Unqualified)]
        public bool AppAlteredForgedValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AppAlteredForged property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AppAlteredForgedValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AppAlteredForged
        {
            get
            {
                if (this.AppAlteredForgedValueSpecified)
                {
                    return this.AppAlteredForgedValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AppAlteredForgedValue = value.GetValueOrDefault();
                this.AppAlteredForgedValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AppearanceInconsistent", Order=7, Form=XmlSchemaForm.Unqualified)]
        public bool AppearanceInconsistentValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AppearanceInconsistent property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AppearanceInconsistentValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AppearanceInconsistent
        {
            get
            {
                if (this.AppearanceInconsistentValueSpecified)
                {
                    return this.AppearanceInconsistentValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AppearanceInconsistentValue = value.GetValueOrDefault();
                this.AppearanceInconsistentValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ArmAlert", Order=8, Form=XmlSchemaForm.Unqualified)]
        public bool ArmAlertValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ArmAlert property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ArmAlertValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ArmAlert
        {
            get
            {
                if (this.ArmAlertValueSpecified)
                {
                    return this.ArmAlertValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ArmAlertValue = value.GetValueOrDefault();
                this.ArmAlertValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AssociationCode", Order=9, Form=XmlSchemaForm.Unqualified)]
        public bool AssociationCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AssociationCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AssociationCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AssociationCode
        {
            get
            {
                if (this.AssociationCodeValueSpecified)
                {
                    return this.AssociationCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AssociationCodeValue = value.GetValueOrDefault();
                this.AssociationCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AutoCapCost", Order=10, Form=XmlSchemaForm.Unqualified)]
        public bool AutoCapCostValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AutoCapCost property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AutoCapCostValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AutoCapCost
        {
            get
            {
                if (this.AutoCapCostValueSpecified)
                {
                    return this.AutoCapCostValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AutoCapCostValue = value.GetValueOrDefault();
                this.AutoCapCostValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AutoDownPayment", Order=11, Form=XmlSchemaForm.Unqualified)]
        public bool AutoDownPaymentValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AutoDownPayment property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AutoDownPaymentValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AutoDownPayment
        {
            get
            {
                if (this.AutoDownPaymentValueSpecified)
                {
                    return this.AutoDownPaymentValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AutoDownPaymentValue = value.GetValueOrDefault();
                this.AutoDownPaymentValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AutoLeaseTerm", Order=12, Form=XmlSchemaForm.Unqualified)]
        public bool AutoLeaseTermValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AutoLeaseTerm property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AutoLeaseTermValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AutoLeaseTerm
        {
            get
            {
                if (this.AutoLeaseTermValueSpecified)
                {
                    return this.AutoLeaseTermValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AutoLeaseTermValue = value.GetValueOrDefault();
                this.AutoLeaseTermValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AutoLoanType", Order=13, Form=XmlSchemaForm.Unqualified)]
        public bool AutoLoanTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AutoLoanType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AutoLoanTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AutoLoanType
        {
            get
            {
                if (this.AutoLoanTypeValueSpecified)
                {
                    return this.AutoLoanTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AutoLoanTypeValue = value.GetValueOrDefault();
                this.AutoLoanTypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AutoMake", Order=14, Form=XmlSchemaForm.Unqualified)]
        public bool AutoMakeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AutoMake property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AutoMakeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AutoMake
        {
            get
            {
                if (this.AutoMakeValueSpecified)
                {
                    return this.AutoMakeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AutoMakeValue = value.GetValueOrDefault();
                this.AutoMakeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AutoModel", Order=15, Form=XmlSchemaForm.Unqualified)]
        public bool AutoModelValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AutoModel property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AutoModelValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AutoModel
        {
            get
            {
                if (this.AutoModelValueSpecified)
                {
                    return this.AutoModelValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AutoModelValue = value.GetValueOrDefault();
                this.AutoModelValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AutoMoneyFactor", Order=16, Form=XmlSchemaForm.Unqualified)]
        public bool AutoMoneyFactorValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AutoMoneyFactor property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AutoMoneyFactorValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AutoMoneyFactor
        {
            get
            {
                if (this.AutoMoneyFactorValueSpecified)
                {
                    return this.AutoMoneyFactorValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AutoMoneyFactorValue = value.GetValueOrDefault();
                this.AutoMoneyFactorValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AutoMsrp", Order=17, Form=XmlSchemaForm.Unqualified)]
        public bool AutoMsrpValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AutoMsrp property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AutoMsrpValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AutoMsrp
        {
            get
            {
                if (this.AutoMsrpValueSpecified)
                {
                    return this.AutoMsrpValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AutoMsrpValue = value.GetValueOrDefault();
                this.AutoMsrpValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AutoRebate", Order=18, Form=XmlSchemaForm.Unqualified)]
        public bool AutoRebateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AutoRebate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AutoRebateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AutoRebate
        {
            get
            {
                if (this.AutoRebateValueSpecified)
                {
                    return this.AutoRebateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AutoRebateValue = value.GetValueOrDefault();
                this.AutoRebateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AutoResidualFactor", Order=19, Form=XmlSchemaForm.Unqualified)]
        public bool AutoResidualFactorValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AutoResidualFactor property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AutoResidualFactorValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AutoResidualFactor
        {
            get
            {
                if (this.AutoResidualFactorValueSpecified)
                {
                    return this.AutoResidualFactorValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AutoResidualFactorValue = value.GetValueOrDefault();
                this.AutoResidualFactorValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AutoResidualValue", Order=20, Form=XmlSchemaForm.Unqualified)]
        public bool AutoResidualValueValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AutoResidualValue property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AutoResidualValueValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AutoResidualValue
        {
            get
            {
                if (this.AutoResidualValueValueSpecified)
                {
                    return this.AutoResidualValueValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AutoResidualValueValue = value.GetValueOrDefault();
                this.AutoResidualValueValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AutoSalePrice", Order=21, Form=XmlSchemaForm.Unqualified)]
        public bool AutoSalePriceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AutoSalePrice property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AutoSalePriceValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AutoSalePrice
        {
            get
            {
                if (this.AutoSalePriceValueSpecified)
                {
                    return this.AutoSalePriceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AutoSalePriceValue = value.GetValueOrDefault();
                this.AutoSalePriceValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AutoStatus", Order=22, Form=XmlSchemaForm.Unqualified)]
        public bool AutoStatusValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AutoStatus property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AutoStatusValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AutoStatus
        {
            get
            {
                if (this.AutoStatusValueSpecified)
                {
                    return this.AutoStatusValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AutoStatusValue = value.GetValueOrDefault();
                this.AutoStatusValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AutoTradeAllowance", Order=23, Form=XmlSchemaForm.Unqualified)]
        public bool AutoTradeAllowanceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AutoTradeAllowance property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AutoTradeAllowanceValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AutoTradeAllowance
        {
            get
            {
                if (this.AutoTradeAllowanceValueSpecified)
                {
                    return this.AutoTradeAllowanceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AutoTradeAllowanceValue = value.GetValueOrDefault();
                this.AutoTradeAllowanceValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AutoTradeBalance", Order=24, Form=XmlSchemaForm.Unqualified)]
        public bool AutoTradeBalanceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AutoTradeBalance property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AutoTradeBalanceValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AutoTradeBalance
        {
            get
            {
                if (this.AutoTradeBalanceValueSpecified)
                {
                    return this.AutoTradeBalanceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AutoTradeBalanceValue = value.GetValueOrDefault();
                this.AutoTradeBalanceValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AutoYear", Order=25, Form=XmlSchemaForm.Unqualified)]
        public bool AutoYearValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AutoYear property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AutoYearValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AutoYear
        {
            get
            {
                if (this.AutoYearValueSpecified)
                {
                    return this.AutoYearValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AutoYearValue = value.GetValueOrDefault();
                this.AutoYearValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BirthDate", Order=26, Form=XmlSchemaForm.Unqualified)]
        public bool BirthDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BirthDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BirthDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BirthDate
        {
            get
            {
                if (this.BirthDateValueSpecified)
                {
                    return this.BirthDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BirthDateValue = value.GetValueOrDefault();
                this.BirthDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Branch", Order=27, Form=XmlSchemaForm.Unqualified)]
        public bool BranchValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Branch property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BranchValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Branch
        {
            get
            {
                if (this.BranchValueSpecified)
                {
                    return this.BranchValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BranchValue = value.GetValueOrDefault();
                this.BranchValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _bre2Relation;
        
        [XmlElementAttribute("Bre2Relation", Order=28, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> Bre2Relation
        {
            get
            {
                return _bre2Relation;
            }
            set
            {
                _bre2Relation = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Bre2Relation collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool Bre2RelationSpecified
        {
            get
            {
                return ((this.Bre2Relation != null) 
                            && (this.Bre2Relation.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BullseyeAcct", Order=29, Form=XmlSchemaForm.Unqualified)]
        public bool BullseyeAcctValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BullseyeAcct property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BullseyeAcctValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BullseyeAcct
        {
            get
            {
                if (this.BullseyeAcctValueSpecified)
                {
                    return this.BullseyeAcctValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BullseyeAcctValue = value.GetValueOrDefault();
                this.BullseyeAcctValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Bureau", Order=30, Form=XmlSchemaForm.Unqualified)]
        public bool BureauValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Bureau property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BureauValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Bureau
        {
            get
            {
                if (this.BureauValueSpecified)
                {
                    return this.BureauValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BureauValue = value.GetValueOrDefault();
                this.BureauValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BureauInfo", Order=31, Form=XmlSchemaForm.Unqualified)]
        public bool BureauInfoValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BureauInfo property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BureauInfoValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BureauInfo
        {
            get
            {
                if (this.BureauInfoValueSpecified)
                {
                    return this.BureauInfoValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BureauInfoValue = value.GetValueOrDefault();
                this.BureauInfoValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BusMonthsCurrAddress", Order=32, Form=XmlSchemaForm.Unqualified)]
        public bool BusMonthsCurrAddressValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BusMonthsCurrAddress property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BusMonthsCurrAddressValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BusMonthsCurrAddress
        {
            get
            {
                if (this.BusMonthsCurrAddressValueSpecified)
                {
                    return this.BusMonthsCurrAddressValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BusMonthsCurrAddressValue = value.GetValueOrDefault();
                this.BusMonthsCurrAddressValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BusYearsCurrAddress", Order=33, Form=XmlSchemaForm.Unqualified)]
        public bool BusYearsCurrAddressValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BusYearsCurrAddress property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BusYearsCurrAddressValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BusYearsCurrAddress
        {
            get
            {
                if (this.BusYearsCurrAddressValueSpecified)
                {
                    return this.BusYearsCurrAddressValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BusYearsCurrAddressValue = value.GetValueOrDefault();
                this.BusYearsCurrAddressValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BusinessCity", Order=34, Form=XmlSchemaForm.Unqualified)]
        public bool BusinessCityValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BusinessCity property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BusinessCityValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BusinessCity
        {
            get
            {
                if (this.BusinessCityValueSpecified)
                {
                    return this.BusinessCityValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BusinessCityValue = value.GetValueOrDefault();
                this.BusinessCityValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BusinessName", Order=35, Form=XmlSchemaForm.Unqualified)]
        public bool BusinessNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BusinessName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BusinessNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BusinessName
        {
            get
            {
                if (this.BusinessNameValueSpecified)
                {
                    return this.BusinessNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BusinessNameValue = value.GetValueOrDefault();
                this.BusinessNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BusinessPhone", Order=36, Form=XmlSchemaForm.Unqualified)]
        public bool BusinessPhoneValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BusinessPhone property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BusinessPhoneValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BusinessPhone
        {
            get
            {
                if (this.BusinessPhoneValueSpecified)
                {
                    return this.BusinessPhoneValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BusinessPhoneValue = value.GetValueOrDefault();
                this.BusinessPhoneValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BusinessPrevCity", Order=37, Form=XmlSchemaForm.Unqualified)]
        public bool BusinessPrevCityValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BusinessPrevCity property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BusinessPrevCityValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BusinessPrevCity
        {
            get
            {
                if (this.BusinessPrevCityValueSpecified)
                {
                    return this.BusinessPrevCityValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BusinessPrevCityValue = value.GetValueOrDefault();
                this.BusinessPrevCityValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BusinessPrevState", Order=38, Form=XmlSchemaForm.Unqualified)]
        public bool BusinessPrevStateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BusinessPrevState property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BusinessPrevStateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BusinessPrevState
        {
            get
            {
                if (this.BusinessPrevStateValueSpecified)
                {
                    return this.BusinessPrevStateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BusinessPrevStateValue = value.GetValueOrDefault();
                this.BusinessPrevStateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BusinessPrevStreet", Order=39, Form=XmlSchemaForm.Unqualified)]
        public bool BusinessPrevStreetValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BusinessPrevStreet property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BusinessPrevStreetValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BusinessPrevStreet
        {
            get
            {
                if (this.BusinessPrevStreetValueSpecified)
                {
                    return this.BusinessPrevStreetValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BusinessPrevStreetValue = value.GetValueOrDefault();
                this.BusinessPrevStreetValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BusinessPrevZip", Order=40, Form=XmlSchemaForm.Unqualified)]
        public bool BusinessPrevZipValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BusinessPrevZip property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BusinessPrevZipValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BusinessPrevZip
        {
            get
            {
                if (this.BusinessPrevZipValueSpecified)
                {
                    return this.BusinessPrevZipValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BusinessPrevZipValue = value.GetValueOrDefault();
                this.BusinessPrevZipValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BusinessState", Order=41, Form=XmlSchemaForm.Unqualified)]
        public bool BusinessStateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BusinessState property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BusinessStateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BusinessState
        {
            get
            {
                if (this.BusinessStateValueSpecified)
                {
                    return this.BusinessStateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BusinessStateValue = value.GetValueOrDefault();
                this.BusinessStateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BusinessStreet", Order=42, Form=XmlSchemaForm.Unqualified)]
        public bool BusinessStreetValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BusinessStreet property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BusinessStreetValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BusinessStreet
        {
            get
            {
                if (this.BusinessStreetValueSpecified)
                {
                    return this.BusinessStreetValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BusinessStreetValue = value.GetValueOrDefault();
                this.BusinessStreetValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BusinessTypeCode", Order=43, Form=XmlSchemaForm.Unqualified)]
        public bool BusinessTypeCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BusinessTypeCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BusinessTypeCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BusinessTypeCode
        {
            get
            {
                if (this.BusinessTypeCodeValueSpecified)
                {
                    return this.BusinessTypeCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BusinessTypeCodeValue = value.GetValueOrDefault();
                this.BusinessTypeCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BusinessZip", Order=44, Form=XmlSchemaForm.Unqualified)]
        public bool BusinessZipValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BusinessZip property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BusinessZipValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BusinessZip
        {
            get
            {
                if (this.BusinessZipValueSpecified)
                {
                    return this.BusinessZipValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BusinessZipValue = value.GetValueOrDefault();
                this.BusinessZipValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ChexAcctNumber", Order=45, Form=XmlSchemaForm.Unqualified)]
        public bool ChexAcctNumberValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ChexAcctNumber property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ChexAcctNumberValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ChexAcctNumber
        {
            get
            {
                if (this.ChexAcctNumberValueSpecified)
                {
                    return this.ChexAcctNumberValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ChexAcctNumberValue = value.GetValueOrDefault();
                this.ChexAcctNumberValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _chexTransId;
        
        [XmlElementAttribute("ChexTransId", Order=46, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> ChexTransId
        {
            get
            {
                return _chexTransId;
            }
            set
            {
                _chexTransId = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ChexTransId collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool ChexTransIdSpecified
        {
            get
            {
                return ((this.ChexTransId != null) 
                            && (this.ChexTransId.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CommercialCode", Order=47, Form=XmlSchemaForm.Unqualified)]
        public bool CommercialCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CommercialCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CommercialCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CommercialCode
        {
            get
            {
                if (this.CommercialCodeValueSpecified)
                {
                    return this.CommercialCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CommercialCodeValue = value.GetValueOrDefault();
                this.CommercialCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CompletionCode", Order=48, Form=XmlSchemaForm.Unqualified)]
        public bool CompletionCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CompletionCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CompletionCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CompletionCode
        {
            get
            {
                if (this.CompletionCodeValueSpecified)
                {
                    return this.CompletionCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CompletionCodeValue = value.GetValueOrDefault();
                this.CompletionCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CompletionDate", Order=49, Form=XmlSchemaForm.Unqualified)]
        public bool CompletionDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CompletionDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CompletionDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CompletionDate
        {
            get
            {
                if (this.CompletionDateValueSpecified)
                {
                    return this.CompletionDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CompletionDateValue = value.GetValueOrDefault();
                this.CompletionDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CompletionTime", Order=50, Form=XmlSchemaForm.Unqualified)]
        public bool CompletionTimeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CompletionTime property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CompletionTimeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CompletionTime
        {
            get
            {
                if (this.CompletionTimeValueSpecified)
                {
                    return this.CompletionTimeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CompletionTimeValue = value.GetValueOrDefault();
                this.CompletionTimeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CurrAddrCity", Order=51, Form=XmlSchemaForm.Unqualified)]
        public bool CurrAddrCityValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CurrAddrCity property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CurrAddrCityValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CurrAddrCity
        {
            get
            {
                if (this.CurrAddrCityValueSpecified)
                {
                    return this.CurrAddrCityValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CurrAddrCityValue = value.GetValueOrDefault();
                this.CurrAddrCityValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CurrAddrDirectional", Order=52, Form=XmlSchemaForm.Unqualified)]
        public bool CurrAddrDirectionalValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CurrAddrDirectional property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CurrAddrDirectionalValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CurrAddrDirectional
        {
            get
            {
                if (this.CurrAddrDirectionalValueSpecified)
                {
                    return this.CurrAddrDirectionalValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CurrAddrDirectionalValue = value.GetValueOrDefault();
                this.CurrAddrDirectionalValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CurrAddrHomePhone", Order=53, Form=XmlSchemaForm.Unqualified)]
        public bool CurrAddrHomePhoneValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CurrAddrHomePhone property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CurrAddrHomePhoneValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CurrAddrHomePhone
        {
            get
            {
                if (this.CurrAddrHomePhoneValueSpecified)
                {
                    return this.CurrAddrHomePhoneValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CurrAddrHomePhoneValue = value.GetValueOrDefault();
                this.CurrAddrHomePhoneValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CurrAddrHouseNumber", Order=54, Form=XmlSchemaForm.Unqualified)]
        public bool CurrAddrHouseNumberValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CurrAddrHouseNumber property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CurrAddrHouseNumberValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CurrAddrHouseNumber
        {
            get
            {
                if (this.CurrAddrHouseNumberValueSpecified)
                {
                    return this.CurrAddrHouseNumberValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CurrAddrHouseNumberValue = value.GetValueOrDefault();
                this.CurrAddrHouseNumberValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CurrAddrQuadrant", Order=55, Form=XmlSchemaForm.Unqualified)]
        public bool CurrAddrQuadrantValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CurrAddrQuadrant property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CurrAddrQuadrantValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CurrAddrQuadrant
        {
            get
            {
                if (this.CurrAddrQuadrantValueSpecified)
                {
                    return this.CurrAddrQuadrantValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CurrAddrQuadrantValue = value.GetValueOrDefault();
                this.CurrAddrQuadrantValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CurrAddrState", Order=56, Form=XmlSchemaForm.Unqualified)]
        public bool CurrAddrStateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CurrAddrState property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CurrAddrStateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CurrAddrState
        {
            get
            {
                if (this.CurrAddrStateValueSpecified)
                {
                    return this.CurrAddrStateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CurrAddrStateValue = value.GetValueOrDefault();
                this.CurrAddrStateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CurrAddrStreetName", Order=57, Form=XmlSchemaForm.Unqualified)]
        public bool CurrAddrStreetNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CurrAddrStreetName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CurrAddrStreetNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CurrAddrStreetName
        {
            get
            {
                if (this.CurrAddrStreetNameValueSpecified)
                {
                    return this.CurrAddrStreetNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CurrAddrStreetNameValue = value.GetValueOrDefault();
                this.CurrAddrStreetNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CurrAddrStreetType", Order=58, Form=XmlSchemaForm.Unqualified)]
        public bool CurrAddrStreetTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CurrAddrStreetType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CurrAddrStreetTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CurrAddrStreetType
        {
            get
            {
                if (this.CurrAddrStreetTypeValueSpecified)
                {
                    return this.CurrAddrStreetTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CurrAddrStreetTypeValue = value.GetValueOrDefault();
                this.CurrAddrStreetTypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CurrAddrUnitNumber", Order=59, Form=XmlSchemaForm.Unqualified)]
        public bool CurrAddrUnitNumberValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CurrAddrUnitNumber property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CurrAddrUnitNumberValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CurrAddrUnitNumber
        {
            get
            {
                if (this.CurrAddrUnitNumberValueSpecified)
                {
                    return this.CurrAddrUnitNumberValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CurrAddrUnitNumberValue = value.GetValueOrDefault();
                this.CurrAddrUnitNumberValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CurrAddrUnitType", Order=60, Form=XmlSchemaForm.Unqualified)]
        public bool CurrAddrUnitTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CurrAddrUnitType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CurrAddrUnitTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CurrAddrUnitType
        {
            get
            {
                if (this.CurrAddrUnitTypeValueSpecified)
                {
                    return this.CurrAddrUnitTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CurrAddrUnitTypeValue = value.GetValueOrDefault();
                this.CurrAddrUnitTypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CurrAddrZipCode", Order=61, Form=XmlSchemaForm.Unqualified)]
        public bool CurrAddrZipCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CurrAddrZipCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CurrAddrZipCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CurrAddrZipCode
        {
            get
            {
                if (this.CurrAddrZipCodeValueSpecified)
                {
                    return this.CurrAddrZipCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CurrAddrZipCodeValue = value.GetValueOrDefault();
                this.CurrAddrZipCodeValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _dPower;
        
        [XmlElementAttribute("DPower", Order=62, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> DPower
        {
            get
            {
                return _dPower;
            }
            set
            {
                _dPower = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DPower collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool DPowerSpecified
        {
            get
            {
                return ((this.DPower != null) 
                            && (this.DPower.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DateHired", Order=63, Form=XmlSchemaForm.Unqualified)]
        public bool DateHiredValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DateHired property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DateHiredValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DateHired
        {
            get
            {
                if (this.DateHiredValueSpecified)
                {
                    return this.DateHiredValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DateHiredValue = value.GetValueOrDefault();
                this.DateHiredValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DateOccurrence", Order=64, Form=XmlSchemaForm.Unqualified)]
        public bool DateOccurrenceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DateOccurrence property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DateOccurrenceValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DateOccurrence
        {
            get
            {
                if (this.DateOccurrenceValueSpecified)
                {
                    return this.DateOccurrenceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DateOccurrenceValue = value.GetValueOrDefault();
                this.DateOccurrenceValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DateOpened", Order=65, Form=XmlSchemaForm.Unqualified)]
        public bool DateOpenedValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DateOpened property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DateOpenedValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DateOpened
        {
            get
            {
                if (this.DateOpenedValueSpecified)
                {
                    return this.DateOpenedValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DateOpenedValue = value.GetValueOrDefault();
                this.DateOpenedValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DateSeparated", Order=66, Form=XmlSchemaForm.Unqualified)]
        public bool DateSeparatedValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DateSeparated property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DateSeparatedValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DateSeparated
        {
            get
            {
                if (this.DateSeparatedValueSpecified)
                {
                    return this.DateSeparatedValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DateSeparatedValue = value.GetValueOrDefault();
                this.DateSeparatedValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DeAppId", Order=67, Form=XmlSchemaForm.Unqualified)]
        public bool DeAppIdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DeAppId property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DeAppIdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DeAppId
        {
            get
            {
                if (this.DeAppIdValueSpecified)
                {
                    return this.DeAppIdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DeAppIdValue = value.GetValueOrDefault();
                this.DeAppIdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DeProductCode", Order=68, Form=XmlSchemaForm.Unqualified)]
        public bool DeProductCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DeProductCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DeProductCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DeProductCode
        {
            get
            {
                if (this.DeProductCodeValueSpecified)
                {
                    return this.DeProductCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DeProductCodeValue = value.GetValueOrDefault();
                this.DeProductCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DeRateRequested", Order=69, Form=XmlSchemaForm.Unqualified)]
        public bool DeRateRequestedValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DeRateRequested property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DeRateRequestedValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DeRateRequested
        {
            get
            {
                if (this.DeRateRequestedValueSpecified)
                {
                    return this.DeRateRequestedValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DeRateRequestedValue = value.GetValueOrDefault();
                this.DeRateRequestedValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DeVehAge", Order=70, Form=XmlSchemaForm.Unqualified)]
        public bool DeVehAgeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DeVehAge property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DeVehAgeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DeVehAge
        {
            get
            {
                if (this.DeVehAgeValueSpecified)
                {
                    return this.DeVehAgeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DeVehAgeValue = value.GetValueOrDefault();
                this.DeVehAgeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DeVehCashPrice", Order=71, Form=XmlSchemaForm.Unqualified)]
        public bool DeVehCashPriceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DeVehCashPrice property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DeVehCashPriceValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DeVehCashPrice
        {
            get
            {
                if (this.DeVehCashPriceValueSpecified)
                {
                    return this.DeVehCashPriceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DeVehCashPriceValue = value.GetValueOrDefault();
                this.DeVehCashPriceValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DeVehDownPmt", Order=72, Form=XmlSchemaForm.Unqualified)]
        public bool DeVehDownPmtValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DeVehDownPmt property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DeVehDownPmtValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DeVehDownPmt
        {
            get
            {
                if (this.DeVehDownPmtValueSpecified)
                {
                    return this.DeVehDownPmtValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DeVehDownPmtValue = value.GetValueOrDefault();
                this.DeVehDownPmtValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DeVehNewPaymentAmt", Order=73, Form=XmlSchemaForm.Unqualified)]
        public bool DeVehNewPaymentAmtValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DeVehNewPaymentAmt property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DeVehNewPaymentAmtValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DeVehNewPaymentAmt
        {
            get
            {
                if (this.DeVehNewPaymentAmtValueSpecified)
                {
                    return this.DeVehNewPaymentAmtValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DeVehNewPaymentAmtValue = value.GetValueOrDefault();
                this.DeVehNewPaymentAmtValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DeVehOldPaymentAmt", Order=74, Form=XmlSchemaForm.Unqualified)]
        public bool DeVehOldPaymentAmtValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DeVehOldPaymentAmt property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DeVehOldPaymentAmtValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DeVehOldPaymentAmt
        {
            get
            {
                if (this.DeVehOldPaymentAmtValueSpecified)
                {
                    return this.DeVehOldPaymentAmtValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DeVehOldPaymentAmtValue = value.GetValueOrDefault();
                this.DeVehOldPaymentAmtValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DeVehStatus", Order=75, Form=XmlSchemaForm.Unqualified)]
        public bool DeVehStatusValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DeVehStatus property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DeVehStatusValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DeVehStatus
        {
            get
            {
                if (this.DeVehStatusValueSpecified)
                {
                    return this.DeVehStatusValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DeVehStatusValue = value.GetValueOrDefault();
                this.DeVehStatusValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DeVehTradeIn", Order=76, Form=XmlSchemaForm.Unqualified)]
        public bool DeVehTradeInValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DeVehTradeIn property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DeVehTradeInValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DeVehTradeIn
        {
            get
            {
                if (this.DeVehTradeInValueSpecified)
                {
                    return this.DeVehTradeInValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DeVehTradeInValue = value.GetValueOrDefault();
                this.DeVehTradeInValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DecisionOverride", Order=77, Form=XmlSchemaForm.Unqualified)]
        public bool DecisionOverrideValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DecisionOverride property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DecisionOverrideValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DecisionOverride
        {
            get
            {
                if (this.DecisionOverrideValueSpecified)
                {
                    return this.DecisionOverrideValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DecisionOverrideValue = value.GetValueOrDefault();
                this.DecisionOverrideValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _decode;
        
        [XmlElementAttribute("Decode", Order=78, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> Decode
        {
            get
            {
                return _decode;
            }
            set
            {
                _decode = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Decode collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool DecodeSpecified
        {
            get
            {
                return ((this.Decode != null) 
                            && (this.Decode.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _dep2Dependants;
        
        [XmlElementAttribute("Dep2Dependants", Order=79, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> Dep2Dependants
        {
            get
            {
                return _dep2Dependants;
            }
            set
            {
                _dep2Dependants = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Dep2Dependants collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool Dep2DependantsSpecified
        {
            get
            {
                return ((this.Dep2Dependants != null) 
                            && (this.Dep2Dependants.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DepositAmt", Order=80, Form=XmlSchemaForm.Unqualified)]
        public bool DepositAmtValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DepositAmt property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DepositAmtValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DepositAmt
        {
            get
            {
                if (this.DepositAmtValueSpecified)
                {
                    return this.DepositAmtValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DepositAmtValue = value.GetValueOrDefault();
                this.DepositAmtValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DocAlteredForged", Order=81, Form=XmlSchemaForm.Unqualified)]
        public bool DocAlteredForgedValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DocAlteredForged property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DocAlteredForgedValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DocAlteredForged
        {
            get
            {
                if (this.DocAlteredForgedValueSpecified)
                {
                    return this.DocAlteredForgedValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DocAlteredForgedValue = value.GetValueOrDefault();
                this.DocAlteredForgedValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("EcoaInqType", Order=82, Form=XmlSchemaForm.Unqualified)]
        public bool EcoaInqTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EcoaInqType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool EcoaInqTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> EcoaInqType
        {
            get
            {
                if (this.EcoaInqTypeValueSpecified)
                {
                    return this.EcoaInqTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EcoaInqTypeValue = value.GetValueOrDefault();
                this.EcoaInqTypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("EmpCity", Order=83, Form=XmlSchemaForm.Unqualified)]
        public bool EmpCityValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EmpCity property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool EmpCityValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> EmpCity
        {
            get
            {
                if (this.EmpCityValueSpecified)
                {
                    return this.EmpCityValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EmpCityValue = value.GetValueOrDefault();
                this.EmpCityValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("EmpCopy", Order=84, Form=XmlSchemaForm.Unqualified)]
        public bool EmpCopyValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EmpCopy property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool EmpCopyValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> EmpCopy
        {
            get
            {
                if (this.EmpCopyValueSpecified)
                {
                    return this.EmpCopyValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EmpCopyValue = value.GetValueOrDefault();
                this.EmpCopyValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("EmpHouseNumber", Order=85, Form=XmlSchemaForm.Unqualified)]
        public bool EmpHouseNumberValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EmpHouseNumber property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool EmpHouseNumberValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> EmpHouseNumber
        {
            get
            {
                if (this.EmpHouseNumberValueSpecified)
                {
                    return this.EmpHouseNumberValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EmpHouseNumberValue = value.GetValueOrDefault();
                this.EmpHouseNumberValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("EmpName", Order=86, Form=XmlSchemaForm.Unqualified)]
        public bool EmpNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EmpName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool EmpNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> EmpName
        {
            get
            {
                if (this.EmpNameValueSpecified)
                {
                    return this.EmpNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EmpNameValue = value.GetValueOrDefault();
                this.EmpNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("EmpState", Order=87, Form=XmlSchemaForm.Unqualified)]
        public bool EmpStateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EmpState property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool EmpStateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> EmpState
        {
            get
            {
                if (this.EmpStateValueSpecified)
                {
                    return this.EmpStateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EmpStateValue = value.GetValueOrDefault();
                this.EmpStateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("EmpStreet", Order=88, Form=XmlSchemaForm.Unqualified)]
        public bool EmpStreetValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EmpStreet property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool EmpStreetValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> EmpStreet
        {
            get
            {
                if (this.EmpStreetValueSpecified)
                {
                    return this.EmpStreetValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EmpStreetValue = value.GetValueOrDefault();
                this.EmpStreetValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("EmpZipCode", Order=89, Form=XmlSchemaForm.Unqualified)]
        public bool EmpZipCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EmpZipCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool EmpZipCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> EmpZipCode
        {
            get
            {
                if (this.EmpZipCodeValueSpecified)
                {
                    return this.EmpZipCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EmpZipCodeValue = value.GetValueOrDefault();
                this.EmpZipCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("EndEmpDate", Order=90, Form=XmlSchemaForm.Unqualified)]
        public bool EndEmpDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EndEmpDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool EndEmpDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> EndEmpDate
        {
            get
            {
                if (this.EndEmpDateValueSpecified)
                {
                    return this.EndEmpDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EndEmpDateValue = value.GetValueOrDefault();
                this.EndEmpDateValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _eqDecode;
        
        [XmlElementAttribute("EqDecode", Order=91, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> EqDecode
        {
            get
            {
                return _eqDecode;
            }
            set
            {
                _eqDecode = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the EqDecode collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool EqDecodeSpecified
        {
            get
            {
                return ((this.EqDecode != null) 
                            && (this.EqDecode.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _exp2Amount;
        
        [XmlElementAttribute("Exp2Amount", Order=92, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> Exp2Amount
        {
            get
            {
                return _exp2Amount;
            }
            set
            {
                _exp2Amount = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Exp2Amount collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool Exp2AmountSpecified
        {
            get
            {
                return ((this.Exp2Amount != null) 
                            && (this.Exp2Amount.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _exp2Freq;
        
        [XmlElementAttribute("Exp2Freq", Order=93, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> Exp2Freq
        {
            get
            {
                return _exp2Freq;
            }
            set
            {
                _exp2Freq = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Exp2Freq collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool Exp2FreqSpecified
        {
            get
            {
                return ((this.Exp2Freq != null) 
                            && (this.Exp2Freq.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _exp2OtherAmount;
        
        [XmlElementAttribute("Exp2OtherAmount", Order=94, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> Exp2OtherAmount
        {
            get
            {
                return _exp2OtherAmount;
            }
            set
            {
                _exp2OtherAmount = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Exp2OtherAmount collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool Exp2OtherAmountSpecified
        {
            get
            {
                return ((this.Exp2OtherAmount != null) 
                            && (this.Exp2OtherAmount.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _exp2OtherFreq;
        
        [XmlElementAttribute("Exp2OtherFreq", Order=95, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> Exp2OtherFreq
        {
            get
            {
                return _exp2OtherFreq;
            }
            set
            {
                _exp2OtherFreq = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Exp2OtherFreq collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool Exp2OtherFreqSpecified
        {
            get
            {
                return ((this.Exp2OtherFreq != null) 
                            && (this.Exp2OtherFreq.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _exp2ResidenceAmount;
        
        [XmlElementAttribute("Exp2ResidenceAmount", Order=96, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> Exp2ResidenceAmount
        {
            get
            {
                return _exp2ResidenceAmount;
            }
            set
            {
                _exp2ResidenceAmount = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Exp2ResidenceAmount collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool Exp2ResidenceAmountSpecified
        {
            get
            {
                return ((this.Exp2ResidenceAmount != null) 
                            && (this.Exp2ResidenceAmount.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _exp2ResidenceFreq;
        
        [XmlElementAttribute("Exp2ResidenceFreq", Order=97, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> Exp2ResidenceFreq
        {
            get
            {
                return _exp2ResidenceFreq;
            }
            set
            {
                _exp2ResidenceFreq = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Exp2ResidenceFreq collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool Exp2ResidenceFreqSpecified
        {
            get
            {
                return ((this.Exp2ResidenceFreq != null) 
                            && (this.Exp2ResidenceFreq.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _exp2ResidenceType;
        
        [XmlElementAttribute("Exp2ResidenceType", Order=98, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> Exp2ResidenceType
        {
            get
            {
                return _exp2ResidenceType;
            }
            set
            {
                _exp2ResidenceType = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Exp2ResidenceType collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool Exp2ResidenceTypeSpecified
        {
            get
            {
                return ((this.Exp2ResidenceType != null) 
                            && (this.Exp2ResidenceType.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ExpandedHistory", Order=99, Form=XmlSchemaForm.Unqualified)]
        public bool ExpandedHistoryValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ExpandedHistory property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ExpandedHistoryValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ExpandedHistory
        {
            get
            {
                if (this.ExpandedHistoryValueSpecified)
                {
                    return this.ExpandedHistoryValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ExpandedHistoryValue = value.GetValueOrDefault();
                this.ExpandedHistoryValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("FirstName", Order=100, Form=XmlSchemaForm.Unqualified)]
        public bool FirstNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FirstName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FirstNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> FirstName
        {
            get
            {
                if (this.FirstNameValueSpecified)
                {
                    return this.FirstNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FirstNameValue = value.GetValueOrDefault();
                this.FirstNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HawkIndicator", Order=101, Form=XmlSchemaForm.Unqualified)]
        public bool HawkIndicatorValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HawkIndicator property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HawkIndicatorValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HawkIndicator
        {
            get
            {
                if (this.HawkIndicatorValueSpecified)
                {
                    return this.HawkIndicatorValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HawkIndicatorValue = value.GetValueOrDefault();
                this.HawkIndicatorValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _idNumber;
        
        [XmlElementAttribute("IdNumber", Order=102, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> IdNumber
        {
            get
            {
                return _idNumber;
            }
            set
            {
                _idNumber = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the IdNumber collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool IdNumberSpecified
        {
            get
            {
                return ((this.IdNumber != null) 
                            && (this.IdNumber.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _idState;
        
        [XmlElementAttribute("IdState", Order=103, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> IdState
        {
            get
            {
                return _idState;
            }
            set
            {
                _idState = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the IdState collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool IdStateSpecified
        {
            get
            {
                return ((this.IdState != null) 
                            && (this.IdState.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IdVerificationOid", Order=104, Form=XmlSchemaForm.Unqualified)]
        public bool IdVerificationOidValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IdVerificationOid property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IdVerificationOidValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IdVerificationOid
        {
            get
            {
                if (this.IdVerificationOidValueSpecified)
                {
                    return this.IdVerificationOidValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IdVerificationOidValue = value.GetValueOrDefault();
                this.IdVerificationOidValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _inc2OtherAmount;
        
        [XmlElementAttribute("Inc2OtherAmount", Order=105, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> Inc2OtherAmount
        {
            get
            {
                return _inc2OtherAmount;
            }
            set
            {
                _inc2OtherAmount = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Inc2OtherAmount collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool Inc2OtherAmountSpecified
        {
            get
            {
                return ((this.Inc2OtherAmount != null) 
                            && (this.Inc2OtherAmount.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _inc2OtherFreq;
        
        [XmlElementAttribute("Inc2OtherFreq", Order=106, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> Inc2OtherFreq
        {
            get
            {
                return _inc2OtherFreq;
            }
            set
            {
                _inc2OtherFreq = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Inc2OtherFreq collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool Inc2OtherFreqSpecified
        {
            get
            {
                return ((this.Inc2OtherFreq != null) 
                            && (this.Inc2OtherFreq.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _inc2SalaryAmount;
        
        [XmlElementAttribute("Inc2SalaryAmount", Order=107, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> Inc2SalaryAmount
        {
            get
            {
                return _inc2SalaryAmount;
            }
            set
            {
                _inc2SalaryAmount = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Inc2SalaryAmount collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool Inc2SalaryAmountSpecified
        {
            get
            {
                return ((this.Inc2SalaryAmount != null) 
                            && (this.Inc2SalaryAmount.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _inc2SalaryFreq;
        
        [XmlElementAttribute("Inc2SalaryFreq", Order=108, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> Inc2SalaryFreq
        {
            get
            {
                return _inc2SalaryFreq;
            }
            set
            {
                _inc2SalaryFreq = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Inc2SalaryFreq collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool Inc2SalaryFreqSpecified
        {
            get
            {
                return ((this.Inc2SalaryFreq != null) 
                            && (this.Inc2SalaryFreq.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _inc2TotalAmount;
        
        [XmlElementAttribute("Inc2TotalAmount", Order=109, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> Inc2TotalAmount
        {
            get
            {
                return _inc2TotalAmount;
            }
            set
            {
                _inc2TotalAmount = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Inc2TotalAmount collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool Inc2TotalAmountSpecified
        {
            get
            {
                return ((this.Inc2TotalAmount != null) 
                            && (this.Inc2TotalAmount.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _inc2TotalFreq;
        
        [XmlElementAttribute("Inc2TotalFreq", Order=110, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> Inc2TotalFreq
        {
            get
            {
                return _inc2TotalFreq;
            }
            set
            {
                _inc2TotalFreq = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Inc2TotalFreq collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool Inc2TotalFreqSpecified
        {
            get
            {
                return ((this.Inc2TotalFreq != null) 
                            && (this.Inc2TotalFreq.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IncludeIdVerification", Order=111, Form=XmlSchemaForm.Unqualified)]
        public bool IncludeIdVerificationValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IncludeIdVerification property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IncludeIdVerificationValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IncludeIdVerification
        {
            get
            {
                if (this.IncludeIdVerificationValueSpecified)
                {
                    return this.IncludeIdVerificationValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IncludeIdVerificationValue = value.GetValueOrDefault();
                this.IncludeIdVerificationValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IncludeNewAccountChex", Order=112, Form=XmlSchemaForm.Unqualified)]
        public bool IncludeNewAccountChexValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IncludeNewAccountChex property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IncludeNewAccountChexValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IncludeNewAccountChex
        {
            get
            {
                if (this.IncludeNewAccountChexValueSpecified)
                {
                    return this.IncludeNewAccountChexValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IncludeNewAccountChexValue = value.GetValueOrDefault();
                this.IncludeNewAccountChexValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IncludeOfac", Order=113, Form=XmlSchemaForm.Unqualified)]
        public bool IncludeOfacValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IncludeOfac property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IncludeOfacValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IncludeOfac
        {
            get
            {
                if (this.IncludeOfacValueSpecified)
                {
                    return this.IncludeOfacValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IncludeOfacValue = value.GetValueOrDefault();
                this.IncludeOfacValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IncludeQualiFile", Order=114, Form=XmlSchemaForm.Unqualified)]
        public bool IncludeQualiFileValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IncludeQualiFile property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IncludeQualiFileValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IncludeQualiFile
        {
            get
            {
                if (this.IncludeQualiFileValueSpecified)
                {
                    return this.IncludeQualiFileValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IncludeQualiFileValue = value.GetValueOrDefault();
                this.IncludeQualiFileValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Income", Order=115, Form=XmlSchemaForm.Unqualified)]
        public bool IncomeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Income property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IncomeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Income
        {
            get
            {
                if (this.IncomeValueSpecified)
                {
                    return this.IncomeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IncomeValue = value.GetValueOrDefault();
                this.IncomeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InfoInconsistent", Order=116, Form=XmlSchemaForm.Unqualified)]
        public bool InfoInconsistentValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InfoInconsistent property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InfoInconsistentValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InfoInconsistent
        {
            get
            {
                if (this.InfoInconsistentValueSpecified)
                {
                    return this.InfoInconsistentValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InfoInconsistentValue = value.GetValueOrDefault();
                this.InfoInconsistentValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InquiryId", Order=117, Form=XmlSchemaForm.Unqualified)]
        public bool InquiryIdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InquiryId property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InquiryIdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InquiryId
        {
            get
            {
                if (this.InquiryIdValueSpecified)
                {
                    return this.InquiryIdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InquiryIdValue = value.GetValueOrDefault();
                this.InquiryIdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InquiryType", Order=118, Form=XmlSchemaForm.Unqualified)]
        public bool InquiryTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InquiryType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InquiryTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InquiryType
        {
            get
            {
                if (this.InquiryTypeValueSpecified)
                {
                    return this.InquiryTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InquiryTypeValue = value.GetValueOrDefault();
                this.InquiryTypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InstantUpdateAcct", Order=119, Form=XmlSchemaForm.Unqualified)]
        public bool InstantUpdateAcctValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InstantUpdateAcct property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InstantUpdateAcctValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InstantUpdateAcct
        {
            get
            {
                if (this.InstantUpdateAcctValueSpecified)
                {
                    return this.InstantUpdateAcctValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InstantUpdateAcctValue = value.GetValueOrDefault();
                this.InstantUpdateAcctValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InternetPasswd", Order=120, Form=XmlSchemaForm.Unqualified)]
        public bool InternetPasswdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InternetPasswd property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InternetPasswdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InternetPasswd
        {
            get
            {
                if (this.InternetPasswdValueSpecified)
                {
                    return this.InternetPasswdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InternetPasswdValue = value.GetValueOrDefault();
                this.InternetPasswdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InternetUserId", Order=121, Form=XmlSchemaForm.Unqualified)]
        public bool InternetUserIdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InternetUserId property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InternetUserIdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InternetUserId
        {
            get
            {
                if (this.InternetUserIdValueSpecified)
                {
                    return this.InternetUserIdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InternetUserIdValue = value.GetValueOrDefault();
                this.InternetUserIdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IpAddress", Order=122, Form=XmlSchemaForm.Unqualified)]
        public bool IpAddressValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IpAddress property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IpAddressValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IpAddress
        {
            get
            {
                if (this.IpAddressValueSpecified)
                {
                    return this.IpAddressValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IpAddressValue = value.GetValueOrDefault();
                this.IpAddressValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _job2EmpPrevType;
        
        [XmlElementAttribute("Job2EmpPrevType", Order=123, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> Job2EmpPrevType
        {
            get
            {
                return _job2EmpPrevType;
            }
            set
            {
                _job2EmpPrevType = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Job2EmpPrevType collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool Job2EmpPrevTypeSpecified
        {
            get
            {
                return ((this.Job2EmpPrevType != null) 
                            && (this.Job2EmpPrevType.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _job2EmpType;
        
        [XmlElementAttribute("Job2EmpType", Order=124, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> Job2EmpType
        {
            get
            {
                return _job2EmpType;
            }
            set
            {
                _job2EmpType = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Job2EmpType collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool Job2EmpTypeSpecified
        {
            get
            {
                return ((this.Job2EmpType != null) 
                            && (this.Job2EmpType.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _job2Months;
        
        [XmlElementAttribute("Job2Months", Order=125, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> Job2Months
        {
            get
            {
                return _job2Months;
            }
            set
            {
                _job2Months = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Job2Months collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool Job2MonthsSpecified
        {
            get
            {
                return ((this.Job2Months != null) 
                            && (this.Job2Months.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _job2PrevMonths;
        
        [XmlElementAttribute("Job2PrevMonths", Order=126, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> Job2PrevMonths
        {
            get
            {
                return _job2PrevMonths;
            }
            set
            {
                _job2PrevMonths = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Job2PrevMonths collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool Job2PrevMonthsSpecified
        {
            get
            {
                return ((this.Job2PrevMonths != null) 
                            && (this.Job2PrevMonths.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _job2PrevYears;
        
        [XmlElementAttribute("Job2PrevYears", Order=127, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> Job2PrevYears
        {
            get
            {
                return _job2PrevYears;
            }
            set
            {
                _job2PrevYears = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Job2PrevYears collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool Job2PrevYearsSpecified
        {
            get
            {
                return ((this.Job2PrevYears != null) 
                            && (this.Job2PrevYears.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _job2Years;
        
        [XmlElementAttribute("Job2Years", Order=128, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> Job2Years
        {
            get
            {
                return _job2Years;
            }
            set
            {
                _job2Years = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Job2Years collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool Job2YearsSpecified
        {
            get
            {
                return ((this.Job2Years != null) 
                            && (this.Job2Years.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("JointFileAccess", Order=129, Form=XmlSchemaForm.Unqualified)]
        public bool JointFileAccessValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the JointFileAccess property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool JointFileAccessValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> JointFileAccess
        {
            get
            {
                if (this.JointFileAccessValueSpecified)
                {
                    return this.JointFileAccessValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.JointFileAccessValue = value.GetValueOrDefault();
                this.JointFileAccessValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LastName", Order=130, Form=XmlSchemaForm.Unqualified)]
        public bool LastNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LastName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LastNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LastName
        {
            get
            {
                if (this.LastNameValueSpecified)
                {
                    return this.LastNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LastNameValue = value.GetValueOrDefault();
                this.LastNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LoanAmount", Order=131, Form=XmlSchemaForm.Unqualified)]
        public bool LoanAmountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LoanAmount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LoanAmountValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LoanAmount
        {
            get
            {
                if (this.LoanAmountValueSpecified)
                {
                    return this.LoanAmountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LoanAmountValue = value.GetValueOrDefault();
                this.LoanAmountValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LoanAppId", Order=132, Form=XmlSchemaForm.Unqualified)]
        public bool LoanAppIdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LoanAppId property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LoanAppIdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LoanAppId
        {
            get
            {
                if (this.LoanAppIdValueSpecified)
                {
                    return this.LoanAppIdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LoanAppIdValue = value.GetValueOrDefault();
                this.LoanAppIdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LoanTerms", Order=133, Form=XmlSchemaForm.Unqualified)]
        public bool LoanTermsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LoanTerms property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LoanTermsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LoanTerms
        {
            get
            {
                if (this.LoanTermsValueSpecified)
                {
                    return this.LoanTermsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LoanTermsValue = value.GetValueOrDefault();
                this.LoanTermsValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LoanTypeChr", Order=134, Form=XmlSchemaForm.Unqualified)]
        public bool LoanTypeChrValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LoanTypeChr property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LoanTypeChrValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LoanTypeChr
        {
            get
            {
                if (this.LoanTypeChrValueSpecified)
                {
                    return this.LoanTypeChrValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LoanTypeChrValue = value.GetValueOrDefault();
                this.LoanTypeChrValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LoanUse", Order=135, Form=XmlSchemaForm.Unqualified)]
        public bool LoanUseValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LoanUse property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LoanUseValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LoanUse
        {
            get
            {
                if (this.LoanUseValueSpecified)
                {
                    return this.LoanUseValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LoanUseValue = value.GetValueOrDefault();
                this.LoanUseValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Locator", Order=136, Form=XmlSchemaForm.Unqualified)]
        public bool LocatorValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Locator property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LocatorValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Locator
        {
            get
            {
                if (this.LocatorValueSpecified)
                {
                    return this.LocatorValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LocatorValue = value.GetValueOrDefault();
                this.LocatorValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LookType", Order=137, Form=XmlSchemaForm.Unqualified)]
        public bool LookTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LookType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LookTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LookType
        {
            get
            {
                if (this.LookTypeValueSpecified)
                {
                    return this.LookTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LookTypeValue = value.GetValueOrDefault();
                this.LookTypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LookupBM", Order=138, Form=XmlSchemaForm.Unqualified)]
        public bool LookupBmValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LookupBm property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LookupBmValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LookupBm
        {
            get
            {
                if (this.LookupBmValueSpecified)
                {
                    return this.LookupBmValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LookupBmValue = value.GetValueOrDefault();
                this.LookupBmValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LookupBSM", Order=139, Form=XmlSchemaForm.Unqualified)]
        public bool LookupBsmValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LookupBsm property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LookupBsmValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LookupBsm
        {
            get
            {
                if (this.LookupBsmValueSpecified)
                {
                    return this.LookupBsmValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LookupBsmValue = value.GetValueOrDefault();
                this.LookupBsmValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LookupIndCode", Order=140, Form=XmlSchemaForm.Unqualified)]
        public bool LookupIndCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LookupIndCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LookupIndCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LookupIndCode
        {
            get
            {
                if (this.LookupIndCodeValueSpecified)
                {
                    return this.LookupIndCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LookupIndCodeValue = value.GetValueOrDefault();
                this.LookupIndCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LookupMemberCode", Order=141, Form=XmlSchemaForm.Unqualified)]
        public bool LookupMemberCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LookupMemberCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LookupMemberCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LookupMemberCode
        {
            get
            {
                if (this.LookupMemberCodeValueSpecified)
                {
                    return this.LookupMemberCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LookupMemberCodeValue = value.GetValueOrDefault();
                this.LookupMemberCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LookupSegmentInd", Order=142, Form=XmlSchemaForm.Unqualified)]
        public bool LookupSegmentIndValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LookupSegmentInd property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LookupSegmentIndValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LookupSegmentInd
        {
            get
            {
                if (this.LookupSegmentIndValueSpecified)
                {
                    return this.LookupSegmentIndValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LookupSegmentIndValue = value.GetValueOrDefault();
                this.LookupSegmentIndValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MemNumPlainDesc", Order=143, Form=XmlSchemaForm.Unqualified)]
        public bool MemNumPlainDescValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MemNumPlainDesc property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MemNumPlainDescValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MemNumPlainDesc
        {
            get
            {
                if (this.MemNumPlainDescValueSpecified)
                {
                    return this.MemNumPlainDescValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MemNumPlainDescValue = value.GetValueOrDefault();
                this.MemNumPlainDescValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MiddleName", Order=144, Form=XmlSchemaForm.Unqualified)]
        public bool MiddleNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MiddleName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MiddleNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MiddleName
        {
            get
            {
                if (this.MiddleNameValueSpecified)
                {
                    return this.MiddleNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MiddleNameValue = value.GetValueOrDefault();
                this.MiddleNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MonthsCountInq", Order=145, Form=XmlSchemaForm.Unqualified)]
        public bool MonthsCountInqValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MonthsCountInq property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MonthsCountInqValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MonthsCountInq
        {
            get
            {
                if (this.MonthsCountInqValueSpecified)
                {
                    return this.MonthsCountInqValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MonthsCountInqValue = value.GetValueOrDefault();
                this.MonthsCountInqValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MonthsCountMaxDq", Order=146, Form=XmlSchemaForm.Unqualified)]
        public bool MonthsCountMaxDqValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MonthsCountMaxDq property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MonthsCountMaxDqValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MonthsCountMaxDq
        {
            get
            {
                if (this.MonthsCountMaxDqValueSpecified)
                {
                    return this.MonthsCountMaxDqValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MonthsCountMaxDqValue = value.GetValueOrDefault();
                this.MonthsCountMaxDqValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MultipleFile", Order=147, Form=XmlSchemaForm.Unqualified)]
        public bool MultipleFileValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MultipleFile property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MultipleFileValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MultipleFile
        {
            get
            {
                if (this.MultipleFileValueSpecified)
                {
                    return this.MultipleFileValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MultipleFileValue = value.GetValueOrDefault();
                this.MultipleFileValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("NameSuffix", Order=148, Form=XmlSchemaForm.Unqualified)]
        public bool NameSuffixValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NameSuffix property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool NameSuffixValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> NameSuffix
        {
            get
            {
                if (this.NameSuffixValueSpecified)
                {
                    return this.NameSuffixValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NameSuffixValue = value.GetValueOrDefault();
                this.NameSuffixValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("NewMnthlyPmt", Order=149, Form=XmlSchemaForm.Unqualified)]
        public bool NewMnthlyPmtValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NewMnthlyPmt property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool NewMnthlyPmtValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> NewMnthlyPmt
        {
            get
            {
                if (this.NewMnthlyPmtValueSpecified)
                {
                    return this.NewMnthlyPmtValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NewMnthlyPmtValue = value.GetValueOrDefault();
                this.NewMnthlyPmtValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Occupation", Order=150, Form=XmlSchemaForm.Unqualified)]
        public bool OccupationValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Occupation property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OccupationValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Occupation
        {
            get
            {
                if (this.OccupationValueSpecified)
                {
                    return this.OccupationValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OccupationValue = value.GetValueOrDefault();
                this.OccupationValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OfacInquiry", Order=151, Form=XmlSchemaForm.Unqualified)]
        public bool OfacInquiryValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OfacInquiry property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OfacInquiryValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> OfacInquiry
        {
            get
            {
                if (this.OfacInquiryValueSpecified)
                {
                    return this.OfacInquiryValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OfacInquiryValue = value.GetValueOrDefault();
                this.OfacInquiryValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OfacOid", Order=152, Form=XmlSchemaForm.Unqualified)]
        public bool OfacOidValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OfacOid property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OfacOidValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> OfacOid
        {
            get
            {
                if (this.OfacOidValueSpecified)
                {
                    return this.OfacOidValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OfacOidValue = value.GetValueOrDefault();
                this.OfacOidValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OldMnthlyPmt", Order=153, Form=XmlSchemaForm.Unqualified)]
        public bool OldMnthlyPmtValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OldMnthlyPmt property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OldMnthlyPmtValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> OldMnthlyPmt
        {
            get
            {
                if (this.OldMnthlyPmtValueSpecified)
                {
                    return this.OldMnthlyPmtValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OldMnthlyPmtValue = value.GetValueOrDefault();
                this.OldMnthlyPmtValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OperatorCode", Order=154, Form=XmlSchemaForm.Unqualified)]
        public bool OperatorCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OperatorCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OperatorCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> OperatorCode
        {
            get
            {
                if (this.OperatorCodeValueSpecified)
                {
                    return this.OperatorCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OperatorCodeValue = value.GetValueOrDefault();
                this.OperatorCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OptFeatureCode", Order=155, Form=XmlSchemaForm.Unqualified)]
        public bool OptFeatureCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OptFeatureCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OptFeatureCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> OptFeatureCode
        {
            get
            {
                if (this.OptFeatureCodeValueSpecified)
                {
                    return this.OptFeatureCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OptFeatureCodeValue = value.GetValueOrDefault();
                this.OptFeatureCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OriginalCreditor", Order=156, Form=XmlSchemaForm.Unqualified)]
        public bool OriginalCreditorValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OriginalCreditor property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OriginalCreditorValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> OriginalCreditor
        {
            get
            {
                if (this.OriginalCreditorValueSpecified)
                {
                    return this.OriginalCreditorValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OriginalCreditorValue = value.GetValueOrDefault();
                this.OriginalCreditorValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OriginatingSym", Order=157, Form=XmlSchemaForm.Unqualified)]
        public bool OriginatingSymValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OriginatingSym property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OriginatingSymValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> OriginatingSym
        {
            get
            {
                if (this.OriginatingSymValueSpecified)
                {
                    return this.OriginatingSymValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OriginatingSymValue = value.GetValueOrDefault();
                this.OriginatingSymValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Override", Order=158, Form=XmlSchemaForm.Unqualified)]
        public bool OverrideValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Override property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OverrideValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Override
        {
            get
            {
                if (this.OverrideValueSpecified)
                {
                    return this.OverrideValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OverrideValue = value.GetValueOrDefault();
                this.OverrideValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OverrideAmount", Order=159, Form=XmlSchemaForm.Unqualified)]
        public bool OverrideAmountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OverrideAmount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OverrideAmountValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> OverrideAmount
        {
            get
            {
                if (this.OverrideAmountValueSpecified)
                {
                    return this.OverrideAmountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OverrideAmountValue = value.GetValueOrDefault();
                this.OverrideAmountValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OverrideCat", Order=160, Form=XmlSchemaForm.Unqualified)]
        public bool OverrideCatValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OverrideCat property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OverrideCatValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> OverrideCat
        {
            get
            {
                if (this.OverrideCatValueSpecified)
                {
                    return this.OverrideCatValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OverrideCatValue = value.GetValueOrDefault();
                this.OverrideCatValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OverrideText", Order=161, Form=XmlSchemaForm.Unqualified)]
        public bool OverrideTextValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OverrideText property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OverrideTextValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> OverrideText
        {
            get
            {
                if (this.OverrideTextValueSpecified)
                {
                    return this.OverrideTextValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OverrideTextValue = value.GetValueOrDefault();
                this.OverrideTextValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Password", Order=162, Form=XmlSchemaForm.Unqualified)]
        public bool PasswordValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Password property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PasswordValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Password
        {
            get
            {
                if (this.PasswordValueSpecified)
                {
                    return this.PasswordValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PasswordValue = value.GetValueOrDefault();
                this.PasswordValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PayBasis", Order=163, Form=XmlSchemaForm.Unqualified)]
        public bool PayBasisValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PayBasis property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PayBasisValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PayBasis
        {
            get
            {
                if (this.PayBasisValueSpecified)
                {
                    return this.PayBasisValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PayBasisValue = value.GetValueOrDefault();
                this.PayBasisValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PhoneAppend", Order=164, Form=XmlSchemaForm.Unqualified)]
        public bool PhoneAppendValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PhoneAppend property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PhoneAppendValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PhoneAppend
        {
            get
            {
                if (this.PhoneAppendValueSpecified)
                {
                    return this.PhoneAppendValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PhoneAppendValue = value.GetValueOrDefault();
                this.PhoneAppendValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _prdDecType10;
        
        [XmlElementAttribute("PrdDecType10", Order=165, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> PrdDecType10
        {
            get
            {
                return _prdDecType10;
            }
            set
            {
                _prdDecType10 = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PrdDecType10 collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool PrdDecType10Specified
        {
            get
            {
                return ((this.PrdDecType10 != null) 
                            && (this.PrdDecType10.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _prdProductCode10;
        
        [XmlElementAttribute("PrdProductCode10", Order=166, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> PrdProductCode10
        {
            get
            {
                return _prdProductCode10;
            }
            set
            {
                _prdProductCode10 = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PrdProductCode10 collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool PrdProductCode10Specified
        {
            get
            {
                return ((this.PrdProductCode10 != null) 
                            && (this.PrdProductCode10.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrevAddr1City", Order=167, Form=XmlSchemaForm.Unqualified)]
        public bool PrevAddr1CityValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrevAddr1City property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrevAddr1CityValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrevAddr1City
        {
            get
            {
                if (this.PrevAddr1CityValueSpecified)
                {
                    return this.PrevAddr1CityValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrevAddr1CityValue = value.GetValueOrDefault();
                this.PrevAddr1CityValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrevAddr1Directional", Order=168, Form=XmlSchemaForm.Unqualified)]
        public bool PrevAddr1DirectionalValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrevAddr1Directional property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrevAddr1DirectionalValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrevAddr1Directional
        {
            get
            {
                if (this.PrevAddr1DirectionalValueSpecified)
                {
                    return this.PrevAddr1DirectionalValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrevAddr1DirectionalValue = value.GetValueOrDefault();
                this.PrevAddr1DirectionalValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrevAddr1HouseNumber", Order=169, Form=XmlSchemaForm.Unqualified)]
        public bool PrevAddr1HouseNumberValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrevAddr1HouseNumber property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrevAddr1HouseNumberValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrevAddr1HouseNumber
        {
            get
            {
                if (this.PrevAddr1HouseNumberValueSpecified)
                {
                    return this.PrevAddr1HouseNumberValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrevAddr1HouseNumberValue = value.GetValueOrDefault();
                this.PrevAddr1HouseNumberValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrevAddr1Quadrant", Order=170, Form=XmlSchemaForm.Unqualified)]
        public bool PrevAddr1QuadrantValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrevAddr1Quadrant property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrevAddr1QuadrantValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrevAddr1Quadrant
        {
            get
            {
                if (this.PrevAddr1QuadrantValueSpecified)
                {
                    return this.PrevAddr1QuadrantValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrevAddr1QuadrantValue = value.GetValueOrDefault();
                this.PrevAddr1QuadrantValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrevAddr1State", Order=171, Form=XmlSchemaForm.Unqualified)]
        public bool PrevAddr1StateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrevAddr1State property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrevAddr1StateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrevAddr1State
        {
            get
            {
                if (this.PrevAddr1StateValueSpecified)
                {
                    return this.PrevAddr1StateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrevAddr1StateValue = value.GetValueOrDefault();
                this.PrevAddr1StateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrevAddr1StreetName", Order=172, Form=XmlSchemaForm.Unqualified)]
        public bool PrevAddr1StreetNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrevAddr1StreetName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrevAddr1StreetNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrevAddr1StreetName
        {
            get
            {
                if (this.PrevAddr1StreetNameValueSpecified)
                {
                    return this.PrevAddr1StreetNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrevAddr1StreetNameValue = value.GetValueOrDefault();
                this.PrevAddr1StreetNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrevAddr1StreetType", Order=173, Form=XmlSchemaForm.Unqualified)]
        public bool PrevAddr1StreetTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrevAddr1StreetType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrevAddr1StreetTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrevAddr1StreetType
        {
            get
            {
                if (this.PrevAddr1StreetTypeValueSpecified)
                {
                    return this.PrevAddr1StreetTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrevAddr1StreetTypeValue = value.GetValueOrDefault();
                this.PrevAddr1StreetTypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrevAddr1UnitNumber", Order=174, Form=XmlSchemaForm.Unqualified)]
        public bool PrevAddr1UnitNumberValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrevAddr1UnitNumber property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrevAddr1UnitNumberValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrevAddr1UnitNumber
        {
            get
            {
                if (this.PrevAddr1UnitNumberValueSpecified)
                {
                    return this.PrevAddr1UnitNumberValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrevAddr1UnitNumberValue = value.GetValueOrDefault();
                this.PrevAddr1UnitNumberValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrevAddr1UnitType", Order=175, Form=XmlSchemaForm.Unqualified)]
        public bool PrevAddr1UnitTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrevAddr1UnitType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrevAddr1UnitTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrevAddr1UnitType
        {
            get
            {
                if (this.PrevAddr1UnitTypeValueSpecified)
                {
                    return this.PrevAddr1UnitTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrevAddr1UnitTypeValue = value.GetValueOrDefault();
                this.PrevAddr1UnitTypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrevAddr1ZipCode", Order=176, Form=XmlSchemaForm.Unqualified)]
        public bool PrevAddr1ZipCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrevAddr1ZipCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrevAddr1ZipCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrevAddr1ZipCode
        {
            get
            {
                if (this.PrevAddr1ZipCodeValueSpecified)
                {
                    return this.PrevAddr1ZipCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrevAddr1ZipCodeValue = value.GetValueOrDefault();
                this.PrevAddr1ZipCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrevAddr2City", Order=177, Form=XmlSchemaForm.Unqualified)]
        public bool PrevAddr2CityValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrevAddr2City property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrevAddr2CityValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrevAddr2City
        {
            get
            {
                if (this.PrevAddr2CityValueSpecified)
                {
                    return this.PrevAddr2CityValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrevAddr2CityValue = value.GetValueOrDefault();
                this.PrevAddr2CityValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrevAddr2Directional", Order=178, Form=XmlSchemaForm.Unqualified)]
        public bool PrevAddr2DirectionalValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrevAddr2Directional property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrevAddr2DirectionalValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrevAddr2Directional
        {
            get
            {
                if (this.PrevAddr2DirectionalValueSpecified)
                {
                    return this.PrevAddr2DirectionalValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrevAddr2DirectionalValue = value.GetValueOrDefault();
                this.PrevAddr2DirectionalValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrevAddr2HouseNumber", Order=179, Form=XmlSchemaForm.Unqualified)]
        public bool PrevAddr2HouseNumberValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrevAddr2HouseNumber property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrevAddr2HouseNumberValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrevAddr2HouseNumber
        {
            get
            {
                if (this.PrevAddr2HouseNumberValueSpecified)
                {
                    return this.PrevAddr2HouseNumberValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrevAddr2HouseNumberValue = value.GetValueOrDefault();
                this.PrevAddr2HouseNumberValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrevAddr2Quadrant", Order=180, Form=XmlSchemaForm.Unqualified)]
        public bool PrevAddr2QuadrantValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrevAddr2Quadrant property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrevAddr2QuadrantValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrevAddr2Quadrant
        {
            get
            {
                if (this.PrevAddr2QuadrantValueSpecified)
                {
                    return this.PrevAddr2QuadrantValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrevAddr2QuadrantValue = value.GetValueOrDefault();
                this.PrevAddr2QuadrantValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrevAddr2State", Order=181, Form=XmlSchemaForm.Unqualified)]
        public bool PrevAddr2StateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrevAddr2State property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrevAddr2StateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrevAddr2State
        {
            get
            {
                if (this.PrevAddr2StateValueSpecified)
                {
                    return this.PrevAddr2StateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrevAddr2StateValue = value.GetValueOrDefault();
                this.PrevAddr2StateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrevAddr2StreetName", Order=182, Form=XmlSchemaForm.Unqualified)]
        public bool PrevAddr2StreetNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrevAddr2StreetName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrevAddr2StreetNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrevAddr2StreetName
        {
            get
            {
                if (this.PrevAddr2StreetNameValueSpecified)
                {
                    return this.PrevAddr2StreetNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrevAddr2StreetNameValue = value.GetValueOrDefault();
                this.PrevAddr2StreetNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrevAddr2StreetType", Order=183, Form=XmlSchemaForm.Unqualified)]
        public bool PrevAddr2StreetTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrevAddr2StreetType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrevAddr2StreetTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrevAddr2StreetType
        {
            get
            {
                if (this.PrevAddr2StreetTypeValueSpecified)
                {
                    return this.PrevAddr2StreetTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrevAddr2StreetTypeValue = value.GetValueOrDefault();
                this.PrevAddr2StreetTypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrevAddr2UnitNumber", Order=184, Form=XmlSchemaForm.Unqualified)]
        public bool PrevAddr2UnitNumberValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrevAddr2UnitNumber property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrevAddr2UnitNumberValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrevAddr2UnitNumber
        {
            get
            {
                if (this.PrevAddr2UnitNumberValueSpecified)
                {
                    return this.PrevAddr2UnitNumberValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrevAddr2UnitNumberValue = value.GetValueOrDefault();
                this.PrevAddr2UnitNumberValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrevAddr2UnitType", Order=185, Form=XmlSchemaForm.Unqualified)]
        public bool PrevAddr2UnitTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrevAddr2UnitType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrevAddr2UnitTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrevAddr2UnitType
        {
            get
            {
                if (this.PrevAddr2UnitTypeValueSpecified)
                {
                    return this.PrevAddr2UnitTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrevAddr2UnitTypeValue = value.GetValueOrDefault();
                this.PrevAddr2UnitTypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrevAddr2ZipCode", Order=186, Form=XmlSchemaForm.Unqualified)]
        public bool PrevAddr2ZipCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrevAddr2ZipCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrevAddr2ZipCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrevAddr2ZipCode
        {
            get
            {
                if (this.PrevAddr2ZipCodeValueSpecified)
                {
                    return this.PrevAddr2ZipCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrevAddr2ZipCodeValue = value.GetValueOrDefault();
                this.PrevAddr2ZipCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("QueueAfterDate", Order=187, Form=XmlSchemaForm.Unqualified)]
        public bool QueueAfterDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the QueueAfterDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool QueueAfterDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> QueueAfterDate
        {
            get
            {
                if (this.QueueAfterDateValueSpecified)
                {
                    return this.QueueAfterDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.QueueAfterDateValue = value.GetValueOrDefault();
                this.QueueAfterDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("QueueAfterTime", Order=188, Form=XmlSchemaForm.Unqualified)]
        public bool QueueAfterTimeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the QueueAfterTime property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool QueueAfterTimeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> QueueAfterTime
        {
            get
            {
                if (this.QueueAfterTimeValueSpecified)
                {
                    return this.QueueAfterTimeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.QueueAfterTimeValue = value.GetValueOrDefault();
                this.QueueAfterTimeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("QueueCode", Order=189, Form=XmlSchemaForm.Unqualified)]
        public bool QueueCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the QueueCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool QueueCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> QueueCode
        {
            get
            {
                if (this.QueueCodeValueSpecified)
                {
                    return this.QueueCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.QueueCodeValue = value.GetValueOrDefault();
                this.QueueCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("RecommendedActionTypeId", Order=190, Form=XmlSchemaForm.Unqualified)]
        public bool RecommendedActionTypeIdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RecommendedActionTypeId property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool RecommendedActionTypeIdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> RecommendedActionTypeId
        {
            get
            {
                if (this.RecommendedActionTypeIdValueSpecified)
                {
                    return this.RecommendedActionTypeIdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RecommendedActionTypeIdValue = value.GetValueOrDefault();
                this.RecommendedActionTypeIdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("RecordText", Order=191, Form=XmlSchemaForm.Unqualified)]
        public bool RecordTextValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RecordText property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool RecordTextValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> RecordText
        {
            get
            {
                if (this.RecordTextValueSpecified)
                {
                    return this.RecordTextValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RecordTextValue = value.GetValueOrDefault();
                this.RecordTextValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("RedFlagActionTypeId", Order=192, Form=XmlSchemaForm.Unqualified)]
        public bool RedFlagActionTypeIdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RedFlagActionTypeId property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool RedFlagActionTypeIdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> RedFlagActionTypeId
        {
            get
            {
                if (this.RedFlagActionTypeIdValueSpecified)
                {
                    return this.RedFlagActionTypeIdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RedFlagActionTypeIdValue = value.GetValueOrDefault();
                this.RedFlagActionTypeIdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("RedFlagAlertLogId", Order=193, Form=XmlSchemaForm.Unqualified)]
        public bool RedFlagAlertLogIdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RedFlagAlertLogId property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool RedFlagAlertLogIdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> RedFlagAlertLogId
        {
            get
            {
                if (this.RedFlagAlertLogIdValueSpecified)
                {
                    return this.RedFlagAlertLogIdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RedFlagAlertLogIdValue = value.GetValueOrDefault();
                this.RedFlagAlertLogIdValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _redFlagComments;
        
        [XmlElementAttribute("RedFlagComments", Order=194, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> RedFlagComments
        {
            get
            {
                return _redFlagComments;
            }
            set
            {
                _redFlagComments = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RedFlagComments collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool RedFlagCommentsSpecified
        {
            get
            {
                return ((this.RedFlagComments != null) 
                            && (this.RedFlagComments.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("RedFlagFactId", Order=195, Form=XmlSchemaForm.Unqualified)]
        public bool RedFlagFactIdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RedFlagFactId property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool RedFlagFactIdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> RedFlagFactId
        {
            get
            {
                if (this.RedFlagFactIdValueSpecified)
                {
                    return this.RedFlagFactIdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RedFlagFactIdValue = value.GetValueOrDefault();
                this.RedFlagFactIdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("RedFlagStatus", Order=196, Form=XmlSchemaForm.Unqualified)]
        public bool RedFlagStatusValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RedFlagStatus property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool RedFlagStatusValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> RedFlagStatus
        {
            get
            {
                if (this.RedFlagStatusValueSpecified)
                {
                    return this.RedFlagStatusValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RedFlagStatusValue = value.GetValueOrDefault();
                this.RedFlagStatusValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _refNumber3;
        
        [XmlElementAttribute("RefNumber3", Order=197, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> RefNumber3
        {
            get
            {
                return _refNumber3;
            }
            set
            {
                _refNumber3 = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RefNumber3 collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool RefNumber3Specified
        {
            get
            {
                return ((this.RefNumber3 != null) 
                            && (this.RefNumber3.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ReferenceId", Order=198, Form=XmlSchemaForm.Unqualified)]
        public bool ReferenceIdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ReferenceId property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ReferenceIdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ReferenceId
        {
            get
            {
                if (this.ReferenceIdValueSpecified)
                {
                    return this.ReferenceIdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ReferenceIdValue = value.GetValueOrDefault();
                this.ReferenceIdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("RequestDate", Order=199, Form=XmlSchemaForm.Unqualified)]
        public bool RequestDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RequestDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool RequestDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> RequestDate
        {
            get
            {
                if (this.RequestDateValueSpecified)
                {
                    return this.RequestDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RequestDateValue = value.GetValueOrDefault();
                this.RequestDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("RequestNumber", Order=200, Form=XmlSchemaForm.Unqualified)]
        public bool RequestNumberValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RequestNumber property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool RequestNumberValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> RequestNumber
        {
            get
            {
                if (this.RequestNumberValueSpecified)
                {
                    return this.RequestNumberValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RequestNumberValue = value.GetValueOrDefault();
                this.RequestNumberValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("RequestTime", Order=201, Form=XmlSchemaForm.Unqualified)]
        public bool RequestTimeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RequestTime property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool RequestTimeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> RequestTime
        {
            get
            {
                if (this.RequestTimeValueSpecified)
                {
                    return this.RequestTimeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RequestTimeValue = value.GetValueOrDefault();
                this.RequestTimeValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _res2Months;
        
        [XmlElementAttribute("Res2Months", Order=202, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> Res2Months
        {
            get
            {
                return _res2Months;
            }
            set
            {
                _res2Months = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Res2Months collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool Res2MonthsSpecified
        {
            get
            {
                return ((this.Res2Months != null) 
                            && (this.Res2Months.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _res2PrevMonths;
        
        [XmlElementAttribute("Res2PrevMonths", Order=203, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> Res2PrevMonths
        {
            get
            {
                return _res2PrevMonths;
            }
            set
            {
                _res2PrevMonths = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Res2PrevMonths collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool Res2PrevMonthsSpecified
        {
            get
            {
                return ((this.Res2PrevMonths != null) 
                            && (this.Res2PrevMonths.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _res2PrevType;
        
        [XmlElementAttribute("Res2PrevType", Order=204, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> Res2PrevType
        {
            get
            {
                return _res2PrevType;
            }
            set
            {
                _res2PrevType = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Res2PrevType collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool Res2PrevTypeSpecified
        {
            get
            {
                return ((this.Res2PrevType != null) 
                            && (this.Res2PrevType.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _res2PrevYears;
        
        [XmlElementAttribute("Res2PrevYears", Order=205, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> Res2PrevYears
        {
            get
            {
                return _res2PrevYears;
            }
            set
            {
                _res2PrevYears = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Res2PrevYears collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool Res2PrevYearsSpecified
        {
            get
            {
                return ((this.Res2PrevYears != null) 
                            && (this.Res2PrevYears.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _res2Type;
        
        [XmlElementAttribute("Res2Type", Order=206, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> Res2Type
        {
            get
            {
                return _res2Type;
            }
            set
            {
                _res2Type = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Res2Type collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool Res2TypeSpecified
        {
            get
            {
                return ((this.Res2Type != null) 
                            && (this.Res2Type.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _res2Years;
        
        [XmlElementAttribute("Res2Years", Order=207, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> Res2Years
        {
            get
            {
                return _res2Years;
            }
            set
            {
                _res2Years = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Res2Years collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool Res2YearsSpecified
        {
            get
            {
                return ((this.Res2Years != null) 
                            && (this.Res2Years.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ResponseFormat", Order=208, Form=XmlSchemaForm.Unqualified)]
        public bool ResponseFormatValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ResponseFormat property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ResponseFormatValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ResponseFormat
        {
            get
            {
                if (this.ResponseFormatValueSpecified)
                {
                    return this.ResponseFormatValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ResponseFormatValue = value.GetValueOrDefault();
                this.ResponseFormatValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _riskModel;
        
        [XmlElementAttribute("RiskModel", Order=209, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> RiskModel
        {
            get
            {
                return _riskModel;
            }
            set
            {
                _riskModel = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RiskModel collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool RiskModelSpecified
        {
            get
            {
                return ((this.RiskModel != null) 
                            && (this.RiskModel.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("RtNumber", Order=210, Form=XmlSchemaForm.Unqualified)]
        public bool RtNumberValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RtNumber property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool RtNumberValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> RtNumber
        {
            get
            {
                if (this.RtNumberValueSpecified)
                {
                    return this.RtNumberValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RtNumberValue = value.GetValueOrDefault();
                this.RtNumberValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _scoreModel;
        
        [XmlElementAttribute("ScoreModel", Order=211, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> ScoreModel
        {
            get
            {
                return _scoreModel;
            }
            set
            {
                _scoreModel = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ScoreModel collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool ScoreModelSpecified
        {
            get
            {
                return ((this.ScoreModel != null) 
                            && (this.ScoreModel.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SecondaryName", Order=212, Form=XmlSchemaForm.Unqualified)]
        public bool SecondaryNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SecondaryName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SecondaryNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SecondaryName
        {
            get
            {
                if (this.SecondaryNameValueSpecified)
                {
                    return this.SecondaryNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SecondaryNameValue = value.GetValueOrDefault();
                this.SecondaryNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SelectCheckCode", Order=213, Form=XmlSchemaForm.Unqualified)]
        public bool SelectCheckCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SelectCheckCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SelectCheckCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SelectCheckCode
        {
            get
            {
                if (this.SelectCheckCodeValueSpecified)
                {
                    return this.SelectCheckCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SelectCheckCodeValue = value.GetValueOrDefault();
                this.SelectCheckCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ServiceBureau", Order=214, Form=XmlSchemaForm.Unqualified)]
        public bool ServiceBureauValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ServiceBureau property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ServiceBureauValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ServiceBureau
        {
            get
            {
                if (this.ServiceBureauValueSpecified)
                {
                    return this.ServiceBureauValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ServiceBureauValue = value.GetValueOrDefault();
                this.ServiceBureauValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SigInconsistent", Order=215, Form=XmlSchemaForm.Unqualified)]
        public bool SigInconsistentValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SigInconsistent property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SigInconsistentValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SigInconsistent
        {
            get
            {
                if (this.SigInconsistentValueSpecified)
                {
                    return this.SigInconsistentValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SigInconsistentValue = value.GetValueOrDefault();
                this.SigInconsistentValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Source", Order=216, Form=XmlSchemaForm.Unqualified)]
        public bool SourceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Source property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SourceValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Source
        {
            get
            {
                if (this.SourceValueSpecified)
                {
                    return this.SourceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SourceValue = value.GetValueOrDefault();
                this.SourceValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SpecialComment", Order=217, Form=XmlSchemaForm.Unqualified)]
        public bool SpecialCommentValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SpecialComment property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SpecialCommentValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SpecialComment
        {
            get
            {
                if (this.SpecialCommentValueSpecified)
                {
                    return this.SpecialCommentValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SpecialCommentValue = value.GetValueOrDefault();
                this.SpecialCommentValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SpouseAccessPin", Order=218, Form=XmlSchemaForm.Unqualified)]
        public bool SpouseAccessPinValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SpouseAccessPin property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SpouseAccessPinValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SpouseAccessPin
        {
            get
            {
                if (this.SpouseAccessPinValueSpecified)
                {
                    return this.SpouseAccessPinValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SpouseAccessPinValue = value.GetValueOrDefault();
                this.SpouseAccessPinValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SpouseBirthDate", Order=219, Form=XmlSchemaForm.Unqualified)]
        public bool SpouseBirthDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SpouseBirthDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SpouseBirthDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SpouseBirthDate
        {
            get
            {
                if (this.SpouseBirthDateValueSpecified)
                {
                    return this.SpouseBirthDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SpouseBirthDateValue = value.GetValueOrDefault();
                this.SpouseBirthDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SpouseEmpCity", Order=220, Form=XmlSchemaForm.Unqualified)]
        public bool SpouseEmpCityValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SpouseEmpCity property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SpouseEmpCityValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SpouseEmpCity
        {
            get
            {
                if (this.SpouseEmpCityValueSpecified)
                {
                    return this.SpouseEmpCityValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SpouseEmpCityValue = value.GetValueOrDefault();
                this.SpouseEmpCityValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SpouseEmpName", Order=221, Form=XmlSchemaForm.Unqualified)]
        public bool SpouseEmpNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SpouseEmpName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SpouseEmpNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SpouseEmpName
        {
            get
            {
                if (this.SpouseEmpNameValueSpecified)
                {
                    return this.SpouseEmpNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SpouseEmpNameValue = value.GetValueOrDefault();
                this.SpouseEmpNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SpouseEmpState", Order=222, Form=XmlSchemaForm.Unqualified)]
        public bool SpouseEmpStateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SpouseEmpState property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SpouseEmpStateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SpouseEmpState
        {
            get
            {
                if (this.SpouseEmpStateValueSpecified)
                {
                    return this.SpouseEmpStateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SpouseEmpStateValue = value.GetValueOrDefault();
                this.SpouseEmpStateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SpouseEmpStreet", Order=223, Form=XmlSchemaForm.Unqualified)]
        public bool SpouseEmpStreetValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SpouseEmpStreet property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SpouseEmpStreetValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SpouseEmpStreet
        {
            get
            {
                if (this.SpouseEmpStreetValueSpecified)
                {
                    return this.SpouseEmpStreetValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SpouseEmpStreetValue = value.GetValueOrDefault();
                this.SpouseEmpStreetValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SpouseEmpZipCode", Order=224, Form=XmlSchemaForm.Unqualified)]
        public bool SpouseEmpZipCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SpouseEmpZipCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SpouseEmpZipCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SpouseEmpZipCode
        {
            get
            {
                if (this.SpouseEmpZipCodeValueSpecified)
                {
                    return this.SpouseEmpZipCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SpouseEmpZipCodeValue = value.GetValueOrDefault();
                this.SpouseEmpZipCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SpouseEndEmpDate", Order=225, Form=XmlSchemaForm.Unqualified)]
        public bool SpouseEndEmpDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SpouseEndEmpDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SpouseEndEmpDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SpouseEndEmpDate
        {
            get
            {
                if (this.SpouseEndEmpDateValueSpecified)
                {
                    return this.SpouseEndEmpDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SpouseEndEmpDateValue = value.GetValueOrDefault();
                this.SpouseEndEmpDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SpouseFirst", Order=226, Form=XmlSchemaForm.Unqualified)]
        public bool SpouseFirstValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SpouseFirst property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SpouseFirstValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SpouseFirst
        {
            get
            {
                if (this.SpouseFirstValueSpecified)
                {
                    return this.SpouseFirstValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SpouseFirstValue = value.GetValueOrDefault();
                this.SpouseFirstValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SpouseIncome", Order=227, Form=XmlSchemaForm.Unqualified)]
        public bool SpouseIncomeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SpouseIncome property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SpouseIncomeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SpouseIncome
        {
            get
            {
                if (this.SpouseIncomeValueSpecified)
                {
                    return this.SpouseIncomeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SpouseIncomeValue = value.GetValueOrDefault();
                this.SpouseIncomeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SpouseLast", Order=228, Form=XmlSchemaForm.Unqualified)]
        public bool SpouseLastValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SpouseLast property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SpouseLastValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SpouseLast
        {
            get
            {
                if (this.SpouseLastValueSpecified)
                {
                    return this.SpouseLastValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SpouseLastValue = value.GetValueOrDefault();
                this.SpouseLastValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SpouseMiddle", Order=229, Form=XmlSchemaForm.Unqualified)]
        public bool SpouseMiddleValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SpouseMiddle property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SpouseMiddleValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SpouseMiddle
        {
            get
            {
                if (this.SpouseMiddleValueSpecified)
                {
                    return this.SpouseMiddleValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SpouseMiddleValue = value.GetValueOrDefault();
                this.SpouseMiddleValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SpouseOccupation", Order=230, Form=XmlSchemaForm.Unqualified)]
        public bool SpouseOccupationValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SpouseOccupation property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SpouseOccupationValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SpouseOccupation
        {
            get
            {
                if (this.SpouseOccupationValueSpecified)
                {
                    return this.SpouseOccupationValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SpouseOccupationValue = value.GetValueOrDefault();
                this.SpouseOccupationValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SpousePayBasis", Order=231, Form=XmlSchemaForm.Unqualified)]
        public bool SpousePayBasisValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SpousePayBasis property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SpousePayBasisValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SpousePayBasis
        {
            get
            {
                if (this.SpousePayBasisValueSpecified)
                {
                    return this.SpousePayBasisValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SpousePayBasisValue = value.GetValueOrDefault();
                this.SpousePayBasisValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SpouseSecondaryNm", Order=232, Form=XmlSchemaForm.Unqualified)]
        public bool SpouseSecondaryNmValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SpouseSecondaryNm property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SpouseSecondaryNmValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SpouseSecondaryNm
        {
            get
            {
                if (this.SpouseSecondaryNmValueSpecified)
                {
                    return this.SpouseSecondaryNmValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SpouseSecondaryNmValue = value.GetValueOrDefault();
                this.SpouseSecondaryNmValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SpouseSsn", Order=233, Form=XmlSchemaForm.Unqualified)]
        public bool SpouseSsnValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SpouseSsn property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SpouseSsnValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SpouseSsn
        {
            get
            {
                if (this.SpouseSsnValueSpecified)
                {
                    return this.SpouseSsnValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SpouseSsnValue = value.GetValueOrDefault();
                this.SpouseSsnValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SpouseStartEmpDate", Order=234, Form=XmlSchemaForm.Unqualified)]
        public bool SpouseStartEmpDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SpouseStartEmpDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SpouseStartEmpDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SpouseStartEmpDate
        {
            get
            {
                if (this.SpouseStartEmpDateValueSpecified)
                {
                    return this.SpouseStartEmpDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SpouseStartEmpDateValue = value.GetValueOrDefault();
                this.SpouseStartEmpDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SpouseSuffix", Order=235, Form=XmlSchemaForm.Unqualified)]
        public bool SpouseSuffixValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SpouseSuffix property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SpouseSuffixValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SpouseSuffix
        {
            get
            {
                if (this.SpouseSuffixValueSpecified)
                {
                    return this.SpouseSuffixValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SpouseSuffixValue = value.GetValueOrDefault();
                this.SpouseSuffixValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Ssn", Order=236, Form=XmlSchemaForm.Unqualified)]
        public bool SsnValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Ssn property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SsnValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Ssn
        {
            get
            {
                if (this.SsnValueSpecified)
                {
                    return this.SsnValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SsnValue = value.GetValueOrDefault();
                this.SsnValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _ssnSearch;
        
        [XmlElementAttribute("SsnSearch", Order=237, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> SsnSearch
        {
            get
            {
                return _ssnSearch;
            }
            set
            {
                _ssnSearch = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the SsnSearch collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool SsnSearchSpecified
        {
            get
            {
                return ((this.SsnSearch != null) 
                            && (this.SsnSearch.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SsnSearchFacs", Order=238, Form=XmlSchemaForm.Unqualified)]
        public bool SsnSearchFacsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SsnSearchFacs property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SsnSearchFacsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SsnSearchFacs
        {
            get
            {
                if (this.SsnSearchFacsValueSpecified)
                {
                    return this.SsnSearchFacsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SsnSearchFacsValue = value.GetValueOrDefault();
                this.SsnSearchFacsValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("StartEmpDate", Order=239, Form=XmlSchemaForm.Unqualified)]
        public bool StartEmpDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StartEmpDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool StartEmpDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> StartEmpDate
        {
            get
            {
                if (this.StartEmpDateValueSpecified)
                {
                    return this.StartEmpDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.StartEmpDateValue = value.GetValueOrDefault();
                this.StartEmpDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("StatusCode", Order=240, Form=XmlSchemaForm.Unqualified)]
        public bool StatusCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StatusCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool StatusCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> StatusCode
        {
            get
            {
                if (this.StatusCodeValueSpecified)
                {
                    return this.StatusCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.StatusCodeValue = value.GetValueOrDefault();
                this.StatusCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("StrategyType", Order=241, Form=XmlSchemaForm.Unqualified)]
        public bool StrategyTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StrategyType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool StrategyTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> StrategyType
        {
            get
            {
                if (this.StrategyTypeValueSpecified)
                {
                    return this.StrategyTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.StrategyTypeValue = value.GetValueOrDefault();
                this.StrategyTypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SubscriberCode", Order=242, Form=XmlSchemaForm.Unqualified)]
        public bool SubscriberCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SubscriberCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SubscriberCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SubscriberCode
        {
            get
            {
                if (this.SubscriberCodeValueSpecified)
                {
                    return this.SubscriberCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SubscriberCodeValue = value.GetValueOrDefault();
                this.SubscriberCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TestEnvironment", Order=243, Form=XmlSchemaForm.Unqualified)]
        public bool TestEnvironmentValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TestEnvironment property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TestEnvironmentValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TestEnvironment
        {
            get
            {
                if (this.TestEnvironmentValueSpecified)
                {
                    return this.TestEnvironmentValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TestEnvironmentValue = value.GetValueOrDefault();
                this.TestEnvironmentValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UseType", Order=244, Form=XmlSchemaForm.Unqualified)]
        public bool UseTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UseType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UseTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UseType
        {
            get
            {
                if (this.UseTypeValueSpecified)
                {
                    return this.UseTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UseTypeValue = value.GetValueOrDefault();
                this.UseTypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("User", Order=245, Form=XmlSchemaForm.Unqualified)]
        public bool UserValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the User property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UserValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> User
        {
            get
            {
                if (this.UserValueSpecified)
                {
                    return this.UserValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UserValue = value.GetValueOrDefault();
                this.UserValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UserId", Order=246, Form=XmlSchemaForm.Unqualified)]
        public bool UserIdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UserId property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UserIdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UserId
        {
            get
            {
                if (this.UserIdValueSpecified)
                {
                    return this.UserIdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UserIdValue = value.GetValueOrDefault();
                this.UserIdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Version", Order=247, Form=XmlSchemaForm.Unqualified)]
        public bool VersionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Version property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool VersionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Version
        {
            get
            {
                if (this.VersionValueSpecified)
                {
                    return this.VersionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.VersionValue = value.GetValueOrDefault();
                this.VersionValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("Version_1", Order=248, Form=XmlSchemaForm.Unqualified)]
        public AccountService.VersionType Version1 { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<XmlElement> _any;
        
        [XmlAnyElementAttribute(Order=249)]
        public Collection<XmlElement> Any
        {
            get
            {
                return _any;
            }
            set
            {
                _any = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return ((this.Any != null) 
                            && (this.Any.Count != 0));
            }
        }
    }
}
