import { ExcpAddendaAddendaInfo } from "./excpAddendaAddendaInfo";
import { ExcpAddendaAddendaStd } from "./excpAddendaAddendaStd";
import { ExcpAddendaPmtRelatedInfo } from "./excpAddendaPmtRelatedInfo";
import { VersionType } from "./versionType";
import { XmlElement } from "./xmlElement";
export interface ExcpAddenda {
    addendaInfo: ExcpAddendaAddendaInfo[];
    addendaInfoSpecified: boolean;
    addendaSeqNum: string;
    addendaStd: ExcpAddendaAddendaStd[];
    addendaStdSpecified: boolean;
    addendaType: string;
    cbrAddendaInfo: string;
    changeCode: string;
    cityState: string;
    corTraceSeq: string;
    correctedData: string;
    correctedDataIat: string;
    countryPostalCode: string;
    dateOfBirth: string;
    dateOfDeath: string;
    detailSeqNum: string;
    dfiBranchCntryCode: string;
    dfiIdNumQualifier: string;
    dfiIdent: string;
    dfiName: string;
    dishonorAddendaInfo: string;
    dishonorReason: string;
    dishonorSettlDate: string;
    dishonorTrace: string;
    excpReason: string;
    foreignAcctNum: string;
    foreignPayment: string;
    foreignPaymentIat: string;
    foreignRecDfi: string;
    foreignTrace: string;
    foreignTraceIat: string;
    iatRetAddendaInfo: string;
    locatorValue: number;
    locatorValueSpecified: boolean;
    locator: number | null;
    networkIdCode: string;
    origEntryPmt: string;
    origEntryPmtIat: string;
    origForeignPmt: string;
    origForeignRdfi: string;
    origSettlDate: string;
    originalRecDfi: string;
    originalTrace: string;
    originatorAddr: string;
    originatorName: string;
    pmtRelatedInfo: ExcpAddendaPmtRelatedInfo[];
    pmtRelatedInfoSpecified: boolean;
    receiverAddr: string;
    receiverIdent: string;
    receivingName: string;
    recordType: string;
    returnReason: string;
    returnSettlDate: string;
    returnTrace: string;
    terminalCity: string;
    terminalIdCode: string;
    terminalLocation: string;
    terminalState: string;
    traceNumber: string;
    tranDateMmDd: string;
    tranDesc: string;
    tranSerial: string;
    tranTime: string;
    tranType: string;
    typeValue: number;
    typeValueSpecified: boolean;
    type: number | null;
    version1: VersionType;
    any: XmlElement[];
    anySpecified: boolean;
}
