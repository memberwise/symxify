import { DonorIdType } from "./donorIdType";
import { RecipientIdType } from "./recipientIdType";
import { AuthorizationType } from "./authorizationType";
import { RemitInformation } from "./remitInformation";
import { LoanPaymentType } from "./loanPaymentType";
import { TransactionsBaseRequest } from "./transactionsBaseRequest";

export interface TransferRequest extends TransactionsBaseRequest {
    donorAccountNumber: string;
    donorId: string;
    donorTypeValue: DonorIdType;
    donorTypeValueSpecified: boolean;
    donorType: DonorIdType | null;
    recipientAccountNumber: string;
    recipientId: string;
    recipientTypeValue: RecipientIdType;
    recipientTypeValueSpecified: boolean;
    recipientType: RecipientIdType | null;
    transferAmountValue: number;
    transferAmountValueSpecified: boolean;
    transferAmount: number | null;
    comment: string;
    authorizationTypeValue: AuthorizationType;
    authorizationTypeValueSpecified: boolean;
    authorizationType: AuthorizationType | null;
    remitInformation: RemitInformation;
    forcePostRequestedValue: boolean;
    forcePostRequestedValueSpecified: boolean;
    forcePostRequested: boolean | null;
    principalAmountValue: number;
    principalAmountValueSpecified: boolean;
    principalAmount: number | null;
    sourceCode: string;
    effectiveDateValue: string;
    effectiveDateValueSpecified: boolean;
    effectiveDate: string | null;
    commentCodeValue: number;
    commentCodeValueSpecified: boolean;
    commentCode: number | null;
    loanPaymentTypeValue: LoanPaymentType;
    loanPaymentTypeValueSpecified: boolean;
    loanPaymentType: LoanPaymentType | null;
    regulationDLimitedValue: boolean | null;
    regulationDLimitedValueSpecified: boolean;
    regulationDLimited: boolean | null;
    recurrenceRequestedValue: boolean;
    recurrenceRequestedValueSpecified: boolean;
    recurrenceRequested: boolean | null;
    glComment: string;
}