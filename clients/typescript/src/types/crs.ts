import { CrsBureauInfo } from "./crsBureauInfo";
import { CrsChexSystemsVersion } from "./crsChexSystemsVersion";
import { CrsDpBureauInfo } from "./crsDpBureauInfo";
import { CrsDpPassword } from "./crsDpPassword";
import { CrsDpPasswordExpiration } from "./crsDpPasswordExpiration";
import { CrsDpSubscriberCode } from "./crsDpSubscriberCode";
import { CrsOptionalFeatureCode } from "./crsOptionalFeatureCode";
import { CrsPassword } from "./crsPassword";
import { CrsPasswordExpiration } from "./crsPasswordExpiration";
import { CrsResponseFormat } from "./crsResponseFormat";
import { CrsRiskModel } from "./crsRiskModel";
import { CrsScoreModel } from "./crsScoreModel";
import { CrsSubscriberCode } from "./crsSubscriberCode";
import { CrsTestEnvironment } from "./crsTestEnvironment";
import { VersionType } from "./versionType";

export interface Crs {
    bureauInfo: CrsBureauInfo[];
    chexSystemsVersion: CrsChexSystemsVersion[];
    defaultBureau: number | null;
    dpBureauInfo: CrsDpBureauInfo[];
    dpPassword: CrsDpPassword[];
    dpPasswordExpiration: CrsDpPasswordExpiration[];
    dpSubscriberCode: CrsDpSubscriberCode[];
    hawkIndicator: string;
    includeIdvReport: boolean | null;
    includeNewAccountChexReport: boolean | null;
    includeOfacReport: boolean | null;
    includeQualiFileReport: boolean | null;
    internetPassword: string;
    internetPasswordExpiration: string | null;
    internetUserId: string;
    ipAddress: string;
    lookType: string;
    operatorCode: string;
    optionalFeatureCode: CrsOptionalFeatureCode[];
    password: CrsPassword[];
    passwordExpiration: CrsPasswordExpiration[];
    responseFormat: CrsResponseFormat[];
    riskModel: CrsRiskModel[];
    scoreModel: CrsScoreModel[];
    serviceBureauIndicator: boolean | null;
    strategyType: string;
    subscriberCode: CrsSubscriberCode[];
    testEnvironment: CrsTestEnvironment[];
    useCrsParameters: boolean | null;
    useType: string;
    userId: string;
    xpnSelectCheckCode: string;
    version1: VersionType;
}