//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 2.1.1182.0 using the following command:
// xscgen C:\Users\tbuese\Desktop\Symxchange\AccountsPayableService/*.xsd --sf --un --uc --order --cn -0 --collectionSettersMode=Public -o C:\Users\tbuese\Desktop\Symxchange\AccountsPayableService\generated-output -n AccountsPayableService
namespace AccountsPayableService
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.Diagnostics;
    using System.Xml;
    using System.Xml.Schema;
    using System.Xml.Serialization;
    
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1182.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("Vendor", Namespace="http://www.symxchange.generated.symitar.com/crud/accountspayable/dto/retrieve")]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    [XmlRootAttribute("Vendor", Namespace="http://www.symxchange.generated.symitar.com/crud/accountspayable/dto/retrieve")]
    public partial class Vendor
    {
        
        [XmlElementAttribute("AchGroupNumber", Order=0, Form=XmlSchemaForm.Unqualified)]
        public string AchGroupNumber { get; set; }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AddressType", Order=1, Form=XmlSchemaForm.Unqualified)]
        public short AddressTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AddressType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AddressTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> AddressType
        {
            get
            {
                if (this.AddressTypeValueSpecified)
                {
                    return this.AddressTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AddressTypeValue = value.GetValueOrDefault();
                this.AddressTypeValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("AltEmail", Order=2, Form=XmlSchemaForm.Unqualified)]
        public string AltEmail { get; set; }
        
        [XmlElementAttribute("City", Order=3, Form=XmlSchemaForm.Unqualified)]
        public string City { get; set; }
        
        [XmlElementAttribute("Comment1", Order=4, Form=XmlSchemaForm.Unqualified)]
        public string Comment1 { get; set; }
        
        [XmlElementAttribute("CompanyDisc", Order=5, Form=XmlSchemaForm.Unqualified)]
        public string CompanyDisc { get; set; }
        
        [XmlElementAttribute("CompanyEntryDesc", Order=6, Form=XmlSchemaForm.Unqualified)]
        public string CompanyEntryDesc { get; set; }
        
        [XmlElementAttribute("Contact", Order=7, Form=XmlSchemaForm.Unqualified)]
        public string Contact { get; set; }
        
        [XmlElementAttribute("Contact2", Order=8, Form=XmlSchemaForm.Unqualified)]
        public string Contact2 { get; set; }
        
        [XmlElementAttribute("Contact2Desc", Order=9, Form=XmlSchemaForm.Unqualified)]
        public string Contact2Desc { get; set; }
        
        [XmlElementAttribute("Contact2Ext", Order=10, Form=XmlSchemaForm.Unqualified)]
        public string Contact2Ext { get; set; }
        
        [XmlElementAttribute("Contact2Phone", Order=11, Form=XmlSchemaForm.Unqualified)]
        public string Contact2Phone { get; set; }
        
        [XmlElementAttribute("ContactDesc", Order=12, Form=XmlSchemaForm.Unqualified)]
        public string ContactDesc { get; set; }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditLastYear", Order=13, Form=XmlSchemaForm.Unqualified)]
        public decimal CreditLastYearValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditLastYear property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditLastYearValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<decimal> CreditLastYear
        {
            get
            {
                if (this.CreditLastYearValueSpecified)
                {
                    return this.CreditLastYearValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditLastYearValue = value.GetValueOrDefault();
                this.CreditLastYearValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditYtd", Order=14, Form=XmlSchemaForm.Unqualified)]
        public decimal CreditYtdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditYtd property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditYtdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<decimal> CreditYtd
        {
            get
            {
                if (this.CreditYtdValueSpecified)
                {
                    return this.CreditYtdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditYtdValue = value.GetValueOrDefault();
                this.CreditYtdValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("CustomerId", Order=15, Form=XmlSchemaForm.Unqualified)]
        public string CustomerId { get; set; }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DebitLastYear", Order=16, Form=XmlSchemaForm.Unqualified)]
        public decimal DebitLastYearValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DebitLastYear property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DebitLastYearValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<decimal> DebitLastYear
        {
            get
            {
                if (this.DebitLastYearValueSpecified)
                {
                    return this.DebitLastYearValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DebitLastYearValue = value.GetValueOrDefault();
                this.DebitLastYearValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DebitYtd", Order=17, Form=XmlSchemaForm.Unqualified)]
        public decimal DebitYtdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DebitYtd property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DebitYtdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<decimal> DebitYtd
        {
            get
            {
                if (this.DebitYtdValueSpecified)
                {
                    return this.DebitYtdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DebitYtdValue = value.GetValueOrDefault();
                this.DebitYtdValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("DfiAccount", Order=18, Form=XmlSchemaForm.Unqualified)]
        public string DfiAccount { get; set; }
        
        [XmlElementAttribute("Email", Order=19, Form=XmlSchemaForm.Unqualified)]
        public string Email { get; set; }
        
        [XmlElementAttribute("ExtraAddress", Order=20, Form=XmlSchemaForm.Unqualified)]
        public string ExtraAddress { get; set; }
        
        [XmlElementAttribute("Fax", Order=21, Form=XmlSchemaForm.Unqualified)]
        public string Fax { get; set; }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("FmLastPurgeDate", Order=22, Form=XmlSchemaForm.Unqualified, DataType="date")]
        public DateTime FmLastPurgeDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FmLastPurgeDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FmLastPurgeDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<DateTime> FmLastPurgeDate
        {
            get
            {
                if (this.FmLastPurgeDateValueSpecified)
                {
                    return this.FmLastPurgeDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FmLastPurgeDateValue = value.GetValueOrDefault();
                this.FmLastPurgeDateValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("GlAcctsPay", Order=23, Form=XmlSchemaForm.Unqualified)]
        public string GlAcctsPay { get; set; }
        
        [XmlElementAttribute("GlDiscount", Order=24, Form=XmlSchemaForm.Unqualified)]
        public string GlDiscount { get; set; }
        
        [XmlElementAttribute("GlExpense", Order=25, Form=XmlSchemaForm.Unqualified)]
        public string GlExpense { get; set; }
        
        [XmlElementAttribute("GlNameAcctsPay", Order=26, Form=XmlSchemaForm.Unqualified)]
        public string GlNameAcctsPay { get; set; }
        
        [XmlElementAttribute("GlNameDiscount", Order=27, Form=XmlSchemaForm.Unqualified)]
        public string GlNameDiscount { get; set; }
        
        [XmlElementAttribute("GlNameExpense", Order=28, Form=XmlSchemaForm.Unqualified)]
        public string GlNameExpense { get; set; }
        
        [XmlElementAttribute("InvoiceList", Order=29, Form=XmlSchemaForm.Unqualified)]
        public InvoiceList InvoiceList { get; set; }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IrsAmountCode", Order=30, Form=XmlSchemaForm.Unqualified)]
        public short IrsAmountCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IrsAmountCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IrsAmountCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> IrsAmountCode
        {
            get
            {
                if (this.IrsAmountCodeValueSpecified)
                {
                    return this.IrsAmountCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IrsAmountCodeValue = value.GetValueOrDefault();
                this.IrsAmountCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IrsCorrection", Order=31, Form=XmlSchemaForm.Unqualified)]
        public short IrsCorrectionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IrsCorrection property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IrsCorrectionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> IrsCorrection
        {
            get
            {
                if (this.IrsCorrectionValueSpecified)
                {
                    return this.IrsCorrectionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IrsCorrectionValue = value.GetValueOrDefault();
                this.IrsCorrectionValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("IrsNameControl", Order=32, Form=XmlSchemaForm.Unqualified)]
        public string IrsNameControl { get; set; }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IrsReporting", Order=33, Form=XmlSchemaForm.Unqualified)]
        public short IrsReportingValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IrsReporting property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IrsReportingValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> IrsReporting
        {
            get
            {
                if (this.IrsReportingValueSpecified)
                {
                    return this.IrsReportingValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IrsReportingValue = value.GetValueOrDefault();
                this.IrsReportingValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("IrsReportingName", Order=34, Form=XmlSchemaForm.Unqualified)]
        public string IrsReportingName { get; set; }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LastFmDate", Order=35, Form=XmlSchemaForm.Unqualified, DataType="date")]
        public DateTime LastFmDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LastFmDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LastFmDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<DateTime> LastFmDate
        {
            get
            {
                if (this.LastFmDateValueSpecified)
                {
                    return this.LastFmDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LastFmDateValue = value.GetValueOrDefault();
                this.LastFmDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LastPaymentAmount", Order=36, Form=XmlSchemaForm.Unqualified)]
        public decimal LastPaymentAmountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LastPaymentAmount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LastPaymentAmountValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<decimal> LastPaymentAmount
        {
            get
            {
                if (this.LastPaymentAmountValueSpecified)
                {
                    return this.LastPaymentAmountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LastPaymentAmountValue = value.GetValueOrDefault();
                this.LastPaymentAmountValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LastPaymentDate", Order=37, Form=XmlSchemaForm.Unqualified, DataType="date")]
        public DateTime LastPaymentDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LastPaymentDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LastPaymentDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<DateTime> LastPaymentDate
        {
            get
            {
                if (this.LastPaymentDateValueSpecified)
                {
                    return this.LastPaymentDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LastPaymentDateValue = value.GetValueOrDefault();
                this.LastPaymentDateValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("Name", Order=38, Form=XmlSchemaForm.Unqualified)]
        public string Name { get; set; }
        
        [XmlElementAttribute("Number", Order=39, Form=XmlSchemaForm.Unqualified)]
        public string Number { get; set; }
        
        [XmlElementAttribute("Payee", Order=40, Form=XmlSchemaForm.Unqualified)]
        public string Payee { get; set; }
        
        [XmlElementAttribute("Phone", Order=41, Form=XmlSchemaForm.Unqualified)]
        public string Phone { get; set; }
        
        [XmlElementAttribute("PhoneExtension", Order=42, Form=XmlSchemaForm.Unqualified)]
        public string PhoneExtension { get; set; }
        
        [XmlElementAttribute("RdfiRt", Order=43, Form=XmlSchemaForm.Unqualified)]
        public string RdfiRt { get; set; }
        
        [XmlElementAttribute("ReceivingComp", Order=44, Form=XmlSchemaForm.Unqualified)]
        public string ReceivingComp { get; set; }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("RecordChangeDate", Order=45, Form=XmlSchemaForm.Unqualified, DataType="date")]
        public DateTime RecordChangeDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RecordChangeDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool RecordChangeDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<DateTime> RecordChangeDate
        {
            get
            {
                if (this.RecordChangeDateValueSpecified)
                {
                    return this.RecordChangeDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RecordChangeDateValue = value.GetValueOrDefault();
                this.RecordChangeDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("RestrictionLevel", Order=46, Form=XmlSchemaForm.Unqualified)]
        public short RestrictionLevelValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RestrictionLevel property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool RestrictionLevelValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> RestrictionLevel
        {
            get
            {
                if (this.RestrictionLevelValueSpecified)
                {
                    return this.RestrictionLevelValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RestrictionLevelValue = value.GetValueOrDefault();
                this.RestrictionLevelValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("Ssn", Order=47, Form=XmlSchemaForm.Unqualified)]
        public string Ssn { get; set; }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SsnType", Order=48, Form=XmlSchemaForm.Unqualified)]
        public short SsnTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SsnType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SsnTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> SsnType
        {
            get
            {
                if (this.SsnTypeValueSpecified)
                {
                    return this.SsnTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SsnTypeValue = value.GetValueOrDefault();
                this.SsnTypeValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("State", Order=49, Form=XmlSchemaForm.Unqualified)]
        public string State { get; set; }
        
        [XmlElementAttribute("Street", Order=50, Form=XmlSchemaForm.Unqualified)]
        public string Street { get; set; }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UnpaidBalance", Order=51, Form=XmlSchemaForm.Unqualified)]
        public decimal UnpaidBalanceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UnpaidBalance property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UnpaidBalanceValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<decimal> UnpaidBalance
        {
            get
            {
                if (this.UnpaidBalanceValueSpecified)
                {
                    return this.UnpaidBalanceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UnpaidBalanceValue = value.GetValueOrDefault();
                this.UnpaidBalanceValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("VendorFmHistoryList", Order=52, Form=XmlSchemaForm.Unqualified)]
        public VendorFmHistoryList VendorFmHistoryList { get; set; }
        
        [XmlElementAttribute("ZipCode", Order=53, Form=XmlSchemaForm.Unqualified)]
        public string ZipCode { get; set; }
        
        [XmlElementAttribute("Version_1", Order=54, Form=XmlSchemaForm.Unqualified)]
        public AccountsPayableService.VersionType Version1 { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<XmlElement> _any;
        
        [XmlAnyElementAttribute(Order=55)]
        public Collection<XmlElement> Any
        {
            get
            {
                return _any;
            }
            set
            {
                _any = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return ((this.Any != null) 
                            && (this.Any.Count != 0));
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Vendor" /> class.</para>
        /// </summary>
        public Vendor()
        {
            this._any = new Collection<XmlElement>();
        }
    }
}
