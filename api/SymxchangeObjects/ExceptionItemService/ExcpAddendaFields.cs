//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 2.1.1182.0 using the following command:
// xscgen C:\Users\tbuese\Desktop\Symxchange\ExceptionItemService/*.xsd --sf --un --uc --order --cn -0 --collectionSettersMode=Public -o C:\Users\tbuese\Desktop\Symxchange\ExceptionItemService\generated-output -n ExceptionItemService
namespace ExceptionItemService
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.Diagnostics;
    using System.Xml;
    using System.Xml.Schema;
    using System.Xml.Serialization;
    
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1182.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("ExcpAddendaFields", Namespace="http://www.symxchange.generated.symitar.com/crud/exceptionitem/dto/retrieve")]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class ExcpAddendaFields
    {
        
        [XmlIgnoreAttribute()]
        private Collection<short> _addendaInfo;
        
        [XmlElementAttribute("AddendaInfo", Order=0, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> AddendaInfo
        {
            get
            {
                return _addendaInfo;
            }
            set
            {
                _addendaInfo = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the AddendaInfo collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool AddendaInfoSpecified
        {
            get
            {
                return ((this.AddendaInfo != null) 
                            && (this.AddendaInfo.Count != 0));
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ExcpAddendaFields" /> class.</para>
        /// </summary>
        public ExcpAddendaFields()
        {
            this._addendaInfo = new Collection<short>();
            this._addendaStd = new Collection<short>();
            this._pmtRelatedInfo = new Collection<short>();
            this._any = new Collection<XmlElement>();
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AddendaSeqNum", Order=1, Form=XmlSchemaForm.Unqualified)]
        public bool AddendaSeqNumValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AddendaSeqNum property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AddendaSeqNumValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AddendaSeqNum
        {
            get
            {
                if (this.AddendaSeqNumValueSpecified)
                {
                    return this.AddendaSeqNumValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AddendaSeqNumValue = value.GetValueOrDefault();
                this.AddendaSeqNumValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _addendaStd;
        
        [XmlElementAttribute("AddendaStd", Order=2, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> AddendaStd
        {
            get
            {
                return _addendaStd;
            }
            set
            {
                _addendaStd = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the AddendaStd collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool AddendaStdSpecified
        {
            get
            {
                return ((this.AddendaStd != null) 
                            && (this.AddendaStd.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AddendaType", Order=3, Form=XmlSchemaForm.Unqualified)]
        public bool AddendaTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AddendaType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AddendaTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AddendaType
        {
            get
            {
                if (this.AddendaTypeValueSpecified)
                {
                    return this.AddendaTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AddendaTypeValue = value.GetValueOrDefault();
                this.AddendaTypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CbrAddendaInfo", Order=4, Form=XmlSchemaForm.Unqualified)]
        public bool CbrAddendaInfoValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CbrAddendaInfo property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CbrAddendaInfoValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CbrAddendaInfo
        {
            get
            {
                if (this.CbrAddendaInfoValueSpecified)
                {
                    return this.CbrAddendaInfoValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CbrAddendaInfoValue = value.GetValueOrDefault();
                this.CbrAddendaInfoValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ChangeCode", Order=5, Form=XmlSchemaForm.Unqualified)]
        public bool ChangeCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ChangeCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ChangeCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ChangeCode
        {
            get
            {
                if (this.ChangeCodeValueSpecified)
                {
                    return this.ChangeCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ChangeCodeValue = value.GetValueOrDefault();
                this.ChangeCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CityState", Order=6, Form=XmlSchemaForm.Unqualified)]
        public bool CityStateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CityState property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CityStateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CityState
        {
            get
            {
                if (this.CityStateValueSpecified)
                {
                    return this.CityStateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CityStateValue = value.GetValueOrDefault();
                this.CityStateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CorTraceSeq", Order=7, Form=XmlSchemaForm.Unqualified)]
        public bool CorTraceSeqValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CorTraceSeq property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CorTraceSeqValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CorTraceSeq
        {
            get
            {
                if (this.CorTraceSeqValueSpecified)
                {
                    return this.CorTraceSeqValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CorTraceSeqValue = value.GetValueOrDefault();
                this.CorTraceSeqValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CorrectedData", Order=8, Form=XmlSchemaForm.Unqualified)]
        public bool CorrectedDataValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CorrectedData property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CorrectedDataValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CorrectedData
        {
            get
            {
                if (this.CorrectedDataValueSpecified)
                {
                    return this.CorrectedDataValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CorrectedDataValue = value.GetValueOrDefault();
                this.CorrectedDataValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CorrectedDataIat", Order=9, Form=XmlSchemaForm.Unqualified)]
        public bool CorrectedDataIatValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CorrectedDataIat property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CorrectedDataIatValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CorrectedDataIat
        {
            get
            {
                if (this.CorrectedDataIatValueSpecified)
                {
                    return this.CorrectedDataIatValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CorrectedDataIatValue = value.GetValueOrDefault();
                this.CorrectedDataIatValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CountryPostalCode", Order=10, Form=XmlSchemaForm.Unqualified)]
        public bool CountryPostalCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CountryPostalCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CountryPostalCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CountryPostalCode
        {
            get
            {
                if (this.CountryPostalCodeValueSpecified)
                {
                    return this.CountryPostalCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CountryPostalCodeValue = value.GetValueOrDefault();
                this.CountryPostalCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DateOfBirth", Order=11, Form=XmlSchemaForm.Unqualified)]
        public bool DateOfBirthValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DateOfBirth property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DateOfBirthValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DateOfBirth
        {
            get
            {
                if (this.DateOfBirthValueSpecified)
                {
                    return this.DateOfBirthValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DateOfBirthValue = value.GetValueOrDefault();
                this.DateOfBirthValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DateOfDeath", Order=12, Form=XmlSchemaForm.Unqualified)]
        public bool DateOfDeathValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DateOfDeath property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DateOfDeathValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DateOfDeath
        {
            get
            {
                if (this.DateOfDeathValueSpecified)
                {
                    return this.DateOfDeathValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DateOfDeathValue = value.GetValueOrDefault();
                this.DateOfDeathValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DetailSeqNum", Order=13, Form=XmlSchemaForm.Unqualified)]
        public bool DetailSeqNumValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DetailSeqNum property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DetailSeqNumValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DetailSeqNum
        {
            get
            {
                if (this.DetailSeqNumValueSpecified)
                {
                    return this.DetailSeqNumValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DetailSeqNumValue = value.GetValueOrDefault();
                this.DetailSeqNumValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DfiBranchCntryCode", Order=14, Form=XmlSchemaForm.Unqualified)]
        public bool DfiBranchCntryCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DfiBranchCntryCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DfiBranchCntryCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DfiBranchCntryCode
        {
            get
            {
                if (this.DfiBranchCntryCodeValueSpecified)
                {
                    return this.DfiBranchCntryCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DfiBranchCntryCodeValue = value.GetValueOrDefault();
                this.DfiBranchCntryCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DfiIdNumQualifier", Order=15, Form=XmlSchemaForm.Unqualified)]
        public bool DfiIdNumQualifierValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DfiIdNumQualifier property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DfiIdNumQualifierValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DfiIdNumQualifier
        {
            get
            {
                if (this.DfiIdNumQualifierValueSpecified)
                {
                    return this.DfiIdNumQualifierValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DfiIdNumQualifierValue = value.GetValueOrDefault();
                this.DfiIdNumQualifierValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DfiIdent", Order=16, Form=XmlSchemaForm.Unqualified)]
        public bool DfiIdentValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DfiIdent property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DfiIdentValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DfiIdent
        {
            get
            {
                if (this.DfiIdentValueSpecified)
                {
                    return this.DfiIdentValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DfiIdentValue = value.GetValueOrDefault();
                this.DfiIdentValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DfiName", Order=17, Form=XmlSchemaForm.Unqualified)]
        public bool DfiNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DfiName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DfiNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DfiName
        {
            get
            {
                if (this.DfiNameValueSpecified)
                {
                    return this.DfiNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DfiNameValue = value.GetValueOrDefault();
                this.DfiNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DishonorAddendaInfo", Order=18, Form=XmlSchemaForm.Unqualified)]
        public bool DishonorAddendaInfoValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DishonorAddendaInfo property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DishonorAddendaInfoValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DishonorAddendaInfo
        {
            get
            {
                if (this.DishonorAddendaInfoValueSpecified)
                {
                    return this.DishonorAddendaInfoValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DishonorAddendaInfoValue = value.GetValueOrDefault();
                this.DishonorAddendaInfoValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DishonorReason", Order=19, Form=XmlSchemaForm.Unqualified)]
        public bool DishonorReasonValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DishonorReason property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DishonorReasonValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DishonorReason
        {
            get
            {
                if (this.DishonorReasonValueSpecified)
                {
                    return this.DishonorReasonValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DishonorReasonValue = value.GetValueOrDefault();
                this.DishonorReasonValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DishonorSettlDate", Order=20, Form=XmlSchemaForm.Unqualified)]
        public bool DishonorSettlDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DishonorSettlDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DishonorSettlDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DishonorSettlDate
        {
            get
            {
                if (this.DishonorSettlDateValueSpecified)
                {
                    return this.DishonorSettlDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DishonorSettlDateValue = value.GetValueOrDefault();
                this.DishonorSettlDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DishonorTrace", Order=21, Form=XmlSchemaForm.Unqualified)]
        public bool DishonorTraceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DishonorTrace property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DishonorTraceValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DishonorTrace
        {
            get
            {
                if (this.DishonorTraceValueSpecified)
                {
                    return this.DishonorTraceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DishonorTraceValue = value.GetValueOrDefault();
                this.DishonorTraceValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ExcpReason", Order=22, Form=XmlSchemaForm.Unqualified)]
        public bool ExcpReasonValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ExcpReason property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ExcpReasonValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ExcpReason
        {
            get
            {
                if (this.ExcpReasonValueSpecified)
                {
                    return this.ExcpReasonValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ExcpReasonValue = value.GetValueOrDefault();
                this.ExcpReasonValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ForeignAcctNum", Order=23, Form=XmlSchemaForm.Unqualified)]
        public bool ForeignAcctNumValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ForeignAcctNum property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ForeignAcctNumValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ForeignAcctNum
        {
            get
            {
                if (this.ForeignAcctNumValueSpecified)
                {
                    return this.ForeignAcctNumValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ForeignAcctNumValue = value.GetValueOrDefault();
                this.ForeignAcctNumValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ForeignPayment", Order=24, Form=XmlSchemaForm.Unqualified)]
        public bool ForeignPaymentValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ForeignPayment property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ForeignPaymentValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ForeignPayment
        {
            get
            {
                if (this.ForeignPaymentValueSpecified)
                {
                    return this.ForeignPaymentValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ForeignPaymentValue = value.GetValueOrDefault();
                this.ForeignPaymentValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ForeignPaymentIat", Order=25, Form=XmlSchemaForm.Unqualified)]
        public bool ForeignPaymentIatValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ForeignPaymentIat property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ForeignPaymentIatValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ForeignPaymentIat
        {
            get
            {
                if (this.ForeignPaymentIatValueSpecified)
                {
                    return this.ForeignPaymentIatValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ForeignPaymentIatValue = value.GetValueOrDefault();
                this.ForeignPaymentIatValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ForeignRecDfi", Order=26, Form=XmlSchemaForm.Unqualified)]
        public bool ForeignRecDfiValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ForeignRecDfi property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ForeignRecDfiValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ForeignRecDfi
        {
            get
            {
                if (this.ForeignRecDfiValueSpecified)
                {
                    return this.ForeignRecDfiValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ForeignRecDfiValue = value.GetValueOrDefault();
                this.ForeignRecDfiValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ForeignTrace", Order=27, Form=XmlSchemaForm.Unqualified)]
        public bool ForeignTraceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ForeignTrace property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ForeignTraceValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ForeignTrace
        {
            get
            {
                if (this.ForeignTraceValueSpecified)
                {
                    return this.ForeignTraceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ForeignTraceValue = value.GetValueOrDefault();
                this.ForeignTraceValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ForeignTraceIat", Order=28, Form=XmlSchemaForm.Unqualified)]
        public bool ForeignTraceIatValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ForeignTraceIat property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ForeignTraceIatValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ForeignTraceIat
        {
            get
            {
                if (this.ForeignTraceIatValueSpecified)
                {
                    return this.ForeignTraceIatValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ForeignTraceIatValue = value.GetValueOrDefault();
                this.ForeignTraceIatValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IatRetAddendaInfo", Order=29, Form=XmlSchemaForm.Unqualified)]
        public bool IatRetAddendaInfoValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IatRetAddendaInfo property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IatRetAddendaInfoValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IatRetAddendaInfo
        {
            get
            {
                if (this.IatRetAddendaInfoValueSpecified)
                {
                    return this.IatRetAddendaInfoValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IatRetAddendaInfoValue = value.GetValueOrDefault();
                this.IatRetAddendaInfoValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Locator", Order=30, Form=XmlSchemaForm.Unqualified)]
        public bool LocatorValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Locator property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LocatorValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Locator
        {
            get
            {
                if (this.LocatorValueSpecified)
                {
                    return this.LocatorValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LocatorValue = value.GetValueOrDefault();
                this.LocatorValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("NetworkIdCode", Order=31, Form=XmlSchemaForm.Unqualified)]
        public bool NetworkIdCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NetworkIdCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool NetworkIdCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> NetworkIdCode
        {
            get
            {
                if (this.NetworkIdCodeValueSpecified)
                {
                    return this.NetworkIdCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NetworkIdCodeValue = value.GetValueOrDefault();
                this.NetworkIdCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OrigEntryPmt", Order=32, Form=XmlSchemaForm.Unqualified)]
        public bool OrigEntryPmtValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OrigEntryPmt property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OrigEntryPmtValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> OrigEntryPmt
        {
            get
            {
                if (this.OrigEntryPmtValueSpecified)
                {
                    return this.OrigEntryPmtValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OrigEntryPmtValue = value.GetValueOrDefault();
                this.OrigEntryPmtValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OrigEntryPmtIat", Order=33, Form=XmlSchemaForm.Unqualified)]
        public bool OrigEntryPmtIatValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OrigEntryPmtIat property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OrigEntryPmtIatValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> OrigEntryPmtIat
        {
            get
            {
                if (this.OrigEntryPmtIatValueSpecified)
                {
                    return this.OrigEntryPmtIatValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OrigEntryPmtIatValue = value.GetValueOrDefault();
                this.OrigEntryPmtIatValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OrigForeignPmt", Order=34, Form=XmlSchemaForm.Unqualified)]
        public bool OrigForeignPmtValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OrigForeignPmt property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OrigForeignPmtValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> OrigForeignPmt
        {
            get
            {
                if (this.OrigForeignPmtValueSpecified)
                {
                    return this.OrigForeignPmtValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OrigForeignPmtValue = value.GetValueOrDefault();
                this.OrigForeignPmtValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OrigForeignRdfi", Order=35, Form=XmlSchemaForm.Unqualified)]
        public bool OrigForeignRdfiValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OrigForeignRdfi property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OrigForeignRdfiValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> OrigForeignRdfi
        {
            get
            {
                if (this.OrigForeignRdfiValueSpecified)
                {
                    return this.OrigForeignRdfiValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OrigForeignRdfiValue = value.GetValueOrDefault();
                this.OrigForeignRdfiValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OrigSettlDate", Order=36, Form=XmlSchemaForm.Unqualified)]
        public bool OrigSettlDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OrigSettlDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OrigSettlDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> OrigSettlDate
        {
            get
            {
                if (this.OrigSettlDateValueSpecified)
                {
                    return this.OrigSettlDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OrigSettlDateValue = value.GetValueOrDefault();
                this.OrigSettlDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OriginalRecDfi", Order=37, Form=XmlSchemaForm.Unqualified)]
        public bool OriginalRecDfiValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OriginalRecDfi property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OriginalRecDfiValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> OriginalRecDfi
        {
            get
            {
                if (this.OriginalRecDfiValueSpecified)
                {
                    return this.OriginalRecDfiValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OriginalRecDfiValue = value.GetValueOrDefault();
                this.OriginalRecDfiValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OriginalTrace", Order=38, Form=XmlSchemaForm.Unqualified)]
        public bool OriginalTraceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OriginalTrace property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OriginalTraceValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> OriginalTrace
        {
            get
            {
                if (this.OriginalTraceValueSpecified)
                {
                    return this.OriginalTraceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OriginalTraceValue = value.GetValueOrDefault();
                this.OriginalTraceValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OriginatorAddr", Order=39, Form=XmlSchemaForm.Unqualified)]
        public bool OriginatorAddrValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OriginatorAddr property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OriginatorAddrValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> OriginatorAddr
        {
            get
            {
                if (this.OriginatorAddrValueSpecified)
                {
                    return this.OriginatorAddrValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OriginatorAddrValue = value.GetValueOrDefault();
                this.OriginatorAddrValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OriginatorName", Order=40, Form=XmlSchemaForm.Unqualified)]
        public bool OriginatorNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OriginatorName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OriginatorNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> OriginatorName
        {
            get
            {
                if (this.OriginatorNameValueSpecified)
                {
                    return this.OriginatorNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OriginatorNameValue = value.GetValueOrDefault();
                this.OriginatorNameValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _pmtRelatedInfo;
        
        [XmlElementAttribute("PmtRelatedInfo", Order=41, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> PmtRelatedInfo
        {
            get
            {
                return _pmtRelatedInfo;
            }
            set
            {
                _pmtRelatedInfo = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PmtRelatedInfo collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool PmtRelatedInfoSpecified
        {
            get
            {
                return ((this.PmtRelatedInfo != null) 
                            && (this.PmtRelatedInfo.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ReceiverAddr", Order=42, Form=XmlSchemaForm.Unqualified)]
        public bool ReceiverAddrValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ReceiverAddr property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ReceiverAddrValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ReceiverAddr
        {
            get
            {
                if (this.ReceiverAddrValueSpecified)
                {
                    return this.ReceiverAddrValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ReceiverAddrValue = value.GetValueOrDefault();
                this.ReceiverAddrValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ReceiverIdent", Order=43, Form=XmlSchemaForm.Unqualified)]
        public bool ReceiverIdentValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ReceiverIdent property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ReceiverIdentValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ReceiverIdent
        {
            get
            {
                if (this.ReceiverIdentValueSpecified)
                {
                    return this.ReceiverIdentValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ReceiverIdentValue = value.GetValueOrDefault();
                this.ReceiverIdentValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ReceivingName", Order=44, Form=XmlSchemaForm.Unqualified)]
        public bool ReceivingNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ReceivingName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ReceivingNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ReceivingName
        {
            get
            {
                if (this.ReceivingNameValueSpecified)
                {
                    return this.ReceivingNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ReceivingNameValue = value.GetValueOrDefault();
                this.ReceivingNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("RecordType", Order=45, Form=XmlSchemaForm.Unqualified)]
        public bool RecordTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RecordType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool RecordTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> RecordType
        {
            get
            {
                if (this.RecordTypeValueSpecified)
                {
                    return this.RecordTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RecordTypeValue = value.GetValueOrDefault();
                this.RecordTypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ReturnReason", Order=46, Form=XmlSchemaForm.Unqualified)]
        public bool ReturnReasonValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ReturnReason property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ReturnReasonValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ReturnReason
        {
            get
            {
                if (this.ReturnReasonValueSpecified)
                {
                    return this.ReturnReasonValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ReturnReasonValue = value.GetValueOrDefault();
                this.ReturnReasonValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ReturnSettlDate", Order=47, Form=XmlSchemaForm.Unqualified)]
        public bool ReturnSettlDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ReturnSettlDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ReturnSettlDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ReturnSettlDate
        {
            get
            {
                if (this.ReturnSettlDateValueSpecified)
                {
                    return this.ReturnSettlDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ReturnSettlDateValue = value.GetValueOrDefault();
                this.ReturnSettlDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ReturnTrace", Order=48, Form=XmlSchemaForm.Unqualified)]
        public bool ReturnTraceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ReturnTrace property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ReturnTraceValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ReturnTrace
        {
            get
            {
                if (this.ReturnTraceValueSpecified)
                {
                    return this.ReturnTraceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ReturnTraceValue = value.GetValueOrDefault();
                this.ReturnTraceValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TerminalCity", Order=49, Form=XmlSchemaForm.Unqualified)]
        public bool TerminalCityValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TerminalCity property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TerminalCityValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TerminalCity
        {
            get
            {
                if (this.TerminalCityValueSpecified)
                {
                    return this.TerminalCityValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TerminalCityValue = value.GetValueOrDefault();
                this.TerminalCityValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TerminalIdCode", Order=50, Form=XmlSchemaForm.Unqualified)]
        public bool TerminalIdCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TerminalIdCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TerminalIdCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TerminalIdCode
        {
            get
            {
                if (this.TerminalIdCodeValueSpecified)
                {
                    return this.TerminalIdCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TerminalIdCodeValue = value.GetValueOrDefault();
                this.TerminalIdCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TerminalLocation", Order=51, Form=XmlSchemaForm.Unqualified)]
        public bool TerminalLocationValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TerminalLocation property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TerminalLocationValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TerminalLocation
        {
            get
            {
                if (this.TerminalLocationValueSpecified)
                {
                    return this.TerminalLocationValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TerminalLocationValue = value.GetValueOrDefault();
                this.TerminalLocationValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TerminalState", Order=52, Form=XmlSchemaForm.Unqualified)]
        public bool TerminalStateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TerminalState property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TerminalStateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TerminalState
        {
            get
            {
                if (this.TerminalStateValueSpecified)
                {
                    return this.TerminalStateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TerminalStateValue = value.GetValueOrDefault();
                this.TerminalStateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TraceNumber", Order=53, Form=XmlSchemaForm.Unqualified)]
        public bool TraceNumberValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TraceNumber property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TraceNumberValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TraceNumber
        {
            get
            {
                if (this.TraceNumberValueSpecified)
                {
                    return this.TraceNumberValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TraceNumberValue = value.GetValueOrDefault();
                this.TraceNumberValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TranDateMmDd", Order=54, Form=XmlSchemaForm.Unqualified)]
        public bool TranDateMmDdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TranDateMmDd property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TranDateMmDdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TranDateMmDd
        {
            get
            {
                if (this.TranDateMmDdValueSpecified)
                {
                    return this.TranDateMmDdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TranDateMmDdValue = value.GetValueOrDefault();
                this.TranDateMmDdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TranDesc", Order=55, Form=XmlSchemaForm.Unqualified)]
        public bool TranDescValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TranDesc property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TranDescValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TranDesc
        {
            get
            {
                if (this.TranDescValueSpecified)
                {
                    return this.TranDescValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TranDescValue = value.GetValueOrDefault();
                this.TranDescValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TranSerial", Order=56, Form=XmlSchemaForm.Unqualified)]
        public bool TranSerialValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TranSerial property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TranSerialValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TranSerial
        {
            get
            {
                if (this.TranSerialValueSpecified)
                {
                    return this.TranSerialValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TranSerialValue = value.GetValueOrDefault();
                this.TranSerialValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TranTime", Order=57, Form=XmlSchemaForm.Unqualified)]
        public bool TranTimeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TranTime property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TranTimeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TranTime
        {
            get
            {
                if (this.TranTimeValueSpecified)
                {
                    return this.TranTimeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TranTimeValue = value.GetValueOrDefault();
                this.TranTimeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TranType", Order=58, Form=XmlSchemaForm.Unqualified)]
        public bool TranTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TranType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TranTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TranType
        {
            get
            {
                if (this.TranTypeValueSpecified)
                {
                    return this.TranTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TranTypeValue = value.GetValueOrDefault();
                this.TranTypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Type", Order=59, Form=XmlSchemaForm.Unqualified)]
        public bool TypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Type property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Type
        {
            get
            {
                if (this.TypeValueSpecified)
                {
                    return this.TypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TypeValue = value.GetValueOrDefault();
                this.TypeValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("Version_1", Order=60, Form=XmlSchemaForm.Unqualified)]
        public ExceptionItemService.VersionType Version1 { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<XmlElement> _any;
        
        [XmlAnyElementAttribute(Order=61)]
        public Collection<XmlElement> Any
        {
            get
            {
                return _any;
            }
            set
            {
                _any = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return ((this.Any != null) 
                            && (this.Any.Count != 0));
            }
        }
    }
}
