//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 2.1.1182.0 using the following command:
// xscgen C:\Users\tbuese\Desktop\Symxchange\ParticipantService/*.xsd --sf --un --uc --order --cn -0 --collectionSettersMode=Public -o C:\Users\tbuese\Desktop\Symxchange\ParticipantService\generated-output -n ParticipantService
namespace ParticipantService
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.Diagnostics;
    using System.Xml;
    using System.Xml.Schema;
    using System.Xml.Serialization;
    
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1182.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("ParticipantFields", Namespace="http://www.symxchange.generated.symitar.com/crud/participant/dto/retrieve")]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class ParticipantFields
    {
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AchTranCodeOut", Order=0, Form=XmlSchemaForm.Unqualified)]
        public bool AchTranCodeOutValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AchTranCodeOut property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AchTranCodeOutValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AchTranCodeOut
        {
            get
            {
                if (this.AchTranCodeOutValueSpecified)
                {
                    return this.AchTranCodeOutValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AchTranCodeOutValue = value.GetValueOrDefault();
                this.AchTranCodeOutValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Active", Order=1, Form=XmlSchemaForm.Unqualified)]
        public bool ActiveValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Active property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ActiveValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Active
        {
            get
            {
                if (this.ActiveValueSpecified)
                {
                    return this.ActiveValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ActiveValue = value.GetValueOrDefault();
                this.ActiveValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AdjLS", Order=2, Form=XmlSchemaForm.Unqualified)]
        public bool AdjLsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AdjLs property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AdjLsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AdjLs
        {
            get
            {
                if (this.AdjLsValueSpecified)
                {
                    return this.AdjLsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AdjLsValue = value.GetValueOrDefault();
                this.AdjLsValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Balance", Order=3, Form=XmlSchemaForm.Unqualified)]
        public bool BalanceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Balance property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BalanceValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Balance
        {
            get
            {
                if (this.BalanceValueSpecified)
                {
                    return this.BalanceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BalanceValue = value.GetValueOrDefault();
                this.BalanceValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BeginningBalLS", Order=4, Form=XmlSchemaForm.Unqualified)]
        public bool BeginningBalLsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BeginningBalLs property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BeginningBalLsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BeginningBalLs
        {
            get
            {
                if (this.BeginningBalLsValueSpecified)
                {
                    return this.BeginningBalLsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BeginningBalLsValue = value.GetValueOrDefault();
                this.BeginningBalLsValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Branch", Order=5, Form=XmlSchemaForm.Unqualified)]
        public bool BranchValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Branch property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BranchValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Branch
        {
            get
            {
                if (this.BranchValueSpecified)
                {
                    return this.BranchValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BranchValue = value.GetValueOrDefault();
                this.BranchValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _buckets;
        
        [XmlElementAttribute("Buckets", Order=6, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> Buckets
        {
            get
            {
                return _buckets;
            }
            set
            {
                _buckets = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Buckets collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool BucketsSpecified
        {
            get
            {
                return ((this.Buckets != null) 
                            && (this.Buckets.Count != 0));
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ParticipantFields" /> class.</para>
        /// </summary>
        public ParticipantFields()
        {
            this._buckets = new Collection<short>();
            this._any = new Collection<XmlElement>();
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ChargeOffBalance", Order=7, Form=XmlSchemaForm.Unqualified)]
        public bool ChargeOffBalanceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ChargeOffBalance property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ChargeOffBalanceValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ChargeOffBalance
        {
            get
            {
                if (this.ChargeOffBalanceValueSpecified)
                {
                    return this.ChargeOffBalanceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ChargeOffBalanceValue = value.GetValueOrDefault();
                this.ChargeOffBalanceValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ChargebackBalance", Order=8, Form=XmlSchemaForm.Unqualified)]
        public bool ChargebackBalanceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ChargebackBalance property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ChargebackBalanceValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ChargebackBalance
        {
            get
            {
                if (this.ChargebackBalanceValueSpecified)
                {
                    return this.ChargebackBalanceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ChargebackBalanceValue = value.GetValueOrDefault();
                this.ChargebackBalanceValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ChargebackLS", Order=9, Form=XmlSchemaForm.Unqualified)]
        public bool ChargebackLsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ChargebackLs property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ChargebackLsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ChargebackLs
        {
            get
            {
                if (this.ChargebackLsValueSpecified)
                {
                    return this.ChargebackLsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ChargebackLsValue = value.GetValueOrDefault();
                this.ChargebackLsValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ChgOffLoanCount", Order=10, Form=XmlSchemaForm.Unqualified)]
        public bool ChgOffLoanCountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ChgOffLoanCount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ChgOffLoanCountValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ChgOffLoanCount
        {
            get
            {
                if (this.ChgOffLoanCountValueSpecified)
                {
                    return this.ChgOffLoanCountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ChgOffLoanCountValue = value.GetValueOrDefault();
                this.ChgOffLoanCountValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CloseDate", Order=11, Form=XmlSchemaForm.Unqualified)]
        public bool CloseDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CloseDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CloseDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CloseDate
        {
            get
            {
                if (this.CloseDateValueSpecified)
                {
                    return this.CloseDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CloseDateValue = value.GetValueOrDefault();
                this.CloseDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DealerAvailBalance", Order=12, Form=XmlSchemaForm.Unqualified)]
        public bool DealerAvailBalanceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DealerAvailBalance property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DealerAvailBalanceValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DealerAvailBalance
        {
            get
            {
                if (this.DealerAvailBalanceValueSpecified)
                {
                    return this.DealerAvailBalanceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DealerAvailBalanceValue = value.GetValueOrDefault();
                this.DealerAvailBalanceValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DealerTotalBalance", Order=13, Form=XmlSchemaForm.Unqualified)]
        public bool DealerTotalBalanceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DealerTotalBalance property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DealerTotalBalanceValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DealerTotalBalance
        {
            get
            {
                if (this.DealerTotalBalanceValueSpecified)
                {
                    return this.DealerTotalBalanceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DealerTotalBalanceValue = value.GetValueOrDefault();
                this.DealerTotalBalanceValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("FeesLS", Order=14, Form=XmlSchemaForm.Unqualified)]
        public bool FeesLsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FeesLs property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FeesLsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> FeesLs
        {
            get
            {
                if (this.FeesLsValueSpecified)
                {
                    return this.FeesLsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FeesLsValue = value.GetValueOrDefault();
                this.FeesLsValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("FmLastPurgeDate", Order=15, Form=XmlSchemaForm.Unqualified)]
        public bool FmLastPurgeDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FmLastPurgeDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FmLastPurgeDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> FmLastPurgeDate
        {
            get
            {
                if (this.FmLastPurgeDateValueSpecified)
                {
                    return this.FmLastPurgeDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FmLastPurgeDateValue = value.GetValueOrDefault();
                this.FmLastPurgeDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HoldbackLS", Order=16, Form=XmlSchemaForm.Unqualified)]
        public bool HoldbackLsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HoldbackLs property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HoldbackLsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HoldbackLs
        {
            get
            {
                if (this.HoldbackLsValueSpecified)
                {
                    return this.HoldbackLsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HoldbackLsValue = value.GetValueOrDefault();
                this.HoldbackLsValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LastDisbursalDate", Order=17, Form=XmlSchemaForm.Unqualified)]
        public bool LastDisbursalDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LastDisbursalDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LastDisbursalDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LastDisbursalDate
        {
            get
            {
                if (this.LastDisbursalDateValueSpecified)
                {
                    return this.LastDisbursalDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LastDisbursalDateValue = value.GetValueOrDefault();
                this.LastDisbursalDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LastFmDate", Order=18, Form=XmlSchemaForm.Unqualified)]
        public bool LastFmDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LastFmDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LastFmDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LastFmDate
        {
            get
            {
                if (this.LastFmDateValueSpecified)
                {
                    return this.LastFmDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LastFmDateValue = value.GetValueOrDefault();
                this.LastFmDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LastPurgeDate", Order=19, Form=XmlSchemaForm.Unqualified)]
        public bool LastPurgeDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LastPurgeDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LastPurgeDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LastPurgeDate
        {
            get
            {
                if (this.LastPurgeDateValueSpecified)
                {
                    return this.LastPurgeDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LastPurgeDateValue = value.GetValueOrDefault();
                this.LastPurgeDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LegacyCode", Order=20, Form=XmlSchemaForm.Unqualified)]
        public bool LegacyCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LegacyCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LegacyCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LegacyCode
        {
            get
            {
                if (this.LegacyCodeValueSpecified)
                {
                    return this.LegacyCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LegacyCodeValue = value.GetValueOrDefault();
                this.LegacyCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LoanBalanceSlp", Order=21, Form=XmlSchemaForm.Unqualified)]
        public bool LoanBalanceSlpValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LoanBalanceSlp property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LoanBalanceSlpValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LoanBalanceSlp
        {
            get
            {
                if (this.LoanBalanceSlpValueSpecified)
                {
                    return this.LoanBalanceSlpValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LoanBalanceSlpValue = value.GetValueOrDefault();
                this.LoanBalanceSlpValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LoanCount", Order=22, Form=XmlSchemaForm.Unqualified)]
        public bool LoanCountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LoanCount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LoanCountValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LoanCount
        {
            get
            {
                if (this.LoanCountValueSpecified)
                {
                    return this.LoanCountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LoanCountValue = value.GetValueOrDefault();
                this.LoanCountValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LoanCountSlp", Order=23, Form=XmlSchemaForm.Unqualified)]
        public bool LoanCountSlpValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LoanCountSlp property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LoanCountSlpValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LoanCountSlp
        {
            get
            {
                if (this.LoanCountSlpValueSpecified)
                {
                    return this.LoanCountSlpValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LoanCountSlpValue = value.GetValueOrDefault();
                this.LoanCountSlpValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Name", Order=24, Form=XmlSchemaForm.Unqualified)]
        public bool NameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Name property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool NameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Name
        {
            get
            {
                if (this.NameValueSpecified)
                {
                    return this.NameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NameValue = value.GetValueOrDefault();
                this.NameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Number", Order=25, Form=XmlSchemaForm.Unqualified)]
        public bool NumberValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Number property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool NumberValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Number
        {
            get
            {
                if (this.NumberValueSpecified)
                {
                    return this.NumberValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NumberValue = value.GetValueOrDefault();
                this.NumberValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OpenDate", Order=26, Form=XmlSchemaForm.Unqualified)]
        public bool OpenDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OpenDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OpenDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> OpenDate
        {
            get
            {
                if (this.OpenDateValueSpecified)
                {
                    return this.OpenDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OpenDateValue = value.GetValueOrDefault();
                this.OpenDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PaymentMethod", Order=27, Form=XmlSchemaForm.Unqualified)]
        public bool PaymentMethodValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PaymentMethod property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PaymentMethodValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PaymentMethod
        {
            get
            {
                if (this.PaymentMethodValueSpecified)
                {
                    return this.PaymentMethodValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PaymentMethodValue = value.GetValueOrDefault();
                this.PaymentMethodValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PaymentsLTD", Order=28, Form=XmlSchemaForm.Unqualified)]
        public bool PaymentsLtdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PaymentsLtd property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PaymentsLtdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PaymentsLtd
        {
            get
            {
                if (this.PaymentsLtdValueSpecified)
                {
                    return this.PaymentsLtdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PaymentsLtdValue = value.GetValueOrDefault();
                this.PaymentsLtdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PaymentsLastYear", Order=29, Form=XmlSchemaForm.Unqualified)]
        public bool PaymentsLastYearValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PaymentsLastYear property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PaymentsLastYearValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PaymentsLastYear
        {
            get
            {
                if (this.PaymentsLastYearValueSpecified)
                {
                    return this.PaymentsLastYearValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PaymentsLastYearValue = value.GetValueOrDefault();
                this.PaymentsLastYearValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PaymentsYtd", Order=30, Form=XmlSchemaForm.Unqualified)]
        public bool PaymentsYtdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PaymentsYtd property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PaymentsYtdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PaymentsYtd
        {
            get
            {
                if (this.PaymentsYtdValueSpecified)
                {
                    return this.PaymentsYtdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PaymentsYtdValue = value.GetValueOrDefault();
                this.PaymentsYtdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("RecordChangeDate", Order=31, Form=XmlSchemaForm.Unqualified)]
        public bool RecordChangeDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RecordChangeDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool RecordChangeDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> RecordChangeDate
        {
            get
            {
                if (this.RecordChangeDateValueSpecified)
                {
                    return this.RecordChangeDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RecordChangeDateValue = value.GetValueOrDefault();
                this.RecordChangeDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ReservePaymentMethod", Order=32, Form=XmlSchemaForm.Unqualified)]
        public bool ReservePaymentMethodValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ReservePaymentMethod property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ReservePaymentMethodValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ReservePaymentMethod
        {
            get
            {
                if (this.ReservePaymentMethodValueSpecified)
                {
                    return this.ReservePaymentMethodValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ReservePaymentMethodValue = value.GetValueOrDefault();
                this.ReservePaymentMethodValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("StatementDate", Order=33, Form=XmlSchemaForm.Unqualified)]
        public bool StatementDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StatementDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool StatementDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> StatementDate
        {
            get
            {
                if (this.StatementDateValueSpecified)
                {
                    return this.StatementDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.StatementDateValue = value.GetValueOrDefault();
                this.StatementDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("StatementGroup", Order=34, Form=XmlSchemaForm.Unqualified)]
        public bool StatementGroupValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StatementGroup property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool StatementGroupValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> StatementGroup
        {
            get
            {
                if (this.StatementGroupValueSpecified)
                {
                    return this.StatementGroupValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.StatementGroupValue = value.GetValueOrDefault();
                this.StatementGroupValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("StatementPrevDate", Order=35, Form=XmlSchemaForm.Unqualified)]
        public bool StatementPrevDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StatementPrevDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool StatementPrevDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> StatementPrevDate
        {
            get
            {
                if (this.StatementPrevDateValueSpecified)
                {
                    return this.StatementPrevDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.StatementPrevDateValue = value.GetValueOrDefault();
                this.StatementPrevDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SubType", Order=36, Form=XmlSchemaForm.Unqualified)]
        public bool SubTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SubType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SubTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SubType
        {
            get
            {
                if (this.SubTypeValueSpecified)
                {
                    return this.SubTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SubTypeValue = value.GetValueOrDefault();
                this.SubTypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TotalEarnedReserve", Order=37, Form=XmlSchemaForm.Unqualified)]
        public bool TotalEarnedReserveValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalEarnedReserve property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TotalEarnedReserveValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TotalEarnedReserve
        {
            get
            {
                if (this.TotalEarnedReserveValueSpecified)
                {
                    return this.TotalEarnedReserveValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TotalEarnedReserveValue = value.GetValueOrDefault();
                this.TotalEarnedReserveValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TotalHoldbackAmount", Order=38, Form=XmlSchemaForm.Unqualified)]
        public bool TotalHoldbackAmountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalHoldbackAmount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TotalHoldbackAmountValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TotalHoldbackAmount
        {
            get
            {
                if (this.TotalHoldbackAmountValueSpecified)
                {
                    return this.TotalHoldbackAmountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TotalHoldbackAmountValue = value.GetValueOrDefault();
                this.TotalHoldbackAmountValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TotalLoanBalance", Order=39, Form=XmlSchemaForm.Unqualified)]
        public bool TotalLoanBalanceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalLoanBalance property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TotalLoanBalanceValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TotalLoanBalance
        {
            get
            {
                if (this.TotalLoanBalanceValueSpecified)
                {
                    return this.TotalLoanBalanceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TotalLoanBalanceValue = value.GetValueOrDefault();
                this.TotalLoanBalanceValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TotalReserveAccrual", Order=40, Form=XmlSchemaForm.Unqualified)]
        public bool TotalReserveAccrualValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalReserveAccrual property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TotalReserveAccrualValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TotalReserveAccrual
        {
            get
            {
                if (this.TotalReserveAccrualValueSpecified)
                {
                    return this.TotalReserveAccrualValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TotalReserveAccrualValue = value.GetValueOrDefault();
                this.TotalReserveAccrualValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TotalUnearnedReserve", Order=41, Form=XmlSchemaForm.Unqualified)]
        public bool TotalUnearnedReserveValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalUnearnedReserve property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TotalUnearnedReserveValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TotalUnearnedReserve
        {
            get
            {
                if (this.TotalUnearnedReserveValueSpecified)
                {
                    return this.TotalUnearnedReserveValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TotalUnearnedReserveValue = value.GetValueOrDefault();
                this.TotalUnearnedReserveValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TotalUpFrontReserve", Order=42, Form=XmlSchemaForm.Unqualified)]
        public bool TotalUpFrontReserveValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalUpFrontReserve property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TotalUpFrontReserveValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TotalUpFrontReserve
        {
            get
            {
                if (this.TotalUpFrontReserveValueSpecified)
                {
                    return this.TotalUpFrontReserveValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TotalUpFrontReserveValue = value.GetValueOrDefault();
                this.TotalUpFrontReserveValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TtlERsvNoChgD", Order=43, Form=XmlSchemaForm.Unqualified)]
        public bool TtlERsvNoChgDValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TtlERsvNoChgD property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TtlERsvNoChgDValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TtlERsvNoChgD
        {
            get
            {
                if (this.TtlERsvNoChgDValueSpecified)
                {
                    return this.TtlERsvNoChgDValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TtlERsvNoChgDValue = value.GetValueOrDefault();
                this.TtlERsvNoChgDValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TtlERsvNoClsD", Order=44, Form=XmlSchemaForm.Unqualified)]
        public bool TtlERsvNoClsDValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TtlERsvNoClsD property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TtlERsvNoClsDValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TtlERsvNoClsD
        {
            get
            {
                if (this.TtlERsvNoClsDValueSpecified)
                {
                    return this.TtlERsvNoClsDValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TtlERsvNoClsDValue = value.GetValueOrDefault();
                this.TtlERsvNoClsDValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TtlUeRsvNoChgD", Order=45, Form=XmlSchemaForm.Unqualified)]
        public bool TtlUeRsvNoChgDValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TtlUeRsvNoChgD property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TtlUeRsvNoChgDValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TtlUeRsvNoChgD
        {
            get
            {
                if (this.TtlUeRsvNoChgDValueSpecified)
                {
                    return this.TtlUeRsvNoChgDValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TtlUeRsvNoChgDValue = value.GetValueOrDefault();
                this.TtlUeRsvNoChgDValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TtlUeRsvNoClsD", Order=46, Form=XmlSchemaForm.Unqualified)]
        public bool TtlUeRsvNoClsDValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TtlUeRsvNoClsD property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TtlUeRsvNoClsDValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TtlUeRsvNoClsD
        {
            get
            {
                if (this.TtlUeRsvNoClsDValueSpecified)
                {
                    return this.TtlUeRsvNoClsDValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TtlUeRsvNoClsDValue = value.GetValueOrDefault();
                this.TtlUeRsvNoClsDValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TtlUfRsvNoChgD", Order=47, Form=XmlSchemaForm.Unqualified)]
        public bool TtlUfRsvNoChgDValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TtlUfRsvNoChgD property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TtlUfRsvNoChgDValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TtlUfRsvNoChgD
        {
            get
            {
                if (this.TtlUfRsvNoChgDValueSpecified)
                {
                    return this.TtlUfRsvNoChgDValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TtlUfRsvNoChgDValue = value.GetValueOrDefault();
                this.TtlUfRsvNoChgDValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TtlUfRsvNoClsD", Order=48, Form=XmlSchemaForm.Unqualified)]
        public bool TtlUfRsvNoClsDValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TtlUfRsvNoClsD property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TtlUfRsvNoClsDValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TtlUfRsvNoClsD
        {
            get
            {
                if (this.TtlUfRsvNoClsDValueSpecified)
                {
                    return this.TtlUfRsvNoClsDValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TtlUfRsvNoClsDValue = value.GetValueOrDefault();
                this.TtlUfRsvNoClsDValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Type", Order=49, Form=XmlSchemaForm.Unqualified)]
        public bool TypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Type property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Type
        {
            get
            {
                if (this.TypeValueSpecified)
                {
                    return this.TypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TypeValue = value.GetValueOrDefault();
                this.TypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UnpaidUpFrontReserve", Order=50, Form=XmlSchemaForm.Unqualified)]
        public bool UnpaidUpFrontReserveValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UnpaidUpFrontReserve property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UnpaidUpFrontReserveValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UnpaidUpFrontReserve
        {
            get
            {
                if (this.UnpaidUpFrontReserveValueSpecified)
                {
                    return this.UnpaidUpFrontReserveValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UnpaidUpFrontReserveValue = value.GetValueOrDefault();
                this.UnpaidUpFrontReserveValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UpFrontRsrvLS", Order=51, Form=XmlSchemaForm.Unqualified)]
        public bool UpFrontRsrvLsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UpFrontRsrvLs property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UpFrontRsrvLsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UpFrontRsrvLs
        {
            get
            {
                if (this.UpFrontRsrvLsValueSpecified)
                {
                    return this.UpFrontRsrvLsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UpFrontRsrvLsValue = value.GetValueOrDefault();
                this.UpFrontRsrvLsValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UserAmount1", Order=52, Form=XmlSchemaForm.Unqualified)]
        public bool UserAmount1Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UserAmount1 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UserAmount1ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UserAmount1
        {
            get
            {
                if (this.UserAmount1ValueSpecified)
                {
                    return this.UserAmount1Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UserAmount1Value = value.GetValueOrDefault();
                this.UserAmount1ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UserAmount2", Order=53, Form=XmlSchemaForm.Unqualified)]
        public bool UserAmount2Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UserAmount2 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UserAmount2ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UserAmount2
        {
            get
            {
                if (this.UserAmount2ValueSpecified)
                {
                    return this.UserAmount2Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UserAmount2Value = value.GetValueOrDefault();
                this.UserAmount2ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UserChar1", Order=54, Form=XmlSchemaForm.Unqualified)]
        public bool UserChar1Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UserChar1 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UserChar1ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UserChar1
        {
            get
            {
                if (this.UserChar1ValueSpecified)
                {
                    return this.UserChar1Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UserChar1Value = value.GetValueOrDefault();
                this.UserChar1ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UserChar2", Order=55, Form=XmlSchemaForm.Unqualified)]
        public bool UserChar2Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UserChar2 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UserChar2ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UserChar2
        {
            get
            {
                if (this.UserChar2ValueSpecified)
                {
                    return this.UserChar2Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UserChar2Value = value.GetValueOrDefault();
                this.UserChar2ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UserChar3", Order=56, Form=XmlSchemaForm.Unqualified)]
        public bool UserChar3Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UserChar3 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UserChar3ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UserChar3
        {
            get
            {
                if (this.UserChar3ValueSpecified)
                {
                    return this.UserChar3Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UserChar3Value = value.GetValueOrDefault();
                this.UserChar3ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UserCode1", Order=57, Form=XmlSchemaForm.Unqualified)]
        public bool UserCode1Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UserCode1 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UserCode1ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UserCode1
        {
            get
            {
                if (this.UserCode1ValueSpecified)
                {
                    return this.UserCode1Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UserCode1Value = value.GetValueOrDefault();
                this.UserCode1ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UserDate1", Order=58, Form=XmlSchemaForm.Unqualified)]
        public bool UserDate1Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UserDate1 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UserDate1ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UserDate1
        {
            get
            {
                if (this.UserDate1ValueSpecified)
                {
                    return this.UserDate1Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UserDate1Value = value.GetValueOrDefault();
                this.UserDate1ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UserNumber1", Order=59, Form=XmlSchemaForm.Unqualified)]
        public bool UserNumber1Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UserNumber1 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UserNumber1ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UserNumber1
        {
            get
            {
                if (this.UserNumber1ValueSpecified)
                {
                    return this.UserNumber1Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UserNumber1Value = value.GetValueOrDefault();
                this.UserNumber1ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UserRate1", Order=60, Form=XmlSchemaForm.Unqualified)]
        public bool UserRate1Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UserRate1 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UserRate1ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UserRate1
        {
            get
            {
                if (this.UserRate1ValueSpecified)
                {
                    return this.UserRate1Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UserRate1Value = value.GetValueOrDefault();
                this.UserRate1ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("VendorAltEmail", Order=61, Form=XmlSchemaForm.Unqualified)]
        public bool VendorAltEmailValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the VendorAltEmail property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool VendorAltEmailValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> VendorAltEmail
        {
            get
            {
                if (this.VendorAltEmailValueSpecified)
                {
                    return this.VendorAltEmailValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.VendorAltEmailValue = value.GetValueOrDefault();
                this.VendorAltEmailValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("VendorCity", Order=62, Form=XmlSchemaForm.Unqualified)]
        public bool VendorCityValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the VendorCity property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool VendorCityValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> VendorCity
        {
            get
            {
                if (this.VendorCityValueSpecified)
                {
                    return this.VendorCityValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.VendorCityValue = value.GetValueOrDefault();
                this.VendorCityValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("VendorContact", Order=63, Form=XmlSchemaForm.Unqualified)]
        public bool VendorContactValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the VendorContact property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool VendorContactValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> VendorContact
        {
            get
            {
                if (this.VendorContactValueSpecified)
                {
                    return this.VendorContactValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.VendorContactValue = value.GetValueOrDefault();
                this.VendorContactValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("VendorContact2", Order=64, Form=XmlSchemaForm.Unqualified)]
        public bool VendorContact2Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the VendorContact2 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool VendorContact2ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> VendorContact2
        {
            get
            {
                if (this.VendorContact2ValueSpecified)
                {
                    return this.VendorContact2Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.VendorContact2Value = value.GetValueOrDefault();
                this.VendorContact2ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("VendorContact2Description", Order=65, Form=XmlSchemaForm.Unqualified)]
        public bool VendorContact2DescriptionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the VendorContact2Description property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool VendorContact2DescriptionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> VendorContact2Description
        {
            get
            {
                if (this.VendorContact2DescriptionValueSpecified)
                {
                    return this.VendorContact2DescriptionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.VendorContact2DescriptionValue = value.GetValueOrDefault();
                this.VendorContact2DescriptionValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("VendorContact2Phone", Order=66, Form=XmlSchemaForm.Unqualified)]
        public bool VendorContact2PhoneValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the VendorContact2Phone property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool VendorContact2PhoneValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> VendorContact2Phone
        {
            get
            {
                if (this.VendorContact2PhoneValueSpecified)
                {
                    return this.VendorContact2PhoneValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.VendorContact2PhoneValue = value.GetValueOrDefault();
                this.VendorContact2PhoneValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("VendorContact2PhoneExt", Order=67, Form=XmlSchemaForm.Unqualified)]
        public bool VendorContact2PhoneExtValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the VendorContact2PhoneExt property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool VendorContact2PhoneExtValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> VendorContact2PhoneExt
        {
            get
            {
                if (this.VendorContact2PhoneExtValueSpecified)
                {
                    return this.VendorContact2PhoneExtValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.VendorContact2PhoneExtValue = value.GetValueOrDefault();
                this.VendorContact2PhoneExtValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("VendorContactDescription", Order=68, Form=XmlSchemaForm.Unqualified)]
        public bool VendorContactDescriptionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the VendorContactDescription property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool VendorContactDescriptionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> VendorContactDescription
        {
            get
            {
                if (this.VendorContactDescriptionValueSpecified)
                {
                    return this.VendorContactDescriptionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.VendorContactDescriptionValue = value.GetValueOrDefault();
                this.VendorContactDescriptionValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("VendorEmail", Order=69, Form=XmlSchemaForm.Unqualified)]
        public bool VendorEmailValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the VendorEmail property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool VendorEmailValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> VendorEmail
        {
            get
            {
                if (this.VendorEmailValueSpecified)
                {
                    return this.VendorEmailValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.VendorEmailValue = value.GetValueOrDefault();
                this.VendorEmailValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("VendorExtraAddress", Order=70, Form=XmlSchemaForm.Unqualified)]
        public bool VendorExtraAddressValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the VendorExtraAddress property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool VendorExtraAddressValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> VendorExtraAddress
        {
            get
            {
                if (this.VendorExtraAddressValueSpecified)
                {
                    return this.VendorExtraAddressValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.VendorExtraAddressValue = value.GetValueOrDefault();
                this.VendorExtraAddressValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("VendorFax", Order=71, Form=XmlSchemaForm.Unqualified)]
        public bool VendorFaxValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the VendorFax property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool VendorFaxValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> VendorFax
        {
            get
            {
                if (this.VendorFaxValueSpecified)
                {
                    return this.VendorFaxValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.VendorFaxValue = value.GetValueOrDefault();
                this.VendorFaxValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("VendorName", Order=72, Form=XmlSchemaForm.Unqualified)]
        public bool VendorNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the VendorName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool VendorNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> VendorName
        {
            get
            {
                if (this.VendorNameValueSpecified)
                {
                    return this.VendorNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.VendorNameValue = value.GetValueOrDefault();
                this.VendorNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("VendorNumber", Order=73, Form=XmlSchemaForm.Unqualified)]
        public bool VendorNumberValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the VendorNumber property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool VendorNumberValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> VendorNumber
        {
            get
            {
                if (this.VendorNumberValueSpecified)
                {
                    return this.VendorNumberValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.VendorNumberValue = value.GetValueOrDefault();
                this.VendorNumberValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("VendorPhone", Order=74, Form=XmlSchemaForm.Unqualified)]
        public bool VendorPhoneValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the VendorPhone property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool VendorPhoneValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> VendorPhone
        {
            get
            {
                if (this.VendorPhoneValueSpecified)
                {
                    return this.VendorPhoneValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.VendorPhoneValue = value.GetValueOrDefault();
                this.VendorPhoneValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("VendorPhoneExt", Order=75, Form=XmlSchemaForm.Unqualified)]
        public bool VendorPhoneExtValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the VendorPhoneExt property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool VendorPhoneExtValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> VendorPhoneExt
        {
            get
            {
                if (this.VendorPhoneExtValueSpecified)
                {
                    return this.VendorPhoneExtValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.VendorPhoneExtValue = value.GetValueOrDefault();
                this.VendorPhoneExtValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("VendorState", Order=76, Form=XmlSchemaForm.Unqualified)]
        public bool VendorStateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the VendorState property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool VendorStateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> VendorState
        {
            get
            {
                if (this.VendorStateValueSpecified)
                {
                    return this.VendorStateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.VendorStateValue = value.GetValueOrDefault();
                this.VendorStateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("VendorStreet", Order=77, Form=XmlSchemaForm.Unqualified)]
        public bool VendorStreetValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the VendorStreet property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool VendorStreetValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> VendorStreet
        {
            get
            {
                if (this.VendorStreetValueSpecified)
                {
                    return this.VendorStreetValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.VendorStreetValue = value.GetValueOrDefault();
                this.VendorStreetValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("VendorZipCode", Order=78, Form=XmlSchemaForm.Unqualified)]
        public bool VendorZipCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the VendorZipCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool VendorZipCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> VendorZipCode
        {
            get
            {
                if (this.VendorZipCodeValueSpecified)
                {
                    return this.VendorZipCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.VendorZipCodeValue = value.GetValueOrDefault();
                this.VendorZipCodeValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("Version_1", Order=79, Form=XmlSchemaForm.Unqualified)]
        public ParticipantService.VersionType Version1 { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<XmlElement> _any;
        
        [XmlAnyElementAttribute(Order=80)]
        public Collection<XmlElement> Any
        {
            get
            {
                return _any;
            }
            set
            {
                _any = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return ((this.Any != null) 
                            && (this.Any.Count != 0));
            }
        }
    }
}
