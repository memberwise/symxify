//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 2.1.1182.0 using the following command:
// xscgen C:\Users\tbuese\Desktop\Symxchange\MbrAddressService/*.xsd --sf --un --uc --order --cn -0 --collectionSettersMode=Public -o C:\Users\tbuese\Desktop\Symxchange\MbrAddressService\generated-output -n MbraddressService
namespace MbraddressService
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.Diagnostics;
    using System.Xml;
    using System.Xml.Schema;
    using System.Xml.Serialization;
    
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1182.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("MbrAddressFields", Namespace="http://www.symxchange.generated.symitar.com/crud/mbraddress/dto/retrieve")]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    [XmlRootAttribute("MbrAddressFields", Namespace="http://www.symxchange.generated.symitar.com/crud/mbraddress/dto/retrieve")]
    public partial class MbrAddressFields
    {
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AddrCreateDate", Order=0, Form=XmlSchemaForm.Unqualified)]
        public bool AddrCreateDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AddrCreateDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AddrCreateDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AddrCreateDate
        {
            get
            {
                if (this.AddrCreateDateValueSpecified)
                {
                    return this.AddrCreateDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AddrCreateDateValue = value.GetValueOrDefault();
                this.AddrCreateDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AddrDisconnectDate", Order=1, Form=XmlSchemaForm.Unqualified)]
        public bool AddrDisconnectDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AddrDisconnectDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AddrDisconnectDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AddrDisconnectDate
        {
            get
            {
                if (this.AddrDisconnectDateValueSpecified)
                {
                    return this.AddrDisconnectDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AddrDisconnectDateValue = value.GetValueOrDefault();
                this.AddrDisconnectDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AddrExpDate", Order=2, Form=XmlSchemaForm.Unqualified)]
        public bool AddrExpDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AddrExpDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AddrExpDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AddrExpDate
        {
            get
            {
                if (this.AddrExpDateValueSpecified)
                {
                    return this.AddrExpDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AddrExpDateValue = value.GetValueOrDefault();
                this.AddrExpDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AddrFmLastDate", Order=3, Form=XmlSchemaForm.Unqualified)]
        public bool AddrFmLastDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AddrFmLastDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AddrFmLastDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AddrFmLastDate
        {
            get
            {
                if (this.AddrFmLastDateValueSpecified)
                {
                    return this.AddrFmLastDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AddrFmLastDateValue = value.GetValueOrDefault();
                this.AddrFmLastDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AddrFmLastPurgeDate", Order=4, Form=XmlSchemaForm.Unqualified)]
        public bool AddrFmLastPurgeDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AddrFmLastPurgeDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AddrFmLastPurgeDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AddrFmLastPurgeDate
        {
            get
            {
                if (this.AddrFmLastPurgeDateValueSpecified)
                {
                    return this.AddrFmLastPurgeDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AddrFmLastPurgeDateValue = value.GetValueOrDefault();
                this.AddrFmLastPurgeDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AddrRecordChangeDate", Order=5, Form=XmlSchemaForm.Unqualified)]
        public bool AddrRecordChangeDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AddrRecordChangeDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AddrRecordChangeDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AddrRecordChangeDate
        {
            get
            {
                if (this.AddrRecordChangeDateValueSpecified)
                {
                    return this.AddrRecordChangeDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AddrRecordChangeDateValue = value.GetValueOrDefault();
                this.AddrRecordChangeDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AddressType", Order=6, Form=XmlSchemaForm.Unqualified)]
        public bool AddressTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AddressType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AddressTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AddressType
        {
            get
            {
                if (this.AddressTypeValueSpecified)
                {
                    return this.AddressTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AddressTypeValue = value.GetValueOrDefault();
                this.AddressTypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CarrierRoute", Order=7, Form=XmlSchemaForm.Unqualified)]
        public bool CarrierRouteValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CarrierRoute property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CarrierRouteValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CarrierRoute
        {
            get
            {
                if (this.CarrierRouteValueSpecified)
                {
                    return this.CarrierRouteValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CarrierRouteValue = value.GetValueOrDefault();
                this.CarrierRouteValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("City", Order=8, Form=XmlSchemaForm.Unqualified)]
        public bool CityValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the City property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CityValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> City
        {
            get
            {
                if (this.CityValueSpecified)
                {
                    return this.CityValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CityValue = value.GetValueOrDefault();
                this.CityValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Country", Order=9, Form=XmlSchemaForm.Unqualified)]
        public bool CountryValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Country property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CountryValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Country
        {
            get
            {
                if (this.CountryValueSpecified)
                {
                    return this.CountryValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CountryValue = value.GetValueOrDefault();
                this.CountryValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CountryCode", Order=10, Form=XmlSchemaForm.Unqualified)]
        public bool CountryCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CountryCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CountryCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CountryCode
        {
            get
            {
                if (this.CountryCodeValueSpecified)
                {
                    return this.CountryCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CountryCodeValue = value.GetValueOrDefault();
                this.CountryCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ExtraAddress", Order=11, Form=XmlSchemaForm.Unqualified)]
        public bool ExtraAddressValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ExtraAddress property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ExtraAddressValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ExtraAddress
        {
            get
            {
                if (this.ExtraAddressValueSpecified)
                {
                    return this.ExtraAddressValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ExtraAddressValue = value.GetValueOrDefault();
                this.ExtraAddressValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Headquarters", Order=12, Form=XmlSchemaForm.Unqualified)]
        public bool HeadquartersValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Headquarters property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HeadquartersValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Headquarters
        {
            get
            {
                if (this.HeadquartersValueSpecified)
                {
                    return this.HeadquartersValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HeadquartersValue = value.GetValueOrDefault();
                this.HeadquartersValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MbrAddrFileType", Order=13, Form=XmlSchemaForm.Unqualified)]
        public bool MbrAddrFileTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MbrAddrFileType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MbrAddrFileTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MbrAddrFileType
        {
            get
            {
                if (this.MbrAddrFileTypeValueSpecified)
                {
                    return this.MbrAddrFileTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MbrAddrFileTypeValue = value.GetValueOrDefault();
                this.MbrAddrFileTypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MbrAddrNumber", Order=14, Form=XmlSchemaForm.Unqualified)]
        public bool MbrAddrNumberValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MbrAddrNumber property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MbrAddrNumberValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MbrAddrNumber
        {
            get
            {
                if (this.MbrAddrNumberValueSpecified)
                {
                    return this.MbrAddrNumberValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MbrAddrNumberValue = value.GetValueOrDefault();
                this.MbrAddrNumberValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("State", Order=15, Form=XmlSchemaForm.Unqualified)]
        public bool StateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the State property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool StateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> State
        {
            get
            {
                if (this.StateValueSpecified)
                {
                    return this.StateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.StateValue = value.GetValueOrDefault();
                this.StateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Street", Order=16, Form=XmlSchemaForm.Unqualified)]
        public bool StreetValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Street property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool StreetValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Street
        {
            get
            {
                if (this.StreetValueSpecified)
                {
                    return this.StreetValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.StreetValue = value.GetValueOrDefault();
                this.StreetValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ZipCode", Order=17, Form=XmlSchemaForm.Unqualified)]
        public bool ZipCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ZipCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ZipCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ZipCode
        {
            get
            {
                if (this.ZipCodeValueSpecified)
                {
                    return this.ZipCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ZipCodeValue = value.GetValueOrDefault();
                this.ZipCodeValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("Version_1", Order=18, Form=XmlSchemaForm.Unqualified)]
        public MbraddressService.VersionType Version1 { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<XmlElement> _any;
        
        [XmlAnyElementAttribute(Order=19)]
        public Collection<XmlElement> Any
        {
            get
            {
                return _any;
            }
            set
            {
                _any = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return ((this.Any != null) 
                            && (this.Any.Count != 0));
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MbrAddressFields" /> class.</para>
        /// </summary>
        public MbrAddressFields()
        {
            this._any = new Collection<XmlElement>();
        }
    }
}
