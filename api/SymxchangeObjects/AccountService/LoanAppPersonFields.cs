//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 2.1.1182.0 using the following command:
// xscgen C:\Users\tbuese\Desktop\Symxchange\AccountService/*.xsd --sf --un --uc --order --cn -0 --collectionSettersMode=Public -o C:\Users\tbuese\Desktop\Symxchange\AccountService\generated-output -n AccountService
namespace AccountService
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.Diagnostics;
    using System.Xml;
    using System.Xml.Schema;
    using System.Xml.Serialization;
    
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1182.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("LoanAppPersonFields", Namespace="http://www.symxchange.generated.symitar.com/crud/account/dto/retrieve")]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    [XmlRootAttribute("LoanAppPersonFields", Namespace="http://www.symxchange.generated.symitar.com/crud/account/dto/retrieve")]
    public partial class LoanAppPersonFields
    {
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AccountNumber", Order=0, Form=XmlSchemaForm.Unqualified)]
        public bool AccountNumberValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AccountNumber property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AccountNumberValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AccountNumber
        {
            get
            {
                if (this.AccountNumberValueSpecified)
                {
                    return this.AccountNumberValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AccountNumberValue = value.GetValueOrDefault();
                this.AccountNumberValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ActiveDuty", Order=1, Form=XmlSchemaForm.Unqualified)]
        public bool ActiveDutyValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ActiveDuty property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ActiveDutyValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ActiveDuty
        {
            get
            {
                if (this.ActiveDutyValueSpecified)
                {
                    return this.ActiveDutyValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ActiveDutyValue = value.GetValueOrDefault();
                this.ActiveDutyValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ActiveDutySeparationDate", Order=2, Form=XmlSchemaForm.Unqualified)]
        public bool ActiveDutySeparationDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ActiveDutySeparationDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ActiveDutySeparationDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ActiveDutySeparationDate
        {
            get
            {
                if (this.ActiveDutySeparationDateValueSpecified)
                {
                    return this.ActiveDutySeparationDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ActiveDutySeparationDateValue = value.GetValueOrDefault();
                this.ActiveDutySeparationDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ActiveDutyStartDate", Order=3, Form=XmlSchemaForm.Unqualified)]
        public bool ActiveDutyStartDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ActiveDutyStartDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ActiveDutyStartDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ActiveDutyStartDate
        {
            get
            {
                if (this.ActiveDutyStartDateValueSpecified)
                {
                    return this.ActiveDutyStartDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ActiveDutyStartDateValue = value.GetValueOrDefault();
                this.ActiveDutyStartDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ActiveDutyVerificationDate", Order=4, Form=XmlSchemaForm.Unqualified)]
        public bool ActiveDutyVerificationDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ActiveDutyVerificationDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ActiveDutyVerificationDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ActiveDutyVerificationDate
        {
            get
            {
                if (this.ActiveDutyVerificationDateValueSpecified)
                {
                    return this.ActiveDutyVerificationDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ActiveDutyVerificationDateValue = value.GetValueOrDefault();
                this.ActiveDutyVerificationDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AddressType", Order=5, Form=XmlSchemaForm.Unqualified)]
        public bool AddressTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AddressType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AddressTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AddressType
        {
            get
            {
                if (this.AddressTypeValueSpecified)
                {
                    return this.AddressTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AddressTypeValue = value.GetValueOrDefault();
                this.AddressTypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AltEmail", Order=6, Form=XmlSchemaForm.Unqualified)]
        public bool AltEmailValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AltEmail property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AltEmailValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AltEmail
        {
            get
            {
                if (this.AltEmailValueSpecified)
                {
                    return this.AltEmailValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AltEmailValue = value.GetValueOrDefault();
                this.AltEmailValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Bankruptcy", Order=7, Form=XmlSchemaForm.Unqualified)]
        public bool BankruptcyValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Bankruptcy property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BankruptcyValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Bankruptcy
        {
            get
            {
                if (this.BankruptcyValueSpecified)
                {
                    return this.BankruptcyValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BankruptcyValue = value.GetValueOrDefault();
                this.BankruptcyValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BeneficialOwner", Order=8, Form=XmlSchemaForm.Unqualified)]
        public bool BeneficialOwnerValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BeneficialOwner property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BeneficialOwnerValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BeneficialOwner
        {
            get
            {
                if (this.BeneficialOwnerValueSpecified)
                {
                    return this.BeneficialOwnerValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BeneficialOwnerValue = value.GetValueOrDefault();
                this.BeneficialOwnerValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BeneficialPercent", Order=9, Form=XmlSchemaForm.Unqualified)]
        public bool BeneficialPercentValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BeneficialPercent property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BeneficialPercentValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BeneficialPercent
        {
            get
            {
                if (this.BeneficialPercentValueSpecified)
                {
                    return this.BeneficialPercentValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BeneficialPercentValue = value.GetValueOrDefault();
                this.BeneficialPercentValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BirthDate", Order=10, Form=XmlSchemaForm.Unqualified)]
        public bool BirthDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BirthDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BirthDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BirthDate
        {
            get
            {
                if (this.BirthDateValueSpecified)
                {
                    return this.BirthDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BirthDateValue = value.GetValueOrDefault();
                this.BirthDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Citizenship", Order=11, Form=XmlSchemaForm.Unqualified)]
        public bool CitizenshipValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Citizenship property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CitizenshipValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Citizenship
        {
            get
            {
                if (this.CitizenshipValueSpecified)
                {
                    return this.CitizenshipValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CitizenshipValue = value.GetValueOrDefault();
                this.CitizenshipValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("City", Order=12, Form=XmlSchemaForm.Unqualified)]
        public bool CityValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the City property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CityValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> City
        {
            get
            {
                if (this.CityValueSpecified)
                {
                    return this.CityValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CityValue = value.GetValueOrDefault();
                this.CityValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CosignForWhom", Order=13, Form=XmlSchemaForm.Unqualified)]
        public bool CosignForWhomValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CosignForWhom property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CosignForWhomValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CosignForWhom
        {
            get
            {
                if (this.CosignForWhomValueSpecified)
                {
                    return this.CosignForWhomValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CosignForWhomValue = value.GetValueOrDefault();
                this.CosignForWhomValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CosignOtherLoan", Order=14, Form=XmlSchemaForm.Unqualified)]
        public bool CosignOtherLoanValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CosignOtherLoan property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CosignOtherLoanValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CosignOtherLoan
        {
            get
            {
                if (this.CosignOtherLoanValueSpecified)
                {
                    return this.CosignOtherLoanValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CosignOtherLoanValue = value.GetValueOrDefault();
                this.CosignOtherLoanValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CosignToWhom", Order=15, Form=XmlSchemaForm.Unqualified)]
        public bool CosignToWhomValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CosignToWhom property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CosignToWhomValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CosignToWhom
        {
            get
            {
                if (this.CosignToWhomValueSpecified)
                {
                    return this.CosignToWhomValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CosignToWhomValue = value.GetValueOrDefault();
                this.CosignToWhomValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Country", Order=16, Form=XmlSchemaForm.Unqualified)]
        public bool CountryValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Country property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CountryValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Country
        {
            get
            {
                if (this.CountryValueSpecified)
                {
                    return this.CountryValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CountryValue = value.GetValueOrDefault();
                this.CountryValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CountryCode", Order=17, Form=XmlSchemaForm.Unqualified)]
        public bool CountryCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CountryCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CountryCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CountryCode
        {
            get
            {
                if (this.CountryCodeValueSpecified)
                {
                    return this.CountryCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CountryCodeValue = value.GetValueOrDefault();
                this.CountryCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("County", Order=18, Form=XmlSchemaForm.Unqualified)]
        public bool CountyValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the County property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CountyValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> County
        {
            get
            {
                if (this.CountyValueSpecified)
                {
                    return this.CountyValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CountyValue = value.GetValueOrDefault();
                this.CountyValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CurrEmpAddress", Order=19, Form=XmlSchemaForm.Unqualified)]
        public bool CurrEmpAddressValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CurrEmpAddress property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CurrEmpAddressValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CurrEmpAddress
        {
            get
            {
                if (this.CurrEmpAddressValueSpecified)
                {
                    return this.CurrEmpAddressValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CurrEmpAddressValue = value.GetValueOrDefault();
                this.CurrEmpAddressValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CurrEmpEndDate", Order=20, Form=XmlSchemaForm.Unqualified)]
        public bool CurrEmpEndDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CurrEmpEndDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CurrEmpEndDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CurrEmpEndDate
        {
            get
            {
                if (this.CurrEmpEndDateValueSpecified)
                {
                    return this.CurrEmpEndDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CurrEmpEndDateValue = value.GetValueOrDefault();
                this.CurrEmpEndDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CurrEmpGrossMonthlyPay", Order=21, Form=XmlSchemaForm.Unqualified)]
        public bool CurrEmpGrossMonthlyPayValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CurrEmpGrossMonthlyPay property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CurrEmpGrossMonthlyPayValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CurrEmpGrossMonthlyPay
        {
            get
            {
                if (this.CurrEmpGrossMonthlyPayValueSpecified)
                {
                    return this.CurrEmpGrossMonthlyPayValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CurrEmpGrossMonthlyPayValue = value.GetValueOrDefault();
                this.CurrEmpGrossMonthlyPayValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CurrEmpMonthsEmp", Order=22, Form=XmlSchemaForm.Unqualified)]
        public bool CurrEmpMonthsEmpValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CurrEmpMonthsEmp property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CurrEmpMonthsEmpValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CurrEmpMonthsEmp
        {
            get
            {
                if (this.CurrEmpMonthsEmpValueSpecified)
                {
                    return this.CurrEmpMonthsEmpValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CurrEmpMonthsEmpValue = value.GetValueOrDefault();
                this.CurrEmpMonthsEmpValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CurrEmpName", Order=23, Form=XmlSchemaForm.Unqualified)]
        public bool CurrEmpNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CurrEmpName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CurrEmpNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CurrEmpName
        {
            get
            {
                if (this.CurrEmpNameValueSpecified)
                {
                    return this.CurrEmpNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CurrEmpNameValue = value.GetValueOrDefault();
                this.CurrEmpNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CurrEmpNetMonthlyPay", Order=24, Form=XmlSchemaForm.Unqualified)]
        public bool CurrEmpNetMonthlyPayValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CurrEmpNetMonthlyPay property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CurrEmpNetMonthlyPayValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CurrEmpNetMonthlyPay
        {
            get
            {
                if (this.CurrEmpNetMonthlyPayValueSpecified)
                {
                    return this.CurrEmpNetMonthlyPayValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CurrEmpNetMonthlyPayValue = value.GetValueOrDefault();
                this.CurrEmpNetMonthlyPayValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CurrEmpOccupation", Order=25, Form=XmlSchemaForm.Unqualified)]
        public bool CurrEmpOccupationValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CurrEmpOccupation property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CurrEmpOccupationValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CurrEmpOccupation
        {
            get
            {
                if (this.CurrEmpOccupationValueSpecified)
                {
                    return this.CurrEmpOccupationValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CurrEmpOccupationValue = value.GetValueOrDefault();
                this.CurrEmpOccupationValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CurrEmpStartDate", Order=26, Form=XmlSchemaForm.Unqualified)]
        public bool CurrEmpStartDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CurrEmpStartDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CurrEmpStartDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CurrEmpStartDate
        {
            get
            {
                if (this.CurrEmpStartDateValueSpecified)
                {
                    return this.CurrEmpStartDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CurrEmpStartDateValue = value.GetValueOrDefault();
                this.CurrEmpStartDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CurrEmpSupervisor", Order=27, Form=XmlSchemaForm.Unqualified)]
        public bool CurrEmpSupervisorValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CurrEmpSupervisor property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CurrEmpSupervisorValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CurrEmpSupervisor
        {
            get
            {
                if (this.CurrEmpSupervisorValueSpecified)
                {
                    return this.CurrEmpSupervisorValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CurrEmpSupervisorValue = value.GetValueOrDefault();
                this.CurrEmpSupervisorValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CurrEmpYearsEmp", Order=28, Form=XmlSchemaForm.Unqualified)]
        public bool CurrEmpYearsEmpValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CurrEmpYearsEmp property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CurrEmpYearsEmpValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CurrEmpYearsEmp
        {
            get
            {
                if (this.CurrEmpYearsEmpValueSpecified)
                {
                    return this.CurrEmpYearsEmpValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CurrEmpYearsEmpValue = value.GetValueOrDefault();
                this.CurrEmpYearsEmpValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _dependentAge;
        
        [XmlElementAttribute("DependentAge", Order=29, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> DependentAge
        {
            get
            {
                return _dependentAge;
            }
            set
            {
                _dependentAge = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DependentAge collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool DependentAgeSpecified
        {
            get
            {
                return ((this.DependentAge != null) 
                            && (this.DependentAge.Count != 0));
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="LoanAppPersonFields" /> class.</para>
        /// </summary>
        public LoanAppPersonFields()
        {
            this._dependentAge = new Collection<short>();
            this._derogStatus = new Collection<short>();
            this._hmdaAppScoringModelOther = new Collection<short>();
            this._hmdaEthnicity = new Collection<short>();
            this._hmdaEthnicityOther = new Collection<short>();
            this._hmdaRace = new Collection<short>();
            this._hmdaRaceOther1 = new Collection<short>();
            this._hmdaRaceOther27 = new Collection<short>();
            this._hmdaRaceOther44 = new Collection<short>();
            this._identDocFlag = new Collection<short>();
            this._identIdDescription = new Collection<short>();
            this._identIdExpireDate = new Collection<short>();
            this._identIdIssueDate = new Collection<short>();
            this._identIdNumber = new Collection<short>();
            this._identIdType = new Collection<short>();
            this._identIdVerifyDate = new Collection<short>();
            this._any = new Collection<XmlElement>();
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DependentCount", Order=30, Form=XmlSchemaForm.Unqualified)]
        public bool DependentCountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DependentCount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DependentCountValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DependentCount
        {
            get
            {
                if (this.DependentCountValueSpecified)
                {
                    return this.DependentCountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DependentCountValue = value.GetValueOrDefault();
                this.DependentCountValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DerogExplanation", Order=31, Form=XmlSchemaForm.Unqualified)]
        public bool DerogExplanationValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DerogExplanation property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DerogExplanationValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DerogExplanation
        {
            get
            {
                if (this.DerogExplanationValueSpecified)
                {
                    return this.DerogExplanationValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DerogExplanationValue = value.GetValueOrDefault();
                this.DerogExplanationValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _derogStatus;
        
        [XmlElementAttribute("DerogStatus", Order=32, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> DerogStatus
        {
            get
            {
                return _derogStatus;
            }
            set
            {
                _derogStatus = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DerogStatus collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool DerogStatusSpecified
        {
            get
            {
                return ((this.DerogStatus != null) 
                            && (this.DerogStatus.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DriversLic", Order=33, Form=XmlSchemaForm.Unqualified)]
        public bool DriversLicValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DriversLic property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DriversLicValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DriversLic
        {
            get
            {
                if (this.DriversLicValueSpecified)
                {
                    return this.DriversLicValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DriversLicValue = value.GetValueOrDefault();
                this.DriversLicValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DriversLicState", Order=34, Form=XmlSchemaForm.Unqualified)]
        public bool DriversLicStateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DriversLicState property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DriversLicStateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DriversLicState
        {
            get
            {
                if (this.DriversLicStateValueSpecified)
                {
                    return this.DriversLicStateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DriversLicStateValue = value.GetValueOrDefault();
                this.DriversLicStateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("EducationYears", Order=35, Form=XmlSchemaForm.Unqualified)]
        public bool EducationYearsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EducationYears property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool EducationYearsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> EducationYears
        {
            get
            {
                if (this.EducationYearsValueSpecified)
                {
                    return this.EducationYearsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EducationYearsValue = value.GetValueOrDefault();
                this.EducationYearsValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Email", Order=36, Form=XmlSchemaForm.Unqualified)]
        public bool EmailValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Email property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool EmailValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Email
        {
            get
            {
                if (this.EmailValueSpecified)
                {
                    return this.EmailValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EmailValue = value.GetValueOrDefault();
                this.EmailValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("EmpHoursPerWeek", Order=37, Form=XmlSchemaForm.Unqualified)]
        public bool EmpHoursPerWeekValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EmpHoursPerWeek property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool EmpHoursPerWeekValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> EmpHoursPerWeek
        {
            get
            {
                if (this.EmpHoursPerWeekValueSpecified)
                {
                    return this.EmpHoursPerWeekValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EmpHoursPerWeekValue = value.GetValueOrDefault();
                this.EmpHoursPerWeekValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("EmploymentReturnDate", Order=38, Form=XmlSchemaForm.Unqualified)]
        public bool EmploymentReturnDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EmploymentReturnDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool EmploymentReturnDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> EmploymentReturnDate
        {
            get
            {
                if (this.EmploymentReturnDateValueSpecified)
                {
                    return this.EmploymentReturnDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EmploymentReturnDateValue = value.GetValueOrDefault();
                this.EmploymentReturnDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("EmploymentStatus", Order=39, Form=XmlSchemaForm.Unqualified)]
        public bool EmploymentStatusValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EmploymentStatus property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool EmploymentStatusValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> EmploymentStatus
        {
            get
            {
                if (this.EmploymentStatusValueSpecified)
                {
                    return this.EmploymentStatusValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EmploymentStatusValue = value.GetValueOrDefault();
                this.EmploymentStatusValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ExtendedName", Order=40, Form=XmlSchemaForm.Unqualified)]
        public bool ExtendedNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ExtendedName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ExtendedNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ExtendedName
        {
            get
            {
                if (this.ExtendedNameValueSpecified)
                {
                    return this.ExtendedNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ExtendedNameValue = value.GetValueOrDefault();
                this.ExtendedNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ExtraAddress", Order=41, Form=XmlSchemaForm.Unqualified)]
        public bool ExtraAddressValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ExtraAddress property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ExtraAddressValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ExtraAddress
        {
            get
            {
                if (this.ExtraAddressValueSpecified)
                {
                    return this.ExtraAddressValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ExtraAddressValue = value.GetValueOrDefault();
                this.ExtraAddressValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ExtraInfo", Order=42, Form=XmlSchemaForm.Unqualified)]
        public bool ExtraInfoValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ExtraInfo property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ExtraInfoValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ExtraInfo
        {
            get
            {
                if (this.ExtraInfoValueSpecified)
                {
                    return this.ExtraInfoValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ExtraInfoValue = value.GetValueOrDefault();
                this.ExtraInfoValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("First", Order=43, Form=XmlSchemaForm.Unqualified)]
        public bool FirstValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the First property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FirstValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> First
        {
            get
            {
                if (this.FirstValueSpecified)
                {
                    return this.FirstValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FirstValue = value.GetValueOrDefault();
                this.FirstValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Headquarters", Order=44, Form=XmlSchemaForm.Unqualified)]
        public bool HeadquartersValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Headquarters property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HeadquartersValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Headquarters
        {
            get
            {
                if (this.HeadquartersValueSpecified)
                {
                    return this.HeadquartersValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HeadquartersValue = value.GetValueOrDefault();
                this.HeadquartersValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HmdaAge", Order=45, Form=XmlSchemaForm.Unqualified)]
        public bool HmdaAgeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HmdaAge property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HmdaAgeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HmdaAge
        {
            get
            {
                if (this.HmdaAgeValueSpecified)
                {
                    return this.HmdaAgeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HmdaAgeValue = value.GetValueOrDefault();
                this.HmdaAgeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HmdaAppScoringModel", Order=46, Form=XmlSchemaForm.Unqualified)]
        public bool HmdaAppScoringModelValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HmdaAppScoringModel property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HmdaAppScoringModelValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HmdaAppScoringModel
        {
            get
            {
                if (this.HmdaAppScoringModelValueSpecified)
                {
                    return this.HmdaAppScoringModelValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HmdaAppScoringModelValue = value.GetValueOrDefault();
                this.HmdaAppScoringModelValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _hmdaAppScoringModelOther;
        
        [XmlElementAttribute("HmdaAppScoringModelOther", Order=47, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> HmdaAppScoringModelOther
        {
            get
            {
                return _hmdaAppScoringModelOther;
            }
            set
            {
                _hmdaAppScoringModelOther = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the HmdaAppScoringModelOther collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool HmdaAppScoringModelOtherSpecified
        {
            get
            {
                return ((this.HmdaAppScoringModelOther != null) 
                            && (this.HmdaAppScoringModelOther.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HmdaCreditScore", Order=48, Form=XmlSchemaForm.Unqualified)]
        public bool HmdaCreditScoreValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HmdaCreditScore property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HmdaCreditScoreValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HmdaCreditScore
        {
            get
            {
                if (this.HmdaCreditScoreValueSpecified)
                {
                    return this.HmdaCreditScoreValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HmdaCreditScoreValue = value.GetValueOrDefault();
                this.HmdaCreditScoreValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _hmdaEthnicity;
        
        [XmlElementAttribute("HmdaEthnicity", Order=49, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> HmdaEthnicity
        {
            get
            {
                return _hmdaEthnicity;
            }
            set
            {
                _hmdaEthnicity = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the HmdaEthnicity collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool HmdaEthnicitySpecified
        {
            get
            {
                return ((this.HmdaEthnicity != null) 
                            && (this.HmdaEthnicity.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _hmdaEthnicityOther;
        
        [XmlElementAttribute("HmdaEthnicityOther", Order=50, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> HmdaEthnicityOther
        {
            get
            {
                return _hmdaEthnicityOther;
            }
            set
            {
                _hmdaEthnicityOther = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the HmdaEthnicityOther collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool HmdaEthnicityOtherSpecified
        {
            get
            {
                return ((this.HmdaEthnicityOther != null) 
                            && (this.HmdaEthnicityOther.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HmdaEthnicityVisInd", Order=51, Form=XmlSchemaForm.Unqualified)]
        public bool HmdaEthnicityVisIndValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HmdaEthnicityVisInd property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HmdaEthnicityVisIndValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HmdaEthnicityVisInd
        {
            get
            {
                if (this.HmdaEthnicityVisIndValueSpecified)
                {
                    return this.HmdaEthnicityVisIndValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HmdaEthnicityVisIndValue = value.GetValueOrDefault();
                this.HmdaEthnicityVisIndValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _hmdaRace;
        
        [XmlElementAttribute("HmdaRace", Order=52, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> HmdaRace
        {
            get
            {
                return _hmdaRace;
            }
            set
            {
                _hmdaRace = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the HmdaRace collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool HmdaRaceSpecified
        {
            get
            {
                return ((this.HmdaRace != null) 
                            && (this.HmdaRace.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _hmdaRaceOther1;
        
        [XmlElementAttribute("HmdaRaceOther1", Order=53, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> HmdaRaceOther1
        {
            get
            {
                return _hmdaRaceOther1;
            }
            set
            {
                _hmdaRaceOther1 = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the HmdaRaceOther1 collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool HmdaRaceOther1Specified
        {
            get
            {
                return ((this.HmdaRaceOther1 != null) 
                            && (this.HmdaRaceOther1.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _hmdaRaceOther27;
        
        [XmlElementAttribute("HmdaRaceOther27", Order=54, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> HmdaRaceOther27
        {
            get
            {
                return _hmdaRaceOther27;
            }
            set
            {
                _hmdaRaceOther27 = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the HmdaRaceOther27 collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool HmdaRaceOther27Specified
        {
            get
            {
                return ((this.HmdaRaceOther27 != null) 
                            && (this.HmdaRaceOther27.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _hmdaRaceOther44;
        
        [XmlElementAttribute("HmdaRaceOther44", Order=55, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> HmdaRaceOther44
        {
            get
            {
                return _hmdaRaceOther44;
            }
            set
            {
                _hmdaRaceOther44 = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the HmdaRaceOther44 collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool HmdaRaceOther44Specified
        {
            get
            {
                return ((this.HmdaRaceOther44 != null) 
                            && (this.HmdaRaceOther44.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HmdaRaceVisInd", Order=56, Form=XmlSchemaForm.Unqualified)]
        public bool HmdaRaceVisIndValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HmdaRaceVisInd property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HmdaRaceVisIndValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HmdaRaceVisInd
        {
            get
            {
                if (this.HmdaRaceVisIndValueSpecified)
                {
                    return this.HmdaRaceVisIndValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HmdaRaceVisIndValue = value.GetValueOrDefault();
                this.HmdaRaceVisIndValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HmdaSexInd", Order=57, Form=XmlSchemaForm.Unqualified)]
        public bool HmdaSexIndValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HmdaSexInd property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HmdaSexIndValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HmdaSexInd
        {
            get
            {
                if (this.HmdaSexIndValueSpecified)
                {
                    return this.HmdaSexIndValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HmdaSexIndValue = value.GetValueOrDefault();
                this.HmdaSexIndValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HmdaSexVisInd", Order=58, Form=XmlSchemaForm.Unqualified)]
        public bool HmdaSexVisIndValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HmdaSexVisInd property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HmdaSexVisIndValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HmdaSexVisInd
        {
            get
            {
                if (this.HmdaSexVisIndValueSpecified)
                {
                    return this.HmdaSexVisIndValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HmdaSexVisIndValue = value.GetValueOrDefault();
                this.HmdaSexVisIndValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HomePhone", Order=59, Form=XmlSchemaForm.Unqualified)]
        public bool HomePhoneValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HomePhone property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HomePhoneValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HomePhone
        {
            get
            {
                if (this.HomePhoneValueSpecified)
                {
                    return this.HomePhoneValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HomePhoneValue = value.GetValueOrDefault();
                this.HomePhoneValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _identDocFlag;
        
        [XmlElementAttribute("IdentDocFlag", Order=60, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> IdentDocFlag
        {
            get
            {
                return _identDocFlag;
            }
            set
            {
                _identDocFlag = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the IdentDocFlag collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool IdentDocFlagSpecified
        {
            get
            {
                return ((this.IdentDocFlag != null) 
                            && (this.IdentDocFlag.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _identIdDescription;
        
        [XmlElementAttribute("IdentIdDescription", Order=61, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> IdentIdDescription
        {
            get
            {
                return _identIdDescription;
            }
            set
            {
                _identIdDescription = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the IdentIdDescription collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool IdentIdDescriptionSpecified
        {
            get
            {
                return ((this.IdentIdDescription != null) 
                            && (this.IdentIdDescription.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _identIdExpireDate;
        
        [XmlElementAttribute("IdentIdExpireDate", Order=62, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> IdentIdExpireDate
        {
            get
            {
                return _identIdExpireDate;
            }
            set
            {
                _identIdExpireDate = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the IdentIdExpireDate collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool IdentIdExpireDateSpecified
        {
            get
            {
                return ((this.IdentIdExpireDate != null) 
                            && (this.IdentIdExpireDate.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _identIdIssueDate;
        
        [XmlElementAttribute("IdentIdIssueDate", Order=63, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> IdentIdIssueDate
        {
            get
            {
                return _identIdIssueDate;
            }
            set
            {
                _identIdIssueDate = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the IdentIdIssueDate collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool IdentIdIssueDateSpecified
        {
            get
            {
                return ((this.IdentIdIssueDate != null) 
                            && (this.IdentIdIssueDate.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _identIdNumber;
        
        [XmlElementAttribute("IdentIdNumber", Order=64, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> IdentIdNumber
        {
            get
            {
                return _identIdNumber;
            }
            set
            {
                _identIdNumber = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the IdentIdNumber collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool IdentIdNumberSpecified
        {
            get
            {
                return ((this.IdentIdNumber != null) 
                            && (this.IdentIdNumber.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _identIdType;
        
        [XmlElementAttribute("IdentIdType", Order=65, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> IdentIdType
        {
            get
            {
                return _identIdType;
            }
            set
            {
                _identIdType = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the IdentIdType collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool IdentIdTypeSpecified
        {
            get
            {
                return ((this.IdentIdType != null) 
                            && (this.IdentIdType.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _identIdVerifyDate;
        
        [XmlElementAttribute("IdentIdVerifyDate", Order=66, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> IdentIdVerifyDate
        {
            get
            {
                return _identIdVerifyDate;
            }
            set
            {
                _identIdVerifyDate = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the IdentIdVerifyDate collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool IdentIdVerifyDateSpecified
        {
            get
            {
                return ((this.IdentIdVerifyDate != null) 
                            && (this.IdentIdVerifyDate.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IncomeMayDecline", Order=67, Form=XmlSchemaForm.Unqualified)]
        public bool IncomeMayDeclineValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IncomeMayDecline property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IncomeMayDeclineValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IncomeMayDecline
        {
            get
            {
                if (this.IncomeMayDeclineValueSpecified)
                {
                    return this.IncomeMayDeclineValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IncomeMayDeclineValue = value.GetValueOrDefault();
                this.IncomeMayDeclineValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Judgement", Order=68, Form=XmlSchemaForm.Unqualified)]
        public bool JudgementValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Judgement property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool JudgementValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Judgement
        {
            get
            {
                if (this.JudgementValueSpecified)
                {
                    return this.JudgementValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.JudgementValue = value.GetValueOrDefault();
                this.JudgementValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Last", Order=69, Form=XmlSchemaForm.Unqualified)]
        public bool LastValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Last property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LastValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Last
        {
            get
            {
                if (this.LastValueSpecified)
                {
                    return this.LastValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LastValue = value.GetValueOrDefault();
                this.LastValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Lei", Order=70, Form=XmlSchemaForm.Unqualified)]
        public bool LeiValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Lei property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LeiValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Lei
        {
            get
            {
                if (this.LeiValueSpecified)
                {
                    return this.LeiValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LeiValue = value.GetValueOrDefault();
                this.LeiValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Locator", Order=71, Form=XmlSchemaForm.Unqualified)]
        public bool LocatorValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Locator property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LocatorValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Locator
        {
            get
            {
                if (this.LocatorValueSpecified)
                {
                    return this.LocatorValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LocatorValue = value.GetValueOrDefault();
                this.LocatorValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LongName", Order=72, Form=XmlSchemaForm.Unqualified)]
        public bool LongNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LongName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LongNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LongName
        {
            get
            {
                if (this.LongNameValueSpecified)
                {
                    return this.LongNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LongNameValue = value.GetValueOrDefault();
                this.LongNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MaritalStatus", Order=73, Form=XmlSchemaForm.Unqualified)]
        public bool MaritalStatusValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MaritalStatus property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MaritalStatusValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MaritalStatus
        {
            get
            {
                if (this.MaritalStatusValueSpecified)
                {
                    return this.MaritalStatusValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MaritalStatusValue = value.GetValueOrDefault();
                this.MaritalStatusValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Middle", Order=74, Form=XmlSchemaForm.Unqualified)]
        public bool MiddleValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Middle property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MiddleValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Middle
        {
            get
            {
                if (this.MiddleValueSpecified)
                {
                    return this.MiddleValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MiddleValue = value.GetValueOrDefault();
                this.MiddleValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MobilePhone", Order=75, Form=XmlSchemaForm.Unqualified)]
        public bool MobilePhoneValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MobilePhone property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MobilePhoneValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MobilePhone
        {
            get
            {
                if (this.MobilePhoneValueSpecified)
                {
                    return this.MobilePhoneValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MobilePhoneValue = value.GetValueOrDefault();
                this.MobilePhoneValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MonthsCurrAddress", Order=76, Form=XmlSchemaForm.Unqualified)]
        public bool MonthsCurrAddressValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MonthsCurrAddress property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MonthsCurrAddressValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MonthsCurrAddress
        {
            get
            {
                if (this.MonthsCurrAddressValueSpecified)
                {
                    return this.MonthsCurrAddressValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MonthsCurrAddressValue = value.GetValueOrDefault();
                this.MonthsCurrAddressValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MonthsPrevAddress", Order=77, Form=XmlSchemaForm.Unqualified)]
        public bool MonthsPrevAddressValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MonthsPrevAddress property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MonthsPrevAddressValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MonthsPrevAddress
        {
            get
            {
                if (this.MonthsPrevAddressValueSpecified)
                {
                    return this.MonthsPrevAddressValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MonthsPrevAddressValue = value.GetValueOrDefault();
                this.MonthsPrevAddressValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MothersMaidenName", Order=78, Form=XmlSchemaForm.Unqualified)]
        public bool MothersMaidenNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MothersMaidenName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MothersMaidenNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MothersMaidenName
        {
            get
            {
                if (this.MothersMaidenNameValueSpecified)
                {
                    return this.MothersMaidenNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MothersMaidenNameValue = value.GetValueOrDefault();
                this.MothersMaidenNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("NameFormat", Order=79, Form=XmlSchemaForm.Unqualified)]
        public bool NameFormatValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NameFormat property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool NameFormatValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> NameFormat
        {
            get
            {
                if (this.NameFormatValueSpecified)
                {
                    return this.NameFormatValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NameFormatValue = value.GetValueOrDefault();
                this.NameFormatValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OtherCreditName", Order=80, Form=XmlSchemaForm.Unqualified)]
        public bool OtherCreditNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OtherCreditName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OtherCreditNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> OtherCreditName
        {
            get
            {
                if (this.OtherCreditNameValueSpecified)
                {
                    return this.OtherCreditNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OtherCreditNameValue = value.GetValueOrDefault();
                this.OtherCreditNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OwnRentCurrAddress", Order=81, Form=XmlSchemaForm.Unqualified)]
        public bool OwnRentCurrAddressValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OwnRentCurrAddress property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OwnRentCurrAddressValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> OwnRentCurrAddress
        {
            get
            {
                if (this.OwnRentCurrAddressValueSpecified)
                {
                    return this.OwnRentCurrAddressValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OwnRentCurrAddressValue = value.GetValueOrDefault();
                this.OwnRentCurrAddressValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OwnRentPrevAddress", Order=82, Form=XmlSchemaForm.Unqualified)]
        public bool OwnRentPrevAddressValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OwnRentPrevAddress property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OwnRentPrevAddressValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> OwnRentPrevAddress
        {
            get
            {
                if (this.OwnRentPrevAddressValueSpecified)
                {
                    return this.OwnRentPrevAddressValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OwnRentPrevAddressValue = value.GetValueOrDefault();
                this.OwnRentPrevAddressValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PagerNumber", Order=83, Form=XmlSchemaForm.Unqualified)]
        public bool PagerNumberValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PagerNumber property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PagerNumberValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PagerNumber
        {
            get
            {
                if (this.PagerNumberValueSpecified)
                {
                    return this.PagerNumberValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PagerNumberValue = value.GetValueOrDefault();
                this.PagerNumberValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PartyInLawsuit", Order=84, Form=XmlSchemaForm.Unqualified)]
        public bool PartyInLawsuitValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PartyInLawsuit property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PartyInLawsuitValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PartyInLawsuit
        {
            get
            {
                if (this.PartyInLawsuitValueSpecified)
                {
                    return this.PartyInLawsuitValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PartyInLawsuitValue = value.GetValueOrDefault();
                this.PartyInLawsuitValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PastForeclosure", Order=85, Form=XmlSchemaForm.Unqualified)]
        public bool PastForeclosureValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PastForeclosure property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PastForeclosureValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PastForeclosure
        {
            get
            {
                if (this.PastForeclosureValueSpecified)
                {
                    return this.PastForeclosureValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PastForeclosureValue = value.GetValueOrDefault();
                this.PastForeclosureValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PastRepossession", Order=86, Form=XmlSchemaForm.Unqualified)]
        public bool PastRepossessionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PastRepossession property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PastRepossessionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PastRepossession
        {
            get
            {
                if (this.PastRepossessionValueSpecified)
                {
                    return this.PastRepossessionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PastRepossessionValue = value.GetValueOrDefault();
                this.PastRepossessionValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PersonCode", Order=87, Form=XmlSchemaForm.Unqualified)]
        public bool PersonCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PersonCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PersonCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PersonCode
        {
            get
            {
                if (this.PersonCodeValueSpecified)
                {
                    return this.PersonCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PersonCodeValue = value.GetValueOrDefault();
                this.PersonCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PhoneType", Order=88, Form=XmlSchemaForm.Unqualified)]
        public bool PhoneTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PhoneType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PhoneTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PhoneType
        {
            get
            {
                if (this.PhoneTypeValueSpecified)
                {
                    return this.PhoneTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PhoneTypeValue = value.GetValueOrDefault();
                this.PhoneTypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PreferredContact", Order=89, Form=XmlSchemaForm.Unqualified)]
        public bool PreferredContactValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PreferredContact property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PreferredContactValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PreferredContact
        {
            get
            {
                if (this.PreferredContactValueSpecified)
                {
                    return this.PreferredContactValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PreferredContactValue = value.GetValueOrDefault();
                this.PreferredContactValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PreferredContactMethod", Order=90, Form=XmlSchemaForm.Unqualified)]
        public bool PreferredContactMethodValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PreferredContactMethod property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PreferredContactMethodValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PreferredContactMethod
        {
            get
            {
                if (this.PreferredContactMethodValueSpecified)
                {
                    return this.PreferredContactMethodValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PreferredContactMethodValue = value.GetValueOrDefault();
                this.PreferredContactMethodValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrevEmpAddress", Order=91, Form=XmlSchemaForm.Unqualified)]
        public bool PrevEmpAddressValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrevEmpAddress property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrevEmpAddressValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrevEmpAddress
        {
            get
            {
                if (this.PrevEmpAddressValueSpecified)
                {
                    return this.PrevEmpAddressValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrevEmpAddressValue = value.GetValueOrDefault();
                this.PrevEmpAddressValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrevEmpEndDate", Order=92, Form=XmlSchemaForm.Unqualified)]
        public bool PrevEmpEndDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrevEmpEndDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrevEmpEndDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrevEmpEndDate
        {
            get
            {
                if (this.PrevEmpEndDateValueSpecified)
                {
                    return this.PrevEmpEndDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrevEmpEndDateValue = value.GetValueOrDefault();
                this.PrevEmpEndDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrevEmpGrossMonthlyPay", Order=93, Form=XmlSchemaForm.Unqualified)]
        public bool PrevEmpGrossMonthlyPayValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrevEmpGrossMonthlyPay property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrevEmpGrossMonthlyPayValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrevEmpGrossMonthlyPay
        {
            get
            {
                if (this.PrevEmpGrossMonthlyPayValueSpecified)
                {
                    return this.PrevEmpGrossMonthlyPayValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrevEmpGrossMonthlyPayValue = value.GetValueOrDefault();
                this.PrevEmpGrossMonthlyPayValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrevEmpMonthsEmp", Order=94, Form=XmlSchemaForm.Unqualified)]
        public bool PrevEmpMonthsEmpValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrevEmpMonthsEmp property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrevEmpMonthsEmpValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrevEmpMonthsEmp
        {
            get
            {
                if (this.PrevEmpMonthsEmpValueSpecified)
                {
                    return this.PrevEmpMonthsEmpValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrevEmpMonthsEmpValue = value.GetValueOrDefault();
                this.PrevEmpMonthsEmpValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrevEmpName", Order=95, Form=XmlSchemaForm.Unqualified)]
        public bool PrevEmpNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrevEmpName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrevEmpNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrevEmpName
        {
            get
            {
                if (this.PrevEmpNameValueSpecified)
                {
                    return this.PrevEmpNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrevEmpNameValue = value.GetValueOrDefault();
                this.PrevEmpNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrevEmpOccupation", Order=96, Form=XmlSchemaForm.Unqualified)]
        public bool PrevEmpOccupationValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrevEmpOccupation property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrevEmpOccupationValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrevEmpOccupation
        {
            get
            {
                if (this.PrevEmpOccupationValueSpecified)
                {
                    return this.PrevEmpOccupationValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrevEmpOccupationValue = value.GetValueOrDefault();
                this.PrevEmpOccupationValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrevEmpStartDate", Order=97, Form=XmlSchemaForm.Unqualified)]
        public bool PrevEmpStartDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrevEmpStartDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrevEmpStartDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrevEmpStartDate
        {
            get
            {
                if (this.PrevEmpStartDateValueSpecified)
                {
                    return this.PrevEmpStartDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrevEmpStartDateValue = value.GetValueOrDefault();
                this.PrevEmpStartDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrevEmpSupervisor", Order=98, Form=XmlSchemaForm.Unqualified)]
        public bool PrevEmpSupervisorValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrevEmpSupervisor property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrevEmpSupervisorValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrevEmpSupervisor
        {
            get
            {
                if (this.PrevEmpSupervisorValueSpecified)
                {
                    return this.PrevEmpSupervisorValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrevEmpSupervisorValue = value.GetValueOrDefault();
                this.PrevEmpSupervisorValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrevEmpYearsEmp", Order=99, Form=XmlSchemaForm.Unqualified)]
        public bool PrevEmpYearsEmpValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrevEmpYearsEmp property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrevEmpYearsEmpValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrevEmpYearsEmp
        {
            get
            {
                if (this.PrevEmpYearsEmpValueSpecified)
                {
                    return this.PrevEmpYearsEmpValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrevEmpYearsEmpValue = value.GetValueOrDefault();
                this.PrevEmpYearsEmpValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PreviousAddress", Order=100, Form=XmlSchemaForm.Unqualified)]
        public bool PreviousAddressValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PreviousAddress property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PreviousAddressValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PreviousAddress
        {
            get
            {
                if (this.PreviousAddressValueSpecified)
                {
                    return this.PreviousAddressValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PreviousAddressValue = value.GetValueOrDefault();
                this.PreviousAddressValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("RecordChangeDate", Order=101, Form=XmlSchemaForm.Unqualified)]
        public bool RecordChangeDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RecordChangeDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool RecordChangeDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> RecordChangeDate
        {
            get
            {
                if (this.RecordChangeDateValueSpecified)
                {
                    return this.RecordChangeDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RecordChangeDateValue = value.GetValueOrDefault();
                this.RecordChangeDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Ref1Address", Order=102, Form=XmlSchemaForm.Unqualified)]
        public bool Ref1AddressValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Ref1Address property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool Ref1AddressValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Ref1Address
        {
            get
            {
                if (this.Ref1AddressValueSpecified)
                {
                    return this.Ref1AddressValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.Ref1AddressValue = value.GetValueOrDefault();
                this.Ref1AddressValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Ref1AddressType", Order=103, Form=XmlSchemaForm.Unqualified)]
        public bool Ref1AddressTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Ref1AddressType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool Ref1AddressTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Ref1AddressType
        {
            get
            {
                if (this.Ref1AddressTypeValueSpecified)
                {
                    return this.Ref1AddressTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.Ref1AddressTypeValue = value.GetValueOrDefault();
                this.Ref1AddressTypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Ref1Code", Order=104, Form=XmlSchemaForm.Unqualified)]
        public bool Ref1CodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Ref1Code property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool Ref1CodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Ref1Code
        {
            get
            {
                if (this.Ref1CodeValueSpecified)
                {
                    return this.Ref1CodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.Ref1CodeValue = value.GetValueOrDefault();
                this.Ref1CodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Ref1Name", Order=105, Form=XmlSchemaForm.Unqualified)]
        public bool Ref1NameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Ref1Name property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool Ref1NameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Ref1Name
        {
            get
            {
                if (this.Ref1NameValueSpecified)
                {
                    return this.Ref1NameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.Ref1NameValue = value.GetValueOrDefault();
                this.Ref1NameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Ref1Phone", Order=106, Form=XmlSchemaForm.Unqualified)]
        public bool Ref1PhoneValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Ref1Phone property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool Ref1PhoneValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Ref1Phone
        {
            get
            {
                if (this.Ref1PhoneValueSpecified)
                {
                    return this.Ref1PhoneValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.Ref1PhoneValue = value.GetValueOrDefault();
                this.Ref1PhoneValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Ref1Relationship", Order=107, Form=XmlSchemaForm.Unqualified)]
        public bool Ref1RelationshipValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Ref1Relationship property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool Ref1RelationshipValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Ref1Relationship
        {
            get
            {
                if (this.Ref1RelationshipValueSpecified)
                {
                    return this.Ref1RelationshipValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.Ref1RelationshipValue = value.GetValueOrDefault();
                this.Ref1RelationshipValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Ref2Address", Order=108, Form=XmlSchemaForm.Unqualified)]
        public bool Ref2AddressValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Ref2Address property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool Ref2AddressValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Ref2Address
        {
            get
            {
                if (this.Ref2AddressValueSpecified)
                {
                    return this.Ref2AddressValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.Ref2AddressValue = value.GetValueOrDefault();
                this.Ref2AddressValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Ref2AddressType", Order=109, Form=XmlSchemaForm.Unqualified)]
        public bool Ref2AddressTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Ref2AddressType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool Ref2AddressTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Ref2AddressType
        {
            get
            {
                if (this.Ref2AddressTypeValueSpecified)
                {
                    return this.Ref2AddressTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.Ref2AddressTypeValue = value.GetValueOrDefault();
                this.Ref2AddressTypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Ref2Code", Order=110, Form=XmlSchemaForm.Unqualified)]
        public bool Ref2CodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Ref2Code property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool Ref2CodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Ref2Code
        {
            get
            {
                if (this.Ref2CodeValueSpecified)
                {
                    return this.Ref2CodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.Ref2CodeValue = value.GetValueOrDefault();
                this.Ref2CodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Ref2Name", Order=111, Form=XmlSchemaForm.Unqualified)]
        public bool Ref2NameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Ref2Name property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool Ref2NameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Ref2Name
        {
            get
            {
                if (this.Ref2NameValueSpecified)
                {
                    return this.Ref2NameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.Ref2NameValue = value.GetValueOrDefault();
                this.Ref2NameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Ref2Phone", Order=112, Form=XmlSchemaForm.Unqualified)]
        public bool Ref2PhoneValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Ref2Phone property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool Ref2PhoneValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Ref2Phone
        {
            get
            {
                if (this.Ref2PhoneValueSpecified)
                {
                    return this.Ref2PhoneValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.Ref2PhoneValue = value.GetValueOrDefault();
                this.Ref2PhoneValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Ref2Relationship", Order=113, Form=XmlSchemaForm.Unqualified)]
        public bool Ref2RelationshipValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Ref2Relationship property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool Ref2RelationshipValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Ref2Relationship
        {
            get
            {
                if (this.Ref2RelationshipValueSpecified)
                {
                    return this.Ref2RelationshipValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.Ref2RelationshipValue = value.GetValueOrDefault();
                this.Ref2RelationshipValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Ref3Address", Order=114, Form=XmlSchemaForm.Unqualified)]
        public bool Ref3AddressValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Ref3Address property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool Ref3AddressValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Ref3Address
        {
            get
            {
                if (this.Ref3AddressValueSpecified)
                {
                    return this.Ref3AddressValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.Ref3AddressValue = value.GetValueOrDefault();
                this.Ref3AddressValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Ref3AddressType", Order=115, Form=XmlSchemaForm.Unqualified)]
        public bool Ref3AddressTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Ref3AddressType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool Ref3AddressTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Ref3AddressType
        {
            get
            {
                if (this.Ref3AddressTypeValueSpecified)
                {
                    return this.Ref3AddressTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.Ref3AddressTypeValue = value.GetValueOrDefault();
                this.Ref3AddressTypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Ref3Code", Order=116, Form=XmlSchemaForm.Unqualified)]
        public bool Ref3CodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Ref3Code property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool Ref3CodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Ref3Code
        {
            get
            {
                if (this.Ref3CodeValueSpecified)
                {
                    return this.Ref3CodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.Ref3CodeValue = value.GetValueOrDefault();
                this.Ref3CodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Ref3Name", Order=117, Form=XmlSchemaForm.Unqualified)]
        public bool Ref3NameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Ref3Name property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool Ref3NameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Ref3Name
        {
            get
            {
                if (this.Ref3NameValueSpecified)
                {
                    return this.Ref3NameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.Ref3NameValue = value.GetValueOrDefault();
                this.Ref3NameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Ref3Phone", Order=118, Form=XmlSchemaForm.Unqualified)]
        public bool Ref3PhoneValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Ref3Phone property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool Ref3PhoneValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Ref3Phone
        {
            get
            {
                if (this.Ref3PhoneValueSpecified)
                {
                    return this.Ref3PhoneValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.Ref3PhoneValue = value.GetValueOrDefault();
                this.Ref3PhoneValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Ref3Relationship", Order=119, Form=XmlSchemaForm.Unqualified)]
        public bool Ref3RelationshipValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Ref3Relationship property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool Ref3RelationshipValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Ref3Relationship
        {
            get
            {
                if (this.Ref3RelationshipValueSpecified)
                {
                    return this.Ref3RelationshipValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.Ref3RelationshipValue = value.GetValueOrDefault();
                this.Ref3RelationshipValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Sex", Order=120, Form=XmlSchemaForm.Unqualified)]
        public bool SexValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Sex property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SexValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Sex
        {
            get
            {
                if (this.SexValueSpecified)
                {
                    return this.SexValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SexValue = value.GetValueOrDefault();
                this.SexValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ShortName", Order=121, Form=XmlSchemaForm.Unqualified)]
        public bool ShortNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ShortName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ShortNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ShortName
        {
            get
            {
                if (this.ShortNameValueSpecified)
                {
                    return this.ShortNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ShortNameValue = value.GetValueOrDefault();
                this.ShortNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Ssn", Order=122, Form=XmlSchemaForm.Unqualified)]
        public bool SsnValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Ssn property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SsnValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Ssn
        {
            get
            {
                if (this.SsnValueSpecified)
                {
                    return this.SsnValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SsnValue = value.GetValueOrDefault();
                this.SsnValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("State", Order=123, Form=XmlSchemaForm.Unqualified)]
        public bool StateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the State property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool StateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> State
        {
            get
            {
                if (this.StateValueSpecified)
                {
                    return this.StateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.StateValue = value.GetValueOrDefault();
                this.StateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Street", Order=124, Form=XmlSchemaForm.Unqualified)]
        public bool StreetValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Street property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool StreetValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Street
        {
            get
            {
                if (this.StreetValueSpecified)
                {
                    return this.StreetValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.StreetValue = value.GetValueOrDefault();
                this.StreetValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Suffix", Order=125, Form=XmlSchemaForm.Unqualified)]
        public bool SuffixValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Suffix property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SuffixValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Suffix
        {
            get
            {
                if (this.SuffixValueSpecified)
                {
                    return this.SuffixValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SuffixValue = value.GetValueOrDefault();
                this.SuffixValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Title", Order=126, Form=XmlSchemaForm.Unqualified)]
        public bool TitleValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Title property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TitleValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Title
        {
            get
            {
                if (this.TitleValueSpecified)
                {
                    return this.TitleValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TitleValue = value.GetValueOrDefault();
                this.TitleValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Type", Order=127, Form=XmlSchemaForm.Unqualified)]
        public bool TypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Type property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Type
        {
            get
            {
                if (this.TypeValueSpecified)
                {
                    return this.TypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TypeValue = value.GetValueOrDefault();
                this.TypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UsPersonFlag", Order=128, Form=XmlSchemaForm.Unqualified)]
        public bool UsPersonFlagValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UsPersonFlag property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UsPersonFlagValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UsPersonFlag
        {
            get
            {
                if (this.UsPersonFlagValueSpecified)
                {
                    return this.UsPersonFlagValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UsPersonFlagValue = value.GetValueOrDefault();
                this.UsPersonFlagValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("WorkPhone", Order=129, Form=XmlSchemaForm.Unqualified)]
        public bool WorkPhoneValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the WorkPhone property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool WorkPhoneValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> WorkPhone
        {
            get
            {
                if (this.WorkPhoneValueSpecified)
                {
                    return this.WorkPhoneValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.WorkPhoneValue = value.GetValueOrDefault();
                this.WorkPhoneValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("WorkPhoneExtension", Order=130, Form=XmlSchemaForm.Unqualified)]
        public bool WorkPhoneExtensionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the WorkPhoneExtension property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool WorkPhoneExtensionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> WorkPhoneExtension
        {
            get
            {
                if (this.WorkPhoneExtensionValueSpecified)
                {
                    return this.WorkPhoneExtensionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.WorkPhoneExtensionValue = value.GetValueOrDefault();
                this.WorkPhoneExtensionValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ZipCode", Order=131, Form=XmlSchemaForm.Unqualified)]
        public bool ZipCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ZipCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ZipCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ZipCode
        {
            get
            {
                if (this.ZipCodeValueSpecified)
                {
                    return this.ZipCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ZipCodeValue = value.GetValueOrDefault();
                this.ZipCodeValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("Version_1", Order=132, Form=XmlSchemaForm.Unqualified)]
        public AccountService.VersionType Version1 { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<XmlElement> _any;
        
        [XmlAnyElementAttribute(Order=133)]
        public Collection<XmlElement> Any
        {
            get
            {
                return _any;
            }
            set
            {
                _any = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return ((this.Any != null) 
                            && (this.Any.Count != 0));
            }
        }
    }
}
