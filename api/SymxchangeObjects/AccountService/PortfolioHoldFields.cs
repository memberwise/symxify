//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 2.1.1182.0 using the following command:
// xscgen C:\Users\tbuese\Desktop\Symxchange\AccountService/*.xsd --sf --un --uc --order --cn -0 --collectionSettersMode=Public -o C:\Users\tbuese\Desktop\Symxchange\AccountService\generated-output -n AccountService
namespace AccountService
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.Diagnostics;
    using System.Xml;
    using System.Xml.Schema;
    using System.Xml.Serialization;
    
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1182.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("PortfolioHoldFields", Namespace="http://www.symxchange.generated.symitar.com/crud/account/dto/retrieve")]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    [XmlRootAttribute("PortfolioHoldFields", Namespace="http://www.symxchange.generated.symitar.com/crud/account/dto/retrieve")]
    public partial class PortfolioHoldFields
    {
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AchRecurringStop", Order=0, Form=XmlSchemaForm.Unqualified)]
        public bool AchRecurringStopValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AchRecurringStop property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AchRecurringStopValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AchRecurringStop
        {
            get
            {
                if (this.AchRecurringStopValueSpecified)
                {
                    return this.AchRecurringStopValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AchRecurringStopValue = value.GetValueOrDefault();
                this.AchRecurringStopValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Amount", Order=1, Form=XmlSchemaForm.Unqualified)]
        public bool AmountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Amount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AmountValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Amount
        {
            get
            {
                if (this.AmountValueSpecified)
                {
                    return this.AmountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AmountValue = value.GetValueOrDefault();
                this.AmountValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AvailableBalance", Order=2, Form=XmlSchemaForm.Unqualified)]
        public bool AvailableBalanceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AvailableBalance property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AvailableBalanceValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AvailableBalance
        {
            get
            {
                if (this.AvailableBalanceValueSpecified)
                {
                    return this.AvailableBalanceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AvailableBalanceValue = value.GetValueOrDefault();
                this.AvailableBalanceValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("EffectiveDate", Order=3, Form=XmlSchemaForm.Unqualified)]
        public bool EffectiveDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EffectiveDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool EffectiveDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> EffectiveDate
        {
            get
            {
                if (this.EffectiveDateValueSpecified)
                {
                    return this.EffectiveDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EffectiveDateValue = value.GetValueOrDefault();
                this.EffectiveDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ExpirationDate", Order=4, Form=XmlSchemaForm.Unqualified)]
        public bool ExpirationDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ExpirationDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ExpirationDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ExpirationDate
        {
            get
            {
                if (this.ExpirationDateValueSpecified)
                {
                    return this.ExpirationDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ExpirationDateValue = value.GetValueOrDefault();
                this.ExpirationDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ExpirationTime", Order=5, Form=XmlSchemaForm.Unqualified)]
        public bool ExpirationTimeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ExpirationTime property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ExpirationTimeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ExpirationTime
        {
            get
            {
                if (this.ExpirationTimeValueSpecified)
                {
                    return this.ExpirationTimeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ExpirationTimeValue = value.GetValueOrDefault();
                this.ExpirationTimeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("FeeCode", Order=6, Form=XmlSchemaForm.Unqualified)]
        public bool FeeCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FeeCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FeeCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> FeeCode
        {
            get
            {
                if (this.FeeCodeValueSpecified)
                {
                    return this.FeeCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FeeCodeValue = value.GetValueOrDefault();
                this.FeeCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("FeeDescription", Order=7, Form=XmlSchemaForm.Unqualified)]
        public bool FeeDescriptionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FeeDescription property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FeeDescriptionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> FeeDescription
        {
            get
            {
                if (this.FeeDescriptionValueSpecified)
                {
                    return this.FeeDescriptionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FeeDescriptionValue = value.GetValueOrDefault();
                this.FeeDescriptionValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HoldCreationDate", Order=8, Form=XmlSchemaForm.Unqualified)]
        public bool HoldCreationDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HoldCreationDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HoldCreationDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HoldCreationDate
        {
            get
            {
                if (this.HoldCreationDateValueSpecified)
                {
                    return this.HoldCreationDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HoldCreationDateValue = value.GetValueOrDefault();
                this.HoldCreationDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HoldCreationTime", Order=9, Form=XmlSchemaForm.Unqualified)]
        public bool HoldCreationTimeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HoldCreationTime property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HoldCreationTimeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HoldCreationTime
        {
            get
            {
                if (this.HoldCreationTimeValueSpecified)
                {
                    return this.HoldCreationTimeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HoldCreationTimeValue = value.GetValueOrDefault();
                this.HoldCreationTimeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LedgerBalance", Order=10, Form=XmlSchemaForm.Unqualified)]
        public bool LedgerBalanceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LedgerBalance property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LedgerBalanceValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LedgerBalance
        {
            get
            {
                if (this.LedgerBalanceValueSpecified)
                {
                    return this.LedgerBalanceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LedgerBalanceValue = value.GetValueOrDefault();
                this.LedgerBalanceValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Locator", Order=11, Form=XmlSchemaForm.Unqualified)]
        public bool LocatorValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Locator property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LocatorValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Locator
        {
            get
            {
                if (this.LocatorValueSpecified)
                {
                    return this.LocatorValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LocatorValue = value.GetValueOrDefault();
                this.LocatorValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MatchDate", Order=12, Form=XmlSchemaForm.Unqualified)]
        public bool MatchDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MatchDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MatchDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MatchDate
        {
            get
            {
                if (this.MatchDateValueSpecified)
                {
                    return this.MatchDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MatchDateValue = value.GetValueOrDefault();
                this.MatchDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MatchTime", Order=13, Form=XmlSchemaForm.Unqualified)]
        public bool MatchTimeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MatchTime property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MatchTimeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MatchTime
        {
            get
            {
                if (this.MatchTimeValueSpecified)
                {
                    return this.MatchTimeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MatchTimeValue = value.GetValueOrDefault();
                this.MatchTimeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MemberBranch", Order=14, Form=XmlSchemaForm.Unqualified)]
        public bool MemberBranchValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MemberBranch property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MemberBranchValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MemberBranch
        {
            get
            {
                if (this.MemberBranchValueSpecified)
                {
                    return this.MemberBranchValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MemberBranchValue = value.GetValueOrDefault();
                this.MemberBranchValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PayeeName", Order=15, Form=XmlSchemaForm.Unqualified)]
        public bool PayeeNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PayeeName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PayeeNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PayeeName
        {
            get
            {
                if (this.PayeeNameValueSpecified)
                {
                    return this.PayeeNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PayeeNameValue = value.GetValueOrDefault();
                this.PayeeNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("RecordChangeDate", Order=16, Form=XmlSchemaForm.Unqualified)]
        public bool RecordChangeDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RecordChangeDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool RecordChangeDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> RecordChangeDate
        {
            get
            {
                if (this.RecordChangeDateValueSpecified)
                {
                    return this.RecordChangeDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RecordChangeDateValue = value.GetValueOrDefault();
                this.RecordChangeDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Reference1", Order=17, Form=XmlSchemaForm.Unqualified)]
        public bool Reference1Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Reference1 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool Reference1ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Reference1
        {
            get
            {
                if (this.Reference1ValueSpecified)
                {
                    return this.Reference1Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.Reference1Value = value.GetValueOrDefault();
                this.Reference1ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Reference2", Order=18, Form=XmlSchemaForm.Unqualified)]
        public bool Reference2Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Reference2 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool Reference2ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Reference2
        {
            get
            {
                if (this.Reference2ValueSpecified)
                {
                    return this.Reference2Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.Reference2Value = value.GetValueOrDefault();
                this.Reference2ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Reference3", Order=19, Form=XmlSchemaForm.Unqualified)]
        public bool Reference3Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Reference3 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool Reference3ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Reference3
        {
            get
            {
                if (this.Reference3ValueSpecified)
                {
                    return this.Reference3Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.Reference3Value = value.GetValueOrDefault();
                this.Reference3ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Reference4", Order=20, Form=XmlSchemaForm.Unqualified)]
        public bool Reference4Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Reference4 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool Reference4ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Reference4
        {
            get
            {
                if (this.Reference4ValueSpecified)
                {
                    return this.Reference4Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.Reference4Value = value.GetValueOrDefault();
                this.Reference4ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("StopPayCode", Order=21, Form=XmlSchemaForm.Unqualified)]
        public bool StopPayCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StopPayCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool StopPayCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> StopPayCode
        {
            get
            {
                if (this.StopPayCodeValueSpecified)
                {
                    return this.StopPayCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.StopPayCodeValue = value.GetValueOrDefault();
                this.StopPayCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TransactionType", Order=22, Form=XmlSchemaForm.Unqualified)]
        public bool TransactionTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TransactionType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TransactionTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TransactionType
        {
            get
            {
                if (this.TransactionTypeValueSpecified)
                {
                    return this.TransactionTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TransactionTypeValue = value.GetValueOrDefault();
                this.TransactionTypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Type", Order=23, Form=XmlSchemaForm.Unqualified)]
        public bool TypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Type property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Type
        {
            get
            {
                if (this.TypeValueSpecified)
                {
                    return this.TypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TypeValue = value.GetValueOrDefault();
                this.TypeValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("Version_1", Order=24, Form=XmlSchemaForm.Unqualified)]
        public AccountService.VersionType Version1 { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<XmlElement> _any;
        
        [XmlAnyElementAttribute(Order=25)]
        public Collection<XmlElement> Any
        {
            get
            {
                return _any;
            }
            set
            {
                _any = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return ((this.Any != null) 
                            && (this.Any.Count != 0));
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PortfolioHoldFields" /> class.</para>
        /// </summary>
        public PortfolioHoldFields()
        {
            this._any = new Collection<XmlElement>();
        }
    }
}
