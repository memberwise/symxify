//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 2.1.1182.0 using the following command:
// xscgen C:\Users\tbuese\Desktop\Symxchange\AccountService/*.xsd --sf --un --uc --order --cn -0 --collectionSettersMode=Public -o C:\Users\tbuese\Desktop\Symxchange\AccountService\generated-output -n AccountService
namespace AccountService
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.Diagnostics;
    using System.Xml;
    using System.Xml.Schema;
    using System.Xml.Serialization;
    
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1182.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("LoanFields", Namespace="http://www.symxchange.generated.symitar.com/crud/account/dto/retrieve")]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    [XmlRootAttribute("LoanFields", Namespace="http://www.symxchange.generated.symitar.com/crud/account/dto/retrieve")]
    public partial class LoanFields
    {
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AccelerationAmt", Order=0, Form=XmlSchemaForm.Unqualified)]
        public bool AccelerationAmtValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AccelerationAmt property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AccelerationAmtValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AccelerationAmt
        {
            get
            {
                if (this.AccelerationAmtValueSpecified)
                {
                    return this.AccelerationAmtValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AccelerationAmtValue = value.GetValueOrDefault();
                this.AccelerationAmtValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AccelerationGoodThruDate", Order=1, Form=XmlSchemaForm.Unqualified)]
        public bool AccelerationGoodThruDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AccelerationGoodThruDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AccelerationGoodThruDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AccelerationGoodThruDate
        {
            get
            {
                if (this.AccelerationGoodThruDateValueSpecified)
                {
                    return this.AccelerationGoodThruDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AccelerationGoodThruDateValue = value.GetValueOrDefault();
                this.AccelerationGoodThruDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AccelerationStmtMsgCode", Order=2, Form=XmlSchemaForm.Unqualified)]
        public bool AccelerationStmtMsgCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AccelerationStmtMsgCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AccelerationStmtMsgCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AccelerationStmtMsgCode
        {
            get
            {
                if (this.AccelerationStmtMsgCodeValueSpecified)
                {
                    return this.AccelerationStmtMsgCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AccelerationStmtMsgCodeValue = value.GetValueOrDefault();
                this.AccelerationStmtMsgCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AccrReinstatementDate", Order=3, Form=XmlSchemaForm.Unqualified)]
        public bool AccrReinstatementDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AccrReinstatementDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AccrReinstatementDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AccrReinstatementDate
        {
            get
            {
                if (this.AccrReinstatementDateValueSpecified)
                {
                    return this.AccrReinstatementDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AccrReinstatementDateValue = value.GetValueOrDefault();
                this.AccrReinstatementDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AccrualStatus", Order=4, Form=XmlSchemaForm.Unqualified)]
        public bool AccrualStatusValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AccrualStatus property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AccrualStatusValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AccrualStatus
        {
            get
            {
                if (this.AccrualStatusValueSpecified)
                {
                    return this.AccrualStatusValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AccrualStatusValue = value.GetValueOrDefault();
                this.AccrualStatusValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AcquisitionBalance", Order=5, Form=XmlSchemaForm.Unqualified)]
        public bool AcquisitionBalanceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AcquisitionBalance property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AcquisitionBalanceValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AcquisitionBalance
        {
            get
            {
                if (this.AcquisitionBalanceValueSpecified)
                {
                    return this.AcquisitionBalanceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AcquisitionBalanceValue = value.GetValueOrDefault();
                this.AcquisitionBalanceValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AcquisitionDate", Order=6, Form=XmlSchemaForm.Unqualified)]
        public bool AcquisitionDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AcquisitionDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AcquisitionDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AcquisitionDate
        {
            get
            {
                if (this.AcquisitionDateValueSpecified)
                {
                    return this.AcquisitionDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AcquisitionDateValue = value.GetValueOrDefault();
                this.AcquisitionDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ActivityDate", Order=7, Form=XmlSchemaForm.Unqualified)]
        public bool ActivityDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ActivityDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ActivityDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ActivityDate
        {
            get
            {
                if (this.ActivityDateValueSpecified)
                {
                    return this.ActivityDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ActivityDateValue = value.GetValueOrDefault();
                this.ActivityDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AdvanceAmount", Order=8, Form=XmlSchemaForm.Unqualified)]
        public bool AdvanceAmountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AdvanceAmount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AdvanceAmountValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AdvanceAmount
        {
            get
            {
                if (this.AdvanceAmountValueSpecified)
                {
                    return this.AdvanceAmountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AdvanceAmountValue = value.GetValueOrDefault();
                this.AdvanceAmountValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AgencyAcctNumber", Order=9, Form=XmlSchemaForm.Unqualified)]
        public bool AgencyAcctNumberValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AgencyAcctNumber property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AgencyAcctNumberValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AgencyAcctNumber
        {
            get
            {
                if (this.AgencyAcctNumberValueSpecified)
                {
                    return this.AgencyAcctNumberValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AgencyAcctNumberValue = value.GetValueOrDefault();
                this.AgencyAcctNumberValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AgencyIdentifier", Order=10, Form=XmlSchemaForm.Unqualified)]
        public bool AgencyIdentifierValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AgencyIdentifier property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AgencyIdentifierValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AgencyIdentifier
        {
            get
            {
                if (this.AgencyIdentifierValueSpecified)
                {
                    return this.AgencyIdentifierValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AgencyIdentifierValue = value.GetValueOrDefault();
                this.AgencyIdentifierValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AllowUnappliedPmt", Order=11, Form=XmlSchemaForm.Unqualified)]
        public bool AllowUnappliedPmtValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AllowUnappliedPmt property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AllowUnappliedPmtValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AllowUnappliedPmt
        {
            get
            {
                if (this.AllowUnappliedPmtValueSpecified)
                {
                    return this.AllowUnappliedPmtValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AllowUnappliedPmtValue = value.GetValueOrDefault();
                this.AllowUnappliedPmtValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AltPmtEffective", Order=12, Form=XmlSchemaForm.Unqualified)]
        public bool AltPmtEffectiveValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AltPmtEffective property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AltPmtEffectiveValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AltPmtEffective
        {
            get
            {
                if (this.AltPmtEffectiveValueSpecified)
                {
                    return this.AltPmtEffectiveValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AltPmtEffectiveValue = value.GetValueOrDefault();
                this.AltPmtEffectiveValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AltPmtExpiration", Order=13, Form=XmlSchemaForm.Unqualified)]
        public bool AltPmtExpirationValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AltPmtExpiration property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AltPmtExpirationValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AltPmtExpiration
        {
            get
            {
                if (this.AltPmtExpirationValueSpecified)
                {
                    return this.AltPmtExpirationValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AltPmtExpirationValue = value.GetValueOrDefault();
                this.AltPmtExpirationValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _alternateAddress;
        
        [XmlElementAttribute("AlternateAddress", Order=14, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> AlternateAddress
        {
            get
            {
                return _alternateAddress;
            }
            set
            {
                _alternateAddress = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the AlternateAddress collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool AlternateAddressSpecified
        {
            get
            {
                return ((this.AlternateAddress != null) 
                            && (this.AlternateAddress.Count != 0));
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="LoanFields" /> class.</para>
        /// </summary>
        public LoanFields()
        {
            this._alternateAddress = new Collection<short>();
            this._alternatePhone = new Collection<short>();
            this._balXfrAvgBalance = new Collection<short>();
            this._balXfrNewBalance = new Collection<short>();
            this._balXfrOldBalance = new Collection<short>();
            this._billedFeeBucketAmount = new Collection<short>();
            this._btAddOnSinceLastStmt = new Collection<short>();
            this._btPmtSinceLastStmt = new Collection<short>();
            this._bureauScore = new Collection<short>();
            this._caAddOnSinceLastStmt = new Collection<short>();
            this._caPmtSinceLastStmt = new Collection<short>();
            this._cashAdvAvgBalance = new Collection<short>();
            this._cashAdvNewBalance = new Collection<short>();
            this._cashAdvOldBalance = new Collection<short>();
            this._ccPromoEffectDate = new Collection<short>();
            this._crPmtHistory = new Collection<short>();
            this._escrowBucketAmount = new Collection<short>();
            this._feeCount = new Collection<short>();
            this._ovlCycleCount = new Collection<short>();
            this._payeeLine = new Collection<short>();
            this._payeePhone = new Collection<short>();
            this._paymentHistory = new Collection<short>();
            this._pmtBucketAmount = new Collection<short>();
            this._pmtBucketDueDate = new Collection<short>();
            this._preMthIntAccrued = new Collection<short>();
            this._preMthIntAccumLtd = new Collection<short>();
            this._preMthIntPaid = new Collection<short>();
            this._promoAdvanceCutoff = new Collection<short>();
            this._promoBalance = new Collection<short>();
            this._promoEffectDate = new Collection<short>();
            this._promoExpireDate = new Collection<short>();
            this._promoRate = new Collection<short>();
            this._promoRateMax = new Collection<short>();
            this._promoRateMin = new Collection<short>();
            this._promoRateOffset = new Collection<short>();
            this._promoRateType = new Collection<short>();
            this._promoTotalAdvances = new Collection<short>();
            this._promoType = new Collection<short>();
            this._puAddOnSinceLastStmt = new Collection<short>();
            this._puPmtSinceLastStmt = new Collection<short>();
            this._purchAvgBalance = new Collection<short>();
            this._purchNewBalance = new Collection<short>();
            this._purchOldBalance = new Collection<short>();
            this._seg0PmtBucketAmt = new Collection<short>();
            this._service = new Collection<short>();
            this._warningCode = new Collection<short>();
            this._warningExpiration = new Collection<short>();
            this._any = new Collection<XmlElement>();
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AlternateNameLocator", Order=15, Form=XmlSchemaForm.Unqualified)]
        public bool AlternateNameLocatorValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AlternateNameLocator property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AlternateNameLocatorValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AlternateNameLocator
        {
            get
            {
                if (this.AlternateNameLocatorValueSpecified)
                {
                    return this.AlternateNameLocatorValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AlternateNameLocatorValue = value.GetValueOrDefault();
                this.AlternateNameLocatorValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AlternateNameType", Order=16, Form=XmlSchemaForm.Unqualified)]
        public bool AlternateNameTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AlternateNameType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AlternateNameTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AlternateNameType
        {
            get
            {
                if (this.AlternateNameTypeValueSpecified)
                {
                    return this.AlternateNameTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AlternateNameTypeValue = value.GetValueOrDefault();
                this.AlternateNameTypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AlternatePayment", Order=17, Form=XmlSchemaForm.Unqualified)]
        public bool AlternatePaymentValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AlternatePayment property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AlternatePaymentValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AlternatePayment
        {
            get
            {
                if (this.AlternatePaymentValueSpecified)
                {
                    return this.AlternatePaymentValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AlternatePaymentValue = value.GetValueOrDefault();
                this.AlternatePaymentValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _alternatePhone;
        
        [XmlElementAttribute("AlternatePhone", Order=18, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> AlternatePhone
        {
            get
            {
                return _alternatePhone;
            }
            set
            {
                _alternatePhone = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the AlternatePhone collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool AlternatePhoneSpecified
        {
            get
            {
                return ((this.AlternatePhone != null) 
                            && (this.AlternatePhone.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AmortizationSchd", Order=19, Form=XmlSchemaForm.Unqualified)]
        public bool AmortizationSchdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AmortizationSchd property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AmortizationSchdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AmortizationSchd
        {
            get
            {
                if (this.AmortizationSchdValueSpecified)
                {
                    return this.AmortizationSchdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AmortizationSchdValue = value.GetValueOrDefault();
                this.AmortizationSchdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AmortizationSchdType", Order=20, Form=XmlSchemaForm.Unqualified)]
        public bool AmortizationSchdTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AmortizationSchdType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AmortizationSchdTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AmortizationSchdType
        {
            get
            {
                if (this.AmortizationSchdTypeValueSpecified)
                {
                    return this.AmortizationSchdTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AmortizationSchdTypeValue = value.GetValueOrDefault();
                this.AmortizationSchdTypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AmortizationTerm", Order=21, Form=XmlSchemaForm.Unqualified)]
        public bool AmortizationTermValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AmortizationTerm property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AmortizationTermValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AmortizationTerm
        {
            get
            {
                if (this.AmortizationTermValueSpecified)
                {
                    return this.AmortizationTermValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AmortizationTermValue = value.GetValueOrDefault();
                this.AmortizationTermValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ApplicationId", Order=22, Form=XmlSchemaForm.Unqualified)]
        public bool ApplicationIdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ApplicationId property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ApplicationIdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ApplicationId
        {
            get
            {
                if (this.ApplicationIdValueSpecified)
                {
                    return this.ApplicationIdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ApplicationIdValue = value.GetValueOrDefault();
                this.ApplicationIdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ApplyAsBilled", Order=23, Form=XmlSchemaForm.Unqualified)]
        public bool ApplyAsBilledValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ApplyAsBilled property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ApplyAsBilledValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ApplyAsBilled
        {
            get
            {
                if (this.ApplyAsBilledValueSpecified)
                {
                    return this.ApplyAsBilledValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ApplyAsBilledValue = value.GetValueOrDefault();
                this.ApplyAsBilledValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ApprovalCode", Order=24, Form=XmlSchemaForm.Unqualified)]
        public bool ApprovalCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ApprovalCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ApprovalCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ApprovalCode
        {
            get
            {
                if (this.ApprovalCodeValueSpecified)
                {
                    return this.ApprovalCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ApprovalCodeValue = value.GetValueOrDefault();
                this.ApprovalCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ApprovalDate", Order=25, Form=XmlSchemaForm.Unqualified)]
        public bool ApprovalDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ApprovalDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ApprovalDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ApprovalDate
        {
            get
            {
                if (this.ApprovalDateValueSpecified)
                {
                    return this.ApprovalDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ApprovalDateValue = value.GetValueOrDefault();
                this.ApprovalDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Apr", Order=26, Form=XmlSchemaForm.Unqualified)]
        public bool AprValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Apr property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AprValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Apr
        {
            get
            {
                if (this.AprValueSpecified)
                {
                    return this.AprValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AprValue = value.GetValueOrDefault();
                this.AprValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ArmNotice", Order=27, Form=XmlSchemaForm.Unqualified)]
        public bool ArmNoticeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ArmNotice property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ArmNoticeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ArmNotice
        {
            get
            {
                if (this.ArmNoticeValueSpecified)
                {
                    return this.ArmNoticeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ArmNoticeValue = value.GetValueOrDefault();
                this.ArmNoticeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AssessorParcelNumber", Order=28, Form=XmlSchemaForm.Unqualified)]
        public bool AssessorParcelNumberValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AssessorParcelNumber property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AssessorParcelNumberValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AssessorParcelNumber
        {
            get
            {
                if (this.AssessorParcelNumberValueSpecified)
                {
                    return this.AssessorParcelNumberValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AssessorParcelNumberValue = value.GetValueOrDefault();
                this.AssessorParcelNumberValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AvailCreditCalc", Order=29, Form=XmlSchemaForm.Unqualified)]
        public bool AvailCreditCalcValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AvailCreditCalc property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AvailCreditCalcValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AvailCreditCalc
        {
            get
            {
                if (this.AvailCreditCalcValueSpecified)
                {
                    return this.AvailCreditCalcValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AvailCreditCalcValue = value.GetValueOrDefault();
                this.AvailCreditCalcValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AvailableBalanceTransfer", Order=30, Form=XmlSchemaForm.Unqualified)]
        public bool AvailableBalanceTransferValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AvailableBalanceTransfer property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AvailableBalanceTransferValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AvailableBalanceTransfer
        {
            get
            {
                if (this.AvailableBalanceTransferValueSpecified)
                {
                    return this.AvailableBalanceTransferValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AvailableBalanceTransferValue = value.GetValueOrDefault();
                this.AvailableBalanceTransferValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AvailableCashAdvance", Order=31, Form=XmlSchemaForm.Unqualified)]
        public bool AvailableCashAdvanceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AvailableCashAdvance property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AvailableCashAdvanceValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AvailableCashAdvance
        {
            get
            {
                if (this.AvailableCashAdvanceValueSpecified)
                {
                    return this.AvailableCashAdvanceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AvailableCashAdvanceValue = value.GetValueOrDefault();
                this.AvailableCashAdvanceValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AvailableCombinedCabt", Order=32, Form=XmlSchemaForm.Unqualified)]
        public bool AvailableCombinedCabtValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AvailableCombinedCabt property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AvailableCombinedCabtValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AvailableCombinedCabt
        {
            get
            {
                if (this.AvailableCombinedCabtValueSpecified)
                {
                    return this.AvailableCombinedCabtValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AvailableCombinedCabtValue = value.GetValueOrDefault();
                this.AvailableCombinedCabtValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AvailableCredit", Order=33, Form=XmlSchemaForm.Unqualified)]
        public bool AvailableCreditValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AvailableCredit property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AvailableCreditValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AvailableCredit
        {
            get
            {
                if (this.AvailableCreditValueSpecified)
                {
                    return this.AvailableCreditValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AvailableCreditValue = value.GetValueOrDefault();
                this.AvailableCreditValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AvgWeightedIntRate", Order=34, Form=XmlSchemaForm.Unqualified)]
        public bool AvgWeightedIntRateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AvgWeightedIntRate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AvgWeightedIntRateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AvgWeightedIntRate
        {
            get
            {
                if (this.AvgWeightedIntRateValueSpecified)
                {
                    return this.AvgWeightedIntRateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AvgWeightedIntRateValue = value.GetValueOrDefault();
                this.AvgWeightedIntRateValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _balXfrAvgBalance;
        
        [XmlElementAttribute("BalXfrAvgBalance", Order=35, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> BalXfrAvgBalance
        {
            get
            {
                return _balXfrAvgBalance;
            }
            set
            {
                _balXfrAvgBalance = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the BalXfrAvgBalance collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool BalXfrAvgBalanceSpecified
        {
            get
            {
                return ((this.BalXfrAvgBalance != null) 
                            && (this.BalXfrAvgBalance.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _balXfrNewBalance;
        
        [XmlElementAttribute("BalXfrNewBalance", Order=36, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> BalXfrNewBalance
        {
            get
            {
                return _balXfrNewBalance;
            }
            set
            {
                _balXfrNewBalance = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the BalXfrNewBalance collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool BalXfrNewBalanceSpecified
        {
            get
            {
                return ((this.BalXfrNewBalance != null) 
                            && (this.BalXfrNewBalance.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _balXfrOldBalance;
        
        [XmlElementAttribute("BalXfrOldBalance", Order=37, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> BalXfrOldBalance
        {
            get
            {
                return _balXfrOldBalance;
            }
            set
            {
                _balXfrOldBalance = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the BalXfrOldBalance collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool BalXfrOldBalanceSpecified
        {
            get
            {
                return ((this.BalXfrOldBalance != null) 
                            && (this.BalXfrOldBalance.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Balance", Order=38, Form=XmlSchemaForm.Unqualified)]
        public bool BalanceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Balance property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BalanceValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Balance
        {
            get
            {
                if (this.BalanceValueSpecified)
                {
                    return this.BalanceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BalanceValue = value.GetValueOrDefault();
                this.BalanceValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BalanceTransferLimit", Order=39, Form=XmlSchemaForm.Unqualified)]
        public bool BalanceTransferLimitValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BalanceTransferLimit property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BalanceTransferLimitValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BalanceTransferLimit
        {
            get
            {
                if (this.BalanceTransferLimitValueSpecified)
                {
                    return this.BalanceTransferLimitValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BalanceTransferLimitValue = value.GetValueOrDefault();
                this.BalanceTransferLimitValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BalloonAmount", Order=40, Form=XmlSchemaForm.Unqualified)]
        public bool BalloonAmountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BalloonAmount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BalloonAmountValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BalloonAmount
        {
            get
            {
                if (this.BalloonAmountValueSpecified)
                {
                    return this.BalloonAmountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BalloonAmountValue = value.GetValueOrDefault();
                this.BalloonAmountValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BalloonDate", Order=41, Form=XmlSchemaForm.Unqualified)]
        public bool BalloonDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BalloonDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BalloonDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BalloonDate
        {
            get
            {
                if (this.BalloonDateValueSpecified)
                {
                    return this.BalloonDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BalloonDateValue = value.GetValueOrDefault();
                this.BalloonDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BcdDay1", Order=42, Form=XmlSchemaForm.Unqualified)]
        public bool BcdDay1Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BcdDay1 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BcdDay1ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BcdDay1
        {
            get
            {
                if (this.BcdDay1ValueSpecified)
                {
                    return this.BcdDay1Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BcdDay1Value = value.GetValueOrDefault();
                this.BcdDay1ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BcdDay2", Order=43, Form=XmlSchemaForm.Unqualified)]
        public bool BcdDay2Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BcdDay2 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BcdDay2ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BcdDay2
        {
            get
            {
                if (this.BcdDay2ValueSpecified)
                {
                    return this.BcdDay2Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BcdDay2Value = value.GetValueOrDefault();
                this.BcdDay2ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BeginningCycleDate", Order=44, Form=XmlSchemaForm.Unqualified)]
        public bool BeginningCycleDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BeginningCycleDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BeginningCycleDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BeginningCycleDate
        {
            get
            {
                if (this.BeginningCycleDateValueSpecified)
                {
                    return this.BeginningCycleDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BeginningCycleDateValue = value.GetValueOrDefault();
                this.BeginningCycleDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BeginningYearBalance", Order=45, Form=XmlSchemaForm.Unqualified)]
        public bool BeginningYearBalanceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BeginningYearBalance property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BeginningYearBalanceValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BeginningYearBalance
        {
            get
            {
                if (this.BeginningYearBalanceValueSpecified)
                {
                    return this.BeginningYearBalanceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BeginningYearBalanceValue = value.GetValueOrDefault();
                this.BeginningYearBalanceValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _billedFeeBucketAmount;
        
        [XmlElementAttribute("BilledFeeBucketAmount", Order=46, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> BilledFeeBucketAmount
        {
            get
            {
                return _billedFeeBucketAmount;
            }
            set
            {
                _billedFeeBucketAmount = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the BilledFeeBucketAmount collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool BilledFeeBucketAmountSpecified
        {
            get
            {
                return ((this.BilledFeeBucketAmount != null) 
                            && (this.BilledFeeBucketAmount.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BilledFeeLastYear", Order=47, Form=XmlSchemaForm.Unqualified)]
        public bool BilledFeeLastYearValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BilledFeeLastYear property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BilledFeeLastYearValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BilledFeeLastYear
        {
            get
            {
                if (this.BilledFeeLastYearValueSpecified)
                {
                    return this.BilledFeeLastYearValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BilledFeeLastYearValue = value.GetValueOrDefault();
                this.BilledFeeLastYearValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BilledFeeLstYrNoAdj", Order=48, Form=XmlSchemaForm.Unqualified)]
        public bool BilledFeeLstYrNoAdjValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BilledFeeLstYrNoAdj property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BilledFeeLstYrNoAdjValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BilledFeeLstYrNoAdj
        {
            get
            {
                if (this.BilledFeeLstYrNoAdjValueSpecified)
                {
                    return this.BilledFeeLstYrNoAdjValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BilledFeeLstYrNoAdjValue = value.GetValueOrDefault();
                this.BilledFeeLstYrNoAdjValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BilledFeeUnpaid", Order=49, Form=XmlSchemaForm.Unqualified)]
        public bool BilledFeeUnpaidValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BilledFeeUnpaid property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BilledFeeUnpaidValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BilledFeeUnpaid
        {
            get
            {
                if (this.BilledFeeUnpaidValueSpecified)
                {
                    return this.BilledFeeUnpaidValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BilledFeeUnpaidValue = value.GetValueOrDefault();
                this.BilledFeeUnpaidValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BilledFeeYtd", Order=50, Form=XmlSchemaForm.Unqualified)]
        public bool BilledFeeYtdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BilledFeeYtd property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BilledFeeYtdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BilledFeeYtd
        {
            get
            {
                if (this.BilledFeeYtdValueSpecified)
                {
                    return this.BilledFeeYtdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BilledFeeYtdValue = value.GetValueOrDefault();
                this.BilledFeeYtdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BilledFeeYtdNoAdj", Order=51, Form=XmlSchemaForm.Unqualified)]
        public bool BilledFeeYtdNoAdjValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BilledFeeYtdNoAdj property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BilledFeeYtdNoAdjValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BilledFeeYtdNoAdj
        {
            get
            {
                if (this.BilledFeeYtdNoAdjValueSpecified)
                {
                    return this.BilledFeeYtdNoAdjValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BilledFeeYtdNoAdjValue = value.GetValueOrDefault();
                this.BilledFeeYtdNoAdjValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BillingDefaultDays", Order=52, Form=XmlSchemaForm.Unqualified)]
        public bool BillingDefaultDaysValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BillingDefaultDays property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BillingDefaultDaysValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BillingDefaultDays
        {
            get
            {
                if (this.BillingDefaultDaysValueSpecified)
                {
                    return this.BillingDefaultDaysValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BillingDefaultDaysValue = value.GetValueOrDefault();
                this.BillingDefaultDaysValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BillingMethod", Order=53, Form=XmlSchemaForm.Unqualified)]
        public bool BillingMethodValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BillingMethod property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BillingMethodValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BillingMethod
        {
            get
            {
                if (this.BillingMethodValueSpecified)
                {
                    return this.BillingMethodValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BillingMethodValue = value.GetValueOrDefault();
                this.BillingMethodValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BillingNotice", Order=54, Form=XmlSchemaForm.Unqualified)]
        public bool BillingNoticeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BillingNotice property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BillingNoticeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BillingNotice
        {
            get
            {
                if (this.BillingNoticeValueSpecified)
                {
                    return this.BillingNoticeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BillingNoticeValue = value.GetValueOrDefault();
                this.BillingNoticeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BillingNoticeMin", Order=55, Form=XmlSchemaForm.Unqualified)]
        public bool BillingNoticeMinValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BillingNoticeMin property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BillingNoticeMinValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BillingNoticeMin
        {
            get
            {
                if (this.BillingNoticeMinValueSpecified)
                {
                    return this.BillingNoticeMinValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BillingNoticeMinValue = value.GetValueOrDefault();
                this.BillingNoticeMinValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BkChapterReported", Order=56, Form=XmlSchemaForm.Unqualified)]
        public bool BkChapterReportedValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BkChapterReported property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BkChapterReportedValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BkChapterReported
        {
            get
            {
                if (this.BkChapterReportedValueSpecified)
                {
                    return this.BkChapterReportedValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BkChapterReportedValue = value.GetValueOrDefault();
                this.BkChapterReportedValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Branch", Order=57, Form=XmlSchemaForm.Unqualified)]
        public bool BranchValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Branch property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BranchValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Branch
        {
            get
            {
                if (this.BranchValueSpecified)
                {
                    return this.BranchValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BranchValue = value.GetValueOrDefault();
                this.BranchValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _btAddOnSinceLastStmt;
        
        [XmlElementAttribute("BtAddOnSinceLastStmt", Order=58, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> BtAddOnSinceLastStmt
        {
            get
            {
                return _btAddOnSinceLastStmt;
            }
            set
            {
                _btAddOnSinceLastStmt = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the BtAddOnSinceLastStmt collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool BtAddOnSinceLastStmtSpecified
        {
            get
            {
                return ((this.BtAddOnSinceLastStmt != null) 
                            && (this.BtAddOnSinceLastStmt.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BtIntCharge", Order=59, Form=XmlSchemaForm.Unqualified)]
        public bool BtIntChargeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BtIntCharge property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BtIntChargeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BtIntCharge
        {
            get
            {
                if (this.BtIntChargeValueSpecified)
                {
                    return this.BtIntChargeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BtIntChargeValue = value.GetValueOrDefault();
                this.BtIntChargeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BtLimitMax", Order=60, Form=XmlSchemaForm.Unqualified)]
        public bool BtLimitMaxValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BtLimitMax property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BtLimitMaxValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BtLimitMax
        {
            get
            {
                if (this.BtLimitMaxValueSpecified)
                {
                    return this.BtLimitMaxValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BtLimitMaxValue = value.GetValueOrDefault();
                this.BtLimitMaxValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BtNewIntUnpaid", Order=61, Form=XmlSchemaForm.Unqualified)]
        public bool BtNewIntUnpaidValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BtNewIntUnpaid property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BtNewIntUnpaidValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BtNewIntUnpaid
        {
            get
            {
                if (this.BtNewIntUnpaidValueSpecified)
                {
                    return this.BtNewIntUnpaidValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BtNewIntUnpaidValue = value.GetValueOrDefault();
                this.BtNewIntUnpaidValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BtOldIntUnpaid", Order=62, Form=XmlSchemaForm.Unqualified)]
        public bool BtOldIntUnpaidValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BtOldIntUnpaid property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BtOldIntUnpaidValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BtOldIntUnpaid
        {
            get
            {
                if (this.BtOldIntUnpaidValueSpecified)
                {
                    return this.BtOldIntUnpaidValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BtOldIntUnpaidValue = value.GetValueOrDefault();
                this.BtOldIntUnpaidValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BtPercent", Order=63, Form=XmlSchemaForm.Unqualified)]
        public bool BtPercentValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BtPercent property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BtPercentValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BtPercent
        {
            get
            {
                if (this.BtPercentValueSpecified)
                {
                    return this.BtPercentValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BtPercentValue = value.GetValueOrDefault();
                this.BtPercentValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _btPmtSinceLastStmt;
        
        [XmlElementAttribute("BtPmtSinceLastStmt", Order=64, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> BtPmtSinceLastStmt
        {
            get
            {
                return _btPmtSinceLastStmt;
            }
            set
            {
                _btPmtSinceLastStmt = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the BtPmtSinceLastStmt collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool BtPmtSinceLastStmtSpecified
        {
            get
            {
                return ((this.BtPmtSinceLastStmt != null) 
                            && (this.BtPmtSinceLastStmt.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BtTransIntCharge", Order=65, Form=XmlSchemaForm.Unqualified)]
        public bool BtTransIntChargeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BtTransIntCharge property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BtTransIntChargeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BtTransIntCharge
        {
            get
            {
                if (this.BtTransIntChargeValueSpecified)
                {
                    return this.BtTransIntChargeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BtTransIntChargeValue = value.GetValueOrDefault();
                this.BtTransIntChargeValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _bureauScore;
        
        [XmlElementAttribute("BureauScore", Order=66, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> BureauScore
        {
            get
            {
                return _bureauScore;
            }
            set
            {
                _bureauScore = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the BureauScore collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool BureauScoreSpecified
        {
            get
            {
                return ((this.BureauScore != null) 
                            && (this.BureauScore.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _caAddOnSinceLastStmt;
        
        [XmlElementAttribute("CaAddOnSinceLastStmt", Order=67, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> CaAddOnSinceLastStmt
        {
            get
            {
                return _caAddOnSinceLastStmt;
            }
            set
            {
                _caAddOnSinceLastStmt = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CaAddOnSinceLastStmt collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool CaAddOnSinceLastStmtSpecified
        {
            get
            {
                return ((this.CaAddOnSinceLastStmt != null) 
                            && (this.CaAddOnSinceLastStmt.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CaBtTransIntChargeBilledYtd", Order=68, Form=XmlSchemaForm.Unqualified)]
        public bool CaBtTransIntChargeBilledYtdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CaBtTransIntChargeBilledYtd property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CaBtTransIntChargeBilledYtdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CaBtTransIntChargeBilledYtd
        {
            get
            {
                if (this.CaBtTransIntChargeBilledYtdValueSpecified)
                {
                    return this.CaBtTransIntChargeBilledYtdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CaBtTransIntChargeBilledYtdValue = value.GetValueOrDefault();
                this.CaBtTransIntChargeBilledYtdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CaIntCharge", Order=69, Form=XmlSchemaForm.Unqualified)]
        public bool CaIntChargeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CaIntCharge property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CaIntChargeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CaIntCharge
        {
            get
            {
                if (this.CaIntChargeValueSpecified)
                {
                    return this.CaIntChargeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CaIntChargeValue = value.GetValueOrDefault();
                this.CaIntChargeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CaLimitMax", Order=70, Form=XmlSchemaForm.Unqualified)]
        public bool CaLimitMaxValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CaLimitMax property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CaLimitMaxValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CaLimitMax
        {
            get
            {
                if (this.CaLimitMaxValueSpecified)
                {
                    return this.CaLimitMaxValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CaLimitMaxValue = value.GetValueOrDefault();
                this.CaLimitMaxValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CaNewIntUnpaid", Order=71, Form=XmlSchemaForm.Unqualified)]
        public bool CaNewIntUnpaidValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CaNewIntUnpaid property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CaNewIntUnpaidValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CaNewIntUnpaid
        {
            get
            {
                if (this.CaNewIntUnpaidValueSpecified)
                {
                    return this.CaNewIntUnpaidValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CaNewIntUnpaidValue = value.GetValueOrDefault();
                this.CaNewIntUnpaidValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CaOldIntUnpaid", Order=72, Form=XmlSchemaForm.Unqualified)]
        public bool CaOldIntUnpaidValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CaOldIntUnpaid property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CaOldIntUnpaidValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CaOldIntUnpaid
        {
            get
            {
                if (this.CaOldIntUnpaidValueSpecified)
                {
                    return this.CaOldIntUnpaidValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CaOldIntUnpaidValue = value.GetValueOrDefault();
                this.CaOldIntUnpaidValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CaPercent", Order=73, Form=XmlSchemaForm.Unqualified)]
        public bool CaPercentValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CaPercent property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CaPercentValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CaPercent
        {
            get
            {
                if (this.CaPercentValueSpecified)
                {
                    return this.CaPercentValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CaPercentValue = value.GetValueOrDefault();
                this.CaPercentValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _caPmtSinceLastStmt;
        
        [XmlElementAttribute("CaPmtSinceLastStmt", Order=74, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> CaPmtSinceLastStmt
        {
            get
            {
                return _caPmtSinceLastStmt;
            }
            set
            {
                _caPmtSinceLastStmt = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CaPmtSinceLastStmt collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool CaPmtSinceLastStmtSpecified
        {
            get
            {
                return ((this.CaPmtSinceLastStmt != null) 
                            && (this.CaPmtSinceLastStmt.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CaTransIntCharge", Order=75, Form=XmlSchemaForm.Unqualified)]
        public bool CaTransIntChargeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CaTransIntCharge property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CaTransIntChargeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CaTransIntCharge
        {
            get
            {
                if (this.CaTransIntChargeValueSpecified)
                {
                    return this.CaTransIntChargeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CaTransIntChargeValue = value.GetValueOrDefault();
                this.CaTransIntChargeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CallItemSchd", Order=76, Form=XmlSchemaForm.Unqualified)]
        public bool CallItemSchdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CallItemSchd property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CallItemSchdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CallItemSchd
        {
            get
            {
                if (this.CallItemSchdValueSpecified)
                {
                    return this.CallItemSchdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CallItemSchdValue = value.GetValueOrDefault();
                this.CallItemSchdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CallItemSchdType", Order=77, Form=XmlSchemaForm.Unqualified)]
        public bool CallItemSchdTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CallItemSchdType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CallItemSchdTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CallItemSchdType
        {
            get
            {
                if (this.CallItemSchdTypeValueSpecified)
                {
                    return this.CallItemSchdTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CallItemSchdTypeValue = value.GetValueOrDefault();
                this.CallItemSchdTypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Cancelable", Order=78, Form=XmlSchemaForm.Unqualified)]
        public bool CancelableValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Cancelable property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CancelableValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Cancelable
        {
            get
            {
                if (this.CancelableValueSpecified)
                {
                    return this.CancelableValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CancelableValue = value.GetValueOrDefault();
                this.CancelableValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CappedFeesAmountCap", Order=79, Form=XmlSchemaForm.Unqualified)]
        public bool CappedFeesAmountCapValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CappedFeesAmountCap property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CappedFeesAmountCapValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CappedFeesAmountCap
        {
            get
            {
                if (this.CappedFeesAmountCapValueSpecified)
                {
                    return this.CappedFeesAmountCapValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CappedFeesAmountCapValue = value.GetValueOrDefault();
                this.CappedFeesAmountCapValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CappedFeesAmtPeriod", Order=80, Form=XmlSchemaForm.Unqualified)]
        public bool CappedFeesAmtPeriodValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CappedFeesAmtPeriod property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CappedFeesAmtPeriodValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CappedFeesAmtPeriod
        {
            get
            {
                if (this.CappedFeesAmtPeriodValueSpecified)
                {
                    return this.CappedFeesAmtPeriodValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CappedFeesAmtPeriodValue = value.GetValueOrDefault();
                this.CappedFeesAmtPeriodValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CappedFeesCntPeriod", Order=81, Form=XmlSchemaForm.Unqualified)]
        public bool CappedFeesCntPeriodValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CappedFeesCntPeriod property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CappedFeesCntPeriodValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CappedFeesCntPeriod
        {
            get
            {
                if (this.CappedFeesCntPeriodValueSpecified)
                {
                    return this.CappedFeesCntPeriodValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CappedFeesCntPeriodValue = value.GetValueOrDefault();
                this.CappedFeesCntPeriodValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CappedFeesCountCap", Order=82, Form=XmlSchemaForm.Unqualified)]
        public bool CappedFeesCountCapValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CappedFeesCountCap property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CappedFeesCountCapValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CappedFeesCountCap
        {
            get
            {
                if (this.CappedFeesCountCapValueSpecified)
                {
                    return this.CappedFeesCountCapValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CappedFeesCountCapValue = value.GetValueOrDefault();
                this.CappedFeesCountCapValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CardActDeclChkAxsFeeEventDate", Order=83, Form=XmlSchemaForm.Unqualified)]
        public bool CardActDeclChkAxsFeeEventDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CardActDeclChkAxsFeeEventDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CardActDeclChkAxsFeeEventDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CardActDeclChkAxsFeeEventDate
        {
            get
            {
                if (this.CardActDeclChkAxsFeeEventDateValueSpecified)
                {
                    return this.CardActDeclChkAxsFeeEventDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CardActDeclChkAxsFeeEventDateValue = value.GetValueOrDefault();
                this.CardActDeclChkAxsFeeEventDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CardActLateFeeEventDate", Order=84, Form=XmlSchemaForm.Unqualified)]
        public bool CardActLateFeeEventDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CardActLateFeeEventDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CardActLateFeeEventDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CardActLateFeeEventDate
        {
            get
            {
                if (this.CardActLateFeeEventDateValueSpecified)
                {
                    return this.CardActLateFeeEventDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CardActLateFeeEventDateValue = value.GetValueOrDefault();
                this.CardActLateFeeEventDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CardActOverLimitFeeEventDate", Order=85, Form=XmlSchemaForm.Unqualified)]
        public bool CardActOverLimitFeeEventDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CardActOverLimitFeeEventDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CardActOverLimitFeeEventDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CardActOverLimitFeeEventDate
        {
            get
            {
                if (this.CardActOverLimitFeeEventDateValueSpecified)
                {
                    return this.CardActOverLimitFeeEventDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CardActOverLimitFeeEventDateValue = value.GetValueOrDefault();
                this.CardActOverLimitFeeEventDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CardActReturnItemFeeEventDate", Order=86, Form=XmlSchemaForm.Unqualified)]
        public bool CardActReturnItemFeeEventDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CardActReturnItemFeeEventDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CardActReturnItemFeeEventDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CardActReturnItemFeeEventDate
        {
            get
            {
                if (this.CardActReturnItemFeeEventDateValueSpecified)
                {
                    return this.CardActReturnItemFeeEventDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CardActReturnItemFeeEventDateValue = value.GetValueOrDefault();
                this.CardActReturnItemFeeEventDateValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _cashAdvAvgBalance;
        
        [XmlElementAttribute("CashAdvAvgBalance", Order=87, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> CashAdvAvgBalance
        {
            get
            {
                return _cashAdvAvgBalance;
            }
            set
            {
                _cashAdvAvgBalance = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CashAdvAvgBalance collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool CashAdvAvgBalanceSpecified
        {
            get
            {
                return ((this.CashAdvAvgBalance != null) 
                            && (this.CashAdvAvgBalance.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _cashAdvNewBalance;
        
        [XmlElementAttribute("CashAdvNewBalance", Order=88, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> CashAdvNewBalance
        {
            get
            {
                return _cashAdvNewBalance;
            }
            set
            {
                _cashAdvNewBalance = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CashAdvNewBalance collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool CashAdvNewBalanceSpecified
        {
            get
            {
                return ((this.CashAdvNewBalance != null) 
                            && (this.CashAdvNewBalance.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _cashAdvOldBalance;
        
        [XmlElementAttribute("CashAdvOldBalance", Order=89, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> CashAdvOldBalance
        {
            get
            {
                return _cashAdvOldBalance;
            }
            set
            {
                _cashAdvOldBalance = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CashAdvOldBalance collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool CashAdvOldBalanceSpecified
        {
            get
            {
                return ((this.CashAdvOldBalance != null) 
                            && (this.CashAdvOldBalance.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CashAdvanceLimit", Order=90, Form=XmlSchemaForm.Unqualified)]
        public bool CashAdvanceLimitValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CashAdvanceLimit property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CashAdvanceLimitValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CashAdvanceLimit
        {
            get
            {
                if (this.CashAdvanceLimitValueSpecified)
                {
                    return this.CashAdvanceLimitValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CashAdvanceLimitValue = value.GetValueOrDefault();
                this.CashAdvanceLimitValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CcIntBilledLastYear", Order=91, Form=XmlSchemaForm.Unqualified)]
        public bool CcIntBilledLastYearValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CcIntBilledLastYear property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CcIntBilledLastYearValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CcIntBilledLastYear
        {
            get
            {
                if (this.CcIntBilledLastYearValueSpecified)
                {
                    return this.CcIntBilledLastYearValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CcIntBilledLastYearValue = value.GetValueOrDefault();
                this.CcIntBilledLastYearValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CcIntBilledYtd", Order=92, Form=XmlSchemaForm.Unqualified)]
        public bool CcIntBilledYtdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CcIntBilledYtd property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CcIntBilledYtdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CcIntBilledYtd
        {
            get
            {
                if (this.CcIntBilledYtdValueSpecified)
                {
                    return this.CcIntBilledYtdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CcIntBilledYtdValue = value.GetValueOrDefault();
                this.CcIntBilledYtdValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _ccPromoEffectDate;
        
        [XmlElementAttribute("CcPromoEffectDate", Order=93, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> CcPromoEffectDate
        {
            get
            {
                return _ccPromoEffectDate;
            }
            set
            {
                _ccPromoEffectDate = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CcPromoEffectDate collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool CcPromoEffectDateSpecified
        {
            get
            {
                return ((this.CcPromoEffectDate != null) 
                            && (this.CcPromoEffectDate.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ChargeOffAmount", Order=94, Form=XmlSchemaForm.Unqualified)]
        public bool ChargeOffAmountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ChargeOffAmount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ChargeOffAmountValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ChargeOffAmount
        {
            get
            {
                if (this.ChargeOffAmountValueSpecified)
                {
                    return this.ChargeOffAmountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ChargeOffAmountValue = value.GetValueOrDefault();
                this.ChargeOffAmountValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ChargeOffDate", Order=95, Form=XmlSchemaForm.Unqualified)]
        public bool ChargeOffDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ChargeOffDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ChargeOffDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ChargeOffDate
        {
            get
            {
                if (this.ChargeOffDateValueSpecified)
                {
                    return this.ChargeOffDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ChargeOffDateValue = value.GetValueOrDefault();
                this.ChargeOffDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ChargeOffType", Order=96, Form=XmlSchemaForm.Unqualified)]
        public bool ChargeOffTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ChargeOffType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ChargeOffTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ChargeOffType
        {
            get
            {
                if (this.ChargeOffTypeValueSpecified)
                {
                    return this.ChargeOffTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ChargeOffTypeValue = value.GetValueOrDefault();
                this.ChargeOffTypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CheckDigits", Order=97, Form=XmlSchemaForm.Unqualified)]
        public bool CheckDigitsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CheckDigits property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CheckDigitsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CheckDigits
        {
            get
            {
                if (this.CheckDigitsValueSpecified)
                {
                    return this.CheckDigitsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CheckDigitsValue = value.GetValueOrDefault();
                this.CheckDigitsValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CitySalesTaxRate", Order=98, Form=XmlSchemaForm.Unqualified)]
        public bool CitySalesTaxRateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CitySalesTaxRate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CitySalesTaxRateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CitySalesTaxRate
        {
            get
            {
                if (this.CitySalesTaxRateValueSpecified)
                {
                    return this.CitySalesTaxRateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CitySalesTaxRateValue = value.GetValueOrDefault();
                this.CitySalesTaxRateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CloseDate", Order=99, Form=XmlSchemaForm.Unqualified)]
        public bool CloseDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CloseDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CloseDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CloseDate
        {
            get
            {
                if (this.CloseDateValueSpecified)
                {
                    return this.CloseDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CloseDateValue = value.GetValueOrDefault();
                this.CloseDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CntySalesTaxRate", Order=100, Form=XmlSchemaForm.Unqualified)]
        public bool CntySalesTaxRateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CntySalesTaxRate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CntySalesTaxRateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CntySalesTaxRate
        {
            get
            {
                if (this.CntySalesTaxRateValueSpecified)
                {
                    return this.CntySalesTaxRateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CntySalesTaxRateValue = value.GetValueOrDefault();
                this.CntySalesTaxRateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CollateralCode", Order=101, Form=XmlSchemaForm.Unqualified)]
        public bool CollateralCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CollateralCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CollateralCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CollateralCode
        {
            get
            {
                if (this.CollateralCodeValueSpecified)
                {
                    return this.CollateralCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CollateralCodeValue = value.GetValueOrDefault();
                this.CollateralCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CollateralDate", Order=102, Form=XmlSchemaForm.Unqualified)]
        public bool CollateralDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CollateralDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CollateralDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CollateralDate
        {
            get
            {
                if (this.CollateralDateValueSpecified)
                {
                    return this.CollateralDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CollateralDateValue = value.GetValueOrDefault();
                this.CollateralDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CombinedCaBtLimit", Order=103, Form=XmlSchemaForm.Unqualified)]
        public bool CombinedCaBtLimitValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CombinedCaBtLimit property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CombinedCaBtLimitValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CombinedCaBtLimit
        {
            get
            {
                if (this.CombinedCaBtLimitValueSpecified)
                {
                    return this.CombinedCaBtLimitValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CombinedCaBtLimitValue = value.GetValueOrDefault();
                this.CombinedCaBtLimitValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CombinedCaBtLimitMax", Order=104, Form=XmlSchemaForm.Unqualified)]
        public bool CombinedCaBtLimitMaxValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CombinedCaBtLimitMax property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CombinedCaBtLimitMaxValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CombinedCaBtLimitMax
        {
            get
            {
                if (this.CombinedCaBtLimitMaxValueSpecified)
                {
                    return this.CombinedCaBtLimitMaxValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CombinedCaBtLimitMaxValue = value.GetValueOrDefault();
                this.CombinedCaBtLimitMaxValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CombinedCaBtPercent", Order=105, Form=XmlSchemaForm.Unqualified)]
        public bool CombinedCaBtPercentValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CombinedCaBtPercent property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CombinedCaBtPercentValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CombinedCaBtPercent
        {
            get
            {
                if (this.CombinedCaBtPercentValueSpecified)
                {
                    return this.CombinedCaBtPercentValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CombinedCaBtPercentValue = value.GetValueOrDefault();
                this.CombinedCaBtPercentValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ComboLnSegmentMax", Order=106, Form=XmlSchemaForm.Unqualified)]
        public bool ComboLnSegmentMaxValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ComboLnSegmentMax property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ComboLnSegmentMaxValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ComboLnSegmentMax
        {
            get
            {
                if (this.ComboLnSegmentMaxValueSpecified)
                {
                    return this.ComboLnSegmentMaxValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ComboLnSegmentMaxValue = value.GetValueOrDefault();
                this.ComboLnSegmentMaxValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ComboPmtOrderMeth", Order=107, Form=XmlSchemaForm.Unqualified)]
        public bool ComboPmtOrderMethValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ComboPmtOrderMeth property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ComboPmtOrderMethValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ComboPmtOrderMeth
        {
            get
            {
                if (this.ComboPmtOrderMethValueSpecified)
                {
                    return this.ComboPmtOrderMethValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ComboPmtOrderMethValue = value.GetValueOrDefault();
                this.ComboPmtOrderMethValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ComboSeg0PmtOrder", Order=108, Form=XmlSchemaForm.Unqualified)]
        public bool ComboSeg0PmtOrderValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ComboSeg0PmtOrder property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ComboSeg0PmtOrderValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ComboSeg0PmtOrder
        {
            get
            {
                if (this.ComboSeg0PmtOrderValueSpecified)
                {
                    return this.ComboSeg0PmtOrderValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ComboSeg0PmtOrderValue = value.GetValueOrDefault();
                this.ComboSeg0PmtOrderValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CorporateUserTransferCode", Order=109, Form=XmlSchemaForm.Unqualified)]
        public bool CorporateUserTransferCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CorporateUserTransferCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CorporateUserTransferCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CorporateUserTransferCode
        {
            get
            {
                if (this.CorporateUserTransferCodeValueSpecified)
                {
                    return this.CorporateUserTransferCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CorporateUserTransferCodeValue = value.GetValueOrDefault();
                this.CorporateUserTransferCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CouponCode", Order=110, Form=XmlSchemaForm.Unqualified)]
        public bool CouponCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CouponCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CouponCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CouponCode
        {
            get
            {
                if (this.CouponCodeValueSpecified)
                {
                    return this.CouponCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CouponCodeValue = value.GetValueOrDefault();
                this.CouponCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CrHighBal", Order=111, Form=XmlSchemaForm.Unqualified)]
        public bool CrHighBalValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CrHighBal property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CrHighBalValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CrHighBal
        {
            get
            {
                if (this.CrHighBalValueSpecified)
                {
                    return this.CrHighBalValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CrHighBalValue = value.GetValueOrDefault();
                this.CrHighBalValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CrIntTypeInd", Order=112, Form=XmlSchemaForm.Unqualified)]
        public bool CrIntTypeIndValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CrIntTypeInd property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CrIntTypeIndValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CrIntTypeInd
        {
            get
            {
                if (this.CrIntTypeIndValueSpecified)
                {
                    return this.CrIntTypeIndValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CrIntTypeIndValue = value.GetValueOrDefault();
                this.CrIntTypeIndValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CrPmtCurrent", Order=113, Form=XmlSchemaForm.Unqualified)]
        public bool CrPmtCurrentValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CrPmtCurrent property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CrPmtCurrentValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CrPmtCurrent
        {
            get
            {
                if (this.CrPmtCurrentValueSpecified)
                {
                    return this.CrPmtCurrentValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CrPmtCurrentValue = value.GetValueOrDefault();
                this.CrPmtCurrentValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _crPmtHistory;
        
        [XmlElementAttribute("CrPmtHistory", Order=114, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> CrPmtHistory
        {
            get
            {
                return _crPmtHistory;
            }
            set
            {
                _crPmtHistory = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CrPmtHistory collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool CrPmtHistorySpecified
        {
            get
            {
                return ((this.CrPmtHistory != null) 
                            && (this.CrPmtHistory.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreatedAtBranch", Order=115, Form=XmlSchemaForm.Unqualified)]
        public bool CreatedAtBranchValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreatedAtBranch property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreatedAtBranchValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CreatedAtBranch
        {
            get
            {
                if (this.CreatedAtBranchValueSpecified)
                {
                    return this.CreatedAtBranchValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreatedAtBranchValue = value.GetValueOrDefault();
                this.CreatedAtBranchValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreatedByUser", Order=116, Form=XmlSchemaForm.Unqualified)]
        public bool CreatedByUserValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreatedByUser property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreatedByUserValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CreatedByUser
        {
            get
            {
                if (this.CreatedByUserValueSpecified)
                {
                    return this.CreatedByUserValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreatedByUserValue = value.GetValueOrDefault();
                this.CreatedByUserValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CredLimitExpiration", Order=117, Form=XmlSchemaForm.Unqualified)]
        public bool CredLimitExpirationValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CredLimitExpiration property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CredLimitExpirationValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CredLimitExpiration
        {
            get
            {
                if (this.CredLimitExpirationValueSpecified)
                {
                    return this.CredLimitExpirationValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CredLimitExpirationValue = value.GetValueOrDefault();
                this.CredLimitExpirationValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditLimit", Order=118, Form=XmlSchemaForm.Unqualified)]
        public bool CreditLimitValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditLimit property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditLimitValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CreditLimit
        {
            get
            {
                if (this.CreditLimitValueSpecified)
                {
                    return this.CreditLimitValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditLimitValue = value.GetValueOrDefault();
                this.CreditLimitValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditLimitGroup", Order=119, Form=XmlSchemaForm.Unqualified)]
        public bool CreditLimitGroupValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditLimitGroup property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditLimitGroupValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CreditLimitGroup
        {
            get
            {
                if (this.CreditLimitGroupValueSpecified)
                {
                    return this.CreditLimitGroupValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditLimitGroupValue = value.GetValueOrDefault();
                this.CreditLimitGroupValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditReportComment", Order=120, Form=XmlSchemaForm.Unqualified)]
        public bool CreditReportCommentValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditReportComment property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditReportCommentValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CreditReportComment
        {
            get
            {
                if (this.CreditReportCommentValueSpecified)
                {
                    return this.CreditReportCommentValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditReportCommentValue = value.GetValueOrDefault();
                this.CreditReportCommentValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditReportCompliance", Order=121, Form=XmlSchemaForm.Unqualified)]
        public bool CreditReportComplianceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditReportCompliance property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditReportComplianceValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CreditReportCompliance
        {
            get
            {
                if (this.CreditReportComplianceValueSpecified)
                {
                    return this.CreditReportComplianceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditReportComplianceValue = value.GetValueOrDefault();
                this.CreditReportComplianceValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditReportConsumerInfo", Order=122, Form=XmlSchemaForm.Unqualified)]
        public bool CreditReportConsumerInfoValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditReportConsumerInfo property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditReportConsumerInfoValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CreditReportConsumerInfo
        {
            get
            {
                if (this.CreditReportConsumerInfoValueSpecified)
                {
                    return this.CreditReportConsumerInfoValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditReportConsumerInfoValue = value.GetValueOrDefault();
                this.CreditReportConsumerInfoValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditReportConsumerInfoDate", Order=123, Form=XmlSchemaForm.Unqualified)]
        public bool CreditReportConsumerInfoDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditReportConsumerInfoDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditReportConsumerInfoDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CreditReportConsumerInfoDate
        {
            get
            {
                if (this.CreditReportConsumerInfoDateValueSpecified)
                {
                    return this.CreditReportConsumerInfoDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditReportConsumerInfoDateValue = value.GetValueOrDefault();
                this.CreditReportConsumerInfoDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditReportLastStatus", Order=124, Form=XmlSchemaForm.Unqualified)]
        public bool CreditReportLastStatusValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditReportLastStatus property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditReportLastStatusValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CreditReportLastStatus
        {
            get
            {
                if (this.CreditReportLastStatusValueSpecified)
                {
                    return this.CreditReportLastStatusValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditReportLastStatusValue = value.GetValueOrDefault();
                this.CreditReportLastStatusValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditReportNumber", Order=125, Form=XmlSchemaForm.Unqualified)]
        public bool CreditReportNumberValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditReportNumber property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditReportNumberValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CreditReportNumber
        {
            get
            {
                if (this.CreditReportNumberValueSpecified)
                {
                    return this.CreditReportNumberValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditReportNumberValue = value.GetValueOrDefault();
                this.CreditReportNumberValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditReportOccurDate", Order=126, Form=XmlSchemaForm.Unqualified)]
        public bool CreditReportOccurDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditReportOccurDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditReportOccurDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CreditReportOccurDate
        {
            get
            {
                if (this.CreditReportOccurDateValueSpecified)
                {
                    return this.CreditReportOccurDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditReportOccurDateValue = value.GetValueOrDefault();
                this.CreditReportOccurDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditReportTransferDate", Order=127, Form=XmlSchemaForm.Unqualified)]
        public bool CreditReportTransferDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditReportTransferDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditReportTransferDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CreditReportTransferDate
        {
            get
            {
                if (this.CreditReportTransferDateValueSpecified)
                {
                    return this.CreditReportTransferDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditReportTransferDateValue = value.GetValueOrDefault();
                this.CreditReportTransferDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditReportTransferIndicator", Order=128, Form=XmlSchemaForm.Unqualified)]
        public bool CreditReportTransferIndicatorValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditReportTransferIndicator property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditReportTransferIndicatorValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CreditReportTransferIndicator
        {
            get
            {
                if (this.CreditReportTransferIndicatorValueSpecified)
                {
                    return this.CreditReportTransferIndicatorValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditReportTransferIndicatorValue = value.GetValueOrDefault();
                this.CreditReportTransferIndicatorValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditReportTransferName", Order=129, Form=XmlSchemaForm.Unqualified)]
        public bool CreditReportTransferNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditReportTransferName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditReportTransferNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CreditReportTransferName
        {
            get
            {
                if (this.CreditReportTransferNameValueSpecified)
                {
                    return this.CreditReportTransferNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditReportTransferNameValue = value.GetValueOrDefault();
                this.CreditReportTransferNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditReportingCode", Order=130, Form=XmlSchemaForm.Unqualified)]
        public bool CreditReportingCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditReportingCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditReportingCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CreditReportingCode
        {
            get
            {
                if (this.CreditReportingCodeValueSpecified)
                {
                    return this.CreditReportingCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditReportingCodeValue = value.GetValueOrDefault();
                this.CreditReportingCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditRptDeferredPmtStart", Order=131, Form=XmlSchemaForm.Unqualified)]
        public bool CreditRptDeferredPmtStartValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditRptDeferredPmtStart property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditRptDeferredPmtStartValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CreditRptDeferredPmtStart
        {
            get
            {
                if (this.CreditRptDeferredPmtStartValueSpecified)
                {
                    return this.CreditRptDeferredPmtStartValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditRptDeferredPmtStartValue = value.GetValueOrDefault();
                this.CreditRptDeferredPmtStartValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditScore", Order=132, Form=XmlSchemaForm.Unqualified)]
        public bool CreditScoreValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditScore property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditScoreValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CreditScore
        {
            get
            {
                if (this.CreditScoreValueSpecified)
                {
                    return this.CreditScoreValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditScoreValue = value.GetValueOrDefault();
                this.CreditScoreValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditScoreType", Order=133, Form=XmlSchemaForm.Unqualified)]
        public bool CreditScoreTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditScoreType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditScoreTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CreditScoreType
        {
            get
            {
                if (this.CreditScoreTypeValueSpecified)
                {
                    return this.CreditScoreTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditScoreTypeValue = value.GetValueOrDefault();
                this.CreditScoreTypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CuTotalsUseCode", Order=134, Form=XmlSchemaForm.Unqualified)]
        public bool CuTotalsUseCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CuTotalsUseCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CuTotalsUseCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CuTotalsUseCode
        {
            get
            {
                if (this.CuTotalsUseCodeValueSpecified)
                {
                    return this.CuTotalsUseCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CuTotalsUseCodeValue = value.GetValueOrDefault();
                this.CuTotalsUseCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CurrIntPayable", Order=135, Form=XmlSchemaForm.Unqualified)]
        public bool CurrIntPayableValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CurrIntPayable property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CurrIntPayableValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CurrIntPayable
        {
            get
            {
                if (this.CurrIntPayableValueSpecified)
                {
                    return this.CurrIntPayableValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CurrIntPayableValue = value.GetValueOrDefault();
                this.CurrIntPayableValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CurrMonthPaidInt", Order=136, Form=XmlSchemaForm.Unqualified)]
        public bool CurrMonthPaidIntValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CurrMonthPaidInt property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CurrMonthPaidIntValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CurrMonthPaidInt
        {
            get
            {
                if (this.CurrMonthPaidIntValueSpecified)
                {
                    return this.CurrMonthPaidIntValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CurrMonthPaidIntValue = value.GetValueOrDefault();
                this.CurrMonthPaidIntValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CurrStmtFees", Order=137, Form=XmlSchemaForm.Unqualified)]
        public bool CurrStmtFeesValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CurrStmtFees property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CurrStmtFeesValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CurrStmtFees
        {
            get
            {
                if (this.CurrStmtFeesValueSpecified)
                {
                    return this.CurrStmtFeesValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CurrStmtFeesValue = value.GetValueOrDefault();
                this.CurrStmtFeesValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CurrStmtIntAccrd", Order=138, Form=XmlSchemaForm.Unqualified)]
        public bool CurrStmtIntAccrdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CurrStmtIntAccrd property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CurrStmtIntAccrdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CurrStmtIntAccrd
        {
            get
            {
                if (this.CurrStmtIntAccrdValueSpecified)
                {
                    return this.CurrStmtIntAccrdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CurrStmtIntAccrdValue = value.GetValueOrDefault();
                this.CurrStmtIntAccrdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CurrStmtLossMitAmtDue", Order=139, Form=XmlSchemaForm.Unqualified)]
        public bool CurrStmtLossMitAmtDueValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CurrStmtLossMitAmtDue property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CurrStmtLossMitAmtDueValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CurrStmtLossMitAmtDue
        {
            get
            {
                if (this.CurrStmtLossMitAmtDueValueSpecified)
                {
                    return this.CurrStmtLossMitAmtDueValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CurrStmtLossMitAmtDueValue = value.GetValueOrDefault();
                this.CurrStmtLossMitAmtDueValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DealerCity", Order=140, Form=XmlSchemaForm.Unqualified)]
        public bool DealerCityValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DealerCity property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DealerCityValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DealerCity
        {
            get
            {
                if (this.DealerCityValueSpecified)
                {
                    return this.DealerCityValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DealerCityValue = value.GetValueOrDefault();
                this.DealerCityValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DealerCode", Order=141, Form=XmlSchemaForm.Unqualified)]
        public bool DealerCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DealerCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DealerCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DealerCode
        {
            get
            {
                if (this.DealerCodeValueSpecified)
                {
                    return this.DealerCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DealerCodeValue = value.GetValueOrDefault();
                this.DealerCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DealerCounty", Order=142, Form=XmlSchemaForm.Unqualified)]
        public bool DealerCountyValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DealerCounty property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DealerCountyValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DealerCounty
        {
            get
            {
                if (this.DealerCountyValueSpecified)
                {
                    return this.DealerCountyValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DealerCountyValue = value.GetValueOrDefault();
                this.DealerCountyValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DealerReserve", Order=143, Form=XmlSchemaForm.Unqualified)]
        public bool DealerReserveValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DealerReserve property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DealerReserveValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DealerReserve
        {
            get
            {
                if (this.DealerReserveValueSpecified)
                {
                    return this.DealerReserveValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DealerReserveValue = value.GetValueOrDefault();
                this.DealerReserveValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DealerState", Order=144, Form=XmlSchemaForm.Unqualified)]
        public bool DealerStateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DealerState property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DealerStateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DealerState
        {
            get
            {
                if (this.DealerStateValueSpecified)
                {
                    return this.DealerStateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DealerStateValue = value.GetValueOrDefault();
                this.DealerStateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Description", Order=145, Form=XmlSchemaForm.Unqualified)]
        public bool DescriptionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Description property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DescriptionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Description
        {
            get
            {
                if (this.DescriptionValueSpecified)
                {
                    return this.DescriptionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DescriptionValue = value.GetValueOrDefault();
                this.DescriptionValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DiscountRate", Order=146, Form=XmlSchemaForm.Unqualified)]
        public bool DiscountRateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DiscountRate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DiscountRateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DiscountRate
        {
            get
            {
                if (this.DiscountRateValueSpecified)
                {
                    return this.DiscountRateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DiscountRateValue = value.GetValueOrDefault();
                this.DiscountRateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DqCalculationMethod", Order=147, Form=XmlSchemaForm.Unqualified)]
        public bool DqCalculationMethodValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DqCalculationMethod property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DqCalculationMethodValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DqCalculationMethod
        {
            get
            {
                if (this.DqCalculationMethodValueSpecified)
                {
                    return this.DqCalculationMethodValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DqCalculationMethodValue = value.GetValueOrDefault();
                this.DqCalculationMethodValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DqCardDate", Order=148, Form=XmlSchemaForm.Unqualified)]
        public bool DqCardDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DqCardDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DqCardDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DqCardDate
        {
            get
            {
                if (this.DqCardDateValueSpecified)
                {
                    return this.DqCardDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DqCardDateValue = value.GetValueOrDefault();
                this.DqCardDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DqNoticeDate", Order=149, Form=XmlSchemaForm.Unqualified)]
        public bool DqNoticeDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DqNoticeDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DqNoticeDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DqNoticeDate
        {
            get
            {
                if (this.DqNoticeDateValueSpecified)
                {
                    return this.DqNoticeDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DqNoticeDateValue = value.GetValueOrDefault();
                this.DqNoticeDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DqNoticeNumber", Order=150, Form=XmlSchemaForm.Unqualified)]
        public bool DqNoticeNumberValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DqNoticeNumber property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DqNoticeNumberValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DqNoticeNumber
        {
            get
            {
                if (this.DqNoticeNumberValueSpecified)
                {
                    return this.DqNoticeNumberValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DqNoticeNumberValue = value.GetValueOrDefault();
                this.DqNoticeNumberValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DqNoticeType", Order=151, Form=XmlSchemaForm.Unqualified)]
        public bool DqNoticeTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DqNoticeType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DqNoticeTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DqNoticeType
        {
            get
            {
                if (this.DqNoticeTypeValueSpecified)
                {
                    return this.DqNoticeTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DqNoticeTypeValue = value.GetValueOrDefault();
                this.DqNoticeTypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DueDate", Order=152, Form=XmlSchemaForm.Unqualified)]
        public bool DueDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DueDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DueDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DueDate
        {
            get
            {
                if (this.DueDateValueSpecified)
                {
                    return this.DueDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DueDateValue = value.GetValueOrDefault();
                this.DueDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DueDateAdvanceCode", Order=153, Form=XmlSchemaForm.Unqualified)]
        public bool DueDateAdvanceCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DueDateAdvanceCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DueDateAdvanceCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DueDateAdvanceCode
        {
            get
            {
                if (this.DueDateAdvanceCodeValueSpecified)
                {
                    return this.DueDateAdvanceCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DueDateAdvanceCodeValue = value.GetValueOrDefault();
                this.DueDateAdvanceCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DueDay1", Order=154, Form=XmlSchemaForm.Unqualified)]
        public bool DueDay1Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DueDay1 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DueDay1ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DueDay1
        {
            get
            {
                if (this.DueDay1ValueSpecified)
                {
                    return this.DueDay1Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DueDay1Value = value.GetValueOrDefault();
                this.DueDay1ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DueDay2", Order=155, Form=XmlSchemaForm.Unqualified)]
        public bool DueDay2Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DueDay2 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DueDay2ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DueDay2
        {
            get
            {
                if (this.DueDay2ValueSpecified)
                {
                    return this.DueDay2Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DueDay2Value = value.GetValueOrDefault();
                this.DueDay2ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("EarlyIntervntnNoticeDate", Order=156, Form=XmlSchemaForm.Unqualified)]
        public bool EarlyIntervntnNoticeDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EarlyIntervntnNoticeDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool EarlyIntervntnNoticeDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> EarlyIntervntnNoticeDate
        {
            get
            {
                if (this.EarlyIntervntnNoticeDateValueSpecified)
                {
                    return this.EarlyIntervntnNoticeDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EarlyIntervntnNoticeDateValue = value.GetValueOrDefault();
                this.EarlyIntervntnNoticeDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("EcoaCode", Order=157, Form=XmlSchemaForm.Unqualified)]
        public bool EcoaCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EcoaCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool EcoaCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> EcoaCode
        {
            get
            {
                if (this.EcoaCodeValueSpecified)
                {
                    return this.EcoaCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EcoaCodeValue = value.GetValueOrDefault();
                this.EcoaCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("EffectiveApr", Order=158, Form=XmlSchemaForm.Unqualified)]
        public bool EffectiveAprValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EffectiveApr property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool EffectiveAprValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> EffectiveApr
        {
            get
            {
                if (this.EffectiveAprValueSpecified)
                {
                    return this.EffectiveAprValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EffectiveAprValue = value.GetValueOrDefault();
                this.EffectiveAprValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("EffectiveBalance", Order=159, Form=XmlSchemaForm.Unqualified)]
        public bool EffectiveBalanceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EffectiveBalance property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool EffectiveBalanceValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> EffectiveBalance
        {
            get
            {
                if (this.EffectiveBalanceValueSpecified)
                {
                    return this.EffectiveBalanceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EffectiveBalanceValue = value.GetValueOrDefault();
                this.EffectiveBalanceValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("EscrowAmount", Order=160, Form=XmlSchemaForm.Unqualified)]
        public bool EscrowAmountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EscrowAmount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool EscrowAmountValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> EscrowAmount
        {
            get
            {
                if (this.EscrowAmountValueSpecified)
                {
                    return this.EscrowAmountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EscrowAmountValue = value.GetValueOrDefault();
                this.EscrowAmountValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("EscrowApplied", Order=161, Form=XmlSchemaForm.Unqualified)]
        public bool EscrowAppliedValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EscrowApplied property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool EscrowAppliedValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> EscrowApplied
        {
            get
            {
                if (this.EscrowAppliedValueSpecified)
                {
                    return this.EscrowAppliedValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EscrowAppliedValue = value.GetValueOrDefault();
                this.EscrowAppliedValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _escrowBucketAmount;
        
        [XmlElementAttribute("EscrowBucketAmount", Order=162, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> EscrowBucketAmount
        {
            get
            {
                return _escrowBucketAmount;
            }
            set
            {
                _escrowBucketAmount = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the EscrowBucketAmount collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool EscrowBucketAmountSpecified
        {
            get
            {
                return ((this.EscrowBucketAmount != null) 
                            && (this.EscrowBucketAmount.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("EscrowId", Order=163, Form=XmlSchemaForm.Unqualified)]
        public bool EscrowIdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EscrowId property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool EscrowIdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> EscrowId
        {
            get
            {
                if (this.EscrowIdValueSpecified)
                {
                    return this.EscrowIdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EscrowIdValue = value.GetValueOrDefault();
                this.EscrowIdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("EscrowUnpaid", Order=164, Form=XmlSchemaForm.Unqualified)]
        public bool EscrowUnpaidValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EscrowUnpaid property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool EscrowUnpaidValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> EscrowUnpaid
        {
            get
            {
                if (this.EscrowUnpaidValueSpecified)
                {
                    return this.EscrowUnpaidValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EscrowUnpaidValue = value.GetValueOrDefault();
                this.EscrowUnpaidValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ExceedLevelPmtAmt", Order=165, Form=XmlSchemaForm.Unqualified)]
        public bool ExceedLevelPmtAmtValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ExceedLevelPmtAmt property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ExceedLevelPmtAmtValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ExceedLevelPmtAmt
        {
            get
            {
                if (this.ExceedLevelPmtAmtValueSpecified)
                {
                    return this.ExceedLevelPmtAmtValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ExceedLevelPmtAmtValue = value.GetValueOrDefault();
                this.ExceedLevelPmtAmtValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Fasb91AlternateTerm", Order=166, Form=XmlSchemaForm.Unqualified)]
        public bool Fasb91AlternateTermValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Fasb91AlternateTerm property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool Fasb91AlternateTermValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Fasb91AlternateTerm
        {
            get
            {
                if (this.Fasb91AlternateTermValueSpecified)
                {
                    return this.Fasb91AlternateTermValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.Fasb91AlternateTermValue = value.GetValueOrDefault();
                this.Fasb91AlternateTermValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Fasb91Code", Order=167, Form=XmlSchemaForm.Unqualified)]
        public bool Fasb91CodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Fasb91Code property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool Fasb91CodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Fasb91Code
        {
            get
            {
                if (this.Fasb91CodeValueSpecified)
                {
                    return this.Fasb91CodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.Fasb91CodeValue = value.GetValueOrDefault();
                this.Fasb91CodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("FeeAddOnSinceLastStmt", Order=168, Form=XmlSchemaForm.Unqualified)]
        public bool FeeAddOnSinceLastStmtValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FeeAddOnSinceLastStmt property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FeeAddOnSinceLastStmtValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> FeeAddOnSinceLastStmt
        {
            get
            {
                if (this.FeeAddOnSinceLastStmtValueSpecified)
                {
                    return this.FeeAddOnSinceLastStmtValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FeeAddOnSinceLastStmtValue = value.GetValueOrDefault();
                this.FeeAddOnSinceLastStmtValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("FeeBillingAmount", Order=169, Form=XmlSchemaForm.Unqualified)]
        public bool FeeBillingAmountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FeeBillingAmount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FeeBillingAmountValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> FeeBillingAmount
        {
            get
            {
                if (this.FeeBillingAmountValueSpecified)
                {
                    return this.FeeBillingAmountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FeeBillingAmountValue = value.GetValueOrDefault();
                this.FeeBillingAmountValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("FeeBillingDate", Order=170, Form=XmlSchemaForm.Unqualified)]
        public bool FeeBillingDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FeeBillingDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FeeBillingDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> FeeBillingDate
        {
            get
            {
                if (this.FeeBillingDateValueSpecified)
                {
                    return this.FeeBillingDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FeeBillingDateValue = value.GetValueOrDefault();
                this.FeeBillingDateValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _feeCount;
        
        [XmlElementAttribute("FeeCount", Order=171, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> FeeCount
        {
            get
            {
                return _feeCount;
            }
            set
            {
                _feeCount = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the FeeCount collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool FeeCountSpecified
        {
            get
            {
                return ((this.FeeCount != null) 
                            && (this.FeeCount.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("FeeNewBalance", Order=172, Form=XmlSchemaForm.Unqualified)]
        public bool FeeNewBalanceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FeeNewBalance property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FeeNewBalanceValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> FeeNewBalance
        {
            get
            {
                if (this.FeeNewBalanceValueSpecified)
                {
                    return this.FeeNewBalanceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FeeNewBalanceValue = value.GetValueOrDefault();
                this.FeeNewBalanceValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("FeeOldBalance", Order=173, Form=XmlSchemaForm.Unqualified)]
        public bool FeeOldBalanceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FeeOldBalance property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FeeOldBalanceValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> FeeOldBalance
        {
            get
            {
                if (this.FeeOldBalanceValueSpecified)
                {
                    return this.FeeOldBalanceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FeeOldBalanceValue = value.GetValueOrDefault();
                this.FeeOldBalanceValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("FeePmtSinceLastStmt", Order=174, Form=XmlSchemaForm.Unqualified)]
        public bool FeePmtSinceLastStmtValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FeePmtSinceLastStmt property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FeePmtSinceLastStmtValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> FeePmtSinceLastStmt
        {
            get
            {
                if (this.FeePmtSinceLastStmtValueSpecified)
                {
                    return this.FeePmtSinceLastStmtValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FeePmtSinceLastStmtValue = value.GetValueOrDefault();
                this.FeePmtSinceLastStmtValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("FeesChargesPostingOption", Order=175, Form=XmlSchemaForm.Unqualified)]
        public bool FeesChargesPostingOptionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FeesChargesPostingOption property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FeesChargesPostingOptionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> FeesChargesPostingOption
        {
            get
            {
                if (this.FeesChargesPostingOptionValueSpecified)
                {
                    return this.FeesChargesPostingOptionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FeesChargesPostingOptionValue = value.GetValueOrDefault();
                this.FeesChargesPostingOptionValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("FeesLastYear", Order=176, Form=XmlSchemaForm.Unqualified)]
        public bool FeesLastYearValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FeesLastYear property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FeesLastYearValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> FeesLastYear
        {
            get
            {
                if (this.FeesLastYearValueSpecified)
                {
                    return this.FeesLastYearValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FeesLastYearValue = value.GetValueOrDefault();
                this.FeesLastYearValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("FeesLastYrNoAdj", Order=177, Form=XmlSchemaForm.Unqualified)]
        public bool FeesLastYrNoAdjValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FeesLastYrNoAdj property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FeesLastYrNoAdjValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> FeesLastYrNoAdj
        {
            get
            {
                if (this.FeesLastYrNoAdjValueSpecified)
                {
                    return this.FeesLastYrNoAdjValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FeesLastYrNoAdjValue = value.GetValueOrDefault();
                this.FeesLastYrNoAdjValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("FeesYtd", Order=178, Form=XmlSchemaForm.Unqualified)]
        public bool FeesYtdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FeesYtd property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FeesYtdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> FeesYtd
        {
            get
            {
                if (this.FeesYtdValueSpecified)
                {
                    return this.FeesYtdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FeesYtdValue = value.GetValueOrDefault();
                this.FeesYtdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("FeesYtdNoAdj", Order=179, Form=XmlSchemaForm.Unqualified)]
        public bool FeesYtdNoAdjValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FeesYtdNoAdj property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FeesYtdNoAdjValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> FeesYtdNoAdj
        {
            get
            {
                if (this.FeesYtdNoAdjValueSpecified)
                {
                    return this.FeesYtdNoAdjValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FeesYtdNoAdjValue = value.GetValueOrDefault();
                this.FeesYtdNoAdjValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("FinalChgOffStmtDate", Order=180, Form=XmlSchemaForm.Unqualified)]
        public bool FinalChgOffStmtDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FinalChgOffStmtDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FinalChgOffStmtDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> FinalChgOffStmtDate
        {
            get
            {
                if (this.FinalChgOffStmtDateValueSpecified)
                {
                    return this.FinalChgOffStmtDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FinalChgOffStmtDateValue = value.GetValueOrDefault();
                this.FinalChgOffStmtDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("FinalChgOffStmtMsgCode", Order=181, Form=XmlSchemaForm.Unqualified)]
        public bool FinalChgOffStmtMsgCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FinalChgOffStmtMsgCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FinalChgOffStmtMsgCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> FinalChgOffStmtMsgCode
        {
            get
            {
                if (this.FinalChgOffStmtMsgCodeValueSpecified)
                {
                    return this.FinalChgOffStmtMsgCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FinalChgOffStmtMsgCodeValue = value.GetValueOrDefault();
                this.FinalChgOffStmtMsgCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("FirstInsBirthDate", Order=182, Form=XmlSchemaForm.Unqualified)]
        public bool FirstInsBirthDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FirstInsBirthDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FirstInsBirthDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> FirstInsBirthDate
        {
            get
            {
                if (this.FirstInsBirthDateValueSpecified)
                {
                    return this.FirstInsBirthDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FirstInsBirthDateValue = value.GetValueOrDefault();
                this.FirstInsBirthDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("FirstPaymentDate", Order=183, Form=XmlSchemaForm.Unqualified)]
        public bool FirstPaymentDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FirstPaymentDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FirstPaymentDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> FirstPaymentDate
        {
            get
            {
                if (this.FirstPaymentDateValueSpecified)
                {
                    return this.FirstPaymentDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FirstPaymentDateValue = value.GetValueOrDefault();
                this.FirstPaymentDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("FixedDealerCityTaxRate", Order=184, Form=XmlSchemaForm.Unqualified)]
        public bool FixedDealerCityTaxRateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FixedDealerCityTaxRate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FixedDealerCityTaxRateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> FixedDealerCityTaxRate
        {
            get
            {
                if (this.FixedDealerCityTaxRateValueSpecified)
                {
                    return this.FixedDealerCityTaxRateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FixedDealerCityTaxRateValue = value.GetValueOrDefault();
                this.FixedDealerCityTaxRateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("FixedDealerCountyTaxRate", Order=185, Form=XmlSchemaForm.Unqualified)]
        public bool FixedDealerCountyTaxRateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FixedDealerCountyTaxRate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FixedDealerCountyTaxRateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> FixedDealerCountyTaxRate
        {
            get
            {
                if (this.FixedDealerCountyTaxRateValueSpecified)
                {
                    return this.FixedDealerCountyTaxRateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FixedDealerCountyTaxRateValue = value.GetValueOrDefault();
                this.FixedDealerCountyTaxRateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("FixedDealerStateTaxRate", Order=186, Form=XmlSchemaForm.Unqualified)]
        public bool FixedDealerStateTaxRateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FixedDealerStateTaxRate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FixedDealerStateTaxRateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> FixedDealerStateTaxRate
        {
            get
            {
                if (this.FixedDealerStateTaxRateValueSpecified)
                {
                    return this.FixedDealerStateTaxRateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FixedDealerStateTaxRateValue = value.GetValueOrDefault();
                this.FixedDealerStateTaxRateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("FixedLesseeCityTaxRate", Order=187, Form=XmlSchemaForm.Unqualified)]
        public bool FixedLesseeCityTaxRateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FixedLesseeCityTaxRate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FixedLesseeCityTaxRateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> FixedLesseeCityTaxRate
        {
            get
            {
                if (this.FixedLesseeCityTaxRateValueSpecified)
                {
                    return this.FixedLesseeCityTaxRateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FixedLesseeCityTaxRateValue = value.GetValueOrDefault();
                this.FixedLesseeCityTaxRateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("FixedLesseeCountyTaxRate", Order=188, Form=XmlSchemaForm.Unqualified)]
        public bool FixedLesseeCountyTaxRateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FixedLesseeCountyTaxRate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FixedLesseeCountyTaxRateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> FixedLesseeCountyTaxRate
        {
            get
            {
                if (this.FixedLesseeCountyTaxRateValueSpecified)
                {
                    return this.FixedLesseeCountyTaxRateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FixedLesseeCountyTaxRateValue = value.GetValueOrDefault();
                this.FixedLesseeCountyTaxRateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("FixedLesseeStateTaxRate", Order=189, Form=XmlSchemaForm.Unqualified)]
        public bool FixedLesseeStateTaxRateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FixedLesseeStateTaxRate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FixedLesseeStateTaxRateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> FixedLesseeStateTaxRate
        {
            get
            {
                if (this.FixedLesseeStateTaxRateValueSpecified)
                {
                    return this.FixedLesseeStateTaxRateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FixedLesseeStateTaxRateValue = value.GetValueOrDefault();
                this.FixedLesseeStateTaxRateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ForeclosureEffectDate", Order=190, Form=XmlSchemaForm.Unqualified)]
        public bool ForeclosureEffectDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ForeclosureEffectDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ForeclosureEffectDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ForeclosureEffectDate
        {
            get
            {
                if (this.ForeclosureEffectDateValueSpecified)
                {
                    return this.ForeclosureEffectDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ForeclosureEffectDateValue = value.GetValueOrDefault();
                this.ForeclosureEffectDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ForeclosureExpireDate", Order=191, Form=XmlSchemaForm.Unqualified)]
        public bool ForeclosureExpireDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ForeclosureExpireDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ForeclosureExpireDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ForeclosureExpireDate
        {
            get
            {
                if (this.ForeclosureExpireDateValueSpecified)
                {
                    return this.ForeclosureExpireDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ForeclosureExpireDateValue = value.GetValueOrDefault();
                this.ForeclosureExpireDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ForeclosureStmtMsgCode", Order=192, Form=XmlSchemaForm.Unqualified)]
        public bool ForeclosureStmtMsgCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ForeclosureStmtMsgCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ForeclosureStmtMsgCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ForeclosureStmtMsgCode
        {
            get
            {
                if (this.ForeclosureStmtMsgCodeValueSpecified)
                {
                    return this.ForeclosureStmtMsgCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ForeclosureStmtMsgCodeValue = value.GetValueOrDefault();
                this.ForeclosureStmtMsgCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("GlAccrualStatusOption", Order=193, Form=XmlSchemaForm.Unqualified)]
        public bool GlAccrualStatusOptionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GlAccrualStatusOption property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool GlAccrualStatusOptionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> GlAccrualStatusOption
        {
            get
            {
                if (this.GlAccrualStatusOptionValueSpecified)
                {
                    return this.GlAccrualStatusOptionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.GlAccrualStatusOptionValue = value.GetValueOrDefault();
                this.GlAccrualStatusOptionValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HighRiskCode", Order=194, Form=XmlSchemaForm.Unqualified)]
        public bool HighRiskCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HighRiskCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HighRiskCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HighRiskCode
        {
            get
            {
                if (this.HighRiskCodeValueSpecified)
                {
                    return this.HighRiskCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HighRiskCodeValue = value.GetValueOrDefault();
                this.HighRiskCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HmdaUniversalLoanIdentifier1", Order=195, Form=XmlSchemaForm.Unqualified)]
        public bool HmdaUniversalLoanIdentifier1Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HmdaUniversalLoanIdentifier1 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HmdaUniversalLoanIdentifier1ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HmdaUniversalLoanIdentifier1
        {
            get
            {
                if (this.HmdaUniversalLoanIdentifier1ValueSpecified)
                {
                    return this.HmdaUniversalLoanIdentifier1Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HmdaUniversalLoanIdentifier1Value = value.GetValueOrDefault();
                this.HmdaUniversalLoanIdentifier1ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("HmdaUniversalLoanIdentifier2", Order=196, Form=XmlSchemaForm.Unqualified)]
        public bool HmdaUniversalLoanIdentifier2Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HmdaUniversalLoanIdentifier2 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool HmdaUniversalLoanIdentifier2ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> HmdaUniversalLoanIdentifier2
        {
            get
            {
                if (this.HmdaUniversalLoanIdentifier2ValueSpecified)
                {
                    return this.HmdaUniversalLoanIdentifier2Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HmdaUniversalLoanIdentifier2Value = value.GetValueOrDefault();
                this.HmdaUniversalLoanIdentifier2ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Id", Order=197, Form=XmlSchemaForm.Unqualified)]
        public bool IdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Id property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Id
        {
            get
            {
                if (this.IdValueSpecified)
                {
                    return this.IdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IdValue = value.GetValueOrDefault();
                this.IdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IndirectDealerNum", Order=198, Form=XmlSchemaForm.Unqualified)]
        public bool IndirectDealerNumValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IndirectDealerNum property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IndirectDealerNumValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IndirectDealerNum
        {
            get
            {
                if (this.IndirectDealerNumValueSpecified)
                {
                    return this.IndirectDealerNumValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IndirectDealerNumValue = value.GetValueOrDefault();
                this.IndirectDealerNumValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IndirectPlanId", Order=199, Form=XmlSchemaForm.Unqualified)]
        public bool IndirectPlanIdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IndirectPlanId property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IndirectPlanIdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IndirectPlanId
        {
            get
            {
                if (this.IndirectPlanIdValueSpecified)
                {
                    return this.IndirectPlanIdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IndirectPlanIdValue = value.GetValueOrDefault();
                this.IndirectPlanIdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InitArmNoticeCreationDate", Order=200, Form=XmlSchemaForm.Unqualified)]
        public bool InitArmNoticeCreationDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InitArmNoticeCreationDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InitArmNoticeCreationDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InitArmNoticeCreationDate
        {
            get
            {
                if (this.InitArmNoticeCreationDateValueSpecified)
                {
                    return this.InitArmNoticeCreationDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InitArmNoticeCreationDateValue = value.GetValueOrDefault();
                this.InitArmNoticeCreationDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InitialArmNotice", Order=201, Form=XmlSchemaForm.Unqualified)]
        public bool InitialArmNoticeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InitialArmNotice property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InitialArmNoticeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InitialArmNotice
        {
            get
            {
                if (this.InitialArmNoticeValueSpecified)
                {
                    return this.InitialArmNoticeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InitialArmNoticeValue = value.GetValueOrDefault();
                this.InitialArmNoticeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InitialBcdSettingOption", Order=202, Form=XmlSchemaForm.Unqualified)]
        public bool InitialBcdSettingOptionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InitialBcdSettingOption property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InitialBcdSettingOptionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InitialBcdSettingOption
        {
            get
            {
                if (this.InitialBcdSettingOptionValueSpecified)
                {
                    return this.InitialBcdSettingOptionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InitialBcdSettingOptionValue = value.GetValueOrDefault();
                this.InitialBcdSettingOptionValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InsuranceBalance", Order=203, Form=XmlSchemaForm.Unqualified)]
        public bool InsuranceBalanceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InsuranceBalance property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InsuranceBalanceValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InsuranceBalance
        {
            get
            {
                if (this.InsuranceBalanceValueSpecified)
                {
                    return this.InsuranceBalanceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InsuranceBalanceValue = value.GetValueOrDefault();
                this.InsuranceBalanceValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InsuranceLastYear", Order=204, Form=XmlSchemaForm.Unqualified)]
        public bool InsuranceLastYearValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InsuranceLastYear property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InsuranceLastYearValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InsuranceLastYear
        {
            get
            {
                if (this.InsuranceLastYearValueSpecified)
                {
                    return this.InsuranceLastYearValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InsuranceLastYearValue = value.GetValueOrDefault();
                this.InsuranceLastYearValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InsuranceLstYrNoAdj", Order=205, Form=XmlSchemaForm.Unqualified)]
        public bool InsuranceLstYrNoAdjValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InsuranceLstYrNoAdj property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InsuranceLstYrNoAdjValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InsuranceLstYrNoAdj
        {
            get
            {
                if (this.InsuranceLstYrNoAdjValueSpecified)
                {
                    return this.InsuranceLstYrNoAdjValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InsuranceLstYrNoAdjValue = value.GetValueOrDefault();
                this.InsuranceLstYrNoAdjValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InsuranceMax", Order=206, Form=XmlSchemaForm.Unqualified)]
        public bool InsuranceMaxValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InsuranceMax property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InsuranceMaxValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InsuranceMax
        {
            get
            {
                if (this.InsuranceMaxValueSpecified)
                {
                    return this.InsuranceMaxValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InsuranceMaxValue = value.GetValueOrDefault();
                this.InsuranceMaxValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InsuranceType", Order=207, Form=XmlSchemaForm.Unqualified)]
        public bool InsuranceTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InsuranceType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InsuranceTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InsuranceType
        {
            get
            {
                if (this.InsuranceTypeValueSpecified)
                {
                    return this.InsuranceTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InsuranceTypeValue = value.GetValueOrDefault();
                this.InsuranceTypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InsuranceYtd", Order=208, Form=XmlSchemaForm.Unqualified)]
        public bool InsuranceYtdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InsuranceYtd property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InsuranceYtdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InsuranceYtd
        {
            get
            {
                if (this.InsuranceYtdValueSpecified)
                {
                    return this.InsuranceYtdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InsuranceYtdValue = value.GetValueOrDefault();
                this.InsuranceYtdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InsuranceYtdNoAdj", Order=209, Form=XmlSchemaForm.Unqualified)]
        public bool InsuranceYtdNoAdjValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InsuranceYtdNoAdj property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InsuranceYtdNoAdjValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InsuranceYtdNoAdj
        {
            get
            {
                if (this.InsuranceYtdNoAdjValueSpecified)
                {
                    return this.InsuranceYtdNoAdjValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InsuranceYtdNoAdjValue = value.GetValueOrDefault();
                this.InsuranceYtdNoAdjValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IntPaidPartialDayAmt", Order=210, Form=XmlSchemaForm.Unqualified)]
        public bool IntPaidPartialDayAmtValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IntPaidPartialDayAmt property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IntPaidPartialDayAmtValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IntPaidPartialDayAmt
        {
            get
            {
                if (this.IntPaidPartialDayAmtValueSpecified)
                {
                    return this.IntPaidPartialDayAmtValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IntPaidPartialDayAmtValue = value.GetValueOrDefault();
                this.IntPaidPartialDayAmtValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IntPaidToDate", Order=211, Form=XmlSchemaForm.Unqualified)]
        public bool IntPaidToDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IntPaidToDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IntPaidToDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IntPaidToDate
        {
            get
            {
                if (this.IntPaidToDateValueSpecified)
                {
                    return this.IntPaidToDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IntPaidToDateValue = value.GetValueOrDefault();
                this.IntPaidToDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IntPayoffCalc", Order=212, Form=XmlSchemaForm.Unqualified)]
        public bool IntPayoffCalcValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IntPayoffCalc property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IntPayoffCalcValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IntPayoffCalc
        {
            get
            {
                if (this.IntPayoffCalcValueSpecified)
                {
                    return this.IntPayoffCalcValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IntPayoffCalcValue = value.GetValueOrDefault();
                this.IntPayoffCalcValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IntUnpaidBilled", Order=213, Form=XmlSchemaForm.Unqualified)]
        public bool IntUnpaidBilledValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IntUnpaidBilled property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IntUnpaidBilledValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IntUnpaidBilled
        {
            get
            {
                if (this.IntUnpaidBilledValueSpecified)
                {
                    return this.IntUnpaidBilledValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IntUnpaidBilledValue = value.GetValueOrDefault();
                this.IntUnpaidBilledValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InterestDate", Order=214, Form=XmlSchemaForm.Unqualified)]
        public bool InterestDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InterestDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InterestDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InterestDate
        {
            get
            {
                if (this.InterestDateValueSpecified)
                {
                    return this.InterestDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InterestDateValue = value.GetValueOrDefault();
                this.InterestDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InterestDue", Order=215, Form=XmlSchemaForm.Unqualified)]
        public bool InterestDueValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InterestDue property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InterestDueValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InterestDue
        {
            get
            {
                if (this.InterestDueValueSpecified)
                {
                    return this.InterestDueValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InterestDueValue = value.GetValueOrDefault();
                this.InterestDueValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InterestFromOpen", Order=216, Form=XmlSchemaForm.Unqualified)]
        public bool InterestFromOpenValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InterestFromOpen property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InterestFromOpenValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InterestFromOpen
        {
            get
            {
                if (this.InterestFromOpenValueSpecified)
                {
                    return this.InterestFromOpenValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InterestFromOpenValue = value.GetValueOrDefault();
                this.InterestFromOpenValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InterestLastYear", Order=217, Form=XmlSchemaForm.Unqualified)]
        public bool InterestLastYearValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InterestLastYear property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InterestLastYearValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InterestLastYear
        {
            get
            {
                if (this.InterestLastYearValueSpecified)
                {
                    return this.InterestLastYearValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InterestLastYearValue = value.GetValueOrDefault();
                this.InterestLastYearValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InterestRate", Order=218, Form=XmlSchemaForm.Unqualified)]
        public bool InterestRateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InterestRate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InterestRateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InterestRate
        {
            get
            {
                if (this.InterestRateValueSpecified)
                {
                    return this.InterestRateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InterestRateValue = value.GetValueOrDefault();
                this.InterestRateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InterestRateIndex", Order=219, Form=XmlSchemaForm.Unqualified)]
        public bool InterestRateIndexValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InterestRateIndex property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InterestRateIndexValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InterestRateIndex
        {
            get
            {
                if (this.InterestRateIndexValueSpecified)
                {
                    return this.InterestRateIndexValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InterestRateIndexValue = value.GetValueOrDefault();
                this.InterestRateIndexValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InterestRateMargin", Order=220, Form=XmlSchemaForm.Unqualified)]
        public bool InterestRateMarginValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InterestRateMargin property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InterestRateMarginValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InterestRateMargin
        {
            get
            {
                if (this.InterestRateMarginValueSpecified)
                {
                    return this.InterestRateMarginValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InterestRateMarginValue = value.GetValueOrDefault();
                this.InterestRateMarginValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InterestRateMarginSign", Order=221, Form=XmlSchemaForm.Unqualified)]
        public bool InterestRateMarginSignValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InterestRateMarginSign property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InterestRateMarginSignValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InterestRateMarginSign
        {
            get
            {
                if (this.InterestRateMarginSignValueSpecified)
                {
                    return this.InterestRateMarginSignValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InterestRateMarginSignValue = value.GetValueOrDefault();
                this.InterestRateMarginSignValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InterestRateMax", Order=222, Form=XmlSchemaForm.Unqualified)]
        public bool InterestRateMaxValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InterestRateMax property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InterestRateMaxValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InterestRateMax
        {
            get
            {
                if (this.InterestRateMaxValueSpecified)
                {
                    return this.InterestRateMaxValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InterestRateMaxValue = value.GetValueOrDefault();
                this.InterestRateMaxValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InterestRateMin", Order=223, Form=XmlSchemaForm.Unqualified)]
        public bool InterestRateMinValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InterestRateMin property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InterestRateMinValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InterestRateMin
        {
            get
            {
                if (this.InterestRateMinValueSpecified)
                {
                    return this.InterestRateMinValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InterestRateMinValue = value.GetValueOrDefault();
                this.InterestRateMinValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InterestType", Order=224, Form=XmlSchemaForm.Unqualified)]
        public bool InterestTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InterestType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InterestTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InterestType
        {
            get
            {
                if (this.InterestTypeValueSpecified)
                {
                    return this.InterestTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InterestTypeValue = value.GetValueOrDefault();
                this.InterestTypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InterestUnpaid", Order=225, Form=XmlSchemaForm.Unqualified)]
        public bool InterestUnpaidValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InterestUnpaid property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InterestUnpaidValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InterestUnpaid
        {
            get
            {
                if (this.InterestUnpaidValueSpecified)
                {
                    return this.InterestUnpaidValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InterestUnpaidValue = value.GetValueOrDefault();
                this.InterestUnpaidValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InterestYtd", Order=226, Form=XmlSchemaForm.Unqualified)]
        public bool InterestYtdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InterestYtd property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InterestYtdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InterestYtd
        {
            get
            {
                if (this.InterestYtdValueSpecified)
                {
                    return this.InterestYtdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InterestYtdValue = value.GetValueOrDefault();
                this.InterestYtdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LastAccrReversalDate", Order=227, Form=XmlSchemaForm.Unqualified)]
        public bool LastAccrReversalDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LastAccrReversalDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LastAccrReversalDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LastAccrReversalDate
        {
            get
            {
                if (this.LastAccrReversalDateValueSpecified)
                {
                    return this.LastAccrReversalDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LastAccrReversalDateValue = value.GetValueOrDefault();
                this.LastAccrReversalDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LastAccrUpdateDate", Order=228, Form=XmlSchemaForm.Unqualified)]
        public bool LastAccrUpdateDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LastAccrUpdateDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LastAccrUpdateDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LastAccrUpdateDate
        {
            get
            {
                if (this.LastAccrUpdateDateValueSpecified)
                {
                    return this.LastAccrUpdateDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LastAccrUpdateDateValue = value.GetValueOrDefault();
                this.LastAccrUpdateDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LastAccrualReversal", Order=229, Form=XmlSchemaForm.Unqualified)]
        public bool LastAccrualReversalValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LastAccrualReversal property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LastAccrualReversalValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LastAccrualReversal
        {
            get
            {
                if (this.LastAccrualReversalValueSpecified)
                {
                    return this.LastAccrualReversalValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LastAccrualReversalValue = value.GetValueOrDefault();
                this.LastAccrualReversalValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LastAdvanceDate", Order=230, Form=XmlSchemaForm.Unqualified)]
        public bool LastAdvanceDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LastAdvanceDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LastAdvanceDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LastAdvanceDate
        {
            get
            {
                if (this.LastAdvanceDateValueSpecified)
                {
                    return this.LastAdvanceDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LastAdvanceDateValue = value.GetValueOrDefault();
                this.LastAdvanceDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LastArmNoticeCreationDate", Order=231, Form=XmlSchemaForm.Unqualified)]
        public bool LastArmNoticeCreationDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LastArmNoticeCreationDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LastArmNoticeCreationDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LastArmNoticeCreationDate
        {
            get
            {
                if (this.LastArmNoticeCreationDateValueSpecified)
                {
                    return this.LastArmNoticeCreationDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LastArmNoticeCreationDateValue = value.GetValueOrDefault();
                this.LastArmNoticeCreationDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LastCrReportDate", Order=232, Form=XmlSchemaForm.Unqualified)]
        public bool LastCrReportDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LastCrReportDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LastCrReportDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LastCrReportDate
        {
            get
            {
                if (this.LastCrReportDateValueSpecified)
                {
                    return this.LastCrReportDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LastCrReportDateValue = value.GetValueOrDefault();
                this.LastCrReportDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LastFmDate", Order=233, Form=XmlSchemaForm.Unqualified)]
        public bool LastFmDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LastFmDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LastFmDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LastFmDate
        {
            get
            {
                if (this.LastFmDateValueSpecified)
                {
                    return this.LastFmDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LastFmDateValue = value.GetValueOrDefault();
                this.LastFmDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LastPaymentDate", Order=234, Form=XmlSchemaForm.Unqualified)]
        public bool LastPaymentDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LastPaymentDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LastPaymentDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LastPaymentDate
        {
            get
            {
                if (this.LastPaymentDateValueSpecified)
                {
                    return this.LastPaymentDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LastPaymentDateValue = value.GetValueOrDefault();
                this.LastPaymentDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LastPurgeDate", Order=235, Form=XmlSchemaForm.Unqualified)]
        public bool LastPurgeDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LastPurgeDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LastPurgeDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LastPurgeDate
        {
            get
            {
                if (this.LastPurgeDateValueSpecified)
                {
                    return this.LastPurgeDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LastPurgeDateValue = value.GetValueOrDefault();
                this.LastPurgeDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LastTranDate", Order=236, Form=XmlSchemaForm.Unqualified)]
        public bool LastTranDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LastTranDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LastTranDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LastTranDate
        {
            get
            {
                if (this.LastTranDateValueSpecified)
                {
                    return this.LastTranDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LastTranDateValue = value.GetValueOrDefault();
                this.LastTranDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LateChargeAccrued", Order=237, Form=XmlSchemaForm.Unqualified)]
        public bool LateChargeAccruedValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LateChargeAccrued property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LateChargeAccruedValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LateChargeAccrued
        {
            get
            {
                if (this.LateChargeAccruedValueSpecified)
                {
                    return this.LateChargeAccruedValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LateChargeAccruedValue = value.GetValueOrDefault();
                this.LateChargeAccruedValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LateChargeDate", Order=238, Form=XmlSchemaForm.Unqualified)]
        public bool LateChargeDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LateChargeDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LateChargeDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LateChargeDate
        {
            get
            {
                if (this.LateChargeDateValueSpecified)
                {
                    return this.LateChargeDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LateChargeDateValue = value.GetValueOrDefault();
                this.LateChargeDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LateChargeDue", Order=239, Form=XmlSchemaForm.Unqualified)]
        public bool LateChargeDueValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LateChargeDue property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LateChargeDueValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LateChargeDue
        {
            get
            {
                if (this.LateChargeDueValueSpecified)
                {
                    return this.LateChargeDueValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LateChargeDueValue = value.GetValueOrDefault();
                this.LateChargeDueValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LateChargeLastYear", Order=240, Form=XmlSchemaForm.Unqualified)]
        public bool LateChargeLastYearValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LateChargeLastYear property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LateChargeLastYearValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LateChargeLastYear
        {
            get
            {
                if (this.LateChargeLastYearValueSpecified)
                {
                    return this.LateChargeLastYearValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LateChargeLastYearValue = value.GetValueOrDefault();
                this.LateChargeLastYearValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LateChargeType", Order=241, Form=XmlSchemaForm.Unqualified)]
        public bool LateChargeTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LateChargeType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LateChargeTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LateChargeType
        {
            get
            {
                if (this.LateChargeTypeValueSpecified)
                {
                    return this.LateChargeTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LateChargeTypeValue = value.GetValueOrDefault();
                this.LateChargeTypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LateChargeUnpaid", Order=242, Form=XmlSchemaForm.Unqualified)]
        public bool LateChargeUnpaidValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LateChargeUnpaid property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LateChargeUnpaidValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LateChargeUnpaid
        {
            get
            {
                if (this.LateChargeUnpaidValueSpecified)
                {
                    return this.LateChargeUnpaidValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LateChargeUnpaidValue = value.GetValueOrDefault();
                this.LateChargeUnpaidValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LateChargeYtd", Order=243, Form=XmlSchemaForm.Unqualified)]
        public bool LateChargeYtdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LateChargeYtd property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LateChargeYtdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LateChargeYtd
        {
            get
            {
                if (this.LateChargeYtdValueSpecified)
                {
                    return this.LateChargeYtdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LateChargeYtdValue = value.GetValueOrDefault();
                this.LateChargeYtdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LateChgLastYrNoAdj", Order=244, Form=XmlSchemaForm.Unqualified)]
        public bool LateChgLastYrNoAdjValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LateChgLastYrNoAdj property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LateChgLastYrNoAdjValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LateChgLastYrNoAdj
        {
            get
            {
                if (this.LateChgLastYrNoAdjValueSpecified)
                {
                    return this.LateChgLastYrNoAdjValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LateChgLastYrNoAdjValue = value.GetValueOrDefault();
                this.LateChgLastYrNoAdjValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LateChgPdFromOpen", Order=245, Form=XmlSchemaForm.Unqualified)]
        public bool LateChgPdFromOpenValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LateChgPdFromOpen property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LateChgPdFromOpenValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LateChgPdFromOpen
        {
            get
            {
                if (this.LateChgPdFromOpenValueSpecified)
                {
                    return this.LateChgPdFromOpenValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LateChgPdFromOpenValue = value.GetValueOrDefault();
                this.LateChgPdFromOpenValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LateChgWaivedFromOpen", Order=246, Form=XmlSchemaForm.Unqualified)]
        public bool LateChgWaivedFromOpenValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LateChgWaivedFromOpen property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LateChgWaivedFromOpenValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LateChgWaivedFromOpen
        {
            get
            {
                if (this.LateChgWaivedFromOpenValueSpecified)
                {
                    return this.LateChgWaivedFromOpenValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LateChgWaivedFromOpenValue = value.GetValueOrDefault();
                this.LateChgWaivedFromOpenValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LateChgWaivedLastYear", Order=247, Form=XmlSchemaForm.Unqualified)]
        public bool LateChgWaivedLastYearValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LateChgWaivedLastYear property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LateChgWaivedLastYearValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LateChgWaivedLastYear
        {
            get
            {
                if (this.LateChgWaivedLastYearValueSpecified)
                {
                    return this.LateChgWaivedLastYearValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LateChgWaivedLastYearValue = value.GetValueOrDefault();
                this.LateChgWaivedLastYearValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LateChgWaivedYtd", Order=248, Form=XmlSchemaForm.Unqualified)]
        public bool LateChgWaivedYtdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LateChgWaivedYtd property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LateChgWaivedYtdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LateChgWaivedYtd
        {
            get
            {
                if (this.LateChgWaivedYtdValueSpecified)
                {
                    return this.LateChgWaivedYtdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LateChgWaivedYtdValue = value.GetValueOrDefault();
                this.LateChgWaivedYtdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LateChgYtdNoAdj", Order=249, Form=XmlSchemaForm.Unqualified)]
        public bool LateChgYtdNoAdjValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LateChgYtdNoAdj property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LateChgYtdNoAdjValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LateChgYtdNoAdj
        {
            get
            {
                if (this.LateChgYtdNoAdjValueSpecified)
                {
                    return this.LateChgYtdNoAdjValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LateChgYtdNoAdjValue = value.GetValueOrDefault();
                this.LateChgYtdNoAdjValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LeaseDispositionDate", Order=250, Form=XmlSchemaForm.Unqualified)]
        public bool LeaseDispositionDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LeaseDispositionDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LeaseDispositionDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LeaseDispositionDate
        {
            get
            {
                if (this.LeaseDispositionDateValueSpecified)
                {
                    return this.LeaseDispositionDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LeaseDispositionDateValue = value.GetValueOrDefault();
                this.LeaseDispositionDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LeaseDispositionFee", Order=251, Form=XmlSchemaForm.Unqualified)]
        public bool LeaseDispositionFeeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LeaseDispositionFee property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LeaseDispositionFeeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LeaseDispositionFee
        {
            get
            {
                if (this.LeaseDispositionFeeValueSpecified)
                {
                    return this.LeaseDispositionFeeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LeaseDispositionFeeValue = value.GetValueOrDefault();
                this.LeaseDispositionFeeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LeaseTerminateDate", Order=252, Form=XmlSchemaForm.Unqualified)]
        public bool LeaseTerminateDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LeaseTerminateDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LeaseTerminateDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LeaseTerminateDate
        {
            get
            {
                if (this.LeaseTerminateDateValueSpecified)
                {
                    return this.LeaseTerminateDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LeaseTerminateDateValue = value.GetValueOrDefault();
                this.LeaseTerminateDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LeaseTerminateFee", Order=253, Form=XmlSchemaForm.Unqualified)]
        public bool LeaseTerminateFeeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LeaseTerminateFee property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LeaseTerminateFeeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LeaseTerminateFee
        {
            get
            {
                if (this.LeaseTerminateFeeValueSpecified)
                {
                    return this.LeaseTerminateFeeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LeaseTerminateFeeValue = value.GetValueOrDefault();
                this.LeaseTerminateFeeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LedgerAccrual", Order=254, Form=XmlSchemaForm.Unqualified)]
        public bool LedgerAccrualValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LedgerAccrual property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LedgerAccrualValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LedgerAccrual
        {
            get
            {
                if (this.LedgerAccrualValueSpecified)
                {
                    return this.LedgerAccrualValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LedgerAccrualValue = value.GetValueOrDefault();
                this.LedgerAccrualValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LedgerAccrualDate", Order=255, Form=XmlSchemaForm.Unqualified)]
        public bool LedgerAccrualDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LedgerAccrualDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LedgerAccrualDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LedgerAccrualDate
        {
            get
            {
                if (this.LedgerAccrualDateValueSpecified)
                {
                    return this.LedgerAccrualDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LedgerAccrualDateValue = value.GetValueOrDefault();
                this.LedgerAccrualDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LesseeCity", Order=256, Form=XmlSchemaForm.Unqualified)]
        public bool LesseeCityValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LesseeCity property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LesseeCityValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LesseeCity
        {
            get
            {
                if (this.LesseeCityValueSpecified)
                {
                    return this.LesseeCityValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LesseeCityValue = value.GetValueOrDefault();
                this.LesseeCityValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LesseeCounty", Order=257, Form=XmlSchemaForm.Unqualified)]
        public bool LesseeCountyValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LesseeCounty property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LesseeCountyValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LesseeCounty
        {
            get
            {
                if (this.LesseeCountyValueSpecified)
                {
                    return this.LesseeCountyValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LesseeCountyValue = value.GetValueOrDefault();
                this.LesseeCountyValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LesseeState", Order=258, Form=XmlSchemaForm.Unqualified)]
        public bool LesseeStateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LesseeState property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LesseeStateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LesseeState
        {
            get
            {
                if (this.LesseeStateValueSpecified)
                {
                    return this.LesseeStateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LesseeStateValue = value.GetValueOrDefault();
                this.LesseeStateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LevelPaymentAmt", Order=259, Form=XmlSchemaForm.Unqualified)]
        public bool LevelPaymentAmtValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LevelPaymentAmt property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LevelPaymentAmtValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LevelPaymentAmt
        {
            get
            {
                if (this.LevelPaymentAmtValueSpecified)
                {
                    return this.LevelPaymentAmtValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LevelPaymentAmtValue = value.GetValueOrDefault();
                this.LevelPaymentAmtValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LevelPrincipalAmt", Order=260, Form=XmlSchemaForm.Unqualified)]
        public bool LevelPrincipalAmtValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LevelPrincipalAmt property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LevelPrincipalAmtValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LevelPrincipalAmt
        {
            get
            {
                if (this.LevelPrincipalAmtValueSpecified)
                {
                    return this.LevelPrincipalAmtValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LevelPrincipalAmtValue = value.GetValueOrDefault();
                this.LevelPrincipalAmtValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LoanCode", Order=261, Form=XmlSchemaForm.Unqualified)]
        public bool LoanCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LoanCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LoanCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LoanCode
        {
            get
            {
                if (this.LoanCodeValueSpecified)
                {
                    return this.LoanCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LoanCodeValue = value.GetValueOrDefault();
                this.LoanCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LossMitEffectDate", Order=262, Form=XmlSchemaForm.Unqualified)]
        public bool LossMitEffectDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LossMitEffectDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LossMitEffectDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LossMitEffectDate
        {
            get
            {
                if (this.LossMitEffectDateValueSpecified)
                {
                    return this.LossMitEffectDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LossMitEffectDateValue = value.GetValueOrDefault();
                this.LossMitEffectDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LossMitExpireDate", Order=263, Form=XmlSchemaForm.Unqualified)]
        public bool LossMitExpireDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LossMitExpireDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LossMitExpireDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LossMitExpireDate
        {
            get
            {
                if (this.LossMitExpireDateValueSpecified)
                {
                    return this.LossMitExpireDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LossMitExpireDateValue = value.GetValueOrDefault();
                this.LossMitExpireDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LossMitPayment", Order=264, Form=XmlSchemaForm.Unqualified)]
        public bool LossMitPaymentValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LossMitPayment property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LossMitPaymentValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LossMitPayment
        {
            get
            {
                if (this.LossMitPaymentValueSpecified)
                {
                    return this.LossMitPaymentValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LossMitPaymentValue = value.GetValueOrDefault();
                this.LossMitPaymentValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LossMitPmtStmtMsgCode", Order=265, Form=XmlSchemaForm.Unqualified)]
        public bool LossMitPmtStmtMsgCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LossMitPmtStmtMsgCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LossMitPmtStmtMsgCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LossMitPmtStmtMsgCode
        {
            get
            {
                if (this.LossMitPmtStmtMsgCodeValueSpecified)
                {
                    return this.LossMitPmtStmtMsgCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LossMitPmtStmtMsgCodeValue = value.GetValueOrDefault();
                this.LossMitPmtStmtMsgCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LossMitStmtMsgCode", Order=266, Form=XmlSchemaForm.Unqualified)]
        public bool LossMitStmtMsgCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LossMitStmtMsgCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LossMitStmtMsgCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LossMitStmtMsgCode
        {
            get
            {
                if (this.LossMitStmtMsgCodeValueSpecified)
                {
                    return this.LossMitStmtMsgCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LossMitStmtMsgCodeValue = value.GetValueOrDefault();
                this.LossMitStmtMsgCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LrlnBalance", Order=267, Form=XmlSchemaForm.Unqualified)]
        public bool LrlnBalanceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LrlnBalance property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LrlnBalanceValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LrlnBalance
        {
            get
            {
                if (this.LrlnBalanceValueSpecified)
                {
                    return this.LrlnBalanceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LrlnBalanceValue = value.GetValueOrDefault();
                this.LrlnBalanceValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LrlnDate", Order=268, Form=XmlSchemaForm.Unqualified)]
        public bool LrlnDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LrlnDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LrlnDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LrlnDate
        {
            get
            {
                if (this.LrlnDateValueSpecified)
                {
                    return this.LrlnDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LrlnDateValue = value.GetValueOrDefault();
                this.LrlnDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MaprCurrStmtIntAccrd", Order=269, Form=XmlSchemaForm.Unqualified)]
        public bool MaprCurrStmtIntAccrdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MaprCurrStmtIntAccrd property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MaprCurrStmtIntAccrdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MaprCurrStmtIntAccrd
        {
            get
            {
                if (this.MaprCurrStmtIntAccrdValueSpecified)
                {
                    return this.MaprCurrStmtIntAccrdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MaprCurrStmtIntAccrdValue = value.GetValueOrDefault();
                this.MaprCurrStmtIntAccrdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MaturityDate", Order=270, Form=XmlSchemaForm.Unqualified)]
        public bool MaturityDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MaturityDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MaturityDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MaturityDate
        {
            get
            {
                if (this.MaturityDateValueSpecified)
                {
                    return this.MaturityDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MaturityDateValue = value.GetValueOrDefault();
                this.MaturityDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MaxDueDateAdvancePeriod", Order=271, Form=XmlSchemaForm.Unqualified)]
        public bool MaxDueDateAdvancePeriodValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MaxDueDateAdvancePeriod property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MaxDueDateAdvancePeriodValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MaxDueDateAdvancePeriod
        {
            get
            {
                if (this.MaxDueDateAdvancePeriodValueSpecified)
                {
                    return this.MaxDueDateAdvancePeriodValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MaxDueDateAdvancePeriodValue = value.GetValueOrDefault();
                this.MaxDueDateAdvancePeriodValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MaxLoanDueDate", Order=272, Form=XmlSchemaForm.Unqualified)]
        public bool MaxLoanDueDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MaxLoanDueDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MaxLoanDueDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MaxLoanDueDate
        {
            get
            {
                if (this.MaxLoanDueDateValueSpecified)
                {
                    return this.MaxLoanDueDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MaxLoanDueDateValue = value.GetValueOrDefault();
                this.MaxLoanDueDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MemberUserTransferCode", Order=273, Form=XmlSchemaForm.Unqualified)]
        public bool MemberUserTransferCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MemberUserTransferCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MemberUserTransferCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MemberUserTransferCode
        {
            get
            {
                if (this.MemberUserTransferCodeValueSpecified)
                {
                    return this.MemberUserTransferCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MemberUserTransferCodeValue = value.GetValueOrDefault();
                this.MemberUserTransferCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MfoelId", Order=274, Form=XmlSchemaForm.Unqualified)]
        public bool MfoelIdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MfoelId property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MfoelIdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MfoelId
        {
            get
            {
                if (this.MfoelIdValueSpecified)
                {
                    return this.MfoelIdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MfoelIdValue = value.GetValueOrDefault();
                this.MfoelIdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MicrAcctNumber", Order=275, Form=XmlSchemaForm.Unqualified)]
        public bool MicrAcctNumberValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MicrAcctNumber property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MicrAcctNumberValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MicrAcctNumber
        {
            get
            {
                if (this.MicrAcctNumberValueSpecified)
                {
                    return this.MicrAcctNumberValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MicrAcctNumberValue = value.GetValueOrDefault();
                this.MicrAcctNumberValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MilitaryAprLoan", Order=276, Form=XmlSchemaForm.Unqualified)]
        public bool MilitaryAprLoanValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MilitaryAprLoan property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MilitaryAprLoanValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MilitaryAprLoan
        {
            get
            {
                if (this.MilitaryAprLoanValueSpecified)
                {
                    return this.MilitaryAprLoanValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MilitaryAprLoanValue = value.GetValueOrDefault();
                this.MilitaryAprLoanValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MinAdvance", Order=277, Form=XmlSchemaForm.Unqualified)]
        public bool MinAdvanceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MinAdvance property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MinAdvanceValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MinAdvance
        {
            get
            {
                if (this.MinAdvanceValueSpecified)
                {
                    return this.MinAdvanceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MinAdvanceValue = value.GetValueOrDefault();
                this.MinAdvanceValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MinBalance", Order=278, Form=XmlSchemaForm.Unqualified)]
        public bool MinBalanceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MinBalance property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MinBalanceValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MinBalance
        {
            get
            {
                if (this.MinBalanceValueSpecified)
                {
                    return this.MinBalanceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MinBalanceValue = value.GetValueOrDefault();
                this.MinBalanceValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MinimumPayment", Order=279, Form=XmlSchemaForm.Unqualified)]
        public bool MinimumPaymentValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MinimumPayment property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MinimumPaymentValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MinimumPayment
        {
            get
            {
                if (this.MinimumPaymentValueSpecified)
                {
                    return this.MinimumPaymentValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MinimumPaymentValue = value.GetValueOrDefault();
                this.MinimumPaymentValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MortgInsCollLastYr", Order=280, Form=XmlSchemaForm.Unqualified)]
        public bool MortgInsCollLastYrValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MortgInsCollLastYr property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MortgInsCollLastYrValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MortgInsCollLastYr
        {
            get
            {
                if (this.MortgInsCollLastYrValueSpecified)
                {
                    return this.MortgInsCollLastYrValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MortgInsCollLastYrValue = value.GetValueOrDefault();
                this.MortgInsCollLastYrValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MortgInsCollYtd", Order=281, Form=XmlSchemaForm.Unqualified)]
        public bool MortgInsCollYtdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MortgInsCollYtd property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MortgInsCollYtdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MortgInsCollYtd
        {
            get
            {
                if (this.MortgInsCollYtdValueSpecified)
                {
                    return this.MortgInsCollYtdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MortgInsCollYtdValue = value.GetValueOrDefault();
                this.MortgInsCollYtdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MortgageIdNumber", Order=282, Form=XmlSchemaForm.Unqualified)]
        public bool MortgageIdNumberValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MortgageIdNumber property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MortgageIdNumberValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MortgageIdNumber
        {
            get
            {
                if (this.MortgageIdNumberValueSpecified)
                {
                    return this.MortgageIdNumberValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MortgageIdNumberValue = value.GetValueOrDefault();
                this.MortgageIdNumberValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MtdAccruedInt", Order=283, Form=XmlSchemaForm.Unqualified)]
        public bool MtdAccruedIntValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MtdAccruedInt property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MtdAccruedIntValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MtdAccruedInt
        {
            get
            {
                if (this.MtdAccruedIntValueSpecified)
                {
                    return this.MtdAccruedIntValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MtdAccruedIntValue = value.GetValueOrDefault();
                this.MtdAccruedIntValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MtdAccumulatedInt", Order=284, Form=XmlSchemaForm.Unqualified)]
        public bool MtdAccumulatedIntValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MtdAccumulatedInt property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MtdAccumulatedIntValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MtdAccumulatedInt
        {
            get
            {
                if (this.MtdAccumulatedIntValueSpecified)
                {
                    return this.MtdAccumulatedIntValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MtdAccumulatedIntValue = value.GetValueOrDefault();
                this.MtdAccumulatedIntValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MtdPaidInt", Order=285, Form=XmlSchemaForm.Unqualified)]
        public bool MtdPaidIntValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MtdPaidInt property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MtdPaidIntValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MtdPaidInt
        {
            get
            {
                if (this.MtdPaidIntValueSpecified)
                {
                    return this.MtdPaidIntValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MtdPaidIntValue = value.GetValueOrDefault();
                this.MtdPaidIntValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MtdPriorRateAccrual", Order=286, Form=XmlSchemaForm.Unqualified)]
        public bool MtdPriorRateAccrualValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MtdPriorRateAccrual property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MtdPriorRateAccrualValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MtdPriorRateAccrual
        {
            get
            {
                if (this.MtdPriorRateAccrualValueSpecified)
                {
                    return this.MtdPriorRateAccrualValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MtdPriorRateAccrualValue = value.GetValueOrDefault();
                this.MtdPriorRateAccrualValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MtgNumProp", Order=287, Form=XmlSchemaForm.Unqualified)]
        public bool MtgNumPropValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MtgNumProp property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MtgNumPropValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MtgNumProp
        {
            get
            {
                if (this.MtgNumPropValueSpecified)
                {
                    return this.MtgNumPropValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MtgNumPropValue = value.GetValueOrDefault();
                this.MtgNumPropValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("NewLoanDueDateCode", Order=288, Form=XmlSchemaForm.Unqualified)]
        public bool NewLoanDueDateCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NewLoanDueDateCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool NewLoanDueDateCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> NewLoanDueDateCode
        {
            get
            {
                if (this.NewLoanDueDateCodeValueSpecified)
                {
                    return this.NewLoanDueDateCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NewLoanDueDateCodeValue = value.GetValueOrDefault();
                this.NewLoanDueDateCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("NewSegCutoffDays", Order=289, Form=XmlSchemaForm.Unqualified)]
        public bool NewSegCutoffDaysValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NewSegCutoffDays property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool NewSegCutoffDaysValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> NewSegCutoffDays
        {
            get
            {
                if (this.NewSegCutoffDaysValueSpecified)
                {
                    return this.NewSegCutoffDaysValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NewSegCutoffDaysValue = value.GetValueOrDefault();
                this.NewSegCutoffDaysValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("NewSegCutoffOption", Order=290, Form=XmlSchemaForm.Unqualified)]
        public bool NewSegCutoffOptionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NewSegCutoffOption property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool NewSegCutoffOptionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> NewSegCutoffOption
        {
            get
            {
                if (this.NewSegCutoffOptionValueSpecified)
                {
                    return this.NewSegCutoffOptionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NewSegCutoffOptionValue = value.GetValueOrDefault();
                this.NewSegCutoffOptionValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("NextRateChangeDate", Order=291, Form=XmlSchemaForm.Unqualified)]
        public bool NextRateChangeDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NextRateChangeDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool NextRateChangeDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> NextRateChangeDate
        {
            get
            {
                if (this.NextRateChangeDateValueSpecified)
                {
                    return this.NextRateChangeDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NextRateChangeDateValue = value.GetValueOrDefault();
                this.NextRateChangeDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("NextStmtDate", Order=292, Form=XmlSchemaForm.Unqualified)]
        public bool NextStmtDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NextStmtDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool NextStmtDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> NextStmtDate
        {
            get
            {
                if (this.NextStmtDateValueSpecified)
                {
                    return this.NextStmtDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NextStmtDateValue = value.GetValueOrDefault();
                this.NextStmtDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Nickname", Order=293, Form=XmlSchemaForm.Unqualified)]
        public bool NicknameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Nickname property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool NicknameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Nickname
        {
            get
            {
                if (this.NicknameValueSpecified)
                {
                    return this.NicknameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NicknameValue = value.GetValueOrDefault();
                this.NicknameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("NoteNumber", Order=294, Form=XmlSchemaForm.Unqualified)]
        public bool NoteNumberValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NoteNumber property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool NoteNumberValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> NoteNumber
        {
            get
            {
                if (this.NoteNumberValueSpecified)
                {
                    return this.NoteNumberValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NoteNumberValue = value.GetValueOrDefault();
                this.NoteNumberValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("NsfLastYear", Order=295, Form=XmlSchemaForm.Unqualified)]
        public bool NsfLastYearValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NsfLastYear property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool NsfLastYearValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> NsfLastYear
        {
            get
            {
                if (this.NsfLastYearValueSpecified)
                {
                    return this.NsfLastYearValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NsfLastYearValue = value.GetValueOrDefault();
                this.NsfLastYearValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("NsfMonthToDate", Order=296, Form=XmlSchemaForm.Unqualified)]
        public bool NsfMonthToDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NsfMonthToDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool NsfMonthToDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> NsfMonthToDate
        {
            get
            {
                if (this.NsfMonthToDateValueSpecified)
                {
                    return this.NsfMonthToDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NsfMonthToDateValue = value.GetValueOrDefault();
                this.NsfMonthToDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("NsfYtd", Order=297, Form=XmlSchemaForm.Unqualified)]
        public bool NsfYtdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NsfYtd property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool NsfYtdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> NsfYtd
        {
            get
            {
                if (this.NsfYtdValueSpecified)
                {
                    return this.NsfYtdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NsfYtdValue = value.GetValueOrDefault();
                this.NsfYtdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OccupancyType", Order=298, Form=XmlSchemaForm.Unqualified)]
        public bool OccupancyTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OccupancyType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OccupancyTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> OccupancyType
        {
            get
            {
                if (this.OccupancyTypeValueSpecified)
                {
                    return this.OccupancyTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OccupancyTypeValue = value.GetValueOrDefault();
                this.OccupancyTypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OpenDate", Order=299, Form=XmlSchemaForm.Unqualified)]
        public bool OpenDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OpenDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OpenDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> OpenDate
        {
            get
            {
                if (this.OpenDateValueSpecified)
                {
                    return this.OpenDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OpenDateValue = value.GetValueOrDefault();
                this.OpenDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OrigInsuranceType", Order=300, Form=XmlSchemaForm.Unqualified)]
        public bool OrigInsuranceTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OrigInsuranceType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OrigInsuranceTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> OrigInsuranceType
        {
            get
            {
                if (this.OrigInsuranceTypeValueSpecified)
                {
                    return this.OrigInsuranceTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OrigInsuranceTypeValue = value.GetValueOrDefault();
                this.OrigInsuranceTypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OrigRiskGrade", Order=301, Form=XmlSchemaForm.Unqualified)]
        public bool OrigRiskGradeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OrigRiskGrade property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OrigRiskGradeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> OrigRiskGrade
        {
            get
            {
                if (this.OrigRiskGradeValueSpecified)
                {
                    return this.OrigRiskGradeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OrigRiskGradeValue = value.GetValueOrDefault();
                this.OrigRiskGradeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OrigUnamortizedFees", Order=302, Form=XmlSchemaForm.Unqualified)]
        public bool OrigUnamortizedFeesValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OrigUnamortizedFees property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OrigUnamortizedFeesValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> OrigUnamortizedFees
        {
            get
            {
                if (this.OrigUnamortizedFeesValueSpecified)
                {
                    return this.OrigUnamortizedFeesValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OrigUnamortizedFeesValue = value.GetValueOrDefault();
                this.OrigUnamortizedFeesValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OriginalBalance", Order=303, Form=XmlSchemaForm.Unqualified)]
        public bool OriginalBalanceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OriginalBalance property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OriginalBalanceValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> OriginalBalance
        {
            get
            {
                if (this.OriginalBalanceValueSpecified)
                {
                    return this.OriginalBalanceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OriginalBalanceValue = value.GetValueOrDefault();
                this.OriginalBalanceValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OriginalDate", Order=304, Form=XmlSchemaForm.Unqualified)]
        public bool OriginalDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OriginalDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OriginalDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> OriginalDate
        {
            get
            {
                if (this.OriginalDateValueSpecified)
                {
                    return this.OriginalDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OriginalDateValue = value.GetValueOrDefault();
                this.OriginalDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OriginalRate", Order=305, Form=XmlSchemaForm.Unqualified)]
        public bool OriginalRateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OriginalRate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OriginalRateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> OriginalRate
        {
            get
            {
                if (this.OriginalRateValueSpecified)
                {
                    return this.OriginalRateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OriginalRateValue = value.GetValueOrDefault();
                this.OriginalRateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OriginationBalance", Order=306, Form=XmlSchemaForm.Unqualified)]
        public bool OriginationBalanceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OriginationBalance property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OriginationBalanceValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> OriginationBalance
        {
            get
            {
                if (this.OriginationBalanceValueSpecified)
                {
                    return this.OriginationBalanceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OriginationBalanceValue = value.GetValueOrDefault();
                this.OriginationBalanceValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OvlAuthFee", Order=307, Form=XmlSchemaForm.Unqualified)]
        public bool OvlAuthFeeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OvlAuthFee property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OvlAuthFeeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> OvlAuthFee
        {
            get
            {
                if (this.OvlAuthFeeValueSpecified)
                {
                    return this.OvlAuthFeeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OvlAuthFeeValue = value.GetValueOrDefault();
                this.OvlAuthFeeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OvlAuthFeeEffDate", Order=308, Form=XmlSchemaForm.Unqualified)]
        public bool OvlAuthFeeEffDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OvlAuthFeeEffDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OvlAuthFeeEffDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> OvlAuthFeeEffDate
        {
            get
            {
                if (this.OvlAuthFeeEffDateValueSpecified)
                {
                    return this.OvlAuthFeeEffDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OvlAuthFeeEffDateValue = value.GetValueOrDefault();
                this.OvlAuthFeeEffDateValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _ovlCycleCount;
        
        [XmlElementAttribute("OvlCycleCount", Order=309, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> OvlCycleCount
        {
            get
            {
                return _ovlCycleCount;
            }
            set
            {
                _ovlCycleCount = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the OvlCycleCount collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool OvlCycleCountSpecified
        {
            get
            {
                return ((this.OvlCycleCount != null) 
                            && (this.OvlCycleCount.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OvlOptIn", Order=310, Form=XmlSchemaForm.Unqualified)]
        public bool OvlOptInValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OvlOptIn property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OvlOptInValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> OvlOptIn
        {
            get
            {
                if (this.OvlOptInValueSpecified)
                {
                    return this.OvlOptInValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OvlOptInValue = value.GetValueOrDefault();
                this.OvlOptInValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OvlPrevAuthFee", Order=311, Form=XmlSchemaForm.Unqualified)]
        public bool OvlPrevAuthFeeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OvlPrevAuthFee property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OvlPrevAuthFeeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> OvlPrevAuthFee
        {
            get
            {
                if (this.OvlPrevAuthFeeValueSpecified)
                {
                    return this.OvlPrevAuthFeeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OvlPrevAuthFeeValue = value.GetValueOrDefault();
                this.OvlPrevAuthFeeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OvlStmtDisclFee", Order=312, Form=XmlSchemaForm.Unqualified)]
        public bool OvlStmtDisclFeeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OvlStmtDisclFee property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OvlStmtDisclFeeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> OvlStmtDisclFee
        {
            get
            {
                if (this.OvlStmtDisclFeeValueSpecified)
                {
                    return this.OvlStmtDisclFeeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OvlStmtDisclFeeValue = value.GetValueOrDefault();
                this.OvlStmtDisclFeeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PartialPayment", Order=313, Form=XmlSchemaForm.Unqualified)]
        public bool PartialPaymentValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PartialPayment property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PartialPaymentValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PartialPayment
        {
            get
            {
                if (this.PartialPaymentValueSpecified)
                {
                    return this.PartialPaymentValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PartialPaymentValue = value.GetValueOrDefault();
                this.PartialPaymentValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ParticipationNumber", Order=314, Form=XmlSchemaForm.Unqualified)]
        public bool ParticipationNumberValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ParticipationNumber property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ParticipationNumberValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ParticipationNumber
        {
            get
            {
                if (this.ParticipationNumberValueSpecified)
                {
                    return this.ParticipationNumberValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ParticipationNumberValue = value.GetValueOrDefault();
                this.ParticipationNumberValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PastDueAmount", Order=315, Form=XmlSchemaForm.Unqualified)]
        public bool PastDueAmountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PastDueAmount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PastDueAmountValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PastDueAmount
        {
            get
            {
                if (this.PastDueAmountValueSpecified)
                {
                    return this.PastDueAmountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PastDueAmountValue = value.GetValueOrDefault();
                this.PastDueAmountValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _payeeLine;
        
        [XmlElementAttribute("PayeeLine", Order=316, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> PayeeLine
        {
            get
            {
                return _payeeLine;
            }
            set
            {
                _payeeLine = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PayeeLine collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool PayeeLineSpecified
        {
            get
            {
                return ((this.PayeeLine != null) 
                            && (this.PayeeLine.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PayeeNameLocator", Order=317, Form=XmlSchemaForm.Unqualified)]
        public bool PayeeNameLocatorValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PayeeNameLocator property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PayeeNameLocatorValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PayeeNameLocator
        {
            get
            {
                if (this.PayeeNameLocatorValueSpecified)
                {
                    return this.PayeeNameLocatorValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PayeeNameLocatorValue = value.GetValueOrDefault();
                this.PayeeNameLocatorValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PayeeNameType", Order=318, Form=XmlSchemaForm.Unqualified)]
        public bool PayeeNameTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PayeeNameType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PayeeNameTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PayeeNameType
        {
            get
            {
                if (this.PayeeNameTypeValueSpecified)
                {
                    return this.PayeeNameTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PayeeNameTypeValue = value.GetValueOrDefault();
                this.PayeeNameTypeValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _payeePhone;
        
        [XmlElementAttribute("PayeePhone", Order=319, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> PayeePhone
        {
            get
            {
                return _payeePhone;
            }
            set
            {
                _payeePhone = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PayeePhone collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool PayeePhoneSpecified
        {
            get
            {
                return ((this.PayeePhone != null) 
                            && (this.PayeePhone.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Payment", Order=320, Form=XmlSchemaForm.Unqualified)]
        public bool PaymentValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Payment property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PaymentValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Payment
        {
            get
            {
                if (this.PaymentValueSpecified)
                {
                    return this.PaymentValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PaymentValue = value.GetValueOrDefault();
                this.PaymentValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PaymentApplicationMethod", Order=321, Form=XmlSchemaForm.Unqualified)]
        public bool PaymentApplicationMethodValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PaymentApplicationMethod property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PaymentApplicationMethodValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PaymentApplicationMethod
        {
            get
            {
                if (this.PaymentApplicationMethodValueSpecified)
                {
                    return this.PaymentApplicationMethodValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PaymentApplicationMethodValue = value.GetValueOrDefault();
                this.PaymentApplicationMethodValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PaymentCalcType", Order=322, Form=XmlSchemaForm.Unqualified)]
        public bool PaymentCalcTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PaymentCalcType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PaymentCalcTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PaymentCalcType
        {
            get
            {
                if (this.PaymentCalcTypeValueSpecified)
                {
                    return this.PaymentCalcTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PaymentCalcTypeValue = value.GetValueOrDefault();
                this.PaymentCalcTypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PaymentCount", Order=323, Form=XmlSchemaForm.Unqualified)]
        public bool PaymentCountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PaymentCount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PaymentCountValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PaymentCount
        {
            get
            {
                if (this.PaymentCountValueSpecified)
                {
                    return this.PaymentCountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PaymentCountValue = value.GetValueOrDefault();
                this.PaymentCountValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PaymentDue", Order=324, Form=XmlSchemaForm.Unqualified)]
        public bool PaymentDueValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PaymentDue property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PaymentDueValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PaymentDue
        {
            get
            {
                if (this.PaymentDueValueSpecified)
                {
                    return this.PaymentDueValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PaymentDueValue = value.GetValueOrDefault();
                this.PaymentDueValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PaymentFrequency", Order=325, Form=XmlSchemaForm.Unqualified)]
        public bool PaymentFrequencyValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PaymentFrequency property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PaymentFrequencyValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PaymentFrequency
        {
            get
            {
                if (this.PaymentFrequencyValueSpecified)
                {
                    return this.PaymentFrequencyValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PaymentFrequencyValue = value.GetValueOrDefault();
                this.PaymentFrequencyValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _paymentHistory;
        
        [XmlElementAttribute("PaymentHistory", Order=326, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> PaymentHistory
        {
            get
            {
                return _paymentHistory;
            }
            set
            {
                _paymentHistory = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PaymentHistory collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool PaymentHistorySpecified
        {
            get
            {
                return ((this.PaymentHistory != null) 
                            && (this.PaymentHistory.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PaymentMethod", Order=327, Form=XmlSchemaForm.Unqualified)]
        public bool PaymentMethodValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PaymentMethod property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PaymentMethodValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PaymentMethod
        {
            get
            {
                if (this.PaymentMethodValueSpecified)
                {
                    return this.PaymentMethodValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PaymentMethodValue = value.GetValueOrDefault();
                this.PaymentMethodValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PaymentSkipStartDay", Order=328, Form=XmlSchemaForm.Unqualified)]
        public bool PaymentSkipStartDayValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PaymentSkipStartDay property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PaymentSkipStartDayValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PaymentSkipStartDay
        {
            get
            {
                if (this.PaymentSkipStartDayValueSpecified)
                {
                    return this.PaymentSkipStartDayValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PaymentSkipStartDayValue = value.GetValueOrDefault();
                this.PaymentSkipStartDayValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PaymentSkips", Order=329, Form=XmlSchemaForm.Unqualified)]
        public bool PaymentSkipsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PaymentSkips property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PaymentSkipsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PaymentSkips
        {
            get
            {
                if (this.PaymentSkipsValueSpecified)
                {
                    return this.PaymentSkipsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PaymentSkipsValue = value.GetValueOrDefault();
                this.PaymentSkipsValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PaymentType", Order=330, Form=XmlSchemaForm.Unqualified)]
        public bool PaymentTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PaymentType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PaymentTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PaymentType
        {
            get
            {
                if (this.PaymentTypeValueSpecified)
                {
                    return this.PaymentTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PaymentTypeValue = value.GetValueOrDefault();
                this.PaymentTypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PayoffAmount", Order=331, Form=XmlSchemaForm.Unqualified)]
        public bool PayoffAmountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PayoffAmount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PayoffAmountValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PayoffAmount
        {
            get
            {
                if (this.PayoffAmountValueSpecified)
                {
                    return this.PayoffAmountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PayoffAmountValue = value.GetValueOrDefault();
                this.PayoffAmountValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PercentPrincipal", Order=332, Form=XmlSchemaForm.Unqualified)]
        public bool PercentPrincipalValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PercentPrincipal property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PercentPrincipalValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PercentPrincipal
        {
            get
            {
                if (this.PercentPrincipalValueSpecified)
                {
                    return this.PercentPrincipalValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PercentPrincipalValue = value.GetValueOrDefault();
                this.PercentPrincipalValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PeriodicCap", Order=333, Form=XmlSchemaForm.Unqualified)]
        public bool PeriodicCapValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PeriodicCap property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PeriodicCapValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PeriodicCap
        {
            get
            {
                if (this.PeriodicCapValueSpecified)
                {
                    return this.PeriodicCapValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PeriodicCapValue = value.GetValueOrDefault();
                this.PeriodicCapValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PeriodicFrequency", Order=334, Form=XmlSchemaForm.Unqualified)]
        public bool PeriodicFrequencyValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PeriodicFrequency property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PeriodicFrequencyValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PeriodicFrequency
        {
            get
            {
                if (this.PeriodicFrequencyValueSpecified)
                {
                    return this.PeriodicFrequencyValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PeriodicFrequencyValue = value.GetValueOrDefault();
                this.PeriodicFrequencyValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PeriodicStartDate", Order=335, Form=XmlSchemaForm.Unqualified)]
        public bool PeriodicStartDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PeriodicStartDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PeriodicStartDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PeriodicStartDate
        {
            get
            {
                if (this.PeriodicStartDateValueSpecified)
                {
                    return this.PeriodicStartDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PeriodicStartDateValue = value.GetValueOrDefault();
                this.PeriodicStartDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PeriodicStartRate", Order=336, Form=XmlSchemaForm.Unqualified)]
        public bool PeriodicStartRateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PeriodicStartRate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PeriodicStartRateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PeriodicStartRate
        {
            get
            {
                if (this.PeriodicStartRateValueSpecified)
                {
                    return this.PeriodicStartRateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PeriodicStartRateValue = value.GetValueOrDefault();
                this.PeriodicStartRateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PmiAppraisedValue", Order=337, Form=XmlSchemaForm.Unqualified)]
        public bool PmiAppraisedValueValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PmiAppraisedValue property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PmiAppraisedValueValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PmiAppraisedValue
        {
            get
            {
                if (this.PmiAppraisedValueValueSpecified)
                {
                    return this.PmiAppraisedValueValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PmiAppraisedValueValue = value.GetValueOrDefault();
                this.PmiAppraisedValueValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PmiLastYear", Order=338, Form=XmlSchemaForm.Unqualified)]
        public bool PmiLastYearValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PmiLastYear property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PmiLastYearValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PmiLastYear
        {
            get
            {
                if (this.PmiLastYearValueSpecified)
                {
                    return this.PmiLastYearValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PmiLastYearValue = value.GetValueOrDefault();
                this.PmiLastYearValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PmiLtvRatio", Order=339, Form=XmlSchemaForm.Unqualified)]
        public bool PmiLtvRatioValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PmiLtvRatio property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PmiLtvRatioValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PmiLtvRatio
        {
            get
            {
                if (this.PmiLtvRatioValueSpecified)
                {
                    return this.PmiLtvRatioValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PmiLtvRatioValue = value.GetValueOrDefault();
                this.PmiLtvRatioValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PmiOriginalValue", Order=340, Form=XmlSchemaForm.Unqualified)]
        public bool PmiOriginalValueValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PmiOriginalValue property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PmiOriginalValueValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PmiOriginalValue
        {
            get
            {
                if (this.PmiOriginalValueValueSpecified)
                {
                    return this.PmiOriginalValueValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PmiOriginalValueValue = value.GetValueOrDefault();
                this.PmiOriginalValueValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PmiPurchasePrice", Order=341, Form=XmlSchemaForm.Unqualified)]
        public bool PmiPurchasePriceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PmiPurchasePrice property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PmiPurchasePriceValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PmiPurchasePrice
        {
            get
            {
                if (this.PmiPurchasePriceValueSpecified)
                {
                    return this.PmiPurchasePriceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PmiPurchasePriceValue = value.GetValueOrDefault();
                this.PmiPurchasePriceValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PmiYtd", Order=342, Form=XmlSchemaForm.Unqualified)]
        public bool PmiYtdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PmiYtd property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PmiYtdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PmiYtd
        {
            get
            {
                if (this.PmiYtdValueSpecified)
                {
                    return this.PmiYtdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PmiYtdValue = value.GetValueOrDefault();
                this.PmiYtdValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _pmtBucketAmount;
        
        [XmlElementAttribute("PmtBucketAmount", Order=343, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> PmtBucketAmount
        {
            get
            {
                return _pmtBucketAmount;
            }
            set
            {
                _pmtBucketAmount = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PmtBucketAmount collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool PmtBucketAmountSpecified
        {
            get
            {
                return ((this.PmtBucketAmount != null) 
                            && (this.PmtBucketAmount.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _pmtBucketDueDate;
        
        [XmlElementAttribute("PmtBucketDueDate", Order=344, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> PmtBucketDueDate
        {
            get
            {
                return _pmtBucketDueDate;
            }
            set
            {
                _pmtBucketDueDate = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PmtBucketDueDate collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool PmtBucketDueDateSpecified
        {
            get
            {
                return ((this.PmtBucketDueDate != null) 
                            && (this.PmtBucketDueDate.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PointsLastYear", Order=345, Form=XmlSchemaForm.Unqualified)]
        public bool PointsLastYearValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PointsLastYear property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PointsLastYearValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PointsLastYear
        {
            get
            {
                if (this.PointsLastYearValueSpecified)
                {
                    return this.PointsLastYearValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PointsLastYearValue = value.GetValueOrDefault();
                this.PointsLastYearValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PointsYtd", Order=346, Form=XmlSchemaForm.Unqualified)]
        public bool PointsYtdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PointsYtd property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PointsYtdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PointsYtd
        {
            get
            {
                if (this.PointsYtdValueSpecified)
                {
                    return this.PointsYtdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PointsYtdValue = value.GetValueOrDefault();
                this.PointsYtdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PositivePayDraft", Order=347, Form=XmlSchemaForm.Unqualified)]
        public bool PositivePayDraftValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PositivePayDraft property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PositivePayDraftValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PositivePayDraft
        {
            get
            {
                if (this.PositivePayDraftValueSpecified)
                {
                    return this.PositivePayDraftValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PositivePayDraftValue = value.GetValueOrDefault();
                this.PositivePayDraftValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _preMthIntAccrued;
        
        [XmlElementAttribute("PreMthIntAccrued", Order=348, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> PreMthIntAccrued
        {
            get
            {
                return _preMthIntAccrued;
            }
            set
            {
                _preMthIntAccrued = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PreMthIntAccrued collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool PreMthIntAccruedSpecified
        {
            get
            {
                return ((this.PreMthIntAccrued != null) 
                            && (this.PreMthIntAccrued.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _preMthIntAccumLtd;
        
        [XmlElementAttribute("PreMthIntAccumLtd", Order=349, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> PreMthIntAccumLtd
        {
            get
            {
                return _preMthIntAccumLtd;
            }
            set
            {
                _preMthIntAccumLtd = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PreMthIntAccumLtd collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool PreMthIntAccumLtdSpecified
        {
            get
            {
                return ((this.PreMthIntAccumLtd != null) 
                            && (this.PreMthIntAccumLtd.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _preMthIntPaid;
        
        [XmlElementAttribute("PreMthIntPaid", Order=350, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> PreMthIntPaid
        {
            get
            {
                return _preMthIntPaid;
            }
            set
            {
                _preMthIntPaid = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PreMthIntPaid collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool PreMthIntPaidSpecified
        {
            get
            {
                return ((this.PreMthIntPaid != null) 
                            && (this.PreMthIntPaid.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrepaidFinanceChg", Order=351, Form=XmlSchemaForm.Unqualified)]
        public bool PrepaidFinanceChgValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrepaidFinanceChg property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrepaidFinanceChgValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrepaidFinanceChg
        {
            get
            {
                if (this.PrepaidFinanceChgValueSpecified)
                {
                    return this.PrepaidFinanceChgValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrepaidFinanceChgValue = value.GetValueOrDefault();
                this.PrepaidFinanceChgValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrepaymentPenalty", Order=352, Form=XmlSchemaForm.Unqualified)]
        public bool PrepaymentPenaltyValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrepaymentPenalty property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrepaymentPenaltyValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrepaymentPenalty
        {
            get
            {
                if (this.PrepaymentPenaltyValueSpecified)
                {
                    return this.PrepaymentPenaltyValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrepaymentPenaltyValue = value.GetValueOrDefault();
                this.PrepaymentPenaltyValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrepaymentPenaltyExpDate", Order=353, Form=XmlSchemaForm.Unqualified)]
        public bool PrepaymentPenaltyExpDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrepaymentPenaltyExpDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrepaymentPenaltyExpDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrepaymentPenaltyExpDate
        {
            get
            {
                if (this.PrepaymentPenaltyExpDateValueSpecified)
                {
                    return this.PrepaymentPenaltyExpDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrepaymentPenaltyExpDateValue = value.GetValueOrDefault();
                this.PrepaymentPenaltyExpDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrevBeginningYearBalance", Order=354, Form=XmlSchemaForm.Unqualified)]
        public bool PrevBeginningYearBalanceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrevBeginningYearBalance property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrevBeginningYearBalanceValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrevBeginningYearBalance
        {
            get
            {
                if (this.PrevBeginningYearBalanceValueSpecified)
                {
                    return this.PrevBeginningYearBalanceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrevBeginningYearBalanceValue = value.GetValueOrDefault();
                this.PrevBeginningYearBalanceValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrevStmtFees", Order=355, Form=XmlSchemaForm.Unqualified)]
        public bool PrevStmtFeesValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrevStmtFees property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrevStmtFeesValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrevStmtFees
        {
            get
            {
                if (this.PrevStmtFeesValueSpecified)
                {
                    return this.PrevStmtFeesValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrevStmtFeesValue = value.GetValueOrDefault();
                this.PrevStmtFeesValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrevStmtIntAccrd", Order=356, Form=XmlSchemaForm.Unqualified)]
        public bool PrevStmtIntAccrdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrevStmtIntAccrd property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrevStmtIntAccrdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrevStmtIntAccrd
        {
            get
            {
                if (this.PrevStmtIntAccrdValueSpecified)
                {
                    return this.PrevStmtIntAccrdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrevStmtIntAccrdValue = value.GetValueOrDefault();
                this.PrevStmtIntAccrdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrevStmtLossMitAmtDue", Order=357, Form=XmlSchemaForm.Unqualified)]
        public bool PrevStmtLossMitAmtDueValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrevStmtLossMitAmtDue property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrevStmtLossMitAmtDueValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrevStmtLossMitAmtDue
        {
            get
            {
                if (this.PrevStmtLossMitAmtDueValueSpecified)
                {
                    return this.PrevStmtLossMitAmtDueValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrevStmtLossMitAmtDueValue = value.GetValueOrDefault();
                this.PrevStmtLossMitAmtDueValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrinPaidFromOpen", Order=358, Form=XmlSchemaForm.Unqualified)]
        public bool PrinPaidFromOpenValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrinPaidFromOpen property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrinPaidFromOpenValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrinPaidFromOpen
        {
            get
            {
                if (this.PrinPaidFromOpenValueSpecified)
                {
                    return this.PrinPaidFromOpenValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrinPaidFromOpenValue = value.GetValueOrDefault();
                this.PrinPaidFromOpenValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrincipalLastYear", Order=359, Form=XmlSchemaForm.Unqualified)]
        public bool PrincipalLastYearValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrincipalLastYear property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrincipalLastYearValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrincipalLastYear
        {
            get
            {
                if (this.PrincipalLastYearValueSpecified)
                {
                    return this.PrincipalLastYearValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrincipalLastYearValue = value.GetValueOrDefault();
                this.PrincipalLastYearValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrincipalYtd", Order=360, Form=XmlSchemaForm.Unqualified)]
        public bool PrincipalYtdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrincipalYtd property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrincipalYtdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrincipalYtd
        {
            get
            {
                if (this.PrincipalYtdValueSpecified)
                {
                    return this.PrincipalYtdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrincipalYtdValue = value.GetValueOrDefault();
                this.PrincipalYtdValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _promoAdvanceCutoff;
        
        [XmlElementAttribute("PromoAdvanceCutoff", Order=361, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> PromoAdvanceCutoff
        {
            get
            {
                return _promoAdvanceCutoff;
            }
            set
            {
                _promoAdvanceCutoff = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PromoAdvanceCutoff collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool PromoAdvanceCutoffSpecified
        {
            get
            {
                return ((this.PromoAdvanceCutoff != null) 
                            && (this.PromoAdvanceCutoff.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _promoBalance;
        
        [XmlElementAttribute("PromoBalance", Order=362, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> PromoBalance
        {
            get
            {
                return _promoBalance;
            }
            set
            {
                _promoBalance = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PromoBalance collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool PromoBalanceSpecified
        {
            get
            {
                return ((this.PromoBalance != null) 
                            && (this.PromoBalance.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _promoEffectDate;
        
        [XmlElementAttribute("PromoEffectDate", Order=363, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> PromoEffectDate
        {
            get
            {
                return _promoEffectDate;
            }
            set
            {
                _promoEffectDate = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PromoEffectDate collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool PromoEffectDateSpecified
        {
            get
            {
                return ((this.PromoEffectDate != null) 
                            && (this.PromoEffectDate.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _promoExpireDate;
        
        [XmlElementAttribute("PromoExpireDate", Order=364, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> PromoExpireDate
        {
            get
            {
                return _promoExpireDate;
            }
            set
            {
                _promoExpireDate = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PromoExpireDate collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool PromoExpireDateSpecified
        {
            get
            {
                return ((this.PromoExpireDate != null) 
                            && (this.PromoExpireDate.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _promoRate;
        
        [XmlElementAttribute("PromoRate", Order=365, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> PromoRate
        {
            get
            {
                return _promoRate;
            }
            set
            {
                _promoRate = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PromoRate collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool PromoRateSpecified
        {
            get
            {
                return ((this.PromoRate != null) 
                            && (this.PromoRate.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _promoRateMax;
        
        [XmlElementAttribute("PromoRateMax", Order=366, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> PromoRateMax
        {
            get
            {
                return _promoRateMax;
            }
            set
            {
                _promoRateMax = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PromoRateMax collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool PromoRateMaxSpecified
        {
            get
            {
                return ((this.PromoRateMax != null) 
                            && (this.PromoRateMax.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _promoRateMin;
        
        [XmlElementAttribute("PromoRateMin", Order=367, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> PromoRateMin
        {
            get
            {
                return _promoRateMin;
            }
            set
            {
                _promoRateMin = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PromoRateMin collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool PromoRateMinSpecified
        {
            get
            {
                return ((this.PromoRateMin != null) 
                            && (this.PromoRateMin.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _promoRateOffset;
        
        [XmlElementAttribute("PromoRateOffset", Order=368, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> PromoRateOffset
        {
            get
            {
                return _promoRateOffset;
            }
            set
            {
                _promoRateOffset = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PromoRateOffset collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool PromoRateOffsetSpecified
        {
            get
            {
                return ((this.PromoRateOffset != null) 
                            && (this.PromoRateOffset.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _promoRateType;
        
        [XmlElementAttribute("PromoRateType", Order=369, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> PromoRateType
        {
            get
            {
                return _promoRateType;
            }
            set
            {
                _promoRateType = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PromoRateType collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool PromoRateTypeSpecified
        {
            get
            {
                return ((this.PromoRateType != null) 
                            && (this.PromoRateType.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _promoTotalAdvances;
        
        [XmlElementAttribute("PromoTotalAdvances", Order=370, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> PromoTotalAdvances
        {
            get
            {
                return _promoTotalAdvances;
            }
            set
            {
                _promoTotalAdvances = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PromoTotalAdvances collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool PromoTotalAdvancesSpecified
        {
            get
            {
                return ((this.PromoTotalAdvances != null) 
                            && (this.PromoTotalAdvances.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _promoType;
        
        [XmlElementAttribute("PromoType", Order=371, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> PromoType
        {
            get
            {
                return _promoType;
            }
            set
            {
                _promoType = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PromoType collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool PromoTypeSpecified
        {
            get
            {
                return ((this.PromoType != null) 
                            && (this.PromoType.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PropertyAddressType", Order=372, Form=XmlSchemaForm.Unqualified)]
        public bool PropertyAddressTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PropertyAddressType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PropertyAddressTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PropertyAddressType
        {
            get
            {
                if (this.PropertyAddressTypeValueSpecified)
                {
                    return this.PropertyAddressTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PropertyAddressTypeValue = value.GetValueOrDefault();
                this.PropertyAddressTypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PropertyJurisdiction", Order=373, Form=XmlSchemaForm.Unqualified)]
        public bool PropertyJurisdictionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PropertyJurisdiction property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PropertyJurisdictionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PropertyJurisdiction
        {
            get
            {
                if (this.PropertyJurisdictionValueSpecified)
                {
                    return this.PropertyJurisdictionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PropertyJurisdictionValue = value.GetValueOrDefault();
                this.PropertyJurisdictionValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _puAddOnSinceLastStmt;
        
        [XmlElementAttribute("PuAddOnSinceLastStmt", Order=374, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> PuAddOnSinceLastStmt
        {
            get
            {
                return _puAddOnSinceLastStmt;
            }
            set
            {
                _puAddOnSinceLastStmt = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PuAddOnSinceLastStmt collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool PuAddOnSinceLastStmtSpecified
        {
            get
            {
                return ((this.PuAddOnSinceLastStmt != null) 
                            && (this.PuAddOnSinceLastStmt.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PuIntCharge", Order=375, Form=XmlSchemaForm.Unqualified)]
        public bool PuIntChargeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PuIntCharge property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PuIntChargeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PuIntCharge
        {
            get
            {
                if (this.PuIntChargeValueSpecified)
                {
                    return this.PuIntChargeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PuIntChargeValue = value.GetValueOrDefault();
                this.PuIntChargeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PuNewIntUnpaid", Order=376, Form=XmlSchemaForm.Unqualified)]
        public bool PuNewIntUnpaidValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PuNewIntUnpaid property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PuNewIntUnpaidValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PuNewIntUnpaid
        {
            get
            {
                if (this.PuNewIntUnpaidValueSpecified)
                {
                    return this.PuNewIntUnpaidValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PuNewIntUnpaidValue = value.GetValueOrDefault();
                this.PuNewIntUnpaidValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PuOldIntUnpaid", Order=377, Form=XmlSchemaForm.Unqualified)]
        public bool PuOldIntUnpaidValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PuOldIntUnpaid property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PuOldIntUnpaidValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PuOldIntUnpaid
        {
            get
            {
                if (this.PuOldIntUnpaidValueSpecified)
                {
                    return this.PuOldIntUnpaidValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PuOldIntUnpaidValue = value.GetValueOrDefault();
                this.PuOldIntUnpaidValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _puPmtSinceLastStmt;
        
        [XmlElementAttribute("PuPmtSinceLastStmt", Order=378, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> PuPmtSinceLastStmt
        {
            get
            {
                return _puPmtSinceLastStmt;
            }
            set
            {
                _puPmtSinceLastStmt = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PuPmtSinceLastStmt collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool PuPmtSinceLastStmtSpecified
        {
            get
            {
                return ((this.PuPmtSinceLastStmt != null) 
                            && (this.PuPmtSinceLastStmt.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _purchAvgBalance;
        
        [XmlElementAttribute("PurchAvgBalance", Order=379, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> PurchAvgBalance
        {
            get
            {
                return _purchAvgBalance;
            }
            set
            {
                _purchAvgBalance = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PurchAvgBalance collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool PurchAvgBalanceSpecified
        {
            get
            {
                return ((this.PurchAvgBalance != null) 
                            && (this.PurchAvgBalance.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _purchNewBalance;
        
        [XmlElementAttribute("PurchNewBalance", Order=380, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> PurchNewBalance
        {
            get
            {
                return _purchNewBalance;
            }
            set
            {
                _purchNewBalance = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PurchNewBalance collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool PurchNewBalanceSpecified
        {
            get
            {
                return ((this.PurchNewBalance != null) 
                            && (this.PurchNewBalance.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _purchOldBalance;
        
        [XmlElementAttribute("PurchOldBalance", Order=381, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> PurchOldBalance
        {
            get
            {
                return _purchOldBalance;
            }
            set
            {
                _purchOldBalance = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PurchOldBalance collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool PurchOldBalanceSpecified
        {
            get
            {
                return ((this.PurchOldBalance != null) 
                            && (this.PurchOldBalance.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PurposeCode", Order=382, Form=XmlSchemaForm.Unqualified)]
        public bool PurposeCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PurposeCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PurposeCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PurposeCode
        {
            get
            {
                if (this.PurposeCodeValueSpecified)
                {
                    return this.PurposeCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PurposeCodeValue = value.GetValueOrDefault();
                this.PurposeCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PutItemSchd", Order=383, Form=XmlSchemaForm.Unqualified)]
        public bool PutItemSchdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PutItemSchd property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PutItemSchdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PutItemSchd
        {
            get
            {
                if (this.PutItemSchdValueSpecified)
                {
                    return this.PutItemSchdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PutItemSchdValue = value.GetValueOrDefault();
                this.PutItemSchdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PutItemSchdType", Order=384, Form=XmlSchemaForm.Unqualified)]
        public bool PutItemSchdTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PutItemSchdType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PutItemSchdTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PutItemSchdType
        {
            get
            {
                if (this.PutItemSchdTypeValueSpecified)
                {
                    return this.PutItemSchdTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PutItemSchdTypeValue = value.GetValueOrDefault();
                this.PutItemSchdTypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("RateChangeCycleMonths", Order=385, Form=XmlSchemaForm.Unqualified)]
        public bool RateChangeCycleMonthsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RateChangeCycleMonths property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool RateChangeCycleMonthsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> RateChangeCycleMonths
        {
            get
            {
                if (this.RateChangeCycleMonthsValueSpecified)
                {
                    return this.RateChangeCycleMonthsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RateChangeCycleMonthsValue = value.GetValueOrDefault();
                this.RateChangeCycleMonthsValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("RateRoundingMethod", Order=386, Form=XmlSchemaForm.Unqualified)]
        public bool RateRoundingMethodValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RateRoundingMethod property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool RateRoundingMethodValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> RateRoundingMethod
        {
            get
            {
                if (this.RateRoundingMethodValueSpecified)
                {
                    return this.RateRoundingMethodValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RateRoundingMethodValue = value.GetValueOrDefault();
                this.RateRoundingMethodValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("RecordChangeDate", Order=387, Form=XmlSchemaForm.Unqualified)]
        public bool RecordChangeDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RecordChangeDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool RecordChangeDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> RecordChangeDate
        {
            get
            {
                if (this.RecordChangeDateValueSpecified)
                {
                    return this.RecordChangeDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RecordChangeDateValue = value.GetValueOrDefault();
                this.RecordChangeDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Reference", Order=388, Form=XmlSchemaForm.Unqualified)]
        public bool ReferenceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Reference property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ReferenceValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Reference
        {
            get
            {
                if (this.ReferenceValueSpecified)
                {
                    return this.ReferenceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ReferenceValue = value.GetValueOrDefault();
                this.ReferenceValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("RefinanceBalance", Order=389, Form=XmlSchemaForm.Unqualified)]
        public bool RefinanceBalanceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RefinanceBalance property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool RefinanceBalanceValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> RefinanceBalance
        {
            get
            {
                if (this.RefinanceBalanceValueSpecified)
                {
                    return this.RefinanceBalanceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RefinanceBalanceValue = value.GetValueOrDefault();
                this.RefinanceBalanceValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("RefinanceCounter", Order=390, Form=XmlSchemaForm.Unqualified)]
        public bool RefinanceCounterValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RefinanceCounter property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool RefinanceCounterValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> RefinanceCounter
        {
            get
            {
                if (this.RefinanceCounterValueSpecified)
                {
                    return this.RefinanceCounterValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RefinanceCounterValue = value.GetValueOrDefault();
                this.RefinanceCounterValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("RefinanceDate", Order=391, Form=XmlSchemaForm.Unqualified)]
        public bool RefinanceDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RefinanceDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool RefinanceDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> RefinanceDate
        {
            get
            {
                if (this.RefinanceDateValueSpecified)
                {
                    return this.RefinanceDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RefinanceDateValue = value.GetValueOrDefault();
                this.RefinanceDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("RefundLastYear", Order=392, Form=XmlSchemaForm.Unqualified)]
        public bool RefundLastYearValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RefundLastYear property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool RefundLastYearValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> RefundLastYear
        {
            get
            {
                if (this.RefundLastYearValueSpecified)
                {
                    return this.RefundLastYearValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RefundLastYearValue = value.GetValueOrDefault();
                this.RefundLastYearValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("RefundPostCode", Order=393, Form=XmlSchemaForm.Unqualified)]
        public bool RefundPostCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RefundPostCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool RefundPostCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> RefundPostCode
        {
            get
            {
                if (this.RefundPostCodeValueSpecified)
                {
                    return this.RefundPostCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RefundPostCodeValue = value.GetValueOrDefault();
                this.RefundPostCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("RefundYtd", Order=394, Form=XmlSchemaForm.Unqualified)]
        public bool RefundYtdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RefundYtd property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool RefundYtdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> RefundYtd
        {
            get
            {
                if (this.RefundYtdValueSpecified)
                {
                    return this.RefundYtdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RefundYtdValue = value.GetValueOrDefault();
                this.RefundYtdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("RegECount", Order=395, Form=XmlSchemaForm.Unqualified)]
        public bool RegECountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RegECount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool RegECountValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> RegECount
        {
            get
            {
                if (this.RegECountValueSpecified)
                {
                    return this.RegECountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RegECountValue = value.GetValueOrDefault();
                this.RegECountValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("RegPaymentsTmtMsgCode", Order=396, Form=XmlSchemaForm.Unqualified)]
        public bool RegPaymentsTmtMsgCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RegPaymentsTmtMsgCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool RegPaymentsTmtMsgCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> RegPaymentsTmtMsgCode
        {
            get
            {
                if (this.RegPaymentsTmtMsgCodeValueSpecified)
                {
                    return this.RegPaymentsTmtMsgCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RegPaymentsTmtMsgCodeValue = value.GetValueOrDefault();
                this.RegPaymentsTmtMsgCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ReinstatementAmt", Order=397, Form=XmlSchemaForm.Unqualified)]
        public bool ReinstatementAmtValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ReinstatementAmt property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ReinstatementAmtValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ReinstatementAmt
        {
            get
            {
                if (this.ReinstatementAmtValueSpecified)
                {
                    return this.ReinstatementAmtValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ReinstatementAmtValue = value.GetValueOrDefault();
                this.ReinstatementAmtValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ReinstatementGoodThruDate", Order=398, Form=XmlSchemaForm.Unqualified)]
        public bool ReinstatementGoodThruDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ReinstatementGoodThruDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ReinstatementGoodThruDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ReinstatementGoodThruDate
        {
            get
            {
                if (this.ReinstatementGoodThruDateValueSpecified)
                {
                    return this.ReinstatementGoodThruDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ReinstatementGoodThruDateValue = value.GetValueOrDefault();
                this.ReinstatementGoodThruDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ReinstatementStmtMsgCode", Order=399, Form=XmlSchemaForm.Unqualified)]
        public bool ReinstatementStmtMsgCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ReinstatementStmtMsgCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ReinstatementStmtMsgCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ReinstatementStmtMsgCode
        {
            get
            {
                if (this.ReinstatementStmtMsgCodeValueSpecified)
                {
                    return this.ReinstatementStmtMsgCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ReinstatementStmtMsgCodeValue = value.GetValueOrDefault();
                this.ReinstatementStmtMsgCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("RiskRate", Order=400, Form=XmlSchemaForm.Unqualified)]
        public bool RiskRateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RiskRate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool RiskRateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> RiskRate
        {
            get
            {
                if (this.RiskRateValueSpecified)
                {
                    return this.RiskRateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RiskRateValue = value.GetValueOrDefault();
                this.RiskRateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("RoundRateTo", Order=401, Form=XmlSchemaForm.Unqualified)]
        public bool RoundRateToValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RoundRateTo property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool RoundRateToValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> RoundRateTo
        {
            get
            {
                if (this.RoundRateToValueSpecified)
                {
                    return this.RoundRateToValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RoundRateToValue = value.GetValueOrDefault();
                this.RoundRateToValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SalesTaxCityIndicator", Order=402, Form=XmlSchemaForm.Unqualified)]
        public bool SalesTaxCityIndicatorValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SalesTaxCityIndicator property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SalesTaxCityIndicatorValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SalesTaxCityIndicator
        {
            get
            {
                if (this.SalesTaxCityIndicatorValueSpecified)
                {
                    return this.SalesTaxCityIndicatorValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SalesTaxCityIndicatorValue = value.GetValueOrDefault();
                this.SalesTaxCityIndicatorValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SalesTaxCountyIndicator", Order=403, Form=XmlSchemaForm.Unqualified)]
        public bool SalesTaxCountyIndicatorValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SalesTaxCountyIndicator property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SalesTaxCountyIndicatorValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SalesTaxCountyIndicator
        {
            get
            {
                if (this.SalesTaxCountyIndicatorValueSpecified)
                {
                    return this.SalesTaxCountyIndicatorValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SalesTaxCountyIndicatorValue = value.GetValueOrDefault();
                this.SalesTaxCountyIndicatorValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SalesTaxDue", Order=404, Form=XmlSchemaForm.Unqualified)]
        public bool SalesTaxDueValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SalesTaxDue property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SalesTaxDueValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SalesTaxDue
        {
            get
            {
                if (this.SalesTaxDueValueSpecified)
                {
                    return this.SalesTaxDueValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SalesTaxDueValue = value.GetValueOrDefault();
                this.SalesTaxDueValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SalesTaxPayoff", Order=405, Form=XmlSchemaForm.Unqualified)]
        public bool SalesTaxPayoffValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SalesTaxPayoff property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SalesTaxPayoffValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SalesTaxPayoff
        {
            get
            {
                if (this.SalesTaxPayoffValueSpecified)
                {
                    return this.SalesTaxPayoffValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SalesTaxPayoffValue = value.GetValueOrDefault();
                this.SalesTaxPayoffValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SalesTaxRate", Order=406, Form=XmlSchemaForm.Unqualified)]
        public bool SalesTaxRateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SalesTaxRate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SalesTaxRateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SalesTaxRate
        {
            get
            {
                if (this.SalesTaxRateValueSpecified)
                {
                    return this.SalesTaxRateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SalesTaxRateValue = value.GetValueOrDefault();
                this.SalesTaxRateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SalesTaxStateIndicator", Order=407, Form=XmlSchemaForm.Unqualified)]
        public bool SalesTaxStateIndicatorValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SalesTaxStateIndicator property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SalesTaxStateIndicatorValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SalesTaxStateIndicator
        {
            get
            {
                if (this.SalesTaxStateIndicatorValueSpecified)
                {
                    return this.SalesTaxStateIndicatorValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SalesTaxStateIndicatorValue = value.GetValueOrDefault();
                this.SalesTaxStateIndicatorValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SbaGpNumber", Order=408, Form=XmlSchemaForm.Unqualified)]
        public bool SbaGpNumberValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SbaGpNumber property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SbaGpNumberValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SbaGpNumber
        {
            get
            {
                if (this.SbaGpNumberValueSpecified)
                {
                    return this.SbaGpNumberValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SbaGpNumberValue = value.GetValueOrDefault();
                this.SbaGpNumberValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SchdPeriodStartDate", Order=409, Form=XmlSchemaForm.Unqualified)]
        public bool SchdPeriodStartDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SchdPeriodStartDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SchdPeriodStartDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SchdPeriodStartDate
        {
            get
            {
                if (this.SchdPeriodStartDateValueSpecified)
                {
                    return this.SchdPeriodStartDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SchdPeriodStartDateValue = value.GetValueOrDefault();
                this.SchdPeriodStartDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SchdPeriodStartRate", Order=410, Form=XmlSchemaForm.Unqualified)]
        public bool SchdPeriodStartRateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SchdPeriodStartRate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SchdPeriodStartRateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SchdPeriodStartRate
        {
            get
            {
                if (this.SchdPeriodStartRateValueSpecified)
                {
                    return this.SchdPeriodStartRateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SchdPeriodStartRateValue = value.GetValueOrDefault();
                this.SchdPeriodStartRateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SchdRate", Order=411, Form=XmlSchemaForm.Unqualified)]
        public bool SchdRateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SchdRate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SchdRateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SchdRate
        {
            get
            {
                if (this.SchdRateValueSpecified)
                {
                    return this.SchdRateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SchdRateValue = value.GetValueOrDefault();
                this.SchdRateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SchdRateChangeDate", Order=412, Form=XmlSchemaForm.Unqualified)]
        public bool SchdRateChangeDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SchdRateChangeDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SchdRateChangeDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SchdRateChangeDate
        {
            get
            {
                if (this.SchdRateChangeDateValueSpecified)
                {
                    return this.SchdRateChangeDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SchdRateChangeDateValue = value.GetValueOrDefault();
                this.SchdRateChangeDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SchdSplitBalance", Order=413, Form=XmlSchemaForm.Unqualified)]
        public bool SchdSplitBalanceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SchdSplitBalance property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SchdSplitBalanceValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SchdSplitBalance
        {
            get
            {
                if (this.SchdSplitBalanceValueSpecified)
                {
                    return this.SchdSplitBalanceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SchdSplitBalanceValue = value.GetValueOrDefault();
                this.SchdSplitBalanceValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SchdSplitRate", Order=414, Form=XmlSchemaForm.Unqualified)]
        public bool SchdSplitRateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SchdSplitRate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SchdSplitRateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SchdSplitRate
        {
            get
            {
                if (this.SchdSplitRateValueSpecified)
                {
                    return this.SchdSplitRateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SchdSplitRateValue = value.GetValueOrDefault();
                this.SchdSplitRateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SecondInsBirthDate", Order=415, Form=XmlSchemaForm.Unqualified)]
        public bool SecondInsBirthDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SecondInsBirthDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SecondInsBirthDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SecondInsBirthDate
        {
            get
            {
                if (this.SecondInsBirthDateValueSpecified)
                {
                    return this.SecondInsBirthDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SecondInsBirthDateValue = value.GetValueOrDefault();
                this.SecondInsBirthDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SecuredAmount", Order=416, Form=XmlSchemaForm.Unqualified)]
        public bool SecuredAmountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SecuredAmount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SecuredAmountValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SecuredAmount
        {
            get
            {
                if (this.SecuredAmountValueSpecified)
                {
                    return this.SecuredAmountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SecuredAmountValue = value.GetValueOrDefault();
                this.SecuredAmountValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SecuredCode", Order=417, Form=XmlSchemaForm.Unqualified)]
        public bool SecuredCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SecuredCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SecuredCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SecuredCode
        {
            get
            {
                if (this.SecuredCodeValueSpecified)
                {
                    return this.SecuredCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SecuredCodeValue = value.GetValueOrDefault();
                this.SecuredCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Seg0Balance", Order=418, Form=XmlSchemaForm.Unqualified)]
        public bool Seg0BalanceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Seg0Balance property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool Seg0BalanceValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Seg0Balance
        {
            get
            {
                if (this.Seg0BalanceValueSpecified)
                {
                    return this.Seg0BalanceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.Seg0BalanceValue = value.GetValueOrDefault();
                this.Seg0BalanceValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Seg0BeginningCycleDate", Order=419, Form=XmlSchemaForm.Unqualified)]
        public bool Seg0BeginningCycleDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Seg0BeginningCycleDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool Seg0BeginningCycleDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Seg0BeginningCycleDate
        {
            get
            {
                if (this.Seg0BeginningCycleDateValueSpecified)
                {
                    return this.Seg0BeginningCycleDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.Seg0BeginningCycleDateValue = value.GetValueOrDefault();
                this.Seg0BeginningCycleDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Seg0CurrStmtIntAccrd", Order=420, Form=XmlSchemaForm.Unqualified)]
        public bool Seg0CurrStmtIntAccrdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Seg0CurrStmtIntAccrd property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool Seg0CurrStmtIntAccrdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Seg0CurrStmtIntAccrd
        {
            get
            {
                if (this.Seg0CurrStmtIntAccrdValueSpecified)
                {
                    return this.Seg0CurrStmtIntAccrdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.Seg0CurrStmtIntAccrdValue = value.GetValueOrDefault();
                this.Seg0CurrStmtIntAccrdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Seg0Description", Order=421, Form=XmlSchemaForm.Unqualified)]
        public bool Seg0DescriptionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Seg0Description property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool Seg0DescriptionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Seg0Description
        {
            get
            {
                if (this.Seg0DescriptionValueSpecified)
                {
                    return this.Seg0DescriptionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.Seg0DescriptionValue = value.GetValueOrDefault();
                this.Seg0DescriptionValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Seg0IntUnpaid", Order=422, Form=XmlSchemaForm.Unqualified)]
        public bool Seg0IntUnpaidValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Seg0IntUnpaid property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool Seg0IntUnpaidValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Seg0IntUnpaid
        {
            get
            {
                if (this.Seg0IntUnpaidValueSpecified)
                {
                    return this.Seg0IntUnpaidValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.Seg0IntUnpaidValue = value.GetValueOrDefault();
                this.Seg0IntUnpaidValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Seg0IntUnpaidBilled", Order=423, Form=XmlSchemaForm.Unqualified)]
        public bool Seg0IntUnpaidBilledValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Seg0IntUnpaidBilled property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool Seg0IntUnpaidBilledValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Seg0IntUnpaidBilled
        {
            get
            {
                if (this.Seg0IntUnpaidBilledValueSpecified)
                {
                    return this.Seg0IntUnpaidBilledValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.Seg0IntUnpaidBilledValue = value.GetValueOrDefault();
                this.Seg0IntUnpaidBilledValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Seg0InterestLastYear", Order=424, Form=XmlSchemaForm.Unqualified)]
        public bool Seg0InterestLastYearValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Seg0InterestLastYear property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool Seg0InterestLastYearValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Seg0InterestLastYear
        {
            get
            {
                if (this.Seg0InterestLastYearValueSpecified)
                {
                    return this.Seg0InterestLastYearValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.Seg0InterestLastYearValue = value.GetValueOrDefault();
                this.Seg0InterestLastYearValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Seg0InterestYtd", Order=425, Form=XmlSchemaForm.Unqualified)]
        public bool Seg0InterestYtdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Seg0InterestYtd property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool Seg0InterestYtdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Seg0InterestYtd
        {
            get
            {
                if (this.Seg0InterestYtdValueSpecified)
                {
                    return this.Seg0InterestYtdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.Seg0InterestYtdValue = value.GetValueOrDefault();
                this.Seg0InterestYtdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Seg0LevelPrinPmt", Order=426, Form=XmlSchemaForm.Unqualified)]
        public bool Seg0LevelPrinPmtValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Seg0LevelPrinPmt property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool Seg0LevelPrinPmtValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Seg0LevelPrinPmt
        {
            get
            {
                if (this.Seg0LevelPrinPmtValueSpecified)
                {
                    return this.Seg0LevelPrinPmtValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.Seg0LevelPrinPmtValue = value.GetValueOrDefault();
                this.Seg0LevelPrinPmtValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Seg0PartialPmt", Order=427, Form=XmlSchemaForm.Unqualified)]
        public bool Seg0PartialPmtValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Seg0PartialPmt property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool Seg0PartialPmtValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Seg0PartialPmt
        {
            get
            {
                if (this.Seg0PartialPmtValueSpecified)
                {
                    return this.Seg0PartialPmtValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.Seg0PartialPmtValue = value.GetValueOrDefault();
                this.Seg0PartialPmtValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Seg0Payment", Order=428, Form=XmlSchemaForm.Unqualified)]
        public bool Seg0PaymentValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Seg0Payment property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool Seg0PaymentValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Seg0Payment
        {
            get
            {
                if (this.Seg0PaymentValueSpecified)
                {
                    return this.Seg0PaymentValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.Seg0PaymentValue = value.GetValueOrDefault();
                this.Seg0PaymentValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Seg0PaymentDue", Order=429, Form=XmlSchemaForm.Unqualified)]
        public bool Seg0PaymentDueValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Seg0PaymentDue property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool Seg0PaymentDueValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Seg0PaymentDue
        {
            get
            {
                if (this.Seg0PaymentDueValueSpecified)
                {
                    return this.Seg0PaymentDueValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.Seg0PaymentDueValue = value.GetValueOrDefault();
                this.Seg0PaymentDueValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Seg0PaymentOrder", Order=430, Form=XmlSchemaForm.Unqualified)]
        public bool Seg0PaymentOrderValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Seg0PaymentOrder property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool Seg0PaymentOrderValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Seg0PaymentOrder
        {
            get
            {
                if (this.Seg0PaymentOrderValueSpecified)
                {
                    return this.Seg0PaymentOrderValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.Seg0PaymentOrderValue = value.GetValueOrDefault();
                this.Seg0PaymentOrderValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Seg0PayoffAmt", Order=431, Form=XmlSchemaForm.Unqualified)]
        public bool Seg0PayoffAmtValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Seg0PayoffAmt property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool Seg0PayoffAmtValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Seg0PayoffAmt
        {
            get
            {
                if (this.Seg0PayoffAmtValueSpecified)
                {
                    return this.Seg0PayoffAmtValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.Seg0PayoffAmtValue = value.GetValueOrDefault();
                this.Seg0PayoffAmtValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _seg0PmtBucketAmt;
        
        [XmlElementAttribute("Seg0PmtBucketAmt", Order=432, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> Seg0PmtBucketAmt
        {
            get
            {
                return _seg0PmtBucketAmt;
            }
            set
            {
                _seg0PmtBucketAmt = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Seg0PmtBucketAmt collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool Seg0PmtBucketAmtSpecified
        {
            get
            {
                return ((this.Seg0PmtBucketAmt != null) 
                            && (this.Seg0PmtBucketAmt.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Seg0PrevStmtIntAccrd", Order=433, Form=XmlSchemaForm.Unqualified)]
        public bool Seg0PrevStmtIntAccrdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Seg0PrevStmtIntAccrd property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool Seg0PrevStmtIntAccrdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Seg0PrevStmtIntAccrd
        {
            get
            {
                if (this.Seg0PrevStmtIntAccrdValueSpecified)
                {
                    return this.Seg0PrevStmtIntAccrdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.Seg0PrevStmtIntAccrdValue = value.GetValueOrDefault();
                this.Seg0PrevStmtIntAccrdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SendFinalChgOffStmt", Order=434, Form=XmlSchemaForm.Unqualified)]
        public bool SendFinalChgOffStmtValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SendFinalChgOffStmt property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SendFinalChgOffStmtValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SendFinalChgOffStmt
        {
            get
            {
                if (this.SendFinalChgOffStmtValueSpecified)
                {
                    return this.SendFinalChgOffStmtValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SendFinalChgOffStmtValue = value.GetValueOrDefault();
                this.SendFinalChgOffStmtValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _service;
        
        [XmlElementAttribute("Service", Order=435, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> Service
        {
            get
            {
                return _service;
            }
            set
            {
                _service = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Service collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool ServiceSpecified
        {
            get
            {
                return ((this.Service != null) 
                            && (this.Service.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SinglePremiumDisability", Order=436, Form=XmlSchemaForm.Unqualified)]
        public bool SinglePremiumDisabilityValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SinglePremiumDisability property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SinglePremiumDisabilityValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SinglePremiumDisability
        {
            get
            {
                if (this.SinglePremiumDisabilityValueSpecified)
                {
                    return this.SinglePremiumDisabilityValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SinglePremiumDisabilityValue = value.GetValueOrDefault();
                this.SinglePremiumDisabilityValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SinglePremiumLife", Order=437, Form=XmlSchemaForm.Unqualified)]
        public bool SinglePremiumLifeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SinglePremiumLife property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SinglePremiumLifeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SinglePremiumLife
        {
            get
            {
                if (this.SinglePremiumLifeValueSpecified)
                {
                    return this.SinglePremiumLifeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SinglePremiumLifeValue = value.GetValueOrDefault();
                this.SinglePremiumLifeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SplitRate", Order=438, Form=XmlSchemaForm.Unqualified)]
        public bool SplitRateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SplitRate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SplitRateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SplitRate
        {
            get
            {
                if (this.SplitRateValueSpecified)
                {
                    return this.SplitRateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SplitRateValue = value.GetValueOrDefault();
                this.SplitRateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SplitRateBalance", Order=439, Form=XmlSchemaForm.Unqualified)]
        public bool SplitRateBalanceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SplitRateBalance property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SplitRateBalanceValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SplitRateBalance
        {
            get
            {
                if (this.SplitRateBalanceValueSpecified)
                {
                    return this.SplitRateBalanceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SplitRateBalanceValue = value.GetValueOrDefault();
                this.SplitRateBalanceValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("StateSalesTaxRate", Order=440, Form=XmlSchemaForm.Unqualified)]
        public bool StateSalesTaxRateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StateSalesTaxRate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool StateSalesTaxRateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> StateSalesTaxRate
        {
            get
            {
                if (this.StateSalesTaxRateValueSpecified)
                {
                    return this.StateSalesTaxRateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.StateSalesTaxRateValue = value.GetValueOrDefault();
                this.StateSalesTaxRateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("StatementDate", Order=441, Form=XmlSchemaForm.Unqualified)]
        public bool StatementDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StatementDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool StatementDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> StatementDate
        {
            get
            {
                if (this.StatementDateValueSpecified)
                {
                    return this.StatementDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.StatementDateValue = value.GetValueOrDefault();
                this.StatementDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("StatementGroup", Order=442, Form=XmlSchemaForm.Unqualified)]
        public bool StatementGroupValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StatementGroup property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool StatementGroupValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> StatementGroup
        {
            get
            {
                if (this.StatementGroupValueSpecified)
                {
                    return this.StatementGroupValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.StatementGroupValue = value.GetValueOrDefault();
                this.StatementGroupValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("StatementMailCode", Order=443, Form=XmlSchemaForm.Unqualified)]
        public bool StatementMailCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StatementMailCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool StatementMailCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> StatementMailCode
        {
            get
            {
                if (this.StatementMailCodeValueSpecified)
                {
                    return this.StatementMailCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.StatementMailCodeValue = value.GetValueOrDefault();
                this.StatementMailCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("StatementNewBalance", Order=444, Form=XmlSchemaForm.Unqualified)]
        public bool StatementNewBalanceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StatementNewBalance property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool StatementNewBalanceValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> StatementNewBalance
        {
            get
            {
                if (this.StatementNewBalanceValueSpecified)
                {
                    return this.StatementNewBalanceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.StatementNewBalanceValue = value.GetValueOrDefault();
                this.StatementNewBalanceValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("StatementOldBalance", Order=445, Form=XmlSchemaForm.Unqualified)]
        public bool StatementOldBalanceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StatementOldBalance property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool StatementOldBalanceValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> StatementOldBalance
        {
            get
            {
                if (this.StatementOldBalanceValueSpecified)
                {
                    return this.StatementOldBalanceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.StatementOldBalanceValue = value.GetValueOrDefault();
                this.StatementOldBalanceValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("StatementPrevDate", Order=446, Form=XmlSchemaForm.Unqualified)]
        public bool StatementPrevDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StatementPrevDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool StatementPrevDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> StatementPrevDate
        {
            get
            {
                if (this.StatementPrevDateValueSpecified)
                {
                    return this.StatementPrevDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.StatementPrevDateValue = value.GetValueOrDefault();
                this.StatementPrevDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("StmtCcIntBilledYtd", Order=447, Form=XmlSchemaForm.Unqualified)]
        public bool StmtCcIntBilledYtdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StmtCcIntBilledYtd property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool StmtCcIntBilledYtdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> StmtCcIntBilledYtd
        {
            get
            {
                if (this.StmtCcIntBilledYtdValueSpecified)
                {
                    return this.StmtCcIntBilledYtdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.StmtCcIntBilledYtdValue = value.GetValueOrDefault();
                this.StmtCcIntBilledYtdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("StmtEscrowUnpaid", Order=448, Form=XmlSchemaForm.Unqualified)]
        public bool StmtEscrowUnpaidValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StmtEscrowUnpaid property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool StmtEscrowUnpaidValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> StmtEscrowUnpaid
        {
            get
            {
                if (this.StmtEscrowUnpaidValueSpecified)
                {
                    return this.StmtEscrowUnpaidValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.StmtEscrowUnpaidValue = value.GetValueOrDefault();
                this.StmtEscrowUnpaidValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("StmtFeesLastYear", Order=449, Form=XmlSchemaForm.Unqualified)]
        public bool StmtFeesLastYearValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StmtFeesLastYear property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool StmtFeesLastYearValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> StmtFeesLastYear
        {
            get
            {
                if (this.StmtFeesLastYearValueSpecified)
                {
                    return this.StmtFeesLastYearValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.StmtFeesLastYearValue = value.GetValueOrDefault();
                this.StmtFeesLastYearValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("StmtFeesYtd", Order=450, Form=XmlSchemaForm.Unqualified)]
        public bool StmtFeesYtdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StmtFeesYtd property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool StmtFeesYtdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> StmtFeesYtd
        {
            get
            {
                if (this.StmtFeesYtdValueSpecified)
                {
                    return this.StmtFeesYtdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.StmtFeesYtdValue = value.GetValueOrDefault();
                this.StmtFeesYtdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("StmtIntFromOpen", Order=451, Form=XmlSchemaForm.Unqualified)]
        public bool StmtIntFromOpenValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StmtIntFromOpen property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool StmtIntFromOpenValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> StmtIntFromOpen
        {
            get
            {
                if (this.StmtIntFromOpenValueSpecified)
                {
                    return this.StmtIntFromOpenValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.StmtIntFromOpenValue = value.GetValueOrDefault();
                this.StmtIntFromOpenValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("StmtLateChargeLastYear", Order=452, Form=XmlSchemaForm.Unqualified)]
        public bool StmtLateChargeLastYearValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StmtLateChargeLastYear property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool StmtLateChargeLastYearValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> StmtLateChargeLastYear
        {
            get
            {
                if (this.StmtLateChargeLastYearValueSpecified)
                {
                    return this.StmtLateChargeLastYearValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.StmtLateChargeLastYearValue = value.GetValueOrDefault();
                this.StmtLateChargeLastYearValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("StmtLateChargeYtd", Order=453, Form=XmlSchemaForm.Unqualified)]
        public bool StmtLateChargeYtdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StmtLateChargeYtd property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool StmtLateChargeYtdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> StmtLateChargeYtd
        {
            get
            {
                if (this.StmtLateChargeYtdValueSpecified)
                {
                    return this.StmtLateChargeYtdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.StmtLateChargeYtdValue = value.GetValueOrDefault();
                this.StmtLateChargeYtdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("StmtLateChgUnpaid", Order=454, Form=XmlSchemaForm.Unqualified)]
        public bool StmtLateChgUnpaidValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StmtLateChgUnpaid property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool StmtLateChgUnpaidValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> StmtLateChgUnpaid
        {
            get
            {
                if (this.StmtLateChgUnpaidValueSpecified)
                {
                    return this.StmtLateChgUnpaidValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.StmtLateChgUnpaidValue = value.GetValueOrDefault();
                this.StmtLateChgUnpaidValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("StmtLtChgPdFrmOpn", Order=455, Form=XmlSchemaForm.Unqualified)]
        public bool StmtLtChgPdFrmOpnValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StmtLtChgPdFrmOpn property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool StmtLtChgPdFrmOpnValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> StmtLtChgPdFrmOpn
        {
            get
            {
                if (this.StmtLtChgPdFrmOpnValueSpecified)
                {
                    return this.StmtLtChgPdFrmOpnValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.StmtLtChgPdFrmOpnValue = value.GetValueOrDefault();
                this.StmtLtChgPdFrmOpnValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("StmtMaxLateFee", Order=456, Form=XmlSchemaForm.Unqualified)]
        public bool StmtMaxLateFeeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StmtMaxLateFee property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool StmtMaxLateFeeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> StmtMaxLateFee
        {
            get
            {
                if (this.StmtMaxLateFeeValueSpecified)
                {
                    return this.StmtMaxLateFeeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.StmtMaxLateFeeValue = value.GetValueOrDefault();
                this.StmtMaxLateFeeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("StmtMaxPenaltyApr", Order=457, Form=XmlSchemaForm.Unqualified)]
        public bool StmtMaxPenaltyAprValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StmtMaxPenaltyApr property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool StmtMaxPenaltyAprValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> StmtMaxPenaltyApr
        {
            get
            {
                if (this.StmtMaxPenaltyAprValueSpecified)
                {
                    return this.StmtMaxPenaltyAprValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.StmtMaxPenaltyAprValue = value.GetValueOrDefault();
                this.StmtMaxPenaltyAprValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("StmtNoteStartDate", Order=458, Form=XmlSchemaForm.Unqualified)]
        public bool StmtNoteStartDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StmtNoteStartDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool StmtNoteStartDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> StmtNoteStartDate
        {
            get
            {
                if (this.StmtNoteStartDateValueSpecified)
                {
                    return this.StmtNoteStartDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.StmtNoteStartDateValue = value.GetValueOrDefault();
                this.StmtNoteStartDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("StmtPrinPdFromOpen", Order=459, Form=XmlSchemaForm.Unqualified)]
        public bool StmtPrinPdFromOpenValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StmtPrinPdFromOpen property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool StmtPrinPdFromOpenValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> StmtPrinPdFromOpen
        {
            get
            {
                if (this.StmtPrinPdFromOpenValueSpecified)
                {
                    return this.StmtPrinPdFromOpenValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.StmtPrinPdFromOpenValue = value.GetValueOrDefault();
                this.StmtPrinPdFromOpenValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("StmtPrincipalLastYear", Order=460, Form=XmlSchemaForm.Unqualified)]
        public bool StmtPrincipalLastYearValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StmtPrincipalLastYear property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool StmtPrincipalLastYearValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> StmtPrincipalLastYear
        {
            get
            {
                if (this.StmtPrincipalLastYearValueSpecified)
                {
                    return this.StmtPrincipalLastYearValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.StmtPrincipalLastYearValue = value.GetValueOrDefault();
                this.StmtPrincipalLastYearValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("StmtPrincipalYtd", Order=461, Form=XmlSchemaForm.Unqualified)]
        public bool StmtPrincipalYtdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StmtPrincipalYtd property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool StmtPrincipalYtdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> StmtPrincipalYtd
        {
            get
            {
                if (this.StmtPrincipalYtdValueSpecified)
                {
                    return this.StmtPrincipalYtdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.StmtPrincipalYtdValue = value.GetValueOrDefault();
                this.StmtPrincipalYtdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("StmtUnappliedPartialPmt", Order=462, Form=XmlSchemaForm.Unqualified)]
        public bool StmtUnappliedPartialPmtValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StmtUnappliedPartialPmt property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool StmtUnappliedPartialPmtValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> StmtUnappliedPartialPmt
        {
            get
            {
                if (this.StmtUnappliedPartialPmtValueSpecified)
                {
                    return this.StmtUnappliedPartialPmtValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.StmtUnappliedPartialPmtValue = value.GetValueOrDefault();
                this.StmtUnappliedPartialPmtValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("StudentCoveredPeriodEnd", Order=463, Form=XmlSchemaForm.Unqualified)]
        public bool StudentCoveredPeriodEndValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StudentCoveredPeriodEnd property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool StudentCoveredPeriodEndValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> StudentCoveredPeriodEnd
        {
            get
            {
                if (this.StudentCoveredPeriodEndValueSpecified)
                {
                    return this.StudentCoveredPeriodEndValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.StudentCoveredPeriodEndValue = value.GetValueOrDefault();
                this.StudentCoveredPeriodEndValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("StudentLoanCapIntLastYear", Order=464, Form=XmlSchemaForm.Unqualified)]
        public bool StudentLoanCapIntLastYearValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StudentLoanCapIntLastYear property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool StudentLoanCapIntLastYearValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> StudentLoanCapIntLastYear
        {
            get
            {
                if (this.StudentLoanCapIntLastYearValueSpecified)
                {
                    return this.StudentLoanCapIntLastYearValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.StudentLoanCapIntLastYearValue = value.GetValueOrDefault();
                this.StudentLoanCapIntLastYearValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("StudentLoanCapIntYtd", Order=465, Form=XmlSchemaForm.Unqualified)]
        public bool StudentLoanCapIntYtdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StudentLoanCapIntYtd property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool StudentLoanCapIntYtdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> StudentLoanCapIntYtd
        {
            get
            {
                if (this.StudentLoanCapIntYtdValueSpecified)
                {
                    return this.StudentLoanCapIntYtdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.StudentLoanCapIntYtdValue = value.GetValueOrDefault();
                this.StudentLoanCapIntYtdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("StudentLoanCode", Order=466, Form=XmlSchemaForm.Unqualified)]
        public bool StudentLoanCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StudentLoanCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool StudentLoanCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> StudentLoanCode
        {
            get
            {
                if (this.StudentLoanCodeValueSpecified)
                {
                    return this.StudentLoanCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.StudentLoanCodeValue = value.GetValueOrDefault();
                this.StudentLoanCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("StudentLoanOrigFeeLastYear", Order=467, Form=XmlSchemaForm.Unqualified)]
        public bool StudentLoanOrigFeeLastYearValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StudentLoanOrigFeeLastYear property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool StudentLoanOrigFeeLastYearValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> StudentLoanOrigFeeLastYear
        {
            get
            {
                if (this.StudentLoanOrigFeeLastYearValueSpecified)
                {
                    return this.StudentLoanOrigFeeLastYearValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.StudentLoanOrigFeeLastYearValue = value.GetValueOrDefault();
                this.StudentLoanOrigFeeLastYearValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("StudentLoanOrigFeeYtd", Order=468, Form=XmlSchemaForm.Unqualified)]
        public bool StudentLoanOrigFeeYtdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StudentLoanOrigFeeYtd property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool StudentLoanOrigFeeYtdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> StudentLoanOrigFeeYtd
        {
            get
            {
                if (this.StudentLoanOrigFeeYtdValueSpecified)
                {
                    return this.StudentLoanOrigFeeYtdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.StudentLoanOrigFeeYtdValue = value.GetValueOrDefault();
                this.StudentLoanOrigFeeYtdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ThresholdPmt", Order=469, Form=XmlSchemaForm.Unqualified)]
        public bool ThresholdPmtValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ThresholdPmt property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ThresholdPmtValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ThresholdPmt
        {
            get
            {
                if (this.ThresholdPmtValueSpecified)
                {
                    return this.ThresholdPmtValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ThresholdPmtValue = value.GetValueOrDefault();
                this.ThresholdPmtValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TotalAccrualReversal", Order=470, Form=XmlSchemaForm.Unqualified)]
        public bool TotalAccrualReversalValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalAccrualReversal property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TotalAccrualReversalValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TotalAccrualReversal
        {
            get
            {
                if (this.TotalAccrualReversalValueSpecified)
                {
                    return this.TotalAccrualReversalValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TotalAccrualReversalValue = value.GetValueOrDefault();
                this.TotalAccrualReversalValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TotalBtBalanceToDate", Order=471, Form=XmlSchemaForm.Unqualified)]
        public bool TotalBtBalanceToDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalBtBalanceToDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TotalBtBalanceToDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TotalBtBalanceToDate
        {
            get
            {
                if (this.TotalBtBalanceToDateValueSpecified)
                {
                    return this.TotalBtBalanceToDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TotalBtBalanceToDateValue = value.GetValueOrDefault();
                this.TotalBtBalanceToDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TotalCaBalanceToDate", Order=472, Form=XmlSchemaForm.Unqualified)]
        public bool TotalCaBalanceToDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalCaBalanceToDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TotalCaBalanceToDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TotalCaBalanceToDate
        {
            get
            {
                if (this.TotalCaBalanceToDateValueSpecified)
                {
                    return this.TotalCaBalanceToDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TotalCaBalanceToDateValue = value.GetValueOrDefault();
                this.TotalCaBalanceToDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TotalFeeBalanceToDate", Order=473, Form=XmlSchemaForm.Unqualified)]
        public bool TotalFeeBalanceToDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalFeeBalanceToDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TotalFeeBalanceToDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TotalFeeBalanceToDate
        {
            get
            {
                if (this.TotalFeeBalanceToDateValueSpecified)
                {
                    return this.TotalFeeBalanceToDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TotalFeeBalanceToDateValue = value.GetValueOrDefault();
                this.TotalFeeBalanceToDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TotalPuBalanceToDate", Order=474, Form=XmlSchemaForm.Unqualified)]
        public bool TotalPuBalanceToDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalPuBalanceToDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TotalPuBalanceToDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TotalPuBalanceToDate
        {
            get
            {
                if (this.TotalPuBalanceToDateValueSpecified)
                {
                    return this.TotalPuBalanceToDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TotalPuBalanceToDateValue = value.GetValueOrDefault();
                this.TotalPuBalanceToDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Type", Order=475, Form=XmlSchemaForm.Unqualified)]
        public bool TypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Type property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Type
        {
            get
            {
                if (this.TypeValueSpecified)
                {
                    return this.TypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TypeValue = value.GetValueOrDefault();
                this.TypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UnAdjThresholdPmt", Order=476, Form=XmlSchemaForm.Unqualified)]
        public bool UnAdjThresholdPmtValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UnAdjThresholdPmt property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UnAdjThresholdPmtValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UnAdjThresholdPmt
        {
            get
            {
                if (this.UnAdjThresholdPmtValueSpecified)
                {
                    return this.UnAdjThresholdPmtValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UnAdjThresholdPmtValue = value.GetValueOrDefault();
                this.UnAdjThresholdPmtValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UnAdjaPaymentDue", Order=477, Form=XmlSchemaForm.Unqualified)]
        public bool UnAdjaPaymentDueValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UnAdjaPaymentDue property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UnAdjaPaymentDueValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UnAdjaPaymentDue
        {
            get
            {
                if (this.UnAdjaPaymentDueValueSpecified)
                {
                    return this.UnAdjaPaymentDueValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UnAdjaPaymentDueValue = value.GetValueOrDefault();
                this.UnAdjaPaymentDueValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UnamortizedFees", Order=478, Form=XmlSchemaForm.Unqualified)]
        public bool UnamortizedFeesValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UnamortizedFees property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UnamortizedFeesValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UnamortizedFees
        {
            get
            {
                if (this.UnamortizedFeesValueSpecified)
                {
                    return this.UnamortizedFeesValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UnamortizedFeesValue = value.GetValueOrDefault();
                this.UnamortizedFeesValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UnappliedPartialPmt", Order=479, Form=XmlSchemaForm.Unqualified)]
        public bool UnappliedPartialPmtValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UnappliedPartialPmt property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UnappliedPartialPmtValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UnappliedPartialPmt
        {
            get
            {
                if (this.UnappliedPartialPmtValueSpecified)
                {
                    return this.UnappliedPartialPmtValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UnappliedPartialPmtValue = value.GetValueOrDefault();
                this.UnappliedPartialPmtValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UserAmount1", Order=480, Form=XmlSchemaForm.Unqualified)]
        public bool UserAmount1Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UserAmount1 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UserAmount1ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UserAmount1
        {
            get
            {
                if (this.UserAmount1ValueSpecified)
                {
                    return this.UserAmount1Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UserAmount1Value = value.GetValueOrDefault();
                this.UserAmount1ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UserAmount2", Order=481, Form=XmlSchemaForm.Unqualified)]
        public bool UserAmount2Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UserAmount2 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UserAmount2ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UserAmount2
        {
            get
            {
                if (this.UserAmount2ValueSpecified)
                {
                    return this.UserAmount2Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UserAmount2Value = value.GetValueOrDefault();
                this.UserAmount2ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UserChar1", Order=482, Form=XmlSchemaForm.Unqualified)]
        public bool UserChar1Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UserChar1 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UserChar1ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UserChar1
        {
            get
            {
                if (this.UserChar1ValueSpecified)
                {
                    return this.UserChar1Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UserChar1Value = value.GetValueOrDefault();
                this.UserChar1ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UserChar2", Order=483, Form=XmlSchemaForm.Unqualified)]
        public bool UserChar2Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UserChar2 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UserChar2ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UserChar2
        {
            get
            {
                if (this.UserChar2ValueSpecified)
                {
                    return this.UserChar2Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UserChar2Value = value.GetValueOrDefault();
                this.UserChar2ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UserChar3", Order=484, Form=XmlSchemaForm.Unqualified)]
        public bool UserChar3Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UserChar3 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UserChar3ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UserChar3
        {
            get
            {
                if (this.UserChar3ValueSpecified)
                {
                    return this.UserChar3Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UserChar3Value = value.GetValueOrDefault();
                this.UserChar3ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UserChar4", Order=485, Form=XmlSchemaForm.Unqualified)]
        public bool UserChar4Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UserChar4 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UserChar4ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UserChar4
        {
            get
            {
                if (this.UserChar4ValueSpecified)
                {
                    return this.UserChar4Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UserChar4Value = value.GetValueOrDefault();
                this.UserChar4ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UserDate1", Order=486, Form=XmlSchemaForm.Unqualified)]
        public bool UserDate1Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UserDate1 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UserDate1ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UserDate1
        {
            get
            {
                if (this.UserDate1ValueSpecified)
                {
                    return this.UserDate1Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UserDate1Value = value.GetValueOrDefault();
                this.UserDate1ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UserDate2", Order=487, Form=XmlSchemaForm.Unqualified)]
        public bool UserDate2Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UserDate2 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UserDate2ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UserDate2
        {
            get
            {
                if (this.UserDate2ValueSpecified)
                {
                    return this.UserDate2Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UserDate2Value = value.GetValueOrDefault();
                this.UserDate2ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("VariableRateIndicator", Order=488, Form=XmlSchemaForm.Unqualified)]
        public bool VariableRateIndicatorValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the VariableRateIndicator property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool VariableRateIndicatorValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> VariableRateIndicator
        {
            get
            {
                if (this.VariableRateIndicatorValueSpecified)
                {
                    return this.VariableRateIndicatorValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.VariableRateIndicatorValue = value.GetValueOrDefault();
                this.VariableRateIndicatorValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Vin", Order=489, Form=XmlSchemaForm.Unqualified)]
        public bool VinValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Vin property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool VinValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Vin
        {
            get
            {
                if (this.VinValueSpecified)
                {
                    return this.VinValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.VinValue = value.GetValueOrDefault();
                this.VinValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _warningCode;
        
        [XmlElementAttribute("WarningCode", Order=490, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> WarningCode
        {
            get
            {
                return _warningCode;
            }
            set
            {
                _warningCode = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the WarningCode collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool WarningCodeSpecified
        {
            get
            {
                return ((this.WarningCode != null) 
                            && (this.WarningCode.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _warningExpiration;
        
        [XmlElementAttribute("WarningExpiration", Order=491, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> WarningExpiration
        {
            get
            {
                return _warningExpiration;
            }
            set
            {
                _warningExpiration = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the WarningExpiration collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool WarningExpirationSpecified
        {
            get
            {
                return ((this.WarningExpiration != null) 
                            && (this.WarningExpiration.Count != 0));
            }
        }
        
        [XmlElementAttribute("Version_1", Order=492, Form=XmlSchemaForm.Unqualified)]
        public AccountService.VersionType Version1 { get; set; }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Investor", Order=493, Form=XmlSchemaForm.Unqualified)]
        public bool InvestorValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Investor property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InvestorValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Investor
        {
            get
            {
                if (this.InvestorValueSpecified)
                {
                    return this.InvestorValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InvestorValue = value.GetValueOrDefault();
                this.InvestorValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("RemittanceType", Order=494, Form=XmlSchemaForm.Unqualified)]
        public bool RemittanceTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RemittanceType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool RemittanceTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> RemittanceType
        {
            get
            {
                if (this.RemittanceTypeValueSpecified)
                {
                    return this.RemittanceTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RemittanceTypeValue = value.GetValueOrDefault();
                this.RemittanceTypeValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("Version_2", Order=495, Form=XmlSchemaForm.Unqualified)]
        public AccountService.VersionType Version2 { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<XmlElement> _any;
        
        [XmlAnyElementAttribute(Order=496)]
        public Collection<XmlElement> Any
        {
            get
            {
                return _any;
            }
            set
            {
                _any = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return ((this.Any != null) 
                            && (this.Any.Count != 0));
            }
        }
    }
}
