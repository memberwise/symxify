//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 2.1.1182.0 using the following command:
// xscgen C:\Users\tbuese\Desktop\Symxchange\ParameterService/*.xsd --sf --un --uc --order --cn -0 --collectionSettersMode=Public -o C:\Users\tbuese\Desktop\Symxchange\ParameterService\generated-output -n ParameterService
namespace ParameterService
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.Diagnostics;
    using System.Xml;
    using System.Xml.Schema;
    using System.Xml.Serialization;
    
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1182.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("TellerFee", Namespace="http://www.symxchange.generated.symitar.com/crud/parameter/dto/retrieve")]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    [XmlRootAttribute("TellerFee", Namespace="http://www.symxchange.generated.symitar.com/crud/parameter/dto/retrieve")]
    public partial class TellerFee
    {
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CalculationType", Order=0, Form=XmlSchemaForm.Unqualified)]
        public short CalculationTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CalculationType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CalculationTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> CalculationType
        {
            get
            {
                if (this.CalculationTypeValueSpecified)
                {
                    return this.CalculationTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CalculationTypeValue = value.GetValueOrDefault();
                this.CalculationTypeValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("FeeDescription", Order=1, Form=XmlSchemaForm.Unqualified)]
        public string FeeDescription { get; set; }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("FeeGlCode", Order=2, Form=XmlSchemaForm.Unqualified)]
        public short FeeGlCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FeeGlCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FeeGlCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> FeeGlCode
        {
            get
            {
                if (this.FeeGlCodeValueSpecified)
                {
                    return this.FeeGlCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FeeGlCodeValue = value.GetValueOrDefault();
                this.FeeGlCodeValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<TellerFeeRelCodeList> _relCodeList;
        
        [XmlElementAttribute("RelCodeList", Order=3, Form=XmlSchemaForm.Unqualified)]
        public Collection<TellerFeeRelCodeList> RelCodeList
        {
            get
            {
                return _relCodeList;
            }
            set
            {
                _relCodeList = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RelCodeList collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool RelCodeListSpecified
        {
            get
            {
                return ((this.RelCodeList != null) 
                            && (this.RelCodeList.Count != 0));
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="TellerFee" /> class.</para>
        /// </summary>
        public TellerFee()
        {
            this._relCodeList = new Collection<TellerFeeRelCodeList>();
            this._relSvLnTypes = new Collection<TellerFeeRelSvLnTypes>();
            this._relationBaseAmount = new Collection<TellerFeeRelationBaseAmount>();
            this._relationBaseCount = new Collection<TellerFeeRelationBaseCount>();
            this._relationFeeAmount = new Collection<TellerFeeRelationFeeAmount>();
            this._any = new Collection<XmlElement>();
        }
        
        [XmlIgnoreAttribute()]
        private Collection<TellerFeeRelSvLnTypes> _relSvLnTypes;
        
        [XmlElementAttribute("RelSvLnTypes", Order=4, Form=XmlSchemaForm.Unqualified)]
        public Collection<TellerFeeRelSvLnTypes> RelSvLnTypes
        {
            get
            {
                return _relSvLnTypes;
            }
            set
            {
                _relSvLnTypes = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RelSvLnTypes collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool RelSvLnTypesSpecified
        {
            get
            {
                return ((this.RelSvLnTypes != null) 
                            && (this.RelSvLnTypes.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<TellerFeeRelationBaseAmount> _relationBaseAmount;
        
        [XmlElementAttribute("RelationBaseAmount", Order=5, Form=XmlSchemaForm.Unqualified)]
        public Collection<TellerFeeRelationBaseAmount> RelationBaseAmount
        {
            get
            {
                return _relationBaseAmount;
            }
            set
            {
                _relationBaseAmount = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RelationBaseAmount collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool RelationBaseAmountSpecified
        {
            get
            {
                return ((this.RelationBaseAmount != null) 
                            && (this.RelationBaseAmount.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<TellerFeeRelationBaseCount> _relationBaseCount;
        
        [XmlElementAttribute("RelationBaseCount", Order=6, Form=XmlSchemaForm.Unqualified)]
        public Collection<TellerFeeRelationBaseCount> RelationBaseCount
        {
            get
            {
                return _relationBaseCount;
            }
            set
            {
                _relationBaseCount = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RelationBaseCount collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool RelationBaseCountSpecified
        {
            get
            {
                return ((this.RelationBaseCount != null) 
                            && (this.RelationBaseCount.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<TellerFeeRelationFeeAmount> _relationFeeAmount;
        
        [XmlElementAttribute("RelationFeeAmount", Order=7, Form=XmlSchemaForm.Unqualified)]
        public Collection<TellerFeeRelationFeeAmount> RelationFeeAmount
        {
            get
            {
                return _relationFeeAmount;
            }
            set
            {
                _relationFeeAmount = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RelationFeeAmount collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool RelationFeeAmountSpecified
        {
            get
            {
                return ((this.RelationFeeAmount != null) 
                            && (this.RelationFeeAmount.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TellerTransactionFeeType", Order=8, Form=XmlSchemaForm.Unqualified)]
        public short TellerTransactionFeeTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TellerTransactionFeeType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TellerTransactionFeeTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<short> TellerTransactionFeeType
        {
            get
            {
                if (this.TellerTransactionFeeTypeValueSpecified)
                {
                    return this.TellerTransactionFeeTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TellerTransactionFeeTypeValue = value.GetValueOrDefault();
                this.TellerTransactionFeeTypeValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("Version_1", Order=9, Form=XmlSchemaForm.Unqualified)]
        public ParameterService.VersionType Version1 { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<XmlElement> _any;
        
        [XmlAnyElementAttribute(Order=10)]
        public Collection<XmlElement> Any
        {
            get
            {
                return _any;
            }
            set
            {
                _any = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return ((this.Any != null) 
                            && (this.Any.Count != 0));
            }
        }
    }
}
