//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 2.1.1182.0 using the following command:
// xscgen C:\Users\tbuese\Desktop\Symxchange\ParameterService/*.xsd --sf --un --uc --order --cn -0 --collectionSettersMode=Public -o C:\Users\tbuese\Desktop\Symxchange\ParameterService\generated-output -n ParameterService
namespace ParameterService
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.Diagnostics;
    using System.Xml;
    using System.Xml.Schema;
    using System.Xml.Serialization;
    
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1182.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("OnlineSbAddOnFields", Namespace="http://www.symxchange.generated.symitar.com/crud/parameter/dto/retrieve")]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    [XmlRootAttribute("OnlineSbAddOnFields", Namespace="http://www.symxchange.generated.symitar.com/crud/parameter/dto/retrieve")]
    public partial class OnlineSbAddOnFields
    {
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AvailBalApprExclList", Order=0, Form=XmlSchemaForm.Unqualified)]
        public bool AvailBalApprExclListValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AvailBalApprExclList property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AvailBalApprExclListValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AvailBalApprExclList
        {
            get
            {
                if (this.AvailBalApprExclListValueSpecified)
                {
                    return this.AvailBalApprExclListValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AvailBalApprExclListValue = value.GetValueOrDefault();
                this.AvailBalApprExclListValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AvailBalPostExclList", Order=1, Form=XmlSchemaForm.Unqualified)]
        public bool AvailBalPostExclListValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AvailBalPostExclList property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AvailBalPostExclListValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AvailBalPostExclList
        {
            get
            {
                if (this.AvailBalPostExclListValueSpecified)
                {
                    return this.AvailBalPostExclListValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AvailBalPostExclListValue = value.GetValueOrDefault();
                this.AvailBalPostExclListValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CardAcceptorLocation", Order=2, Form=XmlSchemaForm.Unqualified)]
        public bool CardAcceptorLocationValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CardAcceptorLocation property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CardAcceptorLocationValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CardAcceptorLocation
        {
            get
            {
                if (this.CardAcceptorLocationValueSpecified)
                {
                    return this.CardAcceptorLocationValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CardAcceptorLocationValue = value.GetValueOrDefault();
                this.CardAcceptorLocationValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CardAcceptorName", Order=3, Form=XmlSchemaForm.Unqualified)]
        public bool CardAcceptorNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CardAcceptorName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CardAcceptorNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CardAcceptorName
        {
            get
            {
                if (this.CardAcceptorNameValueSpecified)
                {
                    return this.CardAcceptorNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CardAcceptorNameValue = value.GetValueOrDefault();
                this.CardAcceptorNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CheckDepositHolds", Order=4, Form=XmlSchemaForm.Unqualified)]
        public bool CheckDepositHoldsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CheckDepositHolds property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CheckDepositHoldsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CheckDepositHolds
        {
            get
            {
                if (this.CheckDepositHoldsValueSpecified)
                {
                    return this.CheckDepositHoldsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CheckDepositHoldsValue = value.GetValueOrDefault();
                this.CheckDepositHoldsValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CustomCriterion", Order=5, Form=XmlSchemaForm.Unqualified)]
        public bool CustomCriterionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CustomCriterion property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CustomCriterionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CustomCriterion
        {
            get
            {
                if (this.CustomCriterionValueSpecified)
                {
                    return this.CustomCriterionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CustomCriterionValue = value.GetValueOrDefault();
                this.CustomCriterionValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DepRestrictWarnList", Order=6, Form=XmlSchemaForm.Unqualified)]
        public bool DepRestrictWarnListValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DepRestrictWarnList property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DepRestrictWarnListValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DepRestrictWarnList
        {
            get
            {
                if (this.DepRestrictWarnListValueSpecified)
                {
                    return this.DepRestrictWarnListValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DepRestrictWarnListValue = value.GetValueOrDefault();
                this.DepRestrictWarnListValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("GlCode", Order=7, Form=XmlSchemaForm.Unqualified)]
        public bool GlCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GlCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool GlCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> GlCode
        {
            get
            {
                if (this.GlCodeValueSpecified)
                {
                    return this.GlCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.GlCodeValue = value.GetValueOrDefault();
                this.GlCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LnExcludeTypeList", Order=8, Form=XmlSchemaForm.Unqualified)]
        public bool LnExcludeTypeListValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LnExcludeTypeList property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LnExcludeTypeListValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LnExcludeTypeList
        {
            get
            {
                if (this.LnExcludeTypeListValueSpecified)
                {
                    return this.LnExcludeTypeListValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LnExcludeTypeListValue = value.GetValueOrDefault();
                this.LnExcludeTypeListValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("NonIrsCertTranAccess", Order=9, Form=XmlSchemaForm.Unqualified)]
        public bool NonIrsCertTranAccessValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NonIrsCertTranAccess property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool NonIrsCertTranAccessValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> NonIrsCertTranAccess
        {
            get
            {
                if (this.NonIrsCertTranAccessValueSpecified)
                {
                    return this.NonIrsCertTranAccessValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NonIrsCertTranAccessValue = value.GetValueOrDefault();
                this.NonIrsCertTranAccessValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("NonIrsClubTranAccess", Order=10, Form=XmlSchemaForm.Unqualified)]
        public bool NonIrsClubTranAccessValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NonIrsClubTranAccess property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool NonIrsClubTranAccessValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> NonIrsClubTranAccess
        {
            get
            {
                if (this.NonIrsClubTranAccessValueSpecified)
                {
                    return this.NonIrsClubTranAccessValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NonIrsClubTranAccessValue = value.GetValueOrDefault();
                this.NonIrsClubTranAccessValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PosConditionCodes", Order=11, Form=XmlSchemaForm.Unqualified)]
        public bool PosConditionCodesValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PosConditionCodes property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PosConditionCodesValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PosConditionCodes
        {
            get
            {
                if (this.PosConditionCodesValueSpecified)
                {
                    return this.PosConditionCodesValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PosConditionCodesValue = value.GetValueOrDefault();
                this.PosConditionCodesValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("RegDLimiting", Order=12, Form=XmlSchemaForm.Unqualified)]
        public bool RegDLimitingValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RegDLimiting property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool RegDLimitingValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> RegDLimiting
        {
            get
            {
                if (this.RegDLimitingValueSpecified)
                {
                    return this.RegDLimitingValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RegDLimitingValue = value.GetValueOrDefault();
                this.RegDLimitingValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("RestrictWarnList", Order=13, Form=XmlSchemaForm.Unqualified)]
        public bool RestrictWarnListValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RestrictWarnList property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool RestrictWarnListValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> RestrictWarnList
        {
            get
            {
                if (this.RestrictWarnListValueSpecified)
                {
                    return this.RestrictWarnListValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RestrictWarnListValue = value.GetValueOrDefault();
                this.RestrictWarnListValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("RuleDescription", Order=14, Form=XmlSchemaForm.Unqualified)]
        public bool RuleDescriptionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RuleDescription property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool RuleDescriptionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> RuleDescription
        {
            get
            {
                if (this.RuleDescriptionValueSpecified)
                {
                    return this.RuleDescriptionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RuleDescriptionValue = value.GetValueOrDefault();
                this.RuleDescriptionValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("RuleOrdinal", Order=15, Form=XmlSchemaForm.Unqualified)]
        public bool RuleOrdinalValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RuleOrdinal property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool RuleOrdinalValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> RuleOrdinal
        {
            get
            {
                if (this.RuleOrdinalValueSpecified)
                {
                    return this.RuleOrdinalValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RuleOrdinalValue = value.GetValueOrDefault();
                this.RuleOrdinalValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("RulePosition", Order=16, Form=XmlSchemaForm.Unqualified)]
        public bool RulePositionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RulePosition property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool RulePositionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> RulePosition
        {
            get
            {
                if (this.RulePositionValueSpecified)
                {
                    return this.RulePositionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RulePositionValue = value.GetValueOrDefault();
                this.RulePositionValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SvExcludeTypeList", Order=17, Form=XmlSchemaForm.Unqualified)]
        public bool SvExcludeTypeListValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SvExcludeTypeList property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SvExcludeTypeListValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SvExcludeTypeList
        {
            get
            {
                if (this.SvExcludeTypeListValueSpecified)
                {
                    return this.SvExcludeTypeListValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SvExcludeTypeListValue = value.GetValueOrDefault();
                this.SvExcludeTypeListValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TransactionHistoryPrefix", Order=18, Form=XmlSchemaForm.Unqualified)]
        public bool TransactionHistoryPrefixValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TransactionHistoryPrefix property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TransactionHistoryPrefixValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TransactionHistoryPrefix
        {
            get
            {
                if (this.TransactionHistoryPrefixValueSpecified)
                {
                    return this.TransactionHistoryPrefixValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TransactionHistoryPrefixValue = value.GetValueOrDefault();
                this.TransactionHistoryPrefixValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TransactionSourceCode", Order=19, Form=XmlSchemaForm.Unqualified)]
        public bool TransactionSourceCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TransactionSourceCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TransactionSourceCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TransactionSourceCode
        {
            get
            {
                if (this.TransactionSourceCodeValueSpecified)
                {
                    return this.TransactionSourceCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TransactionSourceCodeValue = value.GetValueOrDefault();
                this.TransactionSourceCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TransactionSubType", Order=20, Form=XmlSchemaForm.Unqualified)]
        public bool TransactionSubTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TransactionSubType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TransactionSubTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TransactionSubType
        {
            get
            {
                if (this.TransactionSubTypeValueSpecified)
                {
                    return this.TransactionSubTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TransactionSubTypeValue = value.GetValueOrDefault();
                this.TransactionSubTypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("WdRestrictWarnList", Order=21, Form=XmlSchemaForm.Unqualified)]
        public bool WdRestrictWarnListValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the WdRestrictWarnList property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool WdRestrictWarnListValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> WdRestrictWarnList
        {
            get
            {
                if (this.WdRestrictWarnListValueSpecified)
                {
                    return this.WdRestrictWarnListValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.WdRestrictWarnListValue = value.GetValueOrDefault();
                this.WdRestrictWarnListValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("Version_1", Order=22, Form=XmlSchemaForm.Unqualified)]
        public ParameterService.VersionType Version1 { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<XmlElement> _any;
        
        [XmlAnyElementAttribute(Order=23)]
        public Collection<XmlElement> Any
        {
            get
            {
                return _any;
            }
            set
            {
                _any = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return ((this.Any != null) 
                            && (this.Any.Count != 0));
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="OnlineSbAddOnFields" /> class.</para>
        /// </summary>
        public OnlineSbAddOnFields()
        {
            this._any = new Collection<XmlElement>();
        }
    }
}
