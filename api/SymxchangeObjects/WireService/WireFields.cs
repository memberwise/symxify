//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 2.1.1182.0 using the following command:
// xscgen C:\Users\tbuese\Desktop\Symxchange\WireService/*.xsd --sf --un --uc --order --cn -0 --collectionSettersMode=Public -o C:\Users\tbuese\Desktop\Symxchange\WireService\generated-output -n WireService
namespace WireService
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.Diagnostics;
    using System.Xml;
    using System.Xml.Schema;
    using System.Xml.Serialization;
    
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1182.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("WireFields", Namespace="http://www.symxchange.generated.symitar.com/crud/wire/dto/retrieve")]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    [XmlRootAttribute("WireFields", Namespace="http://www.symxchange.generated.symitar.com/crud/wire/dto/retrieve")]
    public partial class WireFields
    {
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AcceptanceDate", Order=0, Form=XmlSchemaForm.Unqualified)]
        public bool AcceptanceDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AcceptanceDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AcceptanceDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AcceptanceDate
        {
            get
            {
                if (this.AcceptanceDateValueSpecified)
                {
                    return this.AcceptanceDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AcceptanceDateValue = value.GetValueOrDefault();
                this.AcceptanceDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AcceptanceTime", Order=1, Form=XmlSchemaForm.Unqualified)]
        public bool AcceptanceTimeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AcceptanceTime property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AcceptanceTimeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AcceptanceTime
        {
            get
            {
                if (this.AcceptanceTimeValueSpecified)
                {
                    return this.AcceptanceTimeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AcceptanceTimeValue = value.GetValueOrDefault();
                this.AcceptanceTimeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AccountNumber", Order=2, Form=XmlSchemaForm.Unqualified)]
        public bool AccountNumberValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AccountNumber property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AccountNumberValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AccountNumber
        {
            get
            {
                if (this.AccountNumberValueSpecified)
                {
                    return this.AccountNumberValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AccountNumberValue = value.GetValueOrDefault();
                this.AccountNumberValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AdjustmentDate", Order=3, Form=XmlSchemaForm.Unqualified)]
        public bool AdjustmentDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AdjustmentDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AdjustmentDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AdjustmentDate
        {
            get
            {
                if (this.AdjustmentDateValueSpecified)
                {
                    return this.AdjustmentDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AdjustmentDateValue = value.GetValueOrDefault();
                this.AdjustmentDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("AdjustmentReason", Order=4, Form=XmlSchemaForm.Unqualified)]
        public bool AdjustmentReasonValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AdjustmentReason property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AdjustmentReasonValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> AdjustmentReason
        {
            get
            {
                if (this.AdjustmentReasonValueSpecified)
                {
                    return this.AdjustmentReasonValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AdjustmentReasonValue = value.GetValueOrDefault();
                this.AdjustmentReasonValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Amount", Order=5, Form=XmlSchemaForm.Unqualified)]
        public bool AmountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Amount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AmountValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Amount
        {
            get
            {
                if (this.AmountValueSpecified)
                {
                    return this.AmountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AmountValue = value.GetValueOrDefault();
                this.AmountValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ApplicationId", Order=6, Form=XmlSchemaForm.Unqualified)]
        public bool ApplicationIdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ApplicationId property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ApplicationIdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ApplicationId
        {
            get
            {
                if (this.ApplicationIdValueSpecified)
                {
                    return this.ApplicationIdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ApplicationIdValue = value.GetValueOrDefault();
                this.ApplicationIdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BatchNumber", Order=7, Form=XmlSchemaForm.Unqualified)]
        public bool BatchNumberValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BatchNumber property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BatchNumberValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BatchNumber
        {
            get
            {
                if (this.BatchNumberValueSpecified)
                {
                    return this.BatchNumberValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BatchNumberValue = value.GetValueOrDefault();
                this.BatchNumberValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BatchNumberChar", Order=8, Form=XmlSchemaForm.Unqualified)]
        public bool BatchNumberCharValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BatchNumberChar property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BatchNumberCharValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BatchNumberChar
        {
            get
            {
                if (this.BatchNumberCharValueSpecified)
                {
                    return this.BatchNumberCharValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BatchNumberCharValue = value.GetValueOrDefault();
                this.BatchNumberCharValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _beneficiaryAddress;
        
        [XmlElementAttribute("BeneficiaryAddress", Order=9, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> BeneficiaryAddress
        {
            get
            {
                return _beneficiaryAddress;
            }
            set
            {
                _beneficiaryAddress = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the BeneficiaryAddress collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool BeneficiaryAddressSpecified
        {
            get
            {
                return ((this.BeneficiaryAddress != null) 
                            && (this.BeneficiaryAddress.Count != 0));
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="WireFields" /> class.</para>
        /// </summary>
        public WireFields()
        {
            this._beneficiaryAddress = new Collection<short>();
            this._beneficiaryFiAddress = new Collection<short>();
            this._chargesCurrencyCode = new Collection<short>();
            this._drawdownDebitAccountAddress = new Collection<short>();
            this._instructIngFiAddress = new Collection<short>();
            this._intermediaryFiAddress = new Collection<short>();
            this._originatorAddress = new Collection<short>();
            this._originatorFiAddress = new Collection<short>();
            this._originatorLineCodeF = new Collection<short>();
            this._originatorLineF = new Collection<short>();
            this._originatorToBeneficiaryInfo = new Collection<short>();
            this._senderCharges = new Collection<short>();
            this._cdtrAcctName = new Collection<short>();
            this._cdtrAcctProxyId = new Collection<short>();
            this._cdtrAgtAcctName = new Collection<short>();
            this._cdtrAgtAcctProxyId = new Collection<short>();
            this._chargeAgent1Department = new Collection<short>();
            this._chargeAgent1Floor = new Collection<short>();
            this._chargeAgent1Name = new Collection<short>();
            this._chargeAgent1Room = new Collection<short>();
            this._chargeAgent1StreetName = new Collection<short>();
            this._chargeAgent1Subdepartment = new Collection<short>();
            this._chargeAgent2Department = new Collection<short>();
            this._chargeAgent2Floor = new Collection<short>();
            this._chargeAgent2Name = new Collection<short>();
            this._chargeAgent2Room = new Collection<short>();
            this._chargeAgent2StreetName = new Collection<short>();
            this._chargeAgent2Subdepartment = new Collection<short>();
            this._chargeAgent3Department = new Collection<short>();
            this._chargeAgent3Floor = new Collection<short>();
            this._chargeAgent3Name = new Collection<short>();
            this._chargeAgent3Room = new Collection<short>();
            this._chargeAgent3StreetName = new Collection<short>();
            this._chargeAgent3Subdepartment = new Collection<short>();
            this._chargeAgent4Department = new Collection<short>();
            this._chargeAgent4Floor = new Collection<short>();
            this._chargeAgent4Name = new Collection<short>();
            this._chargeAgent4Room = new Collection<short>();
            this._chargeAgent4StreetName = new Collection<short>();
            this._chargeAgent4Subdepartment = new Collection<short>();
            this._creditorAgentDepartment = new Collection<short>();
            this._creditorAgentFiName = new Collection<short>();
            this._creditorAgentFloor = new Collection<short>();
            this._creditorAgentRoom = new Collection<short>();
            this._creditorAgentStreetName = new Collection<short>();
            this._creditorAgentSubdepartment = new Collection<short>();
            this._creditorDepartment = new Collection<short>();
            this._creditorFloor = new Collection<short>();
            this._creditorName = new Collection<short>();
            this._creditorRoom = new Collection<short>();
            this._creditorStreetName = new Collection<short>();
            this._creditorSubdepartment = new Collection<short>();
            this._dbtrAgtAcctName = new Collection<short>();
            this._dbtrAgtAcctProxyId = new Collection<short>();
            this._debtorAcctName = new Collection<short>();
            this._debtorAcctProxyId = new Collection<short>();
            this._debtorAgentDepartment = new Collection<short>();
            this._debtorAgentFloor = new Collection<short>();
            this._debtorAgentName = new Collection<short>();
            this._debtorAgentRoom = new Collection<short>();
            this._debtorAgentStreetName = new Collection<short>();
            this._debtorAgentSubdepartment = new Collection<short>();
            this._debtorDepartment = new Collection<short>();
            this._debtorFloor = new Collection<short>();
            this._debtorName = new Collection<short>();
            this._debtorRoom = new Collection<short>();
            this._debtorStreetName = new Collection<short>();
            this._debtorSubdepartment = new Collection<short>();
            this._initgPtyDepartment = new Collection<short>();
            this._initgPtyFloor = new Collection<short>();
            this._initgPtyName = new Collection<short>();
            this._initgPtyRoom = new Collection<short>();
            this._initgPtyStreetName = new Collection<short>();
            this._initgPtySubdepartment = new Collection<short>();
            this._instr1ForCdtrAgtInfo = new Collection<short>();
            this._instr2ForCdtrAgtInfo = new Collection<short>();
            this._intermedFiDepartment = new Collection<short>();
            this._intermedFiFloor = new Collection<short>();
            this._intermedFiRoom = new Collection<short>();
            this._intermedFiStreetName = new Collection<short>();
            this._intermedFiSubdepartment = new Collection<short>();
            this._intrmyAgt1AcctName = new Collection<short>();
            this._intrmyAgt1AcctProxyId = new Collection<short>();
            this._prevInstrAgentAcctName = new Collection<short>();
            this._prevInstrAgentAcctProxyId = new Collection<short>();
            this._prevInstrAgentDepartment = new Collection<short>();
            this._prevInstrAgentFloor = new Collection<short>();
            this._prevInstrAgentRoom = new Collection<short>();
            this._prevInstrAgentStreetName = new Collection<short>();
            this._prevInstrAgentSubdepartment = new Collection<short>();
            this._ultmtCdtrDepartment = new Collection<short>();
            this._ultmtCdtrFloor = new Collection<short>();
            this._ultmtCdtrName = new Collection<short>();
            this._ultmtCdtrRoom = new Collection<short>();
            this._ultmtCdtrStreetName = new Collection<short>();
            this._ultmtCdtrSubdepartment = new Collection<short>();
            this._ultmtDbtrDepartment = new Collection<short>();
            this._ultmtDbtrFloor = new Collection<short>();
            this._ultmtDbtrName = new Collection<short>();
            this._ultmtDbtrRoom = new Collection<short>();
            this._ultmtDbtrStreetName = new Collection<short>();
            this._ultmtDbtrSubdepartment = new Collection<short>();
            this._any = new Collection<XmlElement>();
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BeneficiaryAdvice", Order=10, Form=XmlSchemaForm.Unqualified)]
        public bool BeneficiaryAdviceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BeneficiaryAdvice property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BeneficiaryAdviceValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BeneficiaryAdvice
        {
            get
            {
                if (this.BeneficiaryAdviceValueSpecified)
                {
                    return this.BeneficiaryAdviceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BeneficiaryAdviceValue = value.GetValueOrDefault();
                this.BeneficiaryAdviceValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BeneficiaryAdviceCode", Order=11, Form=XmlSchemaForm.Unqualified)]
        public bool BeneficiaryAdviceCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BeneficiaryAdviceCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BeneficiaryAdviceCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BeneficiaryAdviceCode
        {
            get
            {
                if (this.BeneficiaryAdviceCodeValueSpecified)
                {
                    return this.BeneficiaryAdviceCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BeneficiaryAdviceCodeValue = value.GetValueOrDefault();
                this.BeneficiaryAdviceCodeValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _beneficiaryFiAddress;
        
        [XmlElementAttribute("BeneficiaryFiAddress", Order=12, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> BeneficiaryFiAddress
        {
            get
            {
                return _beneficiaryFiAddress;
            }
            set
            {
                _beneficiaryFiAddress = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the BeneficiaryFiAddress collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool BeneficiaryFiAddressSpecified
        {
            get
            {
                return ((this.BeneficiaryFiAddress != null) 
                            && (this.BeneficiaryFiAddress.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BeneficiaryFiAdvice", Order=13, Form=XmlSchemaForm.Unqualified)]
        public bool BeneficiaryFiAdviceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BeneficiaryFiAdvice property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BeneficiaryFiAdviceValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BeneficiaryFiAdvice
        {
            get
            {
                if (this.BeneficiaryFiAdviceValueSpecified)
                {
                    return this.BeneficiaryFiAdviceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BeneficiaryFiAdviceValue = value.GetValueOrDefault();
                this.BeneficiaryFiAdviceValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BeneficiaryFiAdviceCode", Order=14, Form=XmlSchemaForm.Unqualified)]
        public bool BeneficiaryFiAdviceCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BeneficiaryFiAdviceCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BeneficiaryFiAdviceCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BeneficiaryFiAdviceCode
        {
            get
            {
                if (this.BeneficiaryFiAdviceCodeValueSpecified)
                {
                    return this.BeneficiaryFiAdviceCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BeneficiaryFiAdviceCodeValue = value.GetValueOrDefault();
                this.BeneficiaryFiAdviceCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BeneficiaryFiId", Order=15, Form=XmlSchemaForm.Unqualified)]
        public bool BeneficiaryFiIdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BeneficiaryFiId property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BeneficiaryFiIdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BeneficiaryFiId
        {
            get
            {
                if (this.BeneficiaryFiIdValueSpecified)
                {
                    return this.BeneficiaryFiIdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BeneficiaryFiIdValue = value.GetValueOrDefault();
                this.BeneficiaryFiIdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BeneficiaryFiIdCode", Order=16, Form=XmlSchemaForm.Unqualified)]
        public bool BeneficiaryFiIdCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BeneficiaryFiIdCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BeneficiaryFiIdCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BeneficiaryFiIdCode
        {
            get
            {
                if (this.BeneficiaryFiIdCodeValueSpecified)
                {
                    return this.BeneficiaryFiIdCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BeneficiaryFiIdCodeValue = value.GetValueOrDefault();
                this.BeneficiaryFiIdCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BeneficiaryFiInfo", Order=17, Form=XmlSchemaForm.Unqualified)]
        public bool BeneficiaryFiInfoValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BeneficiaryFiInfo property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BeneficiaryFiInfoValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BeneficiaryFiInfo
        {
            get
            {
                if (this.BeneficiaryFiInfoValueSpecified)
                {
                    return this.BeneficiaryFiInfoValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BeneficiaryFiInfoValue = value.GetValueOrDefault();
                this.BeneficiaryFiInfoValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BeneficiaryFiIntrnatlId", Order=18, Form=XmlSchemaForm.Unqualified)]
        public bool BeneficiaryFiIntrnatlIdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BeneficiaryFiIntrnatlId property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BeneficiaryFiIntrnatlIdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BeneficiaryFiIntrnatlId
        {
            get
            {
                if (this.BeneficiaryFiIntrnatlIdValueSpecified)
                {
                    return this.BeneficiaryFiIntrnatlIdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BeneficiaryFiIntrnatlIdValue = value.GetValueOrDefault();
                this.BeneficiaryFiIntrnatlIdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BeneficiaryFiName", Order=19, Form=XmlSchemaForm.Unqualified)]
        public bool BeneficiaryFiNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BeneficiaryFiName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BeneficiaryFiNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BeneficiaryFiName
        {
            get
            {
                if (this.BeneficiaryFiNameValueSpecified)
                {
                    return this.BeneficiaryFiNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BeneficiaryFiNameValue = value.GetValueOrDefault();
                this.BeneficiaryFiNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BeneficiaryId", Order=20, Form=XmlSchemaForm.Unqualified)]
        public bool BeneficiaryIdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BeneficiaryId property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BeneficiaryIdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BeneficiaryId
        {
            get
            {
                if (this.BeneficiaryIdValueSpecified)
                {
                    return this.BeneficiaryIdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BeneficiaryIdValue = value.GetValueOrDefault();
                this.BeneficiaryIdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BeneficiaryIdCode", Order=21, Form=XmlSchemaForm.Unqualified)]
        public bool BeneficiaryIdCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BeneficiaryIdCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BeneficiaryIdCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BeneficiaryIdCode
        {
            get
            {
                if (this.BeneficiaryIdCodeValueSpecified)
                {
                    return this.BeneficiaryIdCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BeneficiaryIdCodeValue = value.GetValueOrDefault();
                this.BeneficiaryIdCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BeneficiaryInfo", Order=22, Form=XmlSchemaForm.Unqualified)]
        public bool BeneficiaryInfoValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BeneficiaryInfo property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BeneficiaryInfoValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BeneficiaryInfo
        {
            get
            {
                if (this.BeneficiaryInfoValueSpecified)
                {
                    return this.BeneficiaryInfoValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BeneficiaryInfoValue = value.GetValueOrDefault();
                this.BeneficiaryInfoValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BeneficiaryName", Order=23, Form=XmlSchemaForm.Unqualified)]
        public bool BeneficiaryNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BeneficiaryName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BeneficiaryNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BeneficiaryName
        {
            get
            {
                if (this.BeneficiaryNameValueSpecified)
                {
                    return this.BeneficiaryNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BeneficiaryNameValue = value.GetValueOrDefault();
                this.BeneficiaryNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BeneficiaryReference", Order=24, Form=XmlSchemaForm.Unqualified)]
        public bool BeneficiaryReferenceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BeneficiaryReference property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BeneficiaryReferenceValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BeneficiaryReference
        {
            get
            {
                if (this.BeneficiaryReferenceValueSpecified)
                {
                    return this.BeneficiaryReferenceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BeneficiaryReferenceValue = value.GetValueOrDefault();
                this.BeneficiaryReferenceValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("BusinessFunctionCode", Order=25, Form=XmlSchemaForm.Unqualified)]
        public bool BusinessFunctionCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BusinessFunctionCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BusinessFunctionCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> BusinessFunctionCode
        {
            get
            {
                if (this.BusinessFunctionCodeValueSpecified)
                {
                    return this.BusinessFunctionCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BusinessFunctionCodeValue = value.GetValueOrDefault();
                this.BusinessFunctionCodeValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _chargesCurrencyCode;
        
        [XmlElementAttribute("ChargesCurrencyCode", Order=26, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> ChargesCurrencyCode
        {
            get
            {
                return _chargesCurrencyCode;
            }
            set
            {
                _chargesCurrencyCode = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ChargesCurrencyCode collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool ChargesCurrencyCodeSpecified
        {
            get
            {
                return ((this.ChargesCurrencyCode != null) 
                            && (this.ChargesCurrencyCode.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CommentCode", Order=27, Form=XmlSchemaForm.Unqualified)]
        public bool CommentCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CommentCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CommentCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CommentCode
        {
            get
            {
                if (this.CommentCodeValueSpecified)
                {
                    return this.CommentCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CommentCodeValue = value.GetValueOrDefault();
                this.CommentCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Destination", Order=28, Form=XmlSchemaForm.Unqualified)]
        public bool DestinationValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Destination property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DestinationValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Destination
        {
            get
            {
                if (this.DestinationValueSpecified)
                {
                    return this.DestinationValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DestinationValue = value.GetValueOrDefault();
                this.DestinationValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DetailOfCharges", Order=29, Form=XmlSchemaForm.Unqualified)]
        public bool DetailOfChargesValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DetailOfCharges property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DetailOfChargesValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DetailOfCharges
        {
            get
            {
                if (this.DetailOfChargesValueSpecified)
                {
                    return this.DetailOfChargesValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DetailOfChargesValue = value.GetValueOrDefault();
                this.DetailOfChargesValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Direction", Order=30, Form=XmlSchemaForm.Unqualified)]
        public bool DirectionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Direction property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DirectionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Direction
        {
            get
            {
                if (this.DirectionValueSpecified)
                {
                    return this.DirectionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DirectionValue = value.GetValueOrDefault();
                this.DirectionValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DrawdownCreditAccount", Order=31, Form=XmlSchemaForm.Unqualified)]
        public bool DrawdownCreditAccountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DrawdownCreditAccount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DrawdownCreditAccountValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DrawdownCreditAccount
        {
            get
            {
                if (this.DrawdownCreditAccountValueSpecified)
                {
                    return this.DrawdownCreditAccountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DrawdownCreditAccountValue = value.GetValueOrDefault();
                this.DrawdownCreditAccountValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _drawdownDebitAccountAddress;
        
        [XmlElementAttribute("DrawdownDebitAccountAddress", Order=32, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> DrawdownDebitAccountAddress
        {
            get
            {
                return _drawdownDebitAccountAddress;
            }
            set
            {
                _drawdownDebitAccountAddress = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DrawdownDebitAccountAddress collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool DrawdownDebitAccountAddressSpecified
        {
            get
            {
                return ((this.DrawdownDebitAccountAddress != null) 
                            && (this.DrawdownDebitAccountAddress.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DrawdownDebitAccountId", Order=33, Form=XmlSchemaForm.Unqualified)]
        public bool DrawdownDebitAccountIdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DrawdownDebitAccountId property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DrawdownDebitAccountIdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DrawdownDebitAccountId
        {
            get
            {
                if (this.DrawdownDebitAccountIdValueSpecified)
                {
                    return this.DrawdownDebitAccountIdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DrawdownDebitAccountIdValue = value.GetValueOrDefault();
                this.DrawdownDebitAccountIdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DrawdownDebitAccountIdCode", Order=34, Form=XmlSchemaForm.Unqualified)]
        public bool DrawdownDebitAccountIdCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DrawdownDebitAccountIdCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DrawdownDebitAccountIdCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DrawdownDebitAccountIdCode
        {
            get
            {
                if (this.DrawdownDebitAccountIdCodeValueSpecified)
                {
                    return this.DrawdownDebitAccountIdCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DrawdownDebitAccountIdCodeValue = value.GetValueOrDefault();
                this.DrawdownDebitAccountIdCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DrawdownDebitAccountName", Order=35, Form=XmlSchemaForm.Unqualified)]
        public bool DrawdownDebitAccountNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DrawdownDebitAccountName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DrawdownDebitAccountNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DrawdownDebitAccountName
        {
            get
            {
                if (this.DrawdownDebitAccountNameValueSpecified)
                {
                    return this.DrawdownDebitAccountNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DrawdownDebitAccountNameValue = value.GetValueOrDefault();
                this.DrawdownDebitAccountNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DrawdownDebitAcctAdvice", Order=36, Form=XmlSchemaForm.Unqualified)]
        public bool DrawdownDebitAcctAdviceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DrawdownDebitAcctAdvice property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DrawdownDebitAcctAdviceValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DrawdownDebitAcctAdvice
        {
            get
            {
                if (this.DrawdownDebitAcctAdviceValueSpecified)
                {
                    return this.DrawdownDebitAcctAdviceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DrawdownDebitAcctAdviceValue = value.GetValueOrDefault();
                this.DrawdownDebitAcctAdviceValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DrawdownDebitAcctAdviceCode", Order=37, Form=XmlSchemaForm.Unqualified)]
        public bool DrawdownDebitAcctAdviceCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DrawdownDebitAcctAdviceCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DrawdownDebitAcctAdviceCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DrawdownDebitAcctAdviceCode
        {
            get
            {
                if (this.DrawdownDebitAcctAdviceCodeValueSpecified)
                {
                    return this.DrawdownDebitAcctAdviceCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DrawdownDebitAcctAdviceCodeValue = value.GetValueOrDefault();
                this.DrawdownDebitAcctAdviceCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("EffectiveDate", Order=38, Form=XmlSchemaForm.Unqualified)]
        public bool EffectiveDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EffectiveDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool EffectiveDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> EffectiveDate
        {
            get
            {
                if (this.EffectiveDateValueSpecified)
                {
                    return this.EffectiveDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EffectiveDateValue = value.GetValueOrDefault();
                this.EffectiveDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("EnteredByCorporateUser", Order=39, Form=XmlSchemaForm.Unqualified)]
        public bool EnteredByCorporateUserValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EnteredByCorporateUser property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool EnteredByCorporateUserValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> EnteredByCorporateUser
        {
            get
            {
                if (this.EnteredByCorporateUserValueSpecified)
                {
                    return this.EnteredByCorporateUserValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EnteredByCorporateUserValue = value.GetValueOrDefault();
                this.EnteredByCorporateUserValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("EnteredByCorporateUserName", Order=40, Form=XmlSchemaForm.Unqualified)]
        public bool EnteredByCorporateUserNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EnteredByCorporateUserName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool EnteredByCorporateUserNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> EnteredByCorporateUserName
        {
            get
            {
                if (this.EnteredByCorporateUserNameValueSpecified)
                {
                    return this.EnteredByCorporateUserNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EnteredByCorporateUserNameValue = value.GetValueOrDefault();
                this.EnteredByCorporateUserNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("EnteredByMemberUser", Order=41, Form=XmlSchemaForm.Unqualified)]
        public bool EnteredByMemberUserValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EnteredByMemberUser property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool EnteredByMemberUserValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> EnteredByMemberUser
        {
            get
            {
                if (this.EnteredByMemberUserValueSpecified)
                {
                    return this.EnteredByMemberUserValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EnteredByMemberUserValue = value.GetValueOrDefault();
                this.EnteredByMemberUserValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("EnteredByMemberUserName", Order=42, Form=XmlSchemaForm.Unqualified)]
        public bool EnteredByMemberUserNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EnteredByMemberUserName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool EnteredByMemberUserNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> EnteredByMemberUserName
        {
            get
            {
                if (this.EnteredByMemberUserNameValueSpecified)
                {
                    return this.EnteredByMemberUserNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EnteredByMemberUserNameValue = value.GetValueOrDefault();
                this.EnteredByMemberUserNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("EnteredDate", Order=43, Form=XmlSchemaForm.Unqualified)]
        public bool EnteredDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EnteredDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool EnteredDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> EnteredDate
        {
            get
            {
                if (this.EnteredDateValueSpecified)
                {
                    return this.EnteredDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EnteredDateValue = value.GetValueOrDefault();
                this.EnteredDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("EnteredTime", Order=44, Form=XmlSchemaForm.Unqualified)]
        public bool EnteredTimeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EnteredTime property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool EnteredTimeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> EnteredTime
        {
            get
            {
                if (this.EnteredTimeValueSpecified)
                {
                    return this.EnteredTimeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EnteredTimeValue = value.GetValueOrDefault();
                this.EnteredTimeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("EnteredValidationMethod", Order=45, Form=XmlSchemaForm.Unqualified)]
        public bool EnteredValidationMethodValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EnteredValidationMethod property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool EnteredValidationMethodValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> EnteredValidationMethod
        {
            get
            {
                if (this.EnteredValidationMethodValueSpecified)
                {
                    return this.EnteredValidationMethodValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EnteredValidationMethodValue = value.GetValueOrDefault();
                this.EnteredValidationMethodValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ErrorCategory", Order=46, Form=XmlSchemaForm.Unqualified)]
        public bool ErrorCategoryValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ErrorCategory property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ErrorCategoryValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ErrorCategory
        {
            get
            {
                if (this.ErrorCategoryValueSpecified)
                {
                    return this.ErrorCategoryValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ErrorCategoryValue = value.GetValueOrDefault();
                this.ErrorCategoryValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ErrorCode", Order=47, Form=XmlSchemaForm.Unqualified)]
        public bool ErrorCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ErrorCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ErrorCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ErrorCode
        {
            get
            {
                if (this.ErrorCodeValueSpecified)
                {
                    return this.ErrorCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ErrorCodeValue = value.GetValueOrDefault();
                this.ErrorCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ErrorDescription", Order=48, Form=XmlSchemaForm.Unqualified)]
        public bool ErrorDescriptionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ErrorDescription property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ErrorDescriptionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ErrorDescription
        {
            get
            {
                if (this.ErrorDescriptionValueSpecified)
                {
                    return this.ErrorDescriptionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ErrorDescriptionValue = value.GetValueOrDefault();
                this.ErrorDescriptionValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ExchangeRate", Order=49, Form=XmlSchemaForm.Unqualified)]
        public bool ExchangeRateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ExchangeRate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ExchangeRateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ExchangeRate
        {
            get
            {
                if (this.ExchangeRateValueSpecified)
                {
                    return this.ExchangeRateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ExchangeRateValue = value.GetValueOrDefault();
                this.ExchangeRateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ExtractDestination", Order=50, Form=XmlSchemaForm.Unqualified)]
        public bool ExtractDestinationValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ExtractDestination property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ExtractDestinationValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ExtractDestination
        {
            get
            {
                if (this.ExtractDestinationValueSpecified)
                {
                    return this.ExtractDestinationValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ExtractDestinationValue = value.GetValueOrDefault();
                this.ExtractDestinationValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ExtractedByCorporateUser", Order=51, Form=XmlSchemaForm.Unqualified)]
        public bool ExtractedByCorporateUserValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ExtractedByCorporateUser property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ExtractedByCorporateUserValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ExtractedByCorporateUser
        {
            get
            {
                if (this.ExtractedByCorporateUserValueSpecified)
                {
                    return this.ExtractedByCorporateUserValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ExtractedByCorporateUserValue = value.GetValueOrDefault();
                this.ExtractedByCorporateUserValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ExtractedByCorporateUserName", Order=52, Form=XmlSchemaForm.Unqualified)]
        public bool ExtractedByCorporateUserNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ExtractedByCorporateUserName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ExtractedByCorporateUserNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ExtractedByCorporateUserName
        {
            get
            {
                if (this.ExtractedByCorporateUserNameValueSpecified)
                {
                    return this.ExtractedByCorporateUserNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ExtractedByCorporateUserNameValue = value.GetValueOrDefault();
                this.ExtractedByCorporateUserNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ExtractedDate", Order=53, Form=XmlSchemaForm.Unqualified)]
        public bool ExtractedDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ExtractedDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ExtractedDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ExtractedDate
        {
            get
            {
                if (this.ExtractedDateValueSpecified)
                {
                    return this.ExtractedDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ExtractedDateValue = value.GetValueOrDefault();
                this.ExtractedDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ExtractedTime", Order=54, Form=XmlSchemaForm.Unqualified)]
        public bool ExtractedTimeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ExtractedTime property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ExtractedTimeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ExtractedTime
        {
            get
            {
                if (this.ExtractedTimeValueSpecified)
                {
                    return this.ExtractedTimeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ExtractedTimeValue = value.GetValueOrDefault();
                this.ExtractedTimeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("FiToFiInfo", Order=55, Form=XmlSchemaForm.Unqualified)]
        public bool FiToFiInfoValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FiToFiInfo property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FiToFiInfoValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> FiToFiInfo
        {
            get
            {
                if (this.FiToFiInfoValueSpecified)
                {
                    return this.FiToFiInfoValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FiToFiInfoValue = value.GetValueOrDefault();
                this.FiToFiInfoValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("FmLastPurgeDate", Order=56, Form=XmlSchemaForm.Unqualified)]
        public bool FmLastPurgeDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FmLastPurgeDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FmLastPurgeDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> FmLastPurgeDate
        {
            get
            {
                if (this.FmLastPurgeDateValueSpecified)
                {
                    return this.FmLastPurgeDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FmLastPurgeDateValue = value.GetValueOrDefault();
                this.FmLastPurgeDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("FormatVersion", Order=57, Form=XmlSchemaForm.Unqualified)]
        public bool FormatVersionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FormatVersion property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FormatVersionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> FormatVersion
        {
            get
            {
                if (this.FormatVersionValueSpecified)
                {
                    return this.FormatVersionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FormatVersionValue = value.GetValueOrDefault();
                this.FormatVersionValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("GlAccount", Order=58, Form=XmlSchemaForm.Unqualified)]
        public bool GlAccountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GlAccount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool GlAccountValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> GlAccount
        {
            get
            {
                if (this.GlAccountValueSpecified)
                {
                    return this.GlAccountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.GlAccountValue = value.GetValueOrDefault();
                this.GlAccountValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("GlCommentAddlInfo", Order=59, Form=XmlSchemaForm.Unqualified)]
        public bool GlCommentAddlInfoValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GlCommentAddlInfo property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool GlCommentAddlInfoValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> GlCommentAddlInfo
        {
            get
            {
                if (this.GlCommentAddlInfoValueSpecified)
                {
                    return this.GlCommentAddlInfoValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.GlCommentAddlInfoValue = value.GetValueOrDefault();
                this.GlCommentAddlInfoValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("GlOffset", Order=60, Form=XmlSchemaForm.Unqualified)]
        public bool GlOffsetValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GlOffset property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool GlOffsetValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> GlOffset
        {
            get
            {
                if (this.GlOffsetValueSpecified)
                {
                    return this.GlOffsetValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.GlOffsetValue = value.GetValueOrDefault();
                this.GlOffsetValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Imad", Order=61, Form=XmlSchemaForm.Unqualified)]
        public bool ImadValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Imad property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ImadValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Imad
        {
            get
            {
                if (this.ImadValueSpecified)
                {
                    return this.ImadValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ImadValue = value.GetValueOrDefault();
                this.ImadValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _instructIngFiAddress;
        
        [XmlElementAttribute("InstructIngFiAddress", Order=62, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> InstructIngFiAddress
        {
            get
            {
                return _instructIngFiAddress;
            }
            set
            {
                _instructIngFiAddress = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the InstructIngFiAddress collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool InstructIngFiAddressSpecified
        {
            get
            {
                return ((this.InstructIngFiAddress != null) 
                            && (this.InstructIngFiAddress.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InstructIngFiId", Order=63, Form=XmlSchemaForm.Unqualified)]
        public bool InstructIngFiIdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InstructIngFiId property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InstructIngFiIdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InstructIngFiId
        {
            get
            {
                if (this.InstructIngFiIdValueSpecified)
                {
                    return this.InstructIngFiIdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InstructIngFiIdValue = value.GetValueOrDefault();
                this.InstructIngFiIdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InstructIngFiIdCode", Order=64, Form=XmlSchemaForm.Unqualified)]
        public bool InstructIngFiIdCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InstructIngFiIdCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InstructIngFiIdCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InstructIngFiIdCode
        {
            get
            {
                if (this.InstructIngFiIdCodeValueSpecified)
                {
                    return this.InstructIngFiIdCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InstructIngFiIdCodeValue = value.GetValueOrDefault();
                this.InstructIngFiIdCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InstructedAmount", Order=65, Form=XmlSchemaForm.Unqualified)]
        public bool InstructedAmountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InstructedAmount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InstructedAmountValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InstructedAmount
        {
            get
            {
                if (this.InstructedAmountValueSpecified)
                {
                    return this.InstructedAmountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InstructedAmountValue = value.GetValueOrDefault();
                this.InstructedAmountValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InstructedAmtCurrencyCode", Order=66, Form=XmlSchemaForm.Unqualified)]
        public bool InstructedAmtCurrencyCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InstructedAmtCurrencyCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InstructedAmtCurrencyCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InstructedAmtCurrencyCode
        {
            get
            {
                if (this.InstructedAmtCurrencyCodeValueSpecified)
                {
                    return this.InstructedAmtCurrencyCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InstructedAmtCurrencyCodeValue = value.GetValueOrDefault();
                this.InstructedAmtCurrencyCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InstructingFiName", Order=67, Form=XmlSchemaForm.Unqualified)]
        public bool InstructingFiNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InstructingFiName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InstructingFiNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InstructingFiName
        {
            get
            {
                if (this.InstructingFiNameValueSpecified)
                {
                    return this.InstructingFiNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InstructingFiNameValue = value.GetValueOrDefault();
                this.InstructingFiNameValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _intermediaryFiAddress;
        
        [XmlElementAttribute("IntermediaryFiAddress", Order=68, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> IntermediaryFiAddress
        {
            get
            {
                return _intermediaryFiAddress;
            }
            set
            {
                _intermediaryFiAddress = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the IntermediaryFiAddress collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool IntermediaryFiAddressSpecified
        {
            get
            {
                return ((this.IntermediaryFiAddress != null) 
                            && (this.IntermediaryFiAddress.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IntermediaryFiAdvice", Order=69, Form=XmlSchemaForm.Unqualified)]
        public bool IntermediaryFiAdviceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IntermediaryFiAdvice property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IntermediaryFiAdviceValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IntermediaryFiAdvice
        {
            get
            {
                if (this.IntermediaryFiAdviceValueSpecified)
                {
                    return this.IntermediaryFiAdviceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IntermediaryFiAdviceValue = value.GetValueOrDefault();
                this.IntermediaryFiAdviceValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IntermediaryFiAdviceCode", Order=70, Form=XmlSchemaForm.Unqualified)]
        public bool IntermediaryFiAdviceCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IntermediaryFiAdviceCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IntermediaryFiAdviceCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IntermediaryFiAdviceCode
        {
            get
            {
                if (this.IntermediaryFiAdviceCodeValueSpecified)
                {
                    return this.IntermediaryFiAdviceCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IntermediaryFiAdviceCodeValue = value.GetValueOrDefault();
                this.IntermediaryFiAdviceCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IntermediaryFiId", Order=71, Form=XmlSchemaForm.Unqualified)]
        public bool IntermediaryFiIdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IntermediaryFiId property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IntermediaryFiIdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IntermediaryFiId
        {
            get
            {
                if (this.IntermediaryFiIdValueSpecified)
                {
                    return this.IntermediaryFiIdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IntermediaryFiIdValue = value.GetValueOrDefault();
                this.IntermediaryFiIdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IntermediaryFiIdCode", Order=72, Form=XmlSchemaForm.Unqualified)]
        public bool IntermediaryFiIdCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IntermediaryFiIdCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IntermediaryFiIdCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IntermediaryFiIdCode
        {
            get
            {
                if (this.IntermediaryFiIdCodeValueSpecified)
                {
                    return this.IntermediaryFiIdCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IntermediaryFiIdCodeValue = value.GetValueOrDefault();
                this.IntermediaryFiIdCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IntermediaryFiInfo", Order=73, Form=XmlSchemaForm.Unqualified)]
        public bool IntermediaryFiInfoValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IntermediaryFiInfo property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IntermediaryFiInfoValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IntermediaryFiInfo
        {
            get
            {
                if (this.IntermediaryFiInfoValueSpecified)
                {
                    return this.IntermediaryFiInfoValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IntermediaryFiInfoValue = value.GetValueOrDefault();
                this.IntermediaryFiInfoValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IntermediaryFiName", Order=74, Form=XmlSchemaForm.Unqualified)]
        public bool IntermediaryFiNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IntermediaryFiName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IntermediaryFiNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IntermediaryFiName
        {
            get
            {
                if (this.IntermediaryFiNameValueSpecified)
                {
                    return this.IntermediaryFiNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IntermediaryFiNameValue = value.GetValueOrDefault();
                this.IntermediaryFiNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("LastFmDate", Order=75, Form=XmlSchemaForm.Unqualified)]
        public bool LastFmDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LastFmDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LastFmDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> LastFmDate
        {
            get
            {
                if (this.LastFmDateValueSpecified)
                {
                    return this.LastFmDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LastFmDateValue = value.GetValueOrDefault();
                this.LastFmDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MessageDuplicationCode", Order=76, Form=XmlSchemaForm.Unqualified)]
        public bool MessageDuplicationCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MessageDuplicationCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MessageDuplicationCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MessageDuplicationCode
        {
            get
            {
                if (this.MessageDuplicationCodeValueSpecified)
                {
                    return this.MessageDuplicationCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MessageDuplicationCodeValue = value.GetValueOrDefault();
                this.MessageDuplicationCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MessageStatusIndicator", Order=77, Form=XmlSchemaForm.Unqualified)]
        public bool MessageStatusIndicatorValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MessageStatusIndicator property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MessageStatusIndicatorValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MessageStatusIndicator
        {
            get
            {
                if (this.MessageStatusIndicatorValueSpecified)
                {
                    return this.MessageStatusIndicatorValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MessageStatusIndicatorValue = value.GetValueOrDefault();
                this.MessageStatusIndicatorValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("NotificationDate", Order=78, Form=XmlSchemaForm.Unqualified)]
        public bool NotificationDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NotificationDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool NotificationDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> NotificationDate
        {
            get
            {
                if (this.NotificationDateValueSpecified)
                {
                    return this.NotificationDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NotificationDateValue = value.GetValueOrDefault();
                this.NotificationDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("NotificationMethod", Order=79, Form=XmlSchemaForm.Unqualified)]
        public bool NotificationMethodValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NotificationMethod property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool NotificationMethodValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> NotificationMethod
        {
            get
            {
                if (this.NotificationMethodValueSpecified)
                {
                    return this.NotificationMethodValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NotificationMethodValue = value.GetValueOrDefault();
                this.NotificationMethodValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("NotificationStatus", Order=80, Form=XmlSchemaForm.Unqualified)]
        public bool NotificationStatusValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NotificationStatus property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool NotificationStatusValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> NotificationStatus
        {
            get
            {
                if (this.NotificationStatusValueSpecified)
                {
                    return this.NotificationStatusValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NotificationStatusValue = value.GetValueOrDefault();
                this.NotificationStatusValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("NotificationTime", Order=81, Form=XmlSchemaForm.Unqualified)]
        public bool NotificationTimeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NotificationTime property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool NotificationTimeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> NotificationTime
        {
            get
            {
                if (this.NotificationTimeValueSpecified)
                {
                    return this.NotificationTimeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NotificationTimeValue = value.GetValueOrDefault();
                this.NotificationTimeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("NotificationUser", Order=82, Form=XmlSchemaForm.Unqualified)]
        public bool NotificationUserValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NotificationUser property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool NotificationUserValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> NotificationUser
        {
            get
            {
                if (this.NotificationUserValueSpecified)
                {
                    return this.NotificationUserValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NotificationUserValue = value.GetValueOrDefault();
                this.NotificationUserValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OfacDetails", Order=83, Form=XmlSchemaForm.Unqualified)]
        public bool OfacDetailsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OfacDetails property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OfacDetailsValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> OfacDetails
        {
            get
            {
                if (this.OfacDetailsValueSpecified)
                {
                    return this.OfacDetailsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OfacDetailsValue = value.GetValueOrDefault();
                this.OfacDetailsValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OfacStatus", Order=84, Form=XmlSchemaForm.Unqualified)]
        public bool OfacStatusValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OfacStatus property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OfacStatusValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> OfacStatus
        {
            get
            {
                if (this.OfacStatusValueSpecified)
                {
                    return this.OfacStatusValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OfacStatusValue = value.GetValueOrDefault();
                this.OfacStatusValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Omad", Order=85, Form=XmlSchemaForm.Unqualified)]
        public bool OmadValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Omad property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OmadValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Omad
        {
            get
            {
                if (this.OmadValueSpecified)
                {
                    return this.OmadValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OmadValue = value.GetValueOrDefault();
                this.OmadValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _originatorAddress;
        
        [XmlElementAttribute("OriginatorAddress", Order=86, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> OriginatorAddress
        {
            get
            {
                return _originatorAddress;
            }
            set
            {
                _originatorAddress = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the OriginatorAddress collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool OriginatorAddressSpecified
        {
            get
            {
                return ((this.OriginatorAddress != null) 
                            && (this.OriginatorAddress.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _originatorFiAddress;
        
        [XmlElementAttribute("OriginatorFiAddress", Order=87, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> OriginatorFiAddress
        {
            get
            {
                return _originatorFiAddress;
            }
            set
            {
                _originatorFiAddress = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the OriginatorFiAddress collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool OriginatorFiAddressSpecified
        {
            get
            {
                return ((this.OriginatorFiAddress != null) 
                            && (this.OriginatorFiAddress.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OriginatorFiId", Order=88, Form=XmlSchemaForm.Unqualified)]
        public bool OriginatorFiIdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OriginatorFiId property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OriginatorFiIdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> OriginatorFiId
        {
            get
            {
                if (this.OriginatorFiIdValueSpecified)
                {
                    return this.OriginatorFiIdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OriginatorFiIdValue = value.GetValueOrDefault();
                this.OriginatorFiIdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OriginatorFiIdCode", Order=89, Form=XmlSchemaForm.Unqualified)]
        public bool OriginatorFiIdCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OriginatorFiIdCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OriginatorFiIdCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> OriginatorFiIdCode
        {
            get
            {
                if (this.OriginatorFiIdCodeValueSpecified)
                {
                    return this.OriginatorFiIdCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OriginatorFiIdCodeValue = value.GetValueOrDefault();
                this.OriginatorFiIdCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OriginatorFiName", Order=90, Form=XmlSchemaForm.Unqualified)]
        public bool OriginatorFiNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OriginatorFiName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OriginatorFiNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> OriginatorFiName
        {
            get
            {
                if (this.OriginatorFiNameValueSpecified)
                {
                    return this.OriginatorFiNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OriginatorFiNameValue = value.GetValueOrDefault();
                this.OriginatorFiNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OriginatorId", Order=91, Form=XmlSchemaForm.Unqualified)]
        public bool OriginatorIdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OriginatorId property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OriginatorIdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> OriginatorId
        {
            get
            {
                if (this.OriginatorIdValueSpecified)
                {
                    return this.OriginatorIdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OriginatorIdValue = value.GetValueOrDefault();
                this.OriginatorIdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OriginatorIdCode", Order=92, Form=XmlSchemaForm.Unqualified)]
        public bool OriginatorIdCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OriginatorIdCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OriginatorIdCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> OriginatorIdCode
        {
            get
            {
                if (this.OriginatorIdCodeValueSpecified)
                {
                    return this.OriginatorIdCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OriginatorIdCodeValue = value.GetValueOrDefault();
                this.OriginatorIdCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OriginatorIdF", Order=93, Form=XmlSchemaForm.Unqualified)]
        public bool OriginatorIdFValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OriginatorIdF property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OriginatorIdFValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> OriginatorIdF
        {
            get
            {
                if (this.OriginatorIdFValueSpecified)
                {
                    return this.OriginatorIdFValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OriginatorIdFValue = value.GetValueOrDefault();
                this.OriginatorIdFValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _originatorLineCodeF;
        
        [XmlElementAttribute("OriginatorLineCodeF", Order=94, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> OriginatorLineCodeF
        {
            get
            {
                return _originatorLineCodeF;
            }
            set
            {
                _originatorLineCodeF = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the OriginatorLineCodeF collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool OriginatorLineCodeFSpecified
        {
            get
            {
                return ((this.OriginatorLineCodeF != null) 
                            && (this.OriginatorLineCodeF.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _originatorLineF;
        
        [XmlElementAttribute("OriginatorLineF", Order=95, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> OriginatorLineF
        {
            get
            {
                return _originatorLineF;
            }
            set
            {
                _originatorLineF = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the OriginatorLineF collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool OriginatorLineFSpecified
        {
            get
            {
                return ((this.OriginatorLineF != null) 
                            && (this.OriginatorLineF.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OriginatorName", Order=96, Form=XmlSchemaForm.Unqualified)]
        public bool OriginatorNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OriginatorName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OriginatorNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> OriginatorName
        {
            get
            {
                if (this.OriginatorNameValueSpecified)
                {
                    return this.OriginatorNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OriginatorNameValue = value.GetValueOrDefault();
                this.OriginatorNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OriginatorNameF", Order=97, Form=XmlSchemaForm.Unqualified)]
        public bool OriginatorNameFValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OriginatorNameF property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OriginatorNameFValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> OriginatorNameF
        {
            get
            {
                if (this.OriginatorNameFValueSpecified)
                {
                    return this.OriginatorNameFValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OriginatorNameFValue = value.GetValueOrDefault();
                this.OriginatorNameFValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OriginatorPartyIdF", Order=98, Form=XmlSchemaForm.Unqualified)]
        public bool OriginatorPartyIdFValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OriginatorPartyIdF property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OriginatorPartyIdFValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> OriginatorPartyIdF
        {
            get
            {
                if (this.OriginatorPartyIdFValueSpecified)
                {
                    return this.OriginatorPartyIdFValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OriginatorPartyIdFValue = value.GetValueOrDefault();
                this.OriginatorPartyIdFValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _originatorToBeneficiaryInfo;
        
        [XmlElementAttribute("OriginatorToBeneficiaryInfo", Order=99, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> OriginatorToBeneficiaryInfo
        {
            get
            {
                return _originatorToBeneficiaryInfo;
            }
            set
            {
                _originatorToBeneficiaryInfo = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the OriginatorToBeneficiaryInfo collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool OriginatorToBeneficiaryInfoSpecified
        {
            get
            {
                return ((this.OriginatorToBeneficiaryInfo != null) 
                            && (this.OriginatorToBeneficiaryInfo.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("OtherAddLinFo", Order=100, Form=XmlSchemaForm.Unqualified)]
        public bool OtherAddLinFoValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OtherAddLinFo property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool OtherAddLinFoValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> OtherAddLinFo
        {
            get
            {
                if (this.OtherAddLinFoValueSpecified)
                {
                    return this.OtherAddLinFoValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OtherAddLinFoValue = value.GetValueOrDefault();
                this.OtherAddLinFoValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PaymentLimitation", Order=101, Form=XmlSchemaForm.Unqualified)]
        public bool PaymentLimitationValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PaymentLimitation property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PaymentLimitationValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PaymentLimitation
        {
            get
            {
                if (this.PaymentLimitationValueSpecified)
                {
                    return this.PaymentLimitationValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PaymentLimitationValue = value.GetValueOrDefault();
                this.PaymentLimitationValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PaymentMethod", Order=102, Form=XmlSchemaForm.Unqualified)]
        public bool PaymentMethodValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PaymentMethod property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PaymentMethodValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PaymentMethod
        {
            get
            {
                if (this.PaymentMethodValueSpecified)
                {
                    return this.PaymentMethodValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PaymentMethodValue = value.GetValueOrDefault();
                this.PaymentMethodValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PaymentMethodCode", Order=103, Form=XmlSchemaForm.Unqualified)]
        public bool PaymentMethodCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PaymentMethodCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PaymentMethodCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PaymentMethodCode
        {
            get
            {
                if (this.PaymentMethodCodeValueSpecified)
                {
                    return this.PaymentMethodCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PaymentMethodCodeValue = value.GetValueOrDefault();
                this.PaymentMethodCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PostingError", Order=104, Form=XmlSchemaForm.Unqualified)]
        public bool PostingErrorValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PostingError property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PostingErrorValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PostingError
        {
            get
            {
                if (this.PostingErrorValueSpecified)
                {
                    return this.PostingErrorValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PostingErrorValue = value.GetValueOrDefault();
                this.PostingErrorValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PreAuthTemplateName", Order=105, Form=XmlSchemaForm.Unqualified)]
        public bool PreAuthTemplateNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PreAuthTemplateName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PreAuthTemplateNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PreAuthTemplateName
        {
            get
            {
                if (this.PreAuthTemplateNameValueSpecified)
                {
                    return this.PreAuthTemplateNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PreAuthTemplateNameValue = value.GetValueOrDefault();
                this.PreAuthTemplateNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PreAuthTemplateNumber", Order=106, Form=XmlSchemaForm.Unqualified)]
        public bool PreAuthTemplateNumberValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PreAuthTemplateNumber property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PreAuthTemplateNumberValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PreAuthTemplateNumber
        {
            get
            {
                if (this.PreAuthTemplateNumberValueSpecified)
                {
                    return this.PreAuthTemplateNumberValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PreAuthTemplateNumberValue = value.GetValueOrDefault();
                this.PreAuthTemplateNumberValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PreviousMessageImad", Order=107, Form=XmlSchemaForm.Unqualified)]
        public bool PreviousMessageImadValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PreviousMessageImad property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PreviousMessageImadValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PreviousMessageImad
        {
            get
            {
                if (this.PreviousMessageImadValueSpecified)
                {
                    return this.PreviousMessageImadValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PreviousMessageImadValue = value.GetValueOrDefault();
                this.PreviousMessageImadValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ReceiverFi", Order=108, Form=XmlSchemaForm.Unqualified)]
        public bool ReceiverFiValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ReceiverFi property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ReceiverFiValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ReceiverFi
        {
            get
            {
                if (this.ReceiverFiValueSpecified)
                {
                    return this.ReceiverFiValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ReceiverFiValue = value.GetValueOrDefault();
                this.ReceiverFiValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ReceiverFiInfo", Order=109, Form=XmlSchemaForm.Unqualified)]
        public bool ReceiverFiInfoValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ReceiverFiInfo property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ReceiverFiInfoValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ReceiverFiInfo
        {
            get
            {
                if (this.ReceiverFiInfoValueSpecified)
                {
                    return this.ReceiverFiInfoValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ReceiverFiInfoValue = value.GetValueOrDefault();
                this.ReceiverFiInfoValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ReceiverName", Order=110, Form=XmlSchemaForm.Unqualified)]
        public bool ReceiverNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ReceiverName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ReceiverNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ReceiverName
        {
            get
            {
                if (this.ReceiverNameValueSpecified)
                {
                    return this.ReceiverNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ReceiverNameValue = value.GetValueOrDefault();
                this.ReceiverNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("RegETran", Order=111, Form=XmlSchemaForm.Unqualified)]
        public bool RegETranValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RegETran property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool RegETranValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> RegETran
        {
            get
            {
                if (this.RegETranValueSpecified)
                {
                    return this.RegETranValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RegETranValue = value.GetValueOrDefault();
                this.RegETranValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ReleasedByCorporateUser", Order=112, Form=XmlSchemaForm.Unqualified)]
        public bool ReleasedByCorporateUserValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ReleasedByCorporateUser property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ReleasedByCorporateUserValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ReleasedByCorporateUser
        {
            get
            {
                if (this.ReleasedByCorporateUserValueSpecified)
                {
                    return this.ReleasedByCorporateUserValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ReleasedByCorporateUserValue = value.GetValueOrDefault();
                this.ReleasedByCorporateUserValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ReleasedByCorporateUserName", Order=113, Form=XmlSchemaForm.Unqualified)]
        public bool ReleasedByCorporateUserNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ReleasedByCorporateUserName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ReleasedByCorporateUserNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ReleasedByCorporateUserName
        {
            get
            {
                if (this.ReleasedByCorporateUserNameValueSpecified)
                {
                    return this.ReleasedByCorporateUserNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ReleasedByCorporateUserNameValue = value.GetValueOrDefault();
                this.ReleasedByCorporateUserNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ReleasedDate", Order=114, Form=XmlSchemaForm.Unqualified)]
        public bool ReleasedDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ReleasedDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ReleasedDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ReleasedDate
        {
            get
            {
                if (this.ReleasedDateValueSpecified)
                {
                    return this.ReleasedDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ReleasedDateValue = value.GetValueOrDefault();
                this.ReleasedDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ReleasedReason", Order=115, Form=XmlSchemaForm.Unqualified)]
        public bool ReleasedReasonValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ReleasedReason property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ReleasedReasonValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ReleasedReason
        {
            get
            {
                if (this.ReleasedReasonValueSpecified)
                {
                    return this.ReleasedReasonValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ReleasedReasonValue = value.GetValueOrDefault();
                this.ReleasedReasonValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ReleasedTime", Order=116, Form=XmlSchemaForm.Unqualified)]
        public bool ReleasedTimeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ReleasedTime property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ReleasedTimeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ReleasedTime
        {
            get
            {
                if (this.ReleasedTimeValueSpecified)
                {
                    return this.ReleasedTimeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ReleasedTimeValue = value.GetValueOrDefault();
                this.ReleasedTimeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ReturnRejectByCorpUser", Order=117, Form=XmlSchemaForm.Unqualified)]
        public bool ReturnRejectByCorpUserValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ReturnRejectByCorpUser property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ReturnRejectByCorpUserValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ReturnRejectByCorpUser
        {
            get
            {
                if (this.ReturnRejectByCorpUserValueSpecified)
                {
                    return this.ReturnRejectByCorpUserValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ReturnRejectByCorpUserValue = value.GetValueOrDefault();
                this.ReturnRejectByCorpUserValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ReturnRejectByCorpUserName", Order=118, Form=XmlSchemaForm.Unqualified)]
        public bool ReturnRejectByCorpUserNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ReturnRejectByCorpUserName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ReturnRejectByCorpUserNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ReturnRejectByCorpUserName
        {
            get
            {
                if (this.ReturnRejectByCorpUserNameValueSpecified)
                {
                    return this.ReturnRejectByCorpUserNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ReturnRejectByCorpUserNameValue = value.GetValueOrDefault();
                this.ReturnRejectByCorpUserNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ReturnRejectDate", Order=119, Form=XmlSchemaForm.Unqualified)]
        public bool ReturnRejectDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ReturnRejectDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ReturnRejectDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ReturnRejectDate
        {
            get
            {
                if (this.ReturnRejectDateValueSpecified)
                {
                    return this.ReturnRejectDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ReturnRejectDateValue = value.GetValueOrDefault();
                this.ReturnRejectDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ReturnRejectReason", Order=120, Form=XmlSchemaForm.Unqualified)]
        public bool ReturnRejectReasonValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ReturnRejectReason property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ReturnRejectReasonValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ReturnRejectReason
        {
            get
            {
                if (this.ReturnRejectReasonValueSpecified)
                {
                    return this.ReturnRejectReasonValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ReturnRejectReasonValue = value.GetValueOrDefault();
                this.ReturnRejectReasonValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ReturnRejectTime", Order=121, Form=XmlSchemaForm.Unqualified)]
        public bool ReturnRejectTimeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ReturnRejectTime property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ReturnRejectTimeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ReturnRejectTime
        {
            get
            {
                if (this.ReturnRejectTimeValueSpecified)
                {
                    return this.ReturnRejectTimeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ReturnRejectTimeValue = value.GetValueOrDefault();
                this.ReturnRejectTimeValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _senderCharges;
        
        [XmlElementAttribute("SenderCharges", Order=122, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> SenderCharges
        {
            get
            {
                return _senderCharges;
            }
            set
            {
                _senderCharges = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the SenderCharges collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool SenderChargesSpecified
        {
            get
            {
                return ((this.SenderCharges != null) 
                            && (this.SenderCharges.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SenderFi", Order=123, Form=XmlSchemaForm.Unqualified)]
        public bool SenderFiValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SenderFi property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SenderFiValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SenderFi
        {
            get
            {
                if (this.SenderFiValueSpecified)
                {
                    return this.SenderFiValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SenderFiValue = value.GetValueOrDefault();
                this.SenderFiValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SenderName", Order=124, Form=XmlSchemaForm.Unqualified)]
        public bool SenderNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SenderName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SenderNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SenderName
        {
            get
            {
                if (this.SenderNameValueSpecified)
                {
                    return this.SenderNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SenderNameValue = value.GetValueOrDefault();
                this.SenderNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SenderReferenceNumber", Order=125, Form=XmlSchemaForm.Unqualified)]
        public bool SenderReferenceNumberValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SenderReferenceNumber property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SenderReferenceNumberValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SenderReferenceNumber
        {
            get
            {
                if (this.SenderReferenceNumberValueSpecified)
                {
                    return this.SenderReferenceNumberValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SenderReferenceNumberValue = value.GetValueOrDefault();
                this.SenderReferenceNumberValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("SequenceNumber", Order=126, Form=XmlSchemaForm.Unqualified)]
        public bool SequenceNumberValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SequenceNumber property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool SequenceNumberValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> SequenceNumber
        {
            get
            {
                if (this.SequenceNumberValueSpecified)
                {
                    return this.SequenceNumberValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SequenceNumberValue = value.GetValueOrDefault();
                this.SequenceNumberValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ServiceMessage", Order=127, Form=XmlSchemaForm.Unqualified)]
        public bool ServiceMessageValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ServiceMessage property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ServiceMessageValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ServiceMessage
        {
            get
            {
                if (this.ServiceMessageValueSpecified)
                {
                    return this.ServiceMessageValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ServiceMessageValue = value.GetValueOrDefault();
                this.ServiceMessageValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ShareId", Order=128, Form=XmlSchemaForm.Unqualified)]
        public bool ShareIdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ShareId property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ShareIdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ShareId
        {
            get
            {
                if (this.ShareIdValueSpecified)
                {
                    return this.ShareIdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ShareIdValue = value.GetValueOrDefault();
                this.ShareIdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("StatementDescription", Order=129, Form=XmlSchemaForm.Unqualified)]
        public bool StatementDescriptionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StatementDescription property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool StatementDescriptionValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> StatementDescription
        {
            get
            {
                if (this.StatementDescriptionValueSpecified)
                {
                    return this.StatementDescriptionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.StatementDescriptionValue = value.GetValueOrDefault();
                this.StatementDescriptionValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Status", Order=130, Form=XmlSchemaForm.Unqualified)]
        public bool StatusValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Status property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool StatusValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Status
        {
            get
            {
                if (this.StatusValueSpecified)
                {
                    return this.StatusValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.StatusValue = value.GetValueOrDefault();
                this.StatusValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TestProductionCode", Order=131, Form=XmlSchemaForm.Unqualified)]
        public bool TestProductionCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TestProductionCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TestProductionCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TestProductionCode
        {
            get
            {
                if (this.TestProductionCodeValueSpecified)
                {
                    return this.TestProductionCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TestProductionCodeValue = value.GetValueOrDefault();
                this.TestProductionCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TranTypeCode", Order=132, Form=XmlSchemaForm.Unqualified)]
        public bool TranTypeCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TranTypeCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TranTypeCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TranTypeCode
        {
            get
            {
                if (this.TranTypeCodeValueSpecified)
                {
                    return this.TranTypeCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TranTypeCodeValue = value.GetValueOrDefault();
                this.TranTypeCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TransactionSequenceNumChar", Order=133, Form=XmlSchemaForm.Unqualified)]
        public bool TransactionSequenceNumCharValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TransactionSequenceNumChar property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TransactionSequenceNumCharValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TransactionSequenceNumChar
        {
            get
            {
                if (this.TransactionSequenceNumCharValueSpecified)
                {
                    return this.TransactionSequenceNumCharValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TransactionSequenceNumCharValue = value.GetValueOrDefault();
                this.TransactionSequenceNumCharValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TransactionSequenceNumber", Order=134, Form=XmlSchemaForm.Unqualified)]
        public bool TransactionSequenceNumberValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TransactionSequenceNumber property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TransactionSequenceNumberValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TransactionSequenceNumber
        {
            get
            {
                if (this.TransactionSequenceNumberValueSpecified)
                {
                    return this.TransactionSequenceNumberValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TransactionSequenceNumberValue = value.GetValueOrDefault();
                this.TransactionSequenceNumberValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Type", Order=135, Form=XmlSchemaForm.Unqualified)]
        public bool TypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Type property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Type
        {
            get
            {
                if (this.TypeValueSpecified)
                {
                    return this.TypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TypeValue = value.GetValueOrDefault();
                this.TypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TypeCode", Order=136, Form=XmlSchemaForm.Unqualified)]
        public bool TypeCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TypeCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TypeCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TypeCode
        {
            get
            {
                if (this.TypeCodeValueSpecified)
                {
                    return this.TypeCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TypeCodeValue = value.GetValueOrDefault();
                this.TypeCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UpLoadedTime", Order=137, Form=XmlSchemaForm.Unqualified)]
        public bool UpLoadedTimeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UpLoadedTime property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UpLoadedTimeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UpLoadedTime
        {
            get
            {
                if (this.UpLoadedTimeValueSpecified)
                {
                    return this.UpLoadedTimeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UpLoadedTimeValue = value.GetValueOrDefault();
                this.UpLoadedTimeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UploadedDate", Order=138, Form=XmlSchemaForm.Unqualified)]
        public bool UploadedDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UploadedDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UploadedDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UploadedDate
        {
            get
            {
                if (this.UploadedDateValueSpecified)
                {
                    return this.UploadedDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UploadedDateValue = value.GetValueOrDefault();
                this.UploadedDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UrcData", Order=139, Form=XmlSchemaForm.Unqualified)]
        public bool UrcDataValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UrcData property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UrcDataValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UrcData
        {
            get
            {
                if (this.UrcDataValueSpecified)
                {
                    return this.UrcDataValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UrcDataValue = value.GetValueOrDefault();
                this.UrcDataValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UscAuditTrailInfo", Order=140, Form=XmlSchemaForm.Unqualified)]
        public bool UscAuditTrailInfoValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UscAuditTrailInfo property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UscAuditTrailInfoValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UscAuditTrailInfo
        {
            get
            {
                if (this.UscAuditTrailInfoValueSpecified)
                {
                    return this.UscAuditTrailInfoValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UscAuditTrailInfoValue = value.GetValueOrDefault();
                this.UscAuditTrailInfoValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("VerificationMemberContact", Order=141, Form=XmlSchemaForm.Unqualified)]
        public bool VerificationMemberContactValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the VerificationMemberContact property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool VerificationMemberContactValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> VerificationMemberContact
        {
            get
            {
                if (this.VerificationMemberContactValueSpecified)
                {
                    return this.VerificationMemberContactValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.VerificationMemberContactValue = value.GetValueOrDefault();
                this.VerificationMemberContactValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("VerificationMemberContactName", Order=142, Form=XmlSchemaForm.Unqualified)]
        public bool VerificationMemberContactNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the VerificationMemberContactName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool VerificationMemberContactNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> VerificationMemberContactName
        {
            get
            {
                if (this.VerificationMemberContactNameValueSpecified)
                {
                    return this.VerificationMemberContactNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.VerificationMemberContactNameValue = value.GetValueOrDefault();
                this.VerificationMemberContactNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("VerifiedByCorpUser", Order=143, Form=XmlSchemaForm.Unqualified)]
        public bool VerifiedByCorpUserValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the VerifiedByCorpUser property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool VerifiedByCorpUserValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> VerifiedByCorpUser
        {
            get
            {
                if (this.VerifiedByCorpUserValueSpecified)
                {
                    return this.VerifiedByCorpUserValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.VerifiedByCorpUserValue = value.GetValueOrDefault();
                this.VerifiedByCorpUserValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("VerifiedByCorpUserName", Order=144, Form=XmlSchemaForm.Unqualified)]
        public bool VerifiedByCorpUserNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the VerifiedByCorpUserName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool VerifiedByCorpUserNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> VerifiedByCorpUserName
        {
            get
            {
                if (this.VerifiedByCorpUserNameValueSpecified)
                {
                    return this.VerifiedByCorpUserNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.VerifiedByCorpUserNameValue = value.GetValueOrDefault();
                this.VerifiedByCorpUserNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("VerifiedByMemberUser", Order=145, Form=XmlSchemaForm.Unqualified)]
        public bool VerifiedByMemberUserValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the VerifiedByMemberUser property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool VerifiedByMemberUserValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> VerifiedByMemberUser
        {
            get
            {
                if (this.VerifiedByMemberUserValueSpecified)
                {
                    return this.VerifiedByMemberUserValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.VerifiedByMemberUserValue = value.GetValueOrDefault();
                this.VerifiedByMemberUserValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("VerifiedByMemberUserName", Order=146, Form=XmlSchemaForm.Unqualified)]
        public bool VerifiedByMemberUserNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the VerifiedByMemberUserName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool VerifiedByMemberUserNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> VerifiedByMemberUserName
        {
            get
            {
                if (this.VerifiedByMemberUserNameValueSpecified)
                {
                    return this.VerifiedByMemberUserNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.VerifiedByMemberUserNameValue = value.GetValueOrDefault();
                this.VerifiedByMemberUserNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("VerifiedDate", Order=147, Form=XmlSchemaForm.Unqualified)]
        public bool VerifiedDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the VerifiedDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool VerifiedDateValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> VerifiedDate
        {
            get
            {
                if (this.VerifiedDateValueSpecified)
                {
                    return this.VerifiedDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.VerifiedDateValue = value.GetValueOrDefault();
                this.VerifiedDateValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("VerifiedTime", Order=148, Form=XmlSchemaForm.Unqualified)]
        public bool VerifiedTimeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the VerifiedTime property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool VerifiedTimeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> VerifiedTime
        {
            get
            {
                if (this.VerifiedTimeValueSpecified)
                {
                    return this.VerifiedTimeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.VerifiedTimeValue = value.GetValueOrDefault();
                this.VerifiedTimeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("VerifiedValidationMethod", Order=149, Form=XmlSchemaForm.Unqualified)]
        public bool VerifiedValidationMethodValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the VerifiedValidationMethod property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool VerifiedValidationMethodValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> VerifiedValidationMethod
        {
            get
            {
                if (this.VerifiedValidationMethodValueSpecified)
                {
                    return this.VerifiedValidationMethodValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.VerifiedValidationMethodValue = value.GetValueOrDefault();
                this.VerifiedValidationMethodValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("VerifiedValidationReason", Order=150, Form=XmlSchemaForm.Unqualified)]
        public bool VerifiedValidationReasonValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the VerifiedValidationReason property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool VerifiedValidationReasonValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> VerifiedValidationReason
        {
            get
            {
                if (this.VerifiedValidationReasonValueSpecified)
                {
                    return this.VerifiedValidationReasonValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.VerifiedValidationReasonValue = value.GetValueOrDefault();
                this.VerifiedValidationReasonValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("WireFor", Order=151, Form=XmlSchemaForm.Unqualified)]
        public bool WireForValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the WireFor property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool WireForValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> WireFor
        {
            get
            {
                if (this.WireForValueSpecified)
                {
                    return this.WireForValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.WireForValue = value.GetValueOrDefault();
                this.WireForValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("Version_1", Order=152, Form=XmlSchemaForm.Unqualified)]
        public WireService.VersionType Version1 { get; set; }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CdtrAcctCurrency", Order=153, Form=XmlSchemaForm.Unqualified)]
        public bool CdtrAcctCurrencyValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CdtrAcctCurrency property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CdtrAcctCurrencyValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CdtrAcctCurrency
        {
            get
            {
                if (this.CdtrAcctCurrencyValueSpecified)
                {
                    return this.CdtrAcctCurrencyValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CdtrAcctCurrencyValue = value.GetValueOrDefault();
                this.CdtrAcctCurrencyValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CdtrAcctIban", Order=154, Form=XmlSchemaForm.Unqualified)]
        public bool CdtrAcctIbanValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CdtrAcctIban property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CdtrAcctIbanValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CdtrAcctIban
        {
            get
            {
                if (this.CdtrAcctIbanValueSpecified)
                {
                    return this.CdtrAcctIbanValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CdtrAcctIbanValue = value.GetValueOrDefault();
                this.CdtrAcctIbanValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CdtrAcctId", Order=155, Form=XmlSchemaForm.Unqualified)]
        public bool CdtrAcctIdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CdtrAcctId property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CdtrAcctIdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CdtrAcctId
        {
            get
            {
                if (this.CdtrAcctIdValueSpecified)
                {
                    return this.CdtrAcctIdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CdtrAcctIdValue = value.GetValueOrDefault();
                this.CdtrAcctIdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CdtrAcctIdCode", Order=156, Form=XmlSchemaForm.Unqualified)]
        public bool CdtrAcctIdCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CdtrAcctIdCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CdtrAcctIdCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CdtrAcctIdCode
        {
            get
            {
                if (this.CdtrAcctIdCodeValueSpecified)
                {
                    return this.CdtrAcctIdCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CdtrAcctIdCodeValue = value.GetValueOrDefault();
                this.CdtrAcctIdCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CdtrAcctIdIssuer", Order=157, Form=XmlSchemaForm.Unqualified)]
        public bool CdtrAcctIdIssuerValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CdtrAcctIdIssuer property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CdtrAcctIdIssuerValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CdtrAcctIdIssuer
        {
            get
            {
                if (this.CdtrAcctIdIssuerValueSpecified)
                {
                    return this.CdtrAcctIdIssuerValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CdtrAcctIdIssuerValue = value.GetValueOrDefault();
                this.CdtrAcctIdIssuerValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CdtrAcctIdProprietary", Order=158, Form=XmlSchemaForm.Unqualified)]
        public bool CdtrAcctIdProprietaryValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CdtrAcctIdProprietary property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CdtrAcctIdProprietaryValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CdtrAcctIdProprietary
        {
            get
            {
                if (this.CdtrAcctIdProprietaryValueSpecified)
                {
                    return this.CdtrAcctIdProprietaryValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CdtrAcctIdProprietaryValue = value.GetValueOrDefault();
                this.CdtrAcctIdProprietaryValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _cdtrAcctName;
        
        [XmlElementAttribute("CdtrAcctName", Order=159, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> CdtrAcctName
        {
            get
            {
                return _cdtrAcctName;
            }
            set
            {
                _cdtrAcctName = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CdtrAcctName collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool CdtrAcctNameSpecified
        {
            get
            {
                return ((this.CdtrAcctName != null) 
                            && (this.CdtrAcctName.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CdtrAcctProxyCode", Order=160, Form=XmlSchemaForm.Unqualified)]
        public bool CdtrAcctProxyCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CdtrAcctProxyCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CdtrAcctProxyCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CdtrAcctProxyCode
        {
            get
            {
                if (this.CdtrAcctProxyCodeValueSpecified)
                {
                    return this.CdtrAcctProxyCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CdtrAcctProxyCodeValue = value.GetValueOrDefault();
                this.CdtrAcctProxyCodeValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _cdtrAcctProxyId;
        
        [XmlElementAttribute("CdtrAcctProxyId", Order=161, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> CdtrAcctProxyId
        {
            get
            {
                return _cdtrAcctProxyId;
            }
            set
            {
                _cdtrAcctProxyId = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CdtrAcctProxyId collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool CdtrAcctProxyIdSpecified
        {
            get
            {
                return ((this.CdtrAcctProxyId != null) 
                            && (this.CdtrAcctProxyId.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CdtrAcctProxyProprietary", Order=162, Form=XmlSchemaForm.Unqualified)]
        public bool CdtrAcctProxyProprietaryValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CdtrAcctProxyProprietary property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CdtrAcctProxyProprietaryValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CdtrAcctProxyProprietary
        {
            get
            {
                if (this.CdtrAcctProxyProprietaryValueSpecified)
                {
                    return this.CdtrAcctProxyProprietaryValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CdtrAcctProxyProprietaryValue = value.GetValueOrDefault();
                this.CdtrAcctProxyProprietaryValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CdtrAcctTypeCode", Order=163, Form=XmlSchemaForm.Unqualified)]
        public bool CdtrAcctTypeCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CdtrAcctTypeCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CdtrAcctTypeCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CdtrAcctTypeCode
        {
            get
            {
                if (this.CdtrAcctTypeCodeValueSpecified)
                {
                    return this.CdtrAcctTypeCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CdtrAcctTypeCodeValue = value.GetValueOrDefault();
                this.CdtrAcctTypeCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CdtrAcctTypeProprietary", Order=164, Form=XmlSchemaForm.Unqualified)]
        public bool CdtrAcctTypeProprietaryValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CdtrAcctTypeProprietary property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CdtrAcctTypeProprietaryValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CdtrAcctTypeProprietary
        {
            get
            {
                if (this.CdtrAcctTypeProprietaryValueSpecified)
                {
                    return this.CdtrAcctTypeProprietaryValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CdtrAcctTypeProprietaryValue = value.GetValueOrDefault();
                this.CdtrAcctTypeProprietaryValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CdtrAgtAcctCurrency", Order=165, Form=XmlSchemaForm.Unqualified)]
        public bool CdtrAgtAcctCurrencyValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CdtrAgtAcctCurrency property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CdtrAgtAcctCurrencyValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CdtrAgtAcctCurrency
        {
            get
            {
                if (this.CdtrAgtAcctCurrencyValueSpecified)
                {
                    return this.CdtrAgtAcctCurrencyValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CdtrAgtAcctCurrencyValue = value.GetValueOrDefault();
                this.CdtrAgtAcctCurrencyValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CdtrAgtAcctIban", Order=166, Form=XmlSchemaForm.Unqualified)]
        public bool CdtrAgtAcctIbanValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CdtrAgtAcctIban property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CdtrAgtAcctIbanValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CdtrAgtAcctIban
        {
            get
            {
                if (this.CdtrAgtAcctIbanValueSpecified)
                {
                    return this.CdtrAgtAcctIbanValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CdtrAgtAcctIbanValue = value.GetValueOrDefault();
                this.CdtrAgtAcctIbanValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CdtrAgtAcctId", Order=167, Form=XmlSchemaForm.Unqualified)]
        public bool CdtrAgtAcctIdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CdtrAgtAcctId property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CdtrAgtAcctIdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CdtrAgtAcctId
        {
            get
            {
                if (this.CdtrAgtAcctIdValueSpecified)
                {
                    return this.CdtrAgtAcctIdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CdtrAgtAcctIdValue = value.GetValueOrDefault();
                this.CdtrAgtAcctIdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CdtrAgtAcctIdCode", Order=168, Form=XmlSchemaForm.Unqualified)]
        public bool CdtrAgtAcctIdCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CdtrAgtAcctIdCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CdtrAgtAcctIdCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CdtrAgtAcctIdCode
        {
            get
            {
                if (this.CdtrAgtAcctIdCodeValueSpecified)
                {
                    return this.CdtrAgtAcctIdCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CdtrAgtAcctIdCodeValue = value.GetValueOrDefault();
                this.CdtrAgtAcctIdCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CdtrAgtAcctIdIssuer", Order=169, Form=XmlSchemaForm.Unqualified)]
        public bool CdtrAgtAcctIdIssuerValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CdtrAgtAcctIdIssuer property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CdtrAgtAcctIdIssuerValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CdtrAgtAcctIdIssuer
        {
            get
            {
                if (this.CdtrAgtAcctIdIssuerValueSpecified)
                {
                    return this.CdtrAgtAcctIdIssuerValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CdtrAgtAcctIdIssuerValue = value.GetValueOrDefault();
                this.CdtrAgtAcctIdIssuerValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CdtrAgtAcctIdProprietary", Order=170, Form=XmlSchemaForm.Unqualified)]
        public bool CdtrAgtAcctIdProprietaryValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CdtrAgtAcctIdProprietary property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CdtrAgtAcctIdProprietaryValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CdtrAgtAcctIdProprietary
        {
            get
            {
                if (this.CdtrAgtAcctIdProprietaryValueSpecified)
                {
                    return this.CdtrAgtAcctIdProprietaryValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CdtrAgtAcctIdProprietaryValue = value.GetValueOrDefault();
                this.CdtrAgtAcctIdProprietaryValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _cdtrAgtAcctName;
        
        [XmlElementAttribute("CdtrAgtAcctName", Order=171, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> CdtrAgtAcctName
        {
            get
            {
                return _cdtrAgtAcctName;
            }
            set
            {
                _cdtrAgtAcctName = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CdtrAgtAcctName collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool CdtrAgtAcctNameSpecified
        {
            get
            {
                return ((this.CdtrAgtAcctName != null) 
                            && (this.CdtrAgtAcctName.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CdtrAgtAcctProxyCode", Order=172, Form=XmlSchemaForm.Unqualified)]
        public bool CdtrAgtAcctProxyCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CdtrAgtAcctProxyCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CdtrAgtAcctProxyCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CdtrAgtAcctProxyCode
        {
            get
            {
                if (this.CdtrAgtAcctProxyCodeValueSpecified)
                {
                    return this.CdtrAgtAcctProxyCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CdtrAgtAcctProxyCodeValue = value.GetValueOrDefault();
                this.CdtrAgtAcctProxyCodeValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _cdtrAgtAcctProxyId;
        
        [XmlElementAttribute("CdtrAgtAcctProxyId", Order=173, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> CdtrAgtAcctProxyId
        {
            get
            {
                return _cdtrAgtAcctProxyId;
            }
            set
            {
                _cdtrAgtAcctProxyId = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CdtrAgtAcctProxyId collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool CdtrAgtAcctProxyIdSpecified
        {
            get
            {
                return ((this.CdtrAgtAcctProxyId != null) 
                            && (this.CdtrAgtAcctProxyId.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CdtrAgtAcctProxyProprietary", Order=174, Form=XmlSchemaForm.Unqualified)]
        public bool CdtrAgtAcctProxyProprietaryValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CdtrAgtAcctProxyProprietary property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CdtrAgtAcctProxyProprietaryValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CdtrAgtAcctProxyProprietary
        {
            get
            {
                if (this.CdtrAgtAcctProxyProprietaryValueSpecified)
                {
                    return this.CdtrAgtAcctProxyProprietaryValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CdtrAgtAcctProxyProprietaryValue = value.GetValueOrDefault();
                this.CdtrAgtAcctProxyProprietaryValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CdtrAgtAcctTypeCode", Order=175, Form=XmlSchemaForm.Unqualified)]
        public bool CdtrAgtAcctTypeCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CdtrAgtAcctTypeCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CdtrAgtAcctTypeCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CdtrAgtAcctTypeCode
        {
            get
            {
                if (this.CdtrAgtAcctTypeCodeValueSpecified)
                {
                    return this.CdtrAgtAcctTypeCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CdtrAgtAcctTypeCodeValue = value.GetValueOrDefault();
                this.CdtrAgtAcctTypeCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CdtrAgtAcctTypeProprietary", Order=176, Form=XmlSchemaForm.Unqualified)]
        public bool CdtrAgtAcctTypeProprietaryValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CdtrAgtAcctTypeProprietary property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CdtrAgtAcctTypeProprietaryValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CdtrAgtAcctTypeProprietary
        {
            get
            {
                if (this.CdtrAgtAcctTypeProprietaryValueSpecified)
                {
                    return this.CdtrAgtAcctTypeProprietaryValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CdtrAgtAcctTypeProprietaryValue = value.GetValueOrDefault();
                this.CdtrAgtAcctTypeProprietaryValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ChargeAgent1Bic", Order=177, Form=XmlSchemaForm.Unqualified)]
        public bool ChargeAgent1BicValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ChargeAgent1Bic property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ChargeAgent1BicValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ChargeAgent1Bic
        {
            get
            {
                if (this.ChargeAgent1BicValueSpecified)
                {
                    return this.ChargeAgent1BicValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ChargeAgent1BicValue = value.GetValueOrDefault();
                this.ChargeAgent1BicValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ChargeAgent1BuildingName", Order=178, Form=XmlSchemaForm.Unqualified)]
        public bool ChargeAgent1BuildingNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ChargeAgent1BuildingName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ChargeAgent1BuildingNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ChargeAgent1BuildingName
        {
            get
            {
                if (this.ChargeAgent1BuildingNameValueSpecified)
                {
                    return this.ChargeAgent1BuildingNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ChargeAgent1BuildingNameValue = value.GetValueOrDefault();
                this.ChargeAgent1BuildingNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ChargeAgent1BuildingNum", Order=179, Form=XmlSchemaForm.Unqualified)]
        public bool ChargeAgent1BuildingNumValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ChargeAgent1BuildingNum property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ChargeAgent1BuildingNumValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ChargeAgent1BuildingNum
        {
            get
            {
                if (this.ChargeAgent1BuildingNumValueSpecified)
                {
                    return this.ChargeAgent1BuildingNumValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ChargeAgent1BuildingNumValue = value.GetValueOrDefault();
                this.ChargeAgent1BuildingNumValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ChargeAgent1ClrSysMemId", Order=180, Form=XmlSchemaForm.Unqualified)]
        public bool ChargeAgent1ClrSysMemIdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ChargeAgent1ClrSysMemId property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ChargeAgent1ClrSysMemIdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ChargeAgent1ClrSysMemId
        {
            get
            {
                if (this.ChargeAgent1ClrSysMemIdValueSpecified)
                {
                    return this.ChargeAgent1ClrSysMemIdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ChargeAgent1ClrSysMemIdValue = value.GetValueOrDefault();
                this.ChargeAgent1ClrSysMemIdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ChargeAgent1ClrSysMemIdCode", Order=181, Form=XmlSchemaForm.Unqualified)]
        public bool ChargeAgent1ClrSysMemIdCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ChargeAgent1ClrSysMemIdCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ChargeAgent1ClrSysMemIdCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ChargeAgent1ClrSysMemIdCode
        {
            get
            {
                if (this.ChargeAgent1ClrSysMemIdCodeValueSpecified)
                {
                    return this.ChargeAgent1ClrSysMemIdCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ChargeAgent1ClrSysMemIdCodeValue = value.GetValueOrDefault();
                this.ChargeAgent1ClrSysMemIdCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ChargeAgent1Country", Order=182, Form=XmlSchemaForm.Unqualified)]
        public bool ChargeAgent1CountryValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ChargeAgent1Country property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ChargeAgent1CountryValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ChargeAgent1Country
        {
            get
            {
                if (this.ChargeAgent1CountryValueSpecified)
                {
                    return this.ChargeAgent1CountryValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ChargeAgent1CountryValue = value.GetValueOrDefault();
                this.ChargeAgent1CountryValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ChargeAgent1CountrySubDiv", Order=183, Form=XmlSchemaForm.Unqualified)]
        public bool ChargeAgent1CountrySubDivValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ChargeAgent1CountrySubDiv property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ChargeAgent1CountrySubDivValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ChargeAgent1CountrySubDiv
        {
            get
            {
                if (this.ChargeAgent1CountrySubDivValueSpecified)
                {
                    return this.ChargeAgent1CountrySubDivValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ChargeAgent1CountrySubDivValue = value.GetValueOrDefault();
                this.ChargeAgent1CountrySubDivValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _chargeAgent1Department;
        
        [XmlElementAttribute("ChargeAgent1Department", Order=184, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> ChargeAgent1Department
        {
            get
            {
                return _chargeAgent1Department;
            }
            set
            {
                _chargeAgent1Department = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ChargeAgent1Department collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool ChargeAgent1DepartmentSpecified
        {
            get
            {
                return ((this.ChargeAgent1Department != null) 
                            && (this.ChargeAgent1Department.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ChargeAgent1DistrictName", Order=185, Form=XmlSchemaForm.Unqualified)]
        public bool ChargeAgent1DistrictNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ChargeAgent1DistrictName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ChargeAgent1DistrictNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ChargeAgent1DistrictName
        {
            get
            {
                if (this.ChargeAgent1DistrictNameValueSpecified)
                {
                    return this.ChargeAgent1DistrictNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ChargeAgent1DistrictNameValue = value.GetValueOrDefault();
                this.ChargeAgent1DistrictNameValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _chargeAgent1Floor;
        
        [XmlElementAttribute("ChargeAgent1Floor", Order=186, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> ChargeAgent1Floor
        {
            get
            {
                return _chargeAgent1Floor;
            }
            set
            {
                _chargeAgent1Floor = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ChargeAgent1Floor collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool ChargeAgent1FloorSpecified
        {
            get
            {
                return ((this.ChargeAgent1Floor != null) 
                            && (this.ChargeAgent1Floor.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ChargeAgent1Lei", Order=187, Form=XmlSchemaForm.Unqualified)]
        public bool ChargeAgent1LeiValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ChargeAgent1Lei property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ChargeAgent1LeiValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ChargeAgent1Lei
        {
            get
            {
                if (this.ChargeAgent1LeiValueSpecified)
                {
                    return this.ChargeAgent1LeiValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ChargeAgent1LeiValue = value.GetValueOrDefault();
                this.ChargeAgent1LeiValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _chargeAgent1Name;
        
        [XmlElementAttribute("ChargeAgent1Name", Order=188, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> ChargeAgent1Name
        {
            get
            {
                return _chargeAgent1Name;
            }
            set
            {
                _chargeAgent1Name = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ChargeAgent1Name collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool ChargeAgent1NameSpecified
        {
            get
            {
                return ((this.ChargeAgent1Name != null) 
                            && (this.ChargeAgent1Name.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ChargeAgent1PostBox", Order=189, Form=XmlSchemaForm.Unqualified)]
        public bool ChargeAgent1PostBoxValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ChargeAgent1PostBox property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ChargeAgent1PostBoxValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ChargeAgent1PostBox
        {
            get
            {
                if (this.ChargeAgent1PostBoxValueSpecified)
                {
                    return this.ChargeAgent1PostBoxValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ChargeAgent1PostBoxValue = value.GetValueOrDefault();
                this.ChargeAgent1PostBoxValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ChargeAgent1PostCode", Order=190, Form=XmlSchemaForm.Unqualified)]
        public bool ChargeAgent1PostCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ChargeAgent1PostCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ChargeAgent1PostCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ChargeAgent1PostCode
        {
            get
            {
                if (this.ChargeAgent1PostCodeValueSpecified)
                {
                    return this.ChargeAgent1PostCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ChargeAgent1PostCodeValue = value.GetValueOrDefault();
                this.ChargeAgent1PostCodeValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _chargeAgent1Room;
        
        [XmlElementAttribute("ChargeAgent1Room", Order=191, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> ChargeAgent1Room
        {
            get
            {
                return _chargeAgent1Room;
            }
            set
            {
                _chargeAgent1Room = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ChargeAgent1Room collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool ChargeAgent1RoomSpecified
        {
            get
            {
                return ((this.ChargeAgent1Room != null) 
                            && (this.ChargeAgent1Room.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _chargeAgent1StreetName;
        
        [XmlElementAttribute("ChargeAgent1StreetName", Order=192, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> ChargeAgent1StreetName
        {
            get
            {
                return _chargeAgent1StreetName;
            }
            set
            {
                _chargeAgent1StreetName = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ChargeAgent1StreetName collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool ChargeAgent1StreetNameSpecified
        {
            get
            {
                return ((this.ChargeAgent1StreetName != null) 
                            && (this.ChargeAgent1StreetName.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _chargeAgent1Subdepartment;
        
        [XmlElementAttribute("ChargeAgent1Subdepartment", Order=193, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> ChargeAgent1Subdepartment
        {
            get
            {
                return _chargeAgent1Subdepartment;
            }
            set
            {
                _chargeAgent1Subdepartment = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ChargeAgent1Subdepartment collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool ChargeAgent1SubdepartmentSpecified
        {
            get
            {
                return ((this.ChargeAgent1Subdepartment != null) 
                            && (this.ChargeAgent1Subdepartment.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ChargeAgent1TownLocationName", Order=194, Form=XmlSchemaForm.Unqualified)]
        public bool ChargeAgent1TownLocationNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ChargeAgent1TownLocationName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ChargeAgent1TownLocationNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ChargeAgent1TownLocationName
        {
            get
            {
                if (this.ChargeAgent1TownLocationNameValueSpecified)
                {
                    return this.ChargeAgent1TownLocationNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ChargeAgent1TownLocationNameValue = value.GetValueOrDefault();
                this.ChargeAgent1TownLocationNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ChargeAgent1TownName", Order=195, Form=XmlSchemaForm.Unqualified)]
        public bool ChargeAgent1TownNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ChargeAgent1TownName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ChargeAgent1TownNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ChargeAgent1TownName
        {
            get
            {
                if (this.ChargeAgent1TownNameValueSpecified)
                {
                    return this.ChargeAgent1TownNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ChargeAgent1TownNameValue = value.GetValueOrDefault();
                this.ChargeAgent1TownNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ChargeAgent2Bic", Order=196, Form=XmlSchemaForm.Unqualified)]
        public bool ChargeAgent2BicValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ChargeAgent2Bic property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ChargeAgent2BicValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ChargeAgent2Bic
        {
            get
            {
                if (this.ChargeAgent2BicValueSpecified)
                {
                    return this.ChargeAgent2BicValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ChargeAgent2BicValue = value.GetValueOrDefault();
                this.ChargeAgent2BicValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ChargeAgent2BuildingName", Order=197, Form=XmlSchemaForm.Unqualified)]
        public bool ChargeAgent2BuildingNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ChargeAgent2BuildingName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ChargeAgent2BuildingNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ChargeAgent2BuildingName
        {
            get
            {
                if (this.ChargeAgent2BuildingNameValueSpecified)
                {
                    return this.ChargeAgent2BuildingNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ChargeAgent2BuildingNameValue = value.GetValueOrDefault();
                this.ChargeAgent2BuildingNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ChargeAgent2BuildingNum", Order=198, Form=XmlSchemaForm.Unqualified)]
        public bool ChargeAgent2BuildingNumValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ChargeAgent2BuildingNum property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ChargeAgent2BuildingNumValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ChargeAgent2BuildingNum
        {
            get
            {
                if (this.ChargeAgent2BuildingNumValueSpecified)
                {
                    return this.ChargeAgent2BuildingNumValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ChargeAgent2BuildingNumValue = value.GetValueOrDefault();
                this.ChargeAgent2BuildingNumValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ChargeAgent2ClrSysMemId", Order=199, Form=XmlSchemaForm.Unqualified)]
        public bool ChargeAgent2ClrSysMemIdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ChargeAgent2ClrSysMemId property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ChargeAgent2ClrSysMemIdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ChargeAgent2ClrSysMemId
        {
            get
            {
                if (this.ChargeAgent2ClrSysMemIdValueSpecified)
                {
                    return this.ChargeAgent2ClrSysMemIdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ChargeAgent2ClrSysMemIdValue = value.GetValueOrDefault();
                this.ChargeAgent2ClrSysMemIdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ChargeAgent2ClrSysMemIdCode", Order=200, Form=XmlSchemaForm.Unqualified)]
        public bool ChargeAgent2ClrSysMemIdCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ChargeAgent2ClrSysMemIdCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ChargeAgent2ClrSysMemIdCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ChargeAgent2ClrSysMemIdCode
        {
            get
            {
                if (this.ChargeAgent2ClrSysMemIdCodeValueSpecified)
                {
                    return this.ChargeAgent2ClrSysMemIdCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ChargeAgent2ClrSysMemIdCodeValue = value.GetValueOrDefault();
                this.ChargeAgent2ClrSysMemIdCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ChargeAgent2Country", Order=201, Form=XmlSchemaForm.Unqualified)]
        public bool ChargeAgent2CountryValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ChargeAgent2Country property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ChargeAgent2CountryValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ChargeAgent2Country
        {
            get
            {
                if (this.ChargeAgent2CountryValueSpecified)
                {
                    return this.ChargeAgent2CountryValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ChargeAgent2CountryValue = value.GetValueOrDefault();
                this.ChargeAgent2CountryValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ChargeAgent2CountrySubDiv", Order=202, Form=XmlSchemaForm.Unqualified)]
        public bool ChargeAgent2CountrySubDivValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ChargeAgent2CountrySubDiv property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ChargeAgent2CountrySubDivValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ChargeAgent2CountrySubDiv
        {
            get
            {
                if (this.ChargeAgent2CountrySubDivValueSpecified)
                {
                    return this.ChargeAgent2CountrySubDivValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ChargeAgent2CountrySubDivValue = value.GetValueOrDefault();
                this.ChargeAgent2CountrySubDivValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _chargeAgent2Department;
        
        [XmlElementAttribute("ChargeAgent2Department", Order=203, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> ChargeAgent2Department
        {
            get
            {
                return _chargeAgent2Department;
            }
            set
            {
                _chargeAgent2Department = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ChargeAgent2Department collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool ChargeAgent2DepartmentSpecified
        {
            get
            {
                return ((this.ChargeAgent2Department != null) 
                            && (this.ChargeAgent2Department.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ChargeAgent2DistrictName", Order=204, Form=XmlSchemaForm.Unqualified)]
        public bool ChargeAgent2DistrictNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ChargeAgent2DistrictName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ChargeAgent2DistrictNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ChargeAgent2DistrictName
        {
            get
            {
                if (this.ChargeAgent2DistrictNameValueSpecified)
                {
                    return this.ChargeAgent2DistrictNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ChargeAgent2DistrictNameValue = value.GetValueOrDefault();
                this.ChargeAgent2DistrictNameValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _chargeAgent2Floor;
        
        [XmlElementAttribute("ChargeAgent2Floor", Order=205, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> ChargeAgent2Floor
        {
            get
            {
                return _chargeAgent2Floor;
            }
            set
            {
                _chargeAgent2Floor = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ChargeAgent2Floor collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool ChargeAgent2FloorSpecified
        {
            get
            {
                return ((this.ChargeAgent2Floor != null) 
                            && (this.ChargeAgent2Floor.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ChargeAgent2Lei", Order=206, Form=XmlSchemaForm.Unqualified)]
        public bool ChargeAgent2LeiValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ChargeAgent2Lei property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ChargeAgent2LeiValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ChargeAgent2Lei
        {
            get
            {
                if (this.ChargeAgent2LeiValueSpecified)
                {
                    return this.ChargeAgent2LeiValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ChargeAgent2LeiValue = value.GetValueOrDefault();
                this.ChargeAgent2LeiValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _chargeAgent2Name;
        
        [XmlElementAttribute("ChargeAgent2Name", Order=207, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> ChargeAgent2Name
        {
            get
            {
                return _chargeAgent2Name;
            }
            set
            {
                _chargeAgent2Name = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ChargeAgent2Name collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool ChargeAgent2NameSpecified
        {
            get
            {
                return ((this.ChargeAgent2Name != null) 
                            && (this.ChargeAgent2Name.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ChargeAgent2PostBox", Order=208, Form=XmlSchemaForm.Unqualified)]
        public bool ChargeAgent2PostBoxValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ChargeAgent2PostBox property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ChargeAgent2PostBoxValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ChargeAgent2PostBox
        {
            get
            {
                if (this.ChargeAgent2PostBoxValueSpecified)
                {
                    return this.ChargeAgent2PostBoxValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ChargeAgent2PostBoxValue = value.GetValueOrDefault();
                this.ChargeAgent2PostBoxValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ChargeAgent2PostCode", Order=209, Form=XmlSchemaForm.Unqualified)]
        public bool ChargeAgent2PostCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ChargeAgent2PostCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ChargeAgent2PostCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ChargeAgent2PostCode
        {
            get
            {
                if (this.ChargeAgent2PostCodeValueSpecified)
                {
                    return this.ChargeAgent2PostCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ChargeAgent2PostCodeValue = value.GetValueOrDefault();
                this.ChargeAgent2PostCodeValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _chargeAgent2Room;
        
        [XmlElementAttribute("ChargeAgent2Room", Order=210, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> ChargeAgent2Room
        {
            get
            {
                return _chargeAgent2Room;
            }
            set
            {
                _chargeAgent2Room = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ChargeAgent2Room collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool ChargeAgent2RoomSpecified
        {
            get
            {
                return ((this.ChargeAgent2Room != null) 
                            && (this.ChargeAgent2Room.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _chargeAgent2StreetName;
        
        [XmlElementAttribute("ChargeAgent2StreetName", Order=211, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> ChargeAgent2StreetName
        {
            get
            {
                return _chargeAgent2StreetName;
            }
            set
            {
                _chargeAgent2StreetName = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ChargeAgent2StreetName collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool ChargeAgent2StreetNameSpecified
        {
            get
            {
                return ((this.ChargeAgent2StreetName != null) 
                            && (this.ChargeAgent2StreetName.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _chargeAgent2Subdepartment;
        
        [XmlElementAttribute("ChargeAgent2Subdepartment", Order=212, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> ChargeAgent2Subdepartment
        {
            get
            {
                return _chargeAgent2Subdepartment;
            }
            set
            {
                _chargeAgent2Subdepartment = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ChargeAgent2Subdepartment collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool ChargeAgent2SubdepartmentSpecified
        {
            get
            {
                return ((this.ChargeAgent2Subdepartment != null) 
                            && (this.ChargeAgent2Subdepartment.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ChargeAgent2TownLocationName", Order=213, Form=XmlSchemaForm.Unqualified)]
        public bool ChargeAgent2TownLocationNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ChargeAgent2TownLocationName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ChargeAgent2TownLocationNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ChargeAgent2TownLocationName
        {
            get
            {
                if (this.ChargeAgent2TownLocationNameValueSpecified)
                {
                    return this.ChargeAgent2TownLocationNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ChargeAgent2TownLocationNameValue = value.GetValueOrDefault();
                this.ChargeAgent2TownLocationNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ChargeAgent2TownName", Order=214, Form=XmlSchemaForm.Unqualified)]
        public bool ChargeAgent2TownNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ChargeAgent2TownName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ChargeAgent2TownNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ChargeAgent2TownName
        {
            get
            {
                if (this.ChargeAgent2TownNameValueSpecified)
                {
                    return this.ChargeAgent2TownNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ChargeAgent2TownNameValue = value.GetValueOrDefault();
                this.ChargeAgent2TownNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ChargeAgent3Bic", Order=215, Form=XmlSchemaForm.Unqualified)]
        public bool ChargeAgent3BicValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ChargeAgent3Bic property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ChargeAgent3BicValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ChargeAgent3Bic
        {
            get
            {
                if (this.ChargeAgent3BicValueSpecified)
                {
                    return this.ChargeAgent3BicValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ChargeAgent3BicValue = value.GetValueOrDefault();
                this.ChargeAgent3BicValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ChargeAgent3BuildingName", Order=216, Form=XmlSchemaForm.Unqualified)]
        public bool ChargeAgent3BuildingNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ChargeAgent3BuildingName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ChargeAgent3BuildingNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ChargeAgent3BuildingName
        {
            get
            {
                if (this.ChargeAgent3BuildingNameValueSpecified)
                {
                    return this.ChargeAgent3BuildingNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ChargeAgent3BuildingNameValue = value.GetValueOrDefault();
                this.ChargeAgent3BuildingNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ChargeAgent3BuildingNum", Order=217, Form=XmlSchemaForm.Unqualified)]
        public bool ChargeAgent3BuildingNumValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ChargeAgent3BuildingNum property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ChargeAgent3BuildingNumValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ChargeAgent3BuildingNum
        {
            get
            {
                if (this.ChargeAgent3BuildingNumValueSpecified)
                {
                    return this.ChargeAgent3BuildingNumValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ChargeAgent3BuildingNumValue = value.GetValueOrDefault();
                this.ChargeAgent3BuildingNumValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ChargeAgent3ClrSysMemId", Order=218, Form=XmlSchemaForm.Unqualified)]
        public bool ChargeAgent3ClrSysMemIdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ChargeAgent3ClrSysMemId property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ChargeAgent3ClrSysMemIdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ChargeAgent3ClrSysMemId
        {
            get
            {
                if (this.ChargeAgent3ClrSysMemIdValueSpecified)
                {
                    return this.ChargeAgent3ClrSysMemIdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ChargeAgent3ClrSysMemIdValue = value.GetValueOrDefault();
                this.ChargeAgent3ClrSysMemIdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ChargeAgent3ClrSysMemIdCode", Order=219, Form=XmlSchemaForm.Unqualified)]
        public bool ChargeAgent3ClrSysMemIdCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ChargeAgent3ClrSysMemIdCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ChargeAgent3ClrSysMemIdCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ChargeAgent3ClrSysMemIdCode
        {
            get
            {
                if (this.ChargeAgent3ClrSysMemIdCodeValueSpecified)
                {
                    return this.ChargeAgent3ClrSysMemIdCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ChargeAgent3ClrSysMemIdCodeValue = value.GetValueOrDefault();
                this.ChargeAgent3ClrSysMemIdCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ChargeAgent3Country", Order=220, Form=XmlSchemaForm.Unqualified)]
        public bool ChargeAgent3CountryValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ChargeAgent3Country property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ChargeAgent3CountryValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ChargeAgent3Country
        {
            get
            {
                if (this.ChargeAgent3CountryValueSpecified)
                {
                    return this.ChargeAgent3CountryValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ChargeAgent3CountryValue = value.GetValueOrDefault();
                this.ChargeAgent3CountryValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ChargeAgent3CountrySubDiv", Order=221, Form=XmlSchemaForm.Unqualified)]
        public bool ChargeAgent3CountrySubDivValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ChargeAgent3CountrySubDiv property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ChargeAgent3CountrySubDivValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ChargeAgent3CountrySubDiv
        {
            get
            {
                if (this.ChargeAgent3CountrySubDivValueSpecified)
                {
                    return this.ChargeAgent3CountrySubDivValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ChargeAgent3CountrySubDivValue = value.GetValueOrDefault();
                this.ChargeAgent3CountrySubDivValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _chargeAgent3Department;
        
        [XmlElementAttribute("ChargeAgent3Department", Order=222, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> ChargeAgent3Department
        {
            get
            {
                return _chargeAgent3Department;
            }
            set
            {
                _chargeAgent3Department = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ChargeAgent3Department collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool ChargeAgent3DepartmentSpecified
        {
            get
            {
                return ((this.ChargeAgent3Department != null) 
                            && (this.ChargeAgent3Department.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ChargeAgent3DistrictName", Order=223, Form=XmlSchemaForm.Unqualified)]
        public bool ChargeAgent3DistrictNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ChargeAgent3DistrictName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ChargeAgent3DistrictNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ChargeAgent3DistrictName
        {
            get
            {
                if (this.ChargeAgent3DistrictNameValueSpecified)
                {
                    return this.ChargeAgent3DistrictNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ChargeAgent3DistrictNameValue = value.GetValueOrDefault();
                this.ChargeAgent3DistrictNameValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _chargeAgent3Floor;
        
        [XmlElementAttribute("ChargeAgent3Floor", Order=224, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> ChargeAgent3Floor
        {
            get
            {
                return _chargeAgent3Floor;
            }
            set
            {
                _chargeAgent3Floor = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ChargeAgent3Floor collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool ChargeAgent3FloorSpecified
        {
            get
            {
                return ((this.ChargeAgent3Floor != null) 
                            && (this.ChargeAgent3Floor.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ChargeAgent3Lei", Order=225, Form=XmlSchemaForm.Unqualified)]
        public bool ChargeAgent3LeiValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ChargeAgent3Lei property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ChargeAgent3LeiValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ChargeAgent3Lei
        {
            get
            {
                if (this.ChargeAgent3LeiValueSpecified)
                {
                    return this.ChargeAgent3LeiValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ChargeAgent3LeiValue = value.GetValueOrDefault();
                this.ChargeAgent3LeiValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _chargeAgent3Name;
        
        [XmlElementAttribute("ChargeAgent3Name", Order=226, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> ChargeAgent3Name
        {
            get
            {
                return _chargeAgent3Name;
            }
            set
            {
                _chargeAgent3Name = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ChargeAgent3Name collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool ChargeAgent3NameSpecified
        {
            get
            {
                return ((this.ChargeAgent3Name != null) 
                            && (this.ChargeAgent3Name.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ChargeAgent3PostBox", Order=227, Form=XmlSchemaForm.Unqualified)]
        public bool ChargeAgent3PostBoxValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ChargeAgent3PostBox property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ChargeAgent3PostBoxValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ChargeAgent3PostBox
        {
            get
            {
                if (this.ChargeAgent3PostBoxValueSpecified)
                {
                    return this.ChargeAgent3PostBoxValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ChargeAgent3PostBoxValue = value.GetValueOrDefault();
                this.ChargeAgent3PostBoxValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ChargeAgent3PostCode", Order=228, Form=XmlSchemaForm.Unqualified)]
        public bool ChargeAgent3PostCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ChargeAgent3PostCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ChargeAgent3PostCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ChargeAgent3PostCode
        {
            get
            {
                if (this.ChargeAgent3PostCodeValueSpecified)
                {
                    return this.ChargeAgent3PostCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ChargeAgent3PostCodeValue = value.GetValueOrDefault();
                this.ChargeAgent3PostCodeValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _chargeAgent3Room;
        
        [XmlElementAttribute("ChargeAgent3Room", Order=229, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> ChargeAgent3Room
        {
            get
            {
                return _chargeAgent3Room;
            }
            set
            {
                _chargeAgent3Room = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ChargeAgent3Room collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool ChargeAgent3RoomSpecified
        {
            get
            {
                return ((this.ChargeAgent3Room != null) 
                            && (this.ChargeAgent3Room.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _chargeAgent3StreetName;
        
        [XmlElementAttribute("ChargeAgent3StreetName", Order=230, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> ChargeAgent3StreetName
        {
            get
            {
                return _chargeAgent3StreetName;
            }
            set
            {
                _chargeAgent3StreetName = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ChargeAgent3StreetName collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool ChargeAgent3StreetNameSpecified
        {
            get
            {
                return ((this.ChargeAgent3StreetName != null) 
                            && (this.ChargeAgent3StreetName.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _chargeAgent3Subdepartment;
        
        [XmlElementAttribute("ChargeAgent3Subdepartment", Order=231, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> ChargeAgent3Subdepartment
        {
            get
            {
                return _chargeAgent3Subdepartment;
            }
            set
            {
                _chargeAgent3Subdepartment = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ChargeAgent3Subdepartment collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool ChargeAgent3SubdepartmentSpecified
        {
            get
            {
                return ((this.ChargeAgent3Subdepartment != null) 
                            && (this.ChargeAgent3Subdepartment.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ChargeAgent3TownLocationName", Order=232, Form=XmlSchemaForm.Unqualified)]
        public bool ChargeAgent3TownLocationNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ChargeAgent3TownLocationName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ChargeAgent3TownLocationNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ChargeAgent3TownLocationName
        {
            get
            {
                if (this.ChargeAgent3TownLocationNameValueSpecified)
                {
                    return this.ChargeAgent3TownLocationNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ChargeAgent3TownLocationNameValue = value.GetValueOrDefault();
                this.ChargeAgent3TownLocationNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ChargeAgent3TownName", Order=233, Form=XmlSchemaForm.Unqualified)]
        public bool ChargeAgent3TownNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ChargeAgent3TownName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ChargeAgent3TownNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ChargeAgent3TownName
        {
            get
            {
                if (this.ChargeAgent3TownNameValueSpecified)
                {
                    return this.ChargeAgent3TownNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ChargeAgent3TownNameValue = value.GetValueOrDefault();
                this.ChargeAgent3TownNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ChargeAgent4Bic", Order=234, Form=XmlSchemaForm.Unqualified)]
        public bool ChargeAgent4BicValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ChargeAgent4Bic property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ChargeAgent4BicValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ChargeAgent4Bic
        {
            get
            {
                if (this.ChargeAgent4BicValueSpecified)
                {
                    return this.ChargeAgent4BicValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ChargeAgent4BicValue = value.GetValueOrDefault();
                this.ChargeAgent4BicValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ChargeAgent4BuildingName", Order=235, Form=XmlSchemaForm.Unqualified)]
        public bool ChargeAgent4BuildingNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ChargeAgent4BuildingName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ChargeAgent4BuildingNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ChargeAgent4BuildingName
        {
            get
            {
                if (this.ChargeAgent4BuildingNameValueSpecified)
                {
                    return this.ChargeAgent4BuildingNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ChargeAgent4BuildingNameValue = value.GetValueOrDefault();
                this.ChargeAgent4BuildingNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ChargeAgent4BuildingNum", Order=236, Form=XmlSchemaForm.Unqualified)]
        public bool ChargeAgent4BuildingNumValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ChargeAgent4BuildingNum property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ChargeAgent4BuildingNumValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ChargeAgent4BuildingNum
        {
            get
            {
                if (this.ChargeAgent4BuildingNumValueSpecified)
                {
                    return this.ChargeAgent4BuildingNumValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ChargeAgent4BuildingNumValue = value.GetValueOrDefault();
                this.ChargeAgent4BuildingNumValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ChargeAgent4ClrSysMemId", Order=237, Form=XmlSchemaForm.Unqualified)]
        public bool ChargeAgent4ClrSysMemIdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ChargeAgent4ClrSysMemId property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ChargeAgent4ClrSysMemIdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ChargeAgent4ClrSysMemId
        {
            get
            {
                if (this.ChargeAgent4ClrSysMemIdValueSpecified)
                {
                    return this.ChargeAgent4ClrSysMemIdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ChargeAgent4ClrSysMemIdValue = value.GetValueOrDefault();
                this.ChargeAgent4ClrSysMemIdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ChargeAgent4ClrSysMemIdCode", Order=238, Form=XmlSchemaForm.Unqualified)]
        public bool ChargeAgent4ClrSysMemIdCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ChargeAgent4ClrSysMemIdCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ChargeAgent4ClrSysMemIdCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ChargeAgent4ClrSysMemIdCode
        {
            get
            {
                if (this.ChargeAgent4ClrSysMemIdCodeValueSpecified)
                {
                    return this.ChargeAgent4ClrSysMemIdCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ChargeAgent4ClrSysMemIdCodeValue = value.GetValueOrDefault();
                this.ChargeAgent4ClrSysMemIdCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ChargeAgent4Country", Order=239, Form=XmlSchemaForm.Unqualified)]
        public bool ChargeAgent4CountryValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ChargeAgent4Country property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ChargeAgent4CountryValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ChargeAgent4Country
        {
            get
            {
                if (this.ChargeAgent4CountryValueSpecified)
                {
                    return this.ChargeAgent4CountryValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ChargeAgent4CountryValue = value.GetValueOrDefault();
                this.ChargeAgent4CountryValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ChargeAgent4CountrySubDiv", Order=240, Form=XmlSchemaForm.Unqualified)]
        public bool ChargeAgent4CountrySubDivValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ChargeAgent4CountrySubDiv property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ChargeAgent4CountrySubDivValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ChargeAgent4CountrySubDiv
        {
            get
            {
                if (this.ChargeAgent4CountrySubDivValueSpecified)
                {
                    return this.ChargeAgent4CountrySubDivValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ChargeAgent4CountrySubDivValue = value.GetValueOrDefault();
                this.ChargeAgent4CountrySubDivValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _chargeAgent4Department;
        
        [XmlElementAttribute("ChargeAgent4Department", Order=241, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> ChargeAgent4Department
        {
            get
            {
                return _chargeAgent4Department;
            }
            set
            {
                _chargeAgent4Department = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ChargeAgent4Department collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool ChargeAgent4DepartmentSpecified
        {
            get
            {
                return ((this.ChargeAgent4Department != null) 
                            && (this.ChargeAgent4Department.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ChargeAgent4DistrictName", Order=242, Form=XmlSchemaForm.Unqualified)]
        public bool ChargeAgent4DistrictNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ChargeAgent4DistrictName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ChargeAgent4DistrictNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ChargeAgent4DistrictName
        {
            get
            {
                if (this.ChargeAgent4DistrictNameValueSpecified)
                {
                    return this.ChargeAgent4DistrictNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ChargeAgent4DistrictNameValue = value.GetValueOrDefault();
                this.ChargeAgent4DistrictNameValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _chargeAgent4Floor;
        
        [XmlElementAttribute("ChargeAgent4Floor", Order=243, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> ChargeAgent4Floor
        {
            get
            {
                return _chargeAgent4Floor;
            }
            set
            {
                _chargeAgent4Floor = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ChargeAgent4Floor collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool ChargeAgent4FloorSpecified
        {
            get
            {
                return ((this.ChargeAgent4Floor != null) 
                            && (this.ChargeAgent4Floor.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ChargeAgent4Lei", Order=244, Form=XmlSchemaForm.Unqualified)]
        public bool ChargeAgent4LeiValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ChargeAgent4Lei property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ChargeAgent4LeiValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ChargeAgent4Lei
        {
            get
            {
                if (this.ChargeAgent4LeiValueSpecified)
                {
                    return this.ChargeAgent4LeiValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ChargeAgent4LeiValue = value.GetValueOrDefault();
                this.ChargeAgent4LeiValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _chargeAgent4Name;
        
        [XmlElementAttribute("ChargeAgent4Name", Order=245, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> ChargeAgent4Name
        {
            get
            {
                return _chargeAgent4Name;
            }
            set
            {
                _chargeAgent4Name = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ChargeAgent4Name collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool ChargeAgent4NameSpecified
        {
            get
            {
                return ((this.ChargeAgent4Name != null) 
                            && (this.ChargeAgent4Name.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ChargeAgent4PostBox", Order=246, Form=XmlSchemaForm.Unqualified)]
        public bool ChargeAgent4PostBoxValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ChargeAgent4PostBox property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ChargeAgent4PostBoxValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ChargeAgent4PostBox
        {
            get
            {
                if (this.ChargeAgent4PostBoxValueSpecified)
                {
                    return this.ChargeAgent4PostBoxValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ChargeAgent4PostBoxValue = value.GetValueOrDefault();
                this.ChargeAgent4PostBoxValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ChargeAgent4PostCode", Order=247, Form=XmlSchemaForm.Unqualified)]
        public bool ChargeAgent4PostCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ChargeAgent4PostCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ChargeAgent4PostCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ChargeAgent4PostCode
        {
            get
            {
                if (this.ChargeAgent4PostCodeValueSpecified)
                {
                    return this.ChargeAgent4PostCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ChargeAgent4PostCodeValue = value.GetValueOrDefault();
                this.ChargeAgent4PostCodeValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _chargeAgent4Room;
        
        [XmlElementAttribute("ChargeAgent4Room", Order=248, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> ChargeAgent4Room
        {
            get
            {
                return _chargeAgent4Room;
            }
            set
            {
                _chargeAgent4Room = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ChargeAgent4Room collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool ChargeAgent4RoomSpecified
        {
            get
            {
                return ((this.ChargeAgent4Room != null) 
                            && (this.ChargeAgent4Room.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _chargeAgent4StreetName;
        
        [XmlElementAttribute("ChargeAgent4StreetName", Order=249, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> ChargeAgent4StreetName
        {
            get
            {
                return _chargeAgent4StreetName;
            }
            set
            {
                _chargeAgent4StreetName = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ChargeAgent4StreetName collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool ChargeAgent4StreetNameSpecified
        {
            get
            {
                return ((this.ChargeAgent4StreetName != null) 
                            && (this.ChargeAgent4StreetName.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _chargeAgent4Subdepartment;
        
        [XmlElementAttribute("ChargeAgent4Subdepartment", Order=250, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> ChargeAgent4Subdepartment
        {
            get
            {
                return _chargeAgent4Subdepartment;
            }
            set
            {
                _chargeAgent4Subdepartment = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ChargeAgent4Subdepartment collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool ChargeAgent4SubdepartmentSpecified
        {
            get
            {
                return ((this.ChargeAgent4Subdepartment != null) 
                            && (this.ChargeAgent4Subdepartment.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ChargeAgent4TownLocationName", Order=251, Form=XmlSchemaForm.Unqualified)]
        public bool ChargeAgent4TownLocationNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ChargeAgent4TownLocationName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ChargeAgent4TownLocationNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ChargeAgent4TownLocationName
        {
            get
            {
                if (this.ChargeAgent4TownLocationNameValueSpecified)
                {
                    return this.ChargeAgent4TownLocationNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ChargeAgent4TownLocationNameValue = value.GetValueOrDefault();
                this.ChargeAgent4TownLocationNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ChargeAgent4TownName", Order=252, Form=XmlSchemaForm.Unqualified)]
        public bool ChargeAgent4TownNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ChargeAgent4TownName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ChargeAgent4TownNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ChargeAgent4TownName
        {
            get
            {
                if (this.ChargeAgent4TownNameValueSpecified)
                {
                    return this.ChargeAgent4TownNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ChargeAgent4TownNameValue = value.GetValueOrDefault();
                this.ChargeAgent4TownNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ChargeBearer", Order=253, Form=XmlSchemaForm.Unqualified)]
        public bool ChargeBearerValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ChargeBearer property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ChargeBearerValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ChargeBearer
        {
            get
            {
                if (this.ChargeBearerValueSpecified)
                {
                    return this.ChargeBearerValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ChargeBearerValue = value.GetValueOrDefault();
                this.ChargeBearerValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreationDateTime", Order=254, Form=XmlSchemaForm.Unqualified)]
        public bool CreationDateTimeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreationDateTime property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreationDateTimeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CreationDateTime
        {
            get
            {
                if (this.CreationDateTimeValueSpecified)
                {
                    return this.CreationDateTimeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreationDateTimeValue = value.GetValueOrDefault();
                this.CreationDateTimeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditorAgentBuildingName", Order=255, Form=XmlSchemaForm.Unqualified)]
        public bool CreditorAgentBuildingNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditorAgentBuildingName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditorAgentBuildingNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CreditorAgentBuildingName
        {
            get
            {
                if (this.CreditorAgentBuildingNameValueSpecified)
                {
                    return this.CreditorAgentBuildingNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditorAgentBuildingNameValue = value.GetValueOrDefault();
                this.CreditorAgentBuildingNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditorAgentBuildingNum", Order=256, Form=XmlSchemaForm.Unqualified)]
        public bool CreditorAgentBuildingNumValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditorAgentBuildingNum property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditorAgentBuildingNumValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CreditorAgentBuildingNum
        {
            get
            {
                if (this.CreditorAgentBuildingNumValueSpecified)
                {
                    return this.CreditorAgentBuildingNumValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditorAgentBuildingNumValue = value.GetValueOrDefault();
                this.CreditorAgentBuildingNumValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditorAgentClrSysMemId", Order=257, Form=XmlSchemaForm.Unqualified)]
        public bool CreditorAgentClrSysMemIdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditorAgentClrSysMemId property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditorAgentClrSysMemIdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CreditorAgentClrSysMemId
        {
            get
            {
                if (this.CreditorAgentClrSysMemIdValueSpecified)
                {
                    return this.CreditorAgentClrSysMemIdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditorAgentClrSysMemIdValue = value.GetValueOrDefault();
                this.CreditorAgentClrSysMemIdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditorAgentClrSysMemIdCode", Order=258, Form=XmlSchemaForm.Unqualified)]
        public bool CreditorAgentClrSysMemIdCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditorAgentClrSysMemIdCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditorAgentClrSysMemIdCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CreditorAgentClrSysMemIdCode
        {
            get
            {
                if (this.CreditorAgentClrSysMemIdCodeValueSpecified)
                {
                    return this.CreditorAgentClrSysMemIdCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditorAgentClrSysMemIdCodeValue = value.GetValueOrDefault();
                this.CreditorAgentClrSysMemIdCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditorAgentCountry", Order=259, Form=XmlSchemaForm.Unqualified)]
        public bool CreditorAgentCountryValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditorAgentCountry property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditorAgentCountryValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CreditorAgentCountry
        {
            get
            {
                if (this.CreditorAgentCountryValueSpecified)
                {
                    return this.CreditorAgentCountryValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditorAgentCountryValue = value.GetValueOrDefault();
                this.CreditorAgentCountryValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditorAgentCountrySubDiv", Order=260, Form=XmlSchemaForm.Unqualified)]
        public bool CreditorAgentCountrySubDivValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditorAgentCountrySubDiv property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditorAgentCountrySubDivValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CreditorAgentCountrySubDiv
        {
            get
            {
                if (this.CreditorAgentCountrySubDivValueSpecified)
                {
                    return this.CreditorAgentCountrySubDivValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditorAgentCountrySubDivValue = value.GetValueOrDefault();
                this.CreditorAgentCountrySubDivValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _creditorAgentDepartment;
        
        [XmlElementAttribute("CreditorAgentDepartment", Order=261, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> CreditorAgentDepartment
        {
            get
            {
                return _creditorAgentDepartment;
            }
            set
            {
                _creditorAgentDepartment = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CreditorAgentDepartment collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool CreditorAgentDepartmentSpecified
        {
            get
            {
                return ((this.CreditorAgentDepartment != null) 
                            && (this.CreditorAgentDepartment.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditorAgentDistrictName", Order=262, Form=XmlSchemaForm.Unqualified)]
        public bool CreditorAgentDistrictNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditorAgentDistrictName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditorAgentDistrictNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CreditorAgentDistrictName
        {
            get
            {
                if (this.CreditorAgentDistrictNameValueSpecified)
                {
                    return this.CreditorAgentDistrictNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditorAgentDistrictNameValue = value.GetValueOrDefault();
                this.CreditorAgentDistrictNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditorAgentFiBic", Order=263, Form=XmlSchemaForm.Unqualified)]
        public bool CreditorAgentFiBicValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditorAgentFiBic property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditorAgentFiBicValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CreditorAgentFiBic
        {
            get
            {
                if (this.CreditorAgentFiBicValueSpecified)
                {
                    return this.CreditorAgentFiBicValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditorAgentFiBicValue = value.GetValueOrDefault();
                this.CreditorAgentFiBicValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditorAgentFiLei", Order=264, Form=XmlSchemaForm.Unqualified)]
        public bool CreditorAgentFiLeiValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditorAgentFiLei property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditorAgentFiLeiValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CreditorAgentFiLei
        {
            get
            {
                if (this.CreditorAgentFiLeiValueSpecified)
                {
                    return this.CreditorAgentFiLeiValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditorAgentFiLeiValue = value.GetValueOrDefault();
                this.CreditorAgentFiLeiValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _creditorAgentFiName;
        
        [XmlElementAttribute("CreditorAgentFiName", Order=265, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> CreditorAgentFiName
        {
            get
            {
                return _creditorAgentFiName;
            }
            set
            {
                _creditorAgentFiName = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CreditorAgentFiName collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool CreditorAgentFiNameSpecified
        {
            get
            {
                return ((this.CreditorAgentFiName != null) 
                            && (this.CreditorAgentFiName.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _creditorAgentFloor;
        
        [XmlElementAttribute("CreditorAgentFloor", Order=266, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> CreditorAgentFloor
        {
            get
            {
                return _creditorAgentFloor;
            }
            set
            {
                _creditorAgentFloor = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CreditorAgentFloor collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool CreditorAgentFloorSpecified
        {
            get
            {
                return ((this.CreditorAgentFloor != null) 
                            && (this.CreditorAgentFloor.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditorAgentPostBox", Order=267, Form=XmlSchemaForm.Unqualified)]
        public bool CreditorAgentPostBoxValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditorAgentPostBox property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditorAgentPostBoxValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CreditorAgentPostBox
        {
            get
            {
                if (this.CreditorAgentPostBoxValueSpecified)
                {
                    return this.CreditorAgentPostBoxValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditorAgentPostBoxValue = value.GetValueOrDefault();
                this.CreditorAgentPostBoxValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditorAgentPostCode", Order=268, Form=XmlSchemaForm.Unqualified)]
        public bool CreditorAgentPostCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditorAgentPostCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditorAgentPostCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CreditorAgentPostCode
        {
            get
            {
                if (this.CreditorAgentPostCodeValueSpecified)
                {
                    return this.CreditorAgentPostCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditorAgentPostCodeValue = value.GetValueOrDefault();
                this.CreditorAgentPostCodeValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _creditorAgentRoom;
        
        [XmlElementAttribute("CreditorAgentRoom", Order=269, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> CreditorAgentRoom
        {
            get
            {
                return _creditorAgentRoom;
            }
            set
            {
                _creditorAgentRoom = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CreditorAgentRoom collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool CreditorAgentRoomSpecified
        {
            get
            {
                return ((this.CreditorAgentRoom != null) 
                            && (this.CreditorAgentRoom.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _creditorAgentStreetName;
        
        [XmlElementAttribute("CreditorAgentStreetName", Order=270, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> CreditorAgentStreetName
        {
            get
            {
                return _creditorAgentStreetName;
            }
            set
            {
                _creditorAgentStreetName = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CreditorAgentStreetName collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool CreditorAgentStreetNameSpecified
        {
            get
            {
                return ((this.CreditorAgentStreetName != null) 
                            && (this.CreditorAgentStreetName.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _creditorAgentSubdepartment;
        
        [XmlElementAttribute("CreditorAgentSubdepartment", Order=271, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> CreditorAgentSubdepartment
        {
            get
            {
                return _creditorAgentSubdepartment;
            }
            set
            {
                _creditorAgentSubdepartment = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CreditorAgentSubdepartment collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool CreditorAgentSubdepartmentSpecified
        {
            get
            {
                return ((this.CreditorAgentSubdepartment != null) 
                            && (this.CreditorAgentSubdepartment.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditorAgentTownLocationName", Order=272, Form=XmlSchemaForm.Unqualified)]
        public bool CreditorAgentTownLocationNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditorAgentTownLocationName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditorAgentTownLocationNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CreditorAgentTownLocationName
        {
            get
            {
                if (this.CreditorAgentTownLocationNameValueSpecified)
                {
                    return this.CreditorAgentTownLocationNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditorAgentTownLocationNameValue = value.GetValueOrDefault();
                this.CreditorAgentTownLocationNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditorAgentTownName", Order=273, Form=XmlSchemaForm.Unqualified)]
        public bool CreditorAgentTownNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditorAgentTownName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditorAgentTownNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CreditorAgentTownName
        {
            get
            {
                if (this.CreditorAgentTownNameValueSpecified)
                {
                    return this.CreditorAgentTownNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditorAgentTownNameValue = value.GetValueOrDefault();
                this.CreditorAgentTownNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditorBic", Order=274, Form=XmlSchemaForm.Unqualified)]
        public bool CreditorBicValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditorBic property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditorBicValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CreditorBic
        {
            get
            {
                if (this.CreditorBicValueSpecified)
                {
                    return this.CreditorBicValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditorBicValue = value.GetValueOrDefault();
                this.CreditorBicValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditorBuildingName", Order=275, Form=XmlSchemaForm.Unqualified)]
        public bool CreditorBuildingNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditorBuildingName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditorBuildingNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CreditorBuildingName
        {
            get
            {
                if (this.CreditorBuildingNameValueSpecified)
                {
                    return this.CreditorBuildingNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditorBuildingNameValue = value.GetValueOrDefault();
                this.CreditorBuildingNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditorBuildingNum", Order=276, Form=XmlSchemaForm.Unqualified)]
        public bool CreditorBuildingNumValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditorBuildingNum property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditorBuildingNumValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CreditorBuildingNum
        {
            get
            {
                if (this.CreditorBuildingNumValueSpecified)
                {
                    return this.CreditorBuildingNumValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditorBuildingNumValue = value.GetValueOrDefault();
                this.CreditorBuildingNumValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditorCountry", Order=277, Form=XmlSchemaForm.Unqualified)]
        public bool CreditorCountryValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditorCountry property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditorCountryValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CreditorCountry
        {
            get
            {
                if (this.CreditorCountryValueSpecified)
                {
                    return this.CreditorCountryValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditorCountryValue = value.GetValueOrDefault();
                this.CreditorCountryValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditorCountrySubDiv", Order=278, Form=XmlSchemaForm.Unqualified)]
        public bool CreditorCountrySubDivValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditorCountrySubDiv property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditorCountrySubDivValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CreditorCountrySubDiv
        {
            get
            {
                if (this.CreditorCountrySubDivValueSpecified)
                {
                    return this.CreditorCountrySubDivValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditorCountrySubDivValue = value.GetValueOrDefault();
                this.CreditorCountrySubDivValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _creditorDepartment;
        
        [XmlElementAttribute("CreditorDepartment", Order=279, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> CreditorDepartment
        {
            get
            {
                return _creditorDepartment;
            }
            set
            {
                _creditorDepartment = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CreditorDepartment collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool CreditorDepartmentSpecified
        {
            get
            {
                return ((this.CreditorDepartment != null) 
                            && (this.CreditorDepartment.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditorDistrictName", Order=280, Form=XmlSchemaForm.Unqualified)]
        public bool CreditorDistrictNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditorDistrictName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditorDistrictNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CreditorDistrictName
        {
            get
            {
                if (this.CreditorDistrictNameValueSpecified)
                {
                    return this.CreditorDistrictNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditorDistrictNameValue = value.GetValueOrDefault();
                this.CreditorDistrictNameValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _creditorFloor;
        
        [XmlElementAttribute("CreditorFloor", Order=281, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> CreditorFloor
        {
            get
            {
                return _creditorFloor;
            }
            set
            {
                _creditorFloor = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CreditorFloor collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool CreditorFloorSpecified
        {
            get
            {
                return ((this.CreditorFloor != null) 
                            && (this.CreditorFloor.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditorId", Order=282, Form=XmlSchemaForm.Unqualified)]
        public bool CreditorIdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditorId property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditorIdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CreditorId
        {
            get
            {
                if (this.CreditorIdValueSpecified)
                {
                    return this.CreditorIdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditorIdValue = value.GetValueOrDefault();
                this.CreditorIdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditorIdSchemeCode", Order=283, Form=XmlSchemaForm.Unqualified)]
        public bool CreditorIdSchemeCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditorIdSchemeCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditorIdSchemeCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CreditorIdSchemeCode
        {
            get
            {
                if (this.CreditorIdSchemeCodeValueSpecified)
                {
                    return this.CreditorIdSchemeCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditorIdSchemeCodeValue = value.GetValueOrDefault();
                this.CreditorIdSchemeCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditorIdSchemeName", Order=284, Form=XmlSchemaForm.Unqualified)]
        public bool CreditorIdSchemeNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditorIdSchemeName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditorIdSchemeNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CreditorIdSchemeName
        {
            get
            {
                if (this.CreditorIdSchemeNameValueSpecified)
                {
                    return this.CreditorIdSchemeNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditorIdSchemeNameValue = value.GetValueOrDefault();
                this.CreditorIdSchemeNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditorIssuer", Order=285, Form=XmlSchemaForm.Unqualified)]
        public bool CreditorIssuerValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditorIssuer property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditorIssuerValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CreditorIssuer
        {
            get
            {
                if (this.CreditorIssuerValueSpecified)
                {
                    return this.CreditorIssuerValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditorIssuerValue = value.GetValueOrDefault();
                this.CreditorIssuerValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditorLei", Order=286, Form=XmlSchemaForm.Unqualified)]
        public bool CreditorLeiValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditorLei property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditorLeiValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CreditorLei
        {
            get
            {
                if (this.CreditorLeiValueSpecified)
                {
                    return this.CreditorLeiValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditorLeiValue = value.GetValueOrDefault();
                this.CreditorLeiValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _creditorName;
        
        [XmlElementAttribute("CreditorName", Order=287, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> CreditorName
        {
            get
            {
                return _creditorName;
            }
            set
            {
                _creditorName = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CreditorName collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool CreditorNameSpecified
        {
            get
            {
                return ((this.CreditorName != null) 
                            && (this.CreditorName.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditorPostBox", Order=288, Form=XmlSchemaForm.Unqualified)]
        public bool CreditorPostBoxValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditorPostBox property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditorPostBoxValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CreditorPostBox
        {
            get
            {
                if (this.CreditorPostBoxValueSpecified)
                {
                    return this.CreditorPostBoxValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditorPostBoxValue = value.GetValueOrDefault();
                this.CreditorPostBoxValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditorPostCode", Order=289, Form=XmlSchemaForm.Unqualified)]
        public bool CreditorPostCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditorPostCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditorPostCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CreditorPostCode
        {
            get
            {
                if (this.CreditorPostCodeValueSpecified)
                {
                    return this.CreditorPostCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditorPostCodeValue = value.GetValueOrDefault();
                this.CreditorPostCodeValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _creditorRoom;
        
        [XmlElementAttribute("CreditorRoom", Order=290, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> CreditorRoom
        {
            get
            {
                return _creditorRoom;
            }
            set
            {
                _creditorRoom = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CreditorRoom collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool CreditorRoomSpecified
        {
            get
            {
                return ((this.CreditorRoom != null) 
                            && (this.CreditorRoom.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _creditorStreetName;
        
        [XmlElementAttribute("CreditorStreetName", Order=291, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> CreditorStreetName
        {
            get
            {
                return _creditorStreetName;
            }
            set
            {
                _creditorStreetName = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CreditorStreetName collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool CreditorStreetNameSpecified
        {
            get
            {
                return ((this.CreditorStreetName != null) 
                            && (this.CreditorStreetName.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _creditorSubdepartment;
        
        [XmlElementAttribute("CreditorSubdepartment", Order=292, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> CreditorSubdepartment
        {
            get
            {
                return _creditorSubdepartment;
            }
            set
            {
                _creditorSubdepartment = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CreditorSubdepartment collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool CreditorSubdepartmentSpecified
        {
            get
            {
                return ((this.CreditorSubdepartment != null) 
                            && (this.CreditorSubdepartment.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditorTownLocationName", Order=293, Form=XmlSchemaForm.Unqualified)]
        public bool CreditorTownLocationNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditorTownLocationName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditorTownLocationNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CreditorTownLocationName
        {
            get
            {
                if (this.CreditorTownLocationNameValueSpecified)
                {
                    return this.CreditorTownLocationNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditorTownLocationNameValue = value.GetValueOrDefault();
                this.CreditorTownLocationNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("CreditorTownName", Order=294, Form=XmlSchemaForm.Unqualified)]
        public bool CreditorTownNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditorTownName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool CreditorTownNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> CreditorTownName
        {
            get
            {
                if (this.CreditorTownNameValueSpecified)
                {
                    return this.CreditorTownNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreditorTownNameValue = value.GetValueOrDefault();
                this.CreditorTownNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DbtrAgtAcctCurrency", Order=295, Form=XmlSchemaForm.Unqualified)]
        public bool DbtrAgtAcctCurrencyValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DbtrAgtAcctCurrency property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DbtrAgtAcctCurrencyValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DbtrAgtAcctCurrency
        {
            get
            {
                if (this.DbtrAgtAcctCurrencyValueSpecified)
                {
                    return this.DbtrAgtAcctCurrencyValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DbtrAgtAcctCurrencyValue = value.GetValueOrDefault();
                this.DbtrAgtAcctCurrencyValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DbtrAgtAcctIban", Order=296, Form=XmlSchemaForm.Unqualified)]
        public bool DbtrAgtAcctIbanValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DbtrAgtAcctIban property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DbtrAgtAcctIbanValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DbtrAgtAcctIban
        {
            get
            {
                if (this.DbtrAgtAcctIbanValueSpecified)
                {
                    return this.DbtrAgtAcctIbanValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DbtrAgtAcctIbanValue = value.GetValueOrDefault();
                this.DbtrAgtAcctIbanValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DbtrAgtAcctId", Order=297, Form=XmlSchemaForm.Unqualified)]
        public bool DbtrAgtAcctIdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DbtrAgtAcctId property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DbtrAgtAcctIdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DbtrAgtAcctId
        {
            get
            {
                if (this.DbtrAgtAcctIdValueSpecified)
                {
                    return this.DbtrAgtAcctIdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DbtrAgtAcctIdValue = value.GetValueOrDefault();
                this.DbtrAgtAcctIdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DbtrAgtAcctIdCode", Order=298, Form=XmlSchemaForm.Unqualified)]
        public bool DbtrAgtAcctIdCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DbtrAgtAcctIdCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DbtrAgtAcctIdCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DbtrAgtAcctIdCode
        {
            get
            {
                if (this.DbtrAgtAcctIdCodeValueSpecified)
                {
                    return this.DbtrAgtAcctIdCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DbtrAgtAcctIdCodeValue = value.GetValueOrDefault();
                this.DbtrAgtAcctIdCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DbtrAgtAcctIdIssuer", Order=299, Form=XmlSchemaForm.Unqualified)]
        public bool DbtrAgtAcctIdIssuerValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DbtrAgtAcctIdIssuer property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DbtrAgtAcctIdIssuerValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DbtrAgtAcctIdIssuer
        {
            get
            {
                if (this.DbtrAgtAcctIdIssuerValueSpecified)
                {
                    return this.DbtrAgtAcctIdIssuerValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DbtrAgtAcctIdIssuerValue = value.GetValueOrDefault();
                this.DbtrAgtAcctIdIssuerValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DbtrAgtAcctIdProprietary", Order=300, Form=XmlSchemaForm.Unqualified)]
        public bool DbtrAgtAcctIdProprietaryValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DbtrAgtAcctIdProprietary property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DbtrAgtAcctIdProprietaryValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DbtrAgtAcctIdProprietary
        {
            get
            {
                if (this.DbtrAgtAcctIdProprietaryValueSpecified)
                {
                    return this.DbtrAgtAcctIdProprietaryValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DbtrAgtAcctIdProprietaryValue = value.GetValueOrDefault();
                this.DbtrAgtAcctIdProprietaryValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _dbtrAgtAcctName;
        
        [XmlElementAttribute("DbtrAgtAcctName", Order=301, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> DbtrAgtAcctName
        {
            get
            {
                return _dbtrAgtAcctName;
            }
            set
            {
                _dbtrAgtAcctName = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DbtrAgtAcctName collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool DbtrAgtAcctNameSpecified
        {
            get
            {
                return ((this.DbtrAgtAcctName != null) 
                            && (this.DbtrAgtAcctName.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DbtrAgtAcctProxyCode", Order=302, Form=XmlSchemaForm.Unqualified)]
        public bool DbtrAgtAcctProxyCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DbtrAgtAcctProxyCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DbtrAgtAcctProxyCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DbtrAgtAcctProxyCode
        {
            get
            {
                if (this.DbtrAgtAcctProxyCodeValueSpecified)
                {
                    return this.DbtrAgtAcctProxyCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DbtrAgtAcctProxyCodeValue = value.GetValueOrDefault();
                this.DbtrAgtAcctProxyCodeValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _dbtrAgtAcctProxyId;
        
        [XmlElementAttribute("DbtrAgtAcctProxyId", Order=303, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> DbtrAgtAcctProxyId
        {
            get
            {
                return _dbtrAgtAcctProxyId;
            }
            set
            {
                _dbtrAgtAcctProxyId = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DbtrAgtAcctProxyId collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool DbtrAgtAcctProxyIdSpecified
        {
            get
            {
                return ((this.DbtrAgtAcctProxyId != null) 
                            && (this.DbtrAgtAcctProxyId.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DbtrAgtAcctProxyProprietary", Order=304, Form=XmlSchemaForm.Unqualified)]
        public bool DbtrAgtAcctProxyProprietaryValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DbtrAgtAcctProxyProprietary property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DbtrAgtAcctProxyProprietaryValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DbtrAgtAcctProxyProprietary
        {
            get
            {
                if (this.DbtrAgtAcctProxyProprietaryValueSpecified)
                {
                    return this.DbtrAgtAcctProxyProprietaryValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DbtrAgtAcctProxyProprietaryValue = value.GetValueOrDefault();
                this.DbtrAgtAcctProxyProprietaryValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DbtrAgtAcctTypeCode", Order=305, Form=XmlSchemaForm.Unqualified)]
        public bool DbtrAgtAcctTypeCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DbtrAgtAcctTypeCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DbtrAgtAcctTypeCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DbtrAgtAcctTypeCode
        {
            get
            {
                if (this.DbtrAgtAcctTypeCodeValueSpecified)
                {
                    return this.DbtrAgtAcctTypeCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DbtrAgtAcctTypeCodeValue = value.GetValueOrDefault();
                this.DbtrAgtAcctTypeCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DbtrAgtAcctTypeProprietary", Order=306, Form=XmlSchemaForm.Unqualified)]
        public bool DbtrAgtAcctTypeProprietaryValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DbtrAgtAcctTypeProprietary property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DbtrAgtAcctTypeProprietaryValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DbtrAgtAcctTypeProprietary
        {
            get
            {
                if (this.DbtrAgtAcctTypeProprietaryValueSpecified)
                {
                    return this.DbtrAgtAcctTypeProprietaryValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DbtrAgtAcctTypeProprietaryValue = value.GetValueOrDefault();
                this.DbtrAgtAcctTypeProprietaryValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DebtorAcctCurrency", Order=307, Form=XmlSchemaForm.Unqualified)]
        public bool DebtorAcctCurrencyValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DebtorAcctCurrency property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DebtorAcctCurrencyValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DebtorAcctCurrency
        {
            get
            {
                if (this.DebtorAcctCurrencyValueSpecified)
                {
                    return this.DebtorAcctCurrencyValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DebtorAcctCurrencyValue = value.GetValueOrDefault();
                this.DebtorAcctCurrencyValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DebtorAcctIban", Order=308, Form=XmlSchemaForm.Unqualified)]
        public bool DebtorAcctIbanValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DebtorAcctIban property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DebtorAcctIbanValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DebtorAcctIban
        {
            get
            {
                if (this.DebtorAcctIbanValueSpecified)
                {
                    return this.DebtorAcctIbanValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DebtorAcctIbanValue = value.GetValueOrDefault();
                this.DebtorAcctIbanValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DebtorAcctId", Order=309, Form=XmlSchemaForm.Unqualified)]
        public bool DebtorAcctIdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DebtorAcctId property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DebtorAcctIdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DebtorAcctId
        {
            get
            {
                if (this.DebtorAcctIdValueSpecified)
                {
                    return this.DebtorAcctIdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DebtorAcctIdValue = value.GetValueOrDefault();
                this.DebtorAcctIdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DebtorAcctIdCode", Order=310, Form=XmlSchemaForm.Unqualified)]
        public bool DebtorAcctIdCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DebtorAcctIdCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DebtorAcctIdCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DebtorAcctIdCode
        {
            get
            {
                if (this.DebtorAcctIdCodeValueSpecified)
                {
                    return this.DebtorAcctIdCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DebtorAcctIdCodeValue = value.GetValueOrDefault();
                this.DebtorAcctIdCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DebtorAcctIdIssuer", Order=311, Form=XmlSchemaForm.Unqualified)]
        public bool DebtorAcctIdIssuerValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DebtorAcctIdIssuer property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DebtorAcctIdIssuerValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DebtorAcctIdIssuer
        {
            get
            {
                if (this.DebtorAcctIdIssuerValueSpecified)
                {
                    return this.DebtorAcctIdIssuerValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DebtorAcctIdIssuerValue = value.GetValueOrDefault();
                this.DebtorAcctIdIssuerValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DebtorAcctIdProprietary", Order=312, Form=XmlSchemaForm.Unqualified)]
        public bool DebtorAcctIdProprietaryValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DebtorAcctIdProprietary property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DebtorAcctIdProprietaryValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DebtorAcctIdProprietary
        {
            get
            {
                if (this.DebtorAcctIdProprietaryValueSpecified)
                {
                    return this.DebtorAcctIdProprietaryValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DebtorAcctIdProprietaryValue = value.GetValueOrDefault();
                this.DebtorAcctIdProprietaryValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _debtorAcctName;
        
        [XmlElementAttribute("DebtorAcctName", Order=313, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> DebtorAcctName
        {
            get
            {
                return _debtorAcctName;
            }
            set
            {
                _debtorAcctName = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DebtorAcctName collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool DebtorAcctNameSpecified
        {
            get
            {
                return ((this.DebtorAcctName != null) 
                            && (this.DebtorAcctName.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DebtorAcctProxyCode", Order=314, Form=XmlSchemaForm.Unqualified)]
        public bool DebtorAcctProxyCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DebtorAcctProxyCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DebtorAcctProxyCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DebtorAcctProxyCode
        {
            get
            {
                if (this.DebtorAcctProxyCodeValueSpecified)
                {
                    return this.DebtorAcctProxyCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DebtorAcctProxyCodeValue = value.GetValueOrDefault();
                this.DebtorAcctProxyCodeValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _debtorAcctProxyId;
        
        [XmlElementAttribute("DebtorAcctProxyId", Order=315, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> DebtorAcctProxyId
        {
            get
            {
                return _debtorAcctProxyId;
            }
            set
            {
                _debtorAcctProxyId = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DebtorAcctProxyId collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool DebtorAcctProxyIdSpecified
        {
            get
            {
                return ((this.DebtorAcctProxyId != null) 
                            && (this.DebtorAcctProxyId.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DebtorAcctProxyProprietary", Order=316, Form=XmlSchemaForm.Unqualified)]
        public bool DebtorAcctProxyProprietaryValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DebtorAcctProxyProprietary property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DebtorAcctProxyProprietaryValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DebtorAcctProxyProprietary
        {
            get
            {
                if (this.DebtorAcctProxyProprietaryValueSpecified)
                {
                    return this.DebtorAcctProxyProprietaryValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DebtorAcctProxyProprietaryValue = value.GetValueOrDefault();
                this.DebtorAcctProxyProprietaryValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DebtorAcctTypeCode", Order=317, Form=XmlSchemaForm.Unqualified)]
        public bool DebtorAcctTypeCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DebtorAcctTypeCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DebtorAcctTypeCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DebtorAcctTypeCode
        {
            get
            {
                if (this.DebtorAcctTypeCodeValueSpecified)
                {
                    return this.DebtorAcctTypeCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DebtorAcctTypeCodeValue = value.GetValueOrDefault();
                this.DebtorAcctTypeCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DebtorAcctTypeProprietary", Order=318, Form=XmlSchemaForm.Unqualified)]
        public bool DebtorAcctTypeProprietaryValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DebtorAcctTypeProprietary property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DebtorAcctTypeProprietaryValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DebtorAcctTypeProprietary
        {
            get
            {
                if (this.DebtorAcctTypeProprietaryValueSpecified)
                {
                    return this.DebtorAcctTypeProprietaryValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DebtorAcctTypeProprietaryValue = value.GetValueOrDefault();
                this.DebtorAcctTypeProprietaryValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DebtorAgentBic", Order=319, Form=XmlSchemaForm.Unqualified)]
        public bool DebtorAgentBicValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DebtorAgentBic property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DebtorAgentBicValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DebtorAgentBic
        {
            get
            {
                if (this.DebtorAgentBicValueSpecified)
                {
                    return this.DebtorAgentBicValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DebtorAgentBicValue = value.GetValueOrDefault();
                this.DebtorAgentBicValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DebtorAgentBuildingName", Order=320, Form=XmlSchemaForm.Unqualified)]
        public bool DebtorAgentBuildingNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DebtorAgentBuildingName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DebtorAgentBuildingNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DebtorAgentBuildingName
        {
            get
            {
                if (this.DebtorAgentBuildingNameValueSpecified)
                {
                    return this.DebtorAgentBuildingNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DebtorAgentBuildingNameValue = value.GetValueOrDefault();
                this.DebtorAgentBuildingNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DebtorAgentBuildingNum", Order=321, Form=XmlSchemaForm.Unqualified)]
        public bool DebtorAgentBuildingNumValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DebtorAgentBuildingNum property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DebtorAgentBuildingNumValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DebtorAgentBuildingNum
        {
            get
            {
                if (this.DebtorAgentBuildingNumValueSpecified)
                {
                    return this.DebtorAgentBuildingNumValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DebtorAgentBuildingNumValue = value.GetValueOrDefault();
                this.DebtorAgentBuildingNumValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DebtorAgentClrSysMemId", Order=322, Form=XmlSchemaForm.Unqualified)]
        public bool DebtorAgentClrSysMemIdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DebtorAgentClrSysMemId property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DebtorAgentClrSysMemIdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DebtorAgentClrSysMemId
        {
            get
            {
                if (this.DebtorAgentClrSysMemIdValueSpecified)
                {
                    return this.DebtorAgentClrSysMemIdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DebtorAgentClrSysMemIdValue = value.GetValueOrDefault();
                this.DebtorAgentClrSysMemIdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DebtorAgentClrSysMemIdCode", Order=323, Form=XmlSchemaForm.Unqualified)]
        public bool DebtorAgentClrSysMemIdCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DebtorAgentClrSysMemIdCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DebtorAgentClrSysMemIdCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DebtorAgentClrSysMemIdCode
        {
            get
            {
                if (this.DebtorAgentClrSysMemIdCodeValueSpecified)
                {
                    return this.DebtorAgentClrSysMemIdCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DebtorAgentClrSysMemIdCodeValue = value.GetValueOrDefault();
                this.DebtorAgentClrSysMemIdCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DebtorAgentCountry", Order=324, Form=XmlSchemaForm.Unqualified)]
        public bool DebtorAgentCountryValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DebtorAgentCountry property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DebtorAgentCountryValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DebtorAgentCountry
        {
            get
            {
                if (this.DebtorAgentCountryValueSpecified)
                {
                    return this.DebtorAgentCountryValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DebtorAgentCountryValue = value.GetValueOrDefault();
                this.DebtorAgentCountryValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DebtorAgentCountrySubDiv", Order=325, Form=XmlSchemaForm.Unqualified)]
        public bool DebtorAgentCountrySubDivValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DebtorAgentCountrySubDiv property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DebtorAgentCountrySubDivValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DebtorAgentCountrySubDiv
        {
            get
            {
                if (this.DebtorAgentCountrySubDivValueSpecified)
                {
                    return this.DebtorAgentCountrySubDivValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DebtorAgentCountrySubDivValue = value.GetValueOrDefault();
                this.DebtorAgentCountrySubDivValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _debtorAgentDepartment;
        
        [XmlElementAttribute("DebtorAgentDepartment", Order=326, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> DebtorAgentDepartment
        {
            get
            {
                return _debtorAgentDepartment;
            }
            set
            {
                _debtorAgentDepartment = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DebtorAgentDepartment collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool DebtorAgentDepartmentSpecified
        {
            get
            {
                return ((this.DebtorAgentDepartment != null) 
                            && (this.DebtorAgentDepartment.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DebtorAgentDistrictName", Order=327, Form=XmlSchemaForm.Unqualified)]
        public bool DebtorAgentDistrictNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DebtorAgentDistrictName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DebtorAgentDistrictNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DebtorAgentDistrictName
        {
            get
            {
                if (this.DebtorAgentDistrictNameValueSpecified)
                {
                    return this.DebtorAgentDistrictNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DebtorAgentDistrictNameValue = value.GetValueOrDefault();
                this.DebtorAgentDistrictNameValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _debtorAgentFloor;
        
        [XmlElementAttribute("DebtorAgentFloor", Order=328, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> DebtorAgentFloor
        {
            get
            {
                return _debtorAgentFloor;
            }
            set
            {
                _debtorAgentFloor = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DebtorAgentFloor collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool DebtorAgentFloorSpecified
        {
            get
            {
                return ((this.DebtorAgentFloor != null) 
                            && (this.DebtorAgentFloor.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DebtorAgentLei", Order=329, Form=XmlSchemaForm.Unqualified)]
        public bool DebtorAgentLeiValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DebtorAgentLei property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DebtorAgentLeiValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DebtorAgentLei
        {
            get
            {
                if (this.DebtorAgentLeiValueSpecified)
                {
                    return this.DebtorAgentLeiValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DebtorAgentLeiValue = value.GetValueOrDefault();
                this.DebtorAgentLeiValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _debtorAgentName;
        
        [XmlElementAttribute("DebtorAgentName", Order=330, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> DebtorAgentName
        {
            get
            {
                return _debtorAgentName;
            }
            set
            {
                _debtorAgentName = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DebtorAgentName collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool DebtorAgentNameSpecified
        {
            get
            {
                return ((this.DebtorAgentName != null) 
                            && (this.DebtorAgentName.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DebtorAgentPostBox", Order=331, Form=XmlSchemaForm.Unqualified)]
        public bool DebtorAgentPostBoxValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DebtorAgentPostBox property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DebtorAgentPostBoxValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DebtorAgentPostBox
        {
            get
            {
                if (this.DebtorAgentPostBoxValueSpecified)
                {
                    return this.DebtorAgentPostBoxValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DebtorAgentPostBoxValue = value.GetValueOrDefault();
                this.DebtorAgentPostBoxValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DebtorAgentPostCode", Order=332, Form=XmlSchemaForm.Unqualified)]
        public bool DebtorAgentPostCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DebtorAgentPostCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DebtorAgentPostCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DebtorAgentPostCode
        {
            get
            {
                if (this.DebtorAgentPostCodeValueSpecified)
                {
                    return this.DebtorAgentPostCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DebtorAgentPostCodeValue = value.GetValueOrDefault();
                this.DebtorAgentPostCodeValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _debtorAgentRoom;
        
        [XmlElementAttribute("DebtorAgentRoom", Order=333, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> DebtorAgentRoom
        {
            get
            {
                return _debtorAgentRoom;
            }
            set
            {
                _debtorAgentRoom = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DebtorAgentRoom collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool DebtorAgentRoomSpecified
        {
            get
            {
                return ((this.DebtorAgentRoom != null) 
                            && (this.DebtorAgentRoom.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _debtorAgentStreetName;
        
        [XmlElementAttribute("DebtorAgentStreetName", Order=334, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> DebtorAgentStreetName
        {
            get
            {
                return _debtorAgentStreetName;
            }
            set
            {
                _debtorAgentStreetName = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DebtorAgentStreetName collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool DebtorAgentStreetNameSpecified
        {
            get
            {
                return ((this.DebtorAgentStreetName != null) 
                            && (this.DebtorAgentStreetName.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _debtorAgentSubdepartment;
        
        [XmlElementAttribute("DebtorAgentSubdepartment", Order=335, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> DebtorAgentSubdepartment
        {
            get
            {
                return _debtorAgentSubdepartment;
            }
            set
            {
                _debtorAgentSubdepartment = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DebtorAgentSubdepartment collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool DebtorAgentSubdepartmentSpecified
        {
            get
            {
                return ((this.DebtorAgentSubdepartment != null) 
                            && (this.DebtorAgentSubdepartment.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DebtorAgentTownLocationName", Order=336, Form=XmlSchemaForm.Unqualified)]
        public bool DebtorAgentTownLocationNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DebtorAgentTownLocationName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DebtorAgentTownLocationNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DebtorAgentTownLocationName
        {
            get
            {
                if (this.DebtorAgentTownLocationNameValueSpecified)
                {
                    return this.DebtorAgentTownLocationNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DebtorAgentTownLocationNameValue = value.GetValueOrDefault();
                this.DebtorAgentTownLocationNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DebtorAgentTownName", Order=337, Form=XmlSchemaForm.Unqualified)]
        public bool DebtorAgentTownNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DebtorAgentTownName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DebtorAgentTownNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DebtorAgentTownName
        {
            get
            {
                if (this.DebtorAgentTownNameValueSpecified)
                {
                    return this.DebtorAgentTownNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DebtorAgentTownNameValue = value.GetValueOrDefault();
                this.DebtorAgentTownNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DebtorBic", Order=338, Form=XmlSchemaForm.Unqualified)]
        public bool DebtorBicValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DebtorBic property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DebtorBicValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DebtorBic
        {
            get
            {
                if (this.DebtorBicValueSpecified)
                {
                    return this.DebtorBicValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DebtorBicValue = value.GetValueOrDefault();
                this.DebtorBicValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DebtorBuildingName", Order=339, Form=XmlSchemaForm.Unqualified)]
        public bool DebtorBuildingNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DebtorBuildingName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DebtorBuildingNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DebtorBuildingName
        {
            get
            {
                if (this.DebtorBuildingNameValueSpecified)
                {
                    return this.DebtorBuildingNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DebtorBuildingNameValue = value.GetValueOrDefault();
                this.DebtorBuildingNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DebtorBuildingNum", Order=340, Form=XmlSchemaForm.Unqualified)]
        public bool DebtorBuildingNumValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DebtorBuildingNum property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DebtorBuildingNumValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DebtorBuildingNum
        {
            get
            {
                if (this.DebtorBuildingNumValueSpecified)
                {
                    return this.DebtorBuildingNumValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DebtorBuildingNumValue = value.GetValueOrDefault();
                this.DebtorBuildingNumValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DebtorCountry", Order=341, Form=XmlSchemaForm.Unqualified)]
        public bool DebtorCountryValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DebtorCountry property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DebtorCountryValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DebtorCountry
        {
            get
            {
                if (this.DebtorCountryValueSpecified)
                {
                    return this.DebtorCountryValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DebtorCountryValue = value.GetValueOrDefault();
                this.DebtorCountryValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DebtorCountrySubDiv", Order=342, Form=XmlSchemaForm.Unqualified)]
        public bool DebtorCountrySubDivValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DebtorCountrySubDiv property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DebtorCountrySubDivValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DebtorCountrySubDiv
        {
            get
            {
                if (this.DebtorCountrySubDivValueSpecified)
                {
                    return this.DebtorCountrySubDivValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DebtorCountrySubDivValue = value.GetValueOrDefault();
                this.DebtorCountrySubDivValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _debtorDepartment;
        
        [XmlElementAttribute("DebtorDepartment", Order=343, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> DebtorDepartment
        {
            get
            {
                return _debtorDepartment;
            }
            set
            {
                _debtorDepartment = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DebtorDepartment collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool DebtorDepartmentSpecified
        {
            get
            {
                return ((this.DebtorDepartment != null) 
                            && (this.DebtorDepartment.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DebtorDistrictName", Order=344, Form=XmlSchemaForm.Unqualified)]
        public bool DebtorDistrictNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DebtorDistrictName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DebtorDistrictNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DebtorDistrictName
        {
            get
            {
                if (this.DebtorDistrictNameValueSpecified)
                {
                    return this.DebtorDistrictNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DebtorDistrictNameValue = value.GetValueOrDefault();
                this.DebtorDistrictNameValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _debtorFloor;
        
        [XmlElementAttribute("DebtorFloor", Order=345, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> DebtorFloor
        {
            get
            {
                return _debtorFloor;
            }
            set
            {
                _debtorFloor = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DebtorFloor collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool DebtorFloorSpecified
        {
            get
            {
                return ((this.DebtorFloor != null) 
                            && (this.DebtorFloor.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DebtorId", Order=346, Form=XmlSchemaForm.Unqualified)]
        public bool DebtorIdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DebtorId property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DebtorIdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DebtorId
        {
            get
            {
                if (this.DebtorIdValueSpecified)
                {
                    return this.DebtorIdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DebtorIdValue = value.GetValueOrDefault();
                this.DebtorIdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DebtorIdSchemeCode", Order=347, Form=XmlSchemaForm.Unqualified)]
        public bool DebtorIdSchemeCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DebtorIdSchemeCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DebtorIdSchemeCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DebtorIdSchemeCode
        {
            get
            {
                if (this.DebtorIdSchemeCodeValueSpecified)
                {
                    return this.DebtorIdSchemeCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DebtorIdSchemeCodeValue = value.GetValueOrDefault();
                this.DebtorIdSchemeCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DebtorIdSchemeName", Order=348, Form=XmlSchemaForm.Unqualified)]
        public bool DebtorIdSchemeNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DebtorIdSchemeName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DebtorIdSchemeNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DebtorIdSchemeName
        {
            get
            {
                if (this.DebtorIdSchemeNameValueSpecified)
                {
                    return this.DebtorIdSchemeNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DebtorIdSchemeNameValue = value.GetValueOrDefault();
                this.DebtorIdSchemeNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DebtorIssuer", Order=349, Form=XmlSchemaForm.Unqualified)]
        public bool DebtorIssuerValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DebtorIssuer property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DebtorIssuerValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DebtorIssuer
        {
            get
            {
                if (this.DebtorIssuerValueSpecified)
                {
                    return this.DebtorIssuerValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DebtorIssuerValue = value.GetValueOrDefault();
                this.DebtorIssuerValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DebtorLei", Order=350, Form=XmlSchemaForm.Unqualified)]
        public bool DebtorLeiValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DebtorLei property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DebtorLeiValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DebtorLei
        {
            get
            {
                if (this.DebtorLeiValueSpecified)
                {
                    return this.DebtorLeiValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DebtorLeiValue = value.GetValueOrDefault();
                this.DebtorLeiValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _debtorName;
        
        [XmlElementAttribute("DebtorName", Order=351, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> DebtorName
        {
            get
            {
                return _debtorName;
            }
            set
            {
                _debtorName = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DebtorName collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool DebtorNameSpecified
        {
            get
            {
                return ((this.DebtorName != null) 
                            && (this.DebtorName.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DebtorPostBox", Order=352, Form=XmlSchemaForm.Unqualified)]
        public bool DebtorPostBoxValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DebtorPostBox property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DebtorPostBoxValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DebtorPostBox
        {
            get
            {
                if (this.DebtorPostBoxValueSpecified)
                {
                    return this.DebtorPostBoxValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DebtorPostBoxValue = value.GetValueOrDefault();
                this.DebtorPostBoxValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DebtorPostCode", Order=353, Form=XmlSchemaForm.Unqualified)]
        public bool DebtorPostCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DebtorPostCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DebtorPostCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DebtorPostCode
        {
            get
            {
                if (this.DebtorPostCodeValueSpecified)
                {
                    return this.DebtorPostCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DebtorPostCodeValue = value.GetValueOrDefault();
                this.DebtorPostCodeValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _debtorRoom;
        
        [XmlElementAttribute("DebtorRoom", Order=354, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> DebtorRoom
        {
            get
            {
                return _debtorRoom;
            }
            set
            {
                _debtorRoom = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DebtorRoom collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool DebtorRoomSpecified
        {
            get
            {
                return ((this.DebtorRoom != null) 
                            && (this.DebtorRoom.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _debtorStreetName;
        
        [XmlElementAttribute("DebtorStreetName", Order=355, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> DebtorStreetName
        {
            get
            {
                return _debtorStreetName;
            }
            set
            {
                _debtorStreetName = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DebtorStreetName collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool DebtorStreetNameSpecified
        {
            get
            {
                return ((this.DebtorStreetName != null) 
                            && (this.DebtorStreetName.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _debtorSubdepartment;
        
        [XmlElementAttribute("DebtorSubdepartment", Order=356, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> DebtorSubdepartment
        {
            get
            {
                return _debtorSubdepartment;
            }
            set
            {
                _debtorSubdepartment = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DebtorSubdepartment collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool DebtorSubdepartmentSpecified
        {
            get
            {
                return ((this.DebtorSubdepartment != null) 
                            && (this.DebtorSubdepartment.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DebtorTownLocationName", Order=357, Form=XmlSchemaForm.Unqualified)]
        public bool DebtorTownLocationNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DebtorTownLocationName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DebtorTownLocationNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DebtorTownLocationName
        {
            get
            {
                if (this.DebtorTownLocationNameValueSpecified)
                {
                    return this.DebtorTownLocationNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DebtorTownLocationNameValue = value.GetValueOrDefault();
                this.DebtorTownLocationNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("DebtorTownName", Order=358, Form=XmlSchemaForm.Unqualified)]
        public bool DebtorTownNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DebtorTownName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DebtorTownNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> DebtorTownName
        {
            get
            {
                if (this.DebtorTownNameValueSpecified)
                {
                    return this.DebtorTownNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DebtorTownNameValue = value.GetValueOrDefault();
                this.DebtorTownNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InitgPtyBuildingName", Order=359, Form=XmlSchemaForm.Unqualified)]
        public bool InitgPtyBuildingNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InitgPtyBuildingName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InitgPtyBuildingNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InitgPtyBuildingName
        {
            get
            {
                if (this.InitgPtyBuildingNameValueSpecified)
                {
                    return this.InitgPtyBuildingNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InitgPtyBuildingNameValue = value.GetValueOrDefault();
                this.InitgPtyBuildingNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InitgPtyBuildingNum", Order=360, Form=XmlSchemaForm.Unqualified)]
        public bool InitgPtyBuildingNumValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InitgPtyBuildingNum property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InitgPtyBuildingNumValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InitgPtyBuildingNum
        {
            get
            {
                if (this.InitgPtyBuildingNumValueSpecified)
                {
                    return this.InitgPtyBuildingNumValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InitgPtyBuildingNumValue = value.GetValueOrDefault();
                this.InitgPtyBuildingNumValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InitgPtyCountry", Order=361, Form=XmlSchemaForm.Unqualified)]
        public bool InitgPtyCountryValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InitgPtyCountry property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InitgPtyCountryValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InitgPtyCountry
        {
            get
            {
                if (this.InitgPtyCountryValueSpecified)
                {
                    return this.InitgPtyCountryValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InitgPtyCountryValue = value.GetValueOrDefault();
                this.InitgPtyCountryValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InitgPtyCountrySubDiv", Order=362, Form=XmlSchemaForm.Unqualified)]
        public bool InitgPtyCountrySubDivValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InitgPtyCountrySubDiv property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InitgPtyCountrySubDivValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InitgPtyCountrySubDiv
        {
            get
            {
                if (this.InitgPtyCountrySubDivValueSpecified)
                {
                    return this.InitgPtyCountrySubDivValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InitgPtyCountrySubDivValue = value.GetValueOrDefault();
                this.InitgPtyCountrySubDivValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InitgPtyCtryOfRes", Order=363, Form=XmlSchemaForm.Unqualified)]
        public bool InitgPtyCtryOfResValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InitgPtyCtryOfRes property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InitgPtyCtryOfResValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InitgPtyCtryOfRes
        {
            get
            {
                if (this.InitgPtyCtryOfResValueSpecified)
                {
                    return this.InitgPtyCtryOfResValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InitgPtyCtryOfResValue = value.GetValueOrDefault();
                this.InitgPtyCtryOfResValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _initgPtyDepartment;
        
        [XmlElementAttribute("InitgPtyDepartment", Order=364, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> InitgPtyDepartment
        {
            get
            {
                return _initgPtyDepartment;
            }
            set
            {
                _initgPtyDepartment = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the InitgPtyDepartment collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool InitgPtyDepartmentSpecified
        {
            get
            {
                return ((this.InitgPtyDepartment != null) 
                            && (this.InitgPtyDepartment.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InitgPtyDistrictName", Order=365, Form=XmlSchemaForm.Unqualified)]
        public bool InitgPtyDistrictNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InitgPtyDistrictName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InitgPtyDistrictNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InitgPtyDistrictName
        {
            get
            {
                if (this.InitgPtyDistrictNameValueSpecified)
                {
                    return this.InitgPtyDistrictNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InitgPtyDistrictNameValue = value.GetValueOrDefault();
                this.InitgPtyDistrictNameValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _initgPtyFloor;
        
        [XmlElementAttribute("InitgPtyFloor", Order=366, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> InitgPtyFloor
        {
            get
            {
                return _initgPtyFloor;
            }
            set
            {
                _initgPtyFloor = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the InitgPtyFloor collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool InitgPtyFloorSpecified
        {
            get
            {
                return ((this.InitgPtyFloor != null) 
                            && (this.InitgPtyFloor.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _initgPtyName;
        
        [XmlElementAttribute("InitgPtyName", Order=367, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> InitgPtyName
        {
            get
            {
                return _initgPtyName;
            }
            set
            {
                _initgPtyName = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the InitgPtyName collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool InitgPtyNameSpecified
        {
            get
            {
                return ((this.InitgPtyName != null) 
                            && (this.InitgPtyName.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InitgPtyOrgId", Order=368, Form=XmlSchemaForm.Unqualified)]
        public bool InitgPtyOrgIdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InitgPtyOrgId property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InitgPtyOrgIdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InitgPtyOrgId
        {
            get
            {
                if (this.InitgPtyOrgIdValueSpecified)
                {
                    return this.InitgPtyOrgIdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InitgPtyOrgIdValue = value.GetValueOrDefault();
                this.InitgPtyOrgIdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InitgPtyOrgIdBic", Order=369, Form=XmlSchemaForm.Unqualified)]
        public bool InitgPtyOrgIdBicValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InitgPtyOrgIdBic property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InitgPtyOrgIdBicValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InitgPtyOrgIdBic
        {
            get
            {
                if (this.InitgPtyOrgIdBicValueSpecified)
                {
                    return this.InitgPtyOrgIdBicValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InitgPtyOrgIdBicValue = value.GetValueOrDefault();
                this.InitgPtyOrgIdBicValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InitgPtyOrgIdIssuer", Order=370, Form=XmlSchemaForm.Unqualified)]
        public bool InitgPtyOrgIdIssuerValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InitgPtyOrgIdIssuer property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InitgPtyOrgIdIssuerValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InitgPtyOrgIdIssuer
        {
            get
            {
                if (this.InitgPtyOrgIdIssuerValueSpecified)
                {
                    return this.InitgPtyOrgIdIssuerValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InitgPtyOrgIdIssuerValue = value.GetValueOrDefault();
                this.InitgPtyOrgIdIssuerValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InitgPtyOrgIdLei", Order=371, Form=XmlSchemaForm.Unqualified)]
        public bool InitgPtyOrgIdLeiValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InitgPtyOrgIdLei property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InitgPtyOrgIdLeiValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InitgPtyOrgIdLei
        {
            get
            {
                if (this.InitgPtyOrgIdLeiValueSpecified)
                {
                    return this.InitgPtyOrgIdLeiValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InitgPtyOrgIdLeiValue = value.GetValueOrDefault();
                this.InitgPtyOrgIdLeiValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InitgPtyOrgIdSchemeCode", Order=372, Form=XmlSchemaForm.Unqualified)]
        public bool InitgPtyOrgIdSchemeCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InitgPtyOrgIdSchemeCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InitgPtyOrgIdSchemeCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InitgPtyOrgIdSchemeCode
        {
            get
            {
                if (this.InitgPtyOrgIdSchemeCodeValueSpecified)
                {
                    return this.InitgPtyOrgIdSchemeCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InitgPtyOrgIdSchemeCodeValue = value.GetValueOrDefault();
                this.InitgPtyOrgIdSchemeCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InitgPtyOrgIdSchemePrtry", Order=373, Form=XmlSchemaForm.Unqualified)]
        public bool InitgPtyOrgIdSchemePrtryValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InitgPtyOrgIdSchemePrtry property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InitgPtyOrgIdSchemePrtryValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InitgPtyOrgIdSchemePrtry
        {
            get
            {
                if (this.InitgPtyOrgIdSchemePrtryValueSpecified)
                {
                    return this.InitgPtyOrgIdSchemePrtryValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InitgPtyOrgIdSchemePrtryValue = value.GetValueOrDefault();
                this.InitgPtyOrgIdSchemePrtryValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InitgPtyPostBox", Order=374, Form=XmlSchemaForm.Unqualified)]
        public bool InitgPtyPostBoxValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InitgPtyPostBox property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InitgPtyPostBoxValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InitgPtyPostBox
        {
            get
            {
                if (this.InitgPtyPostBoxValueSpecified)
                {
                    return this.InitgPtyPostBoxValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InitgPtyPostBoxValue = value.GetValueOrDefault();
                this.InitgPtyPostBoxValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InitgPtyPostCode", Order=375, Form=XmlSchemaForm.Unqualified)]
        public bool InitgPtyPostCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InitgPtyPostCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InitgPtyPostCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InitgPtyPostCode
        {
            get
            {
                if (this.InitgPtyPostCodeValueSpecified)
                {
                    return this.InitgPtyPostCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InitgPtyPostCodeValue = value.GetValueOrDefault();
                this.InitgPtyPostCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InitgPtyPrvtIdBirthDt", Order=376, Form=XmlSchemaForm.Unqualified)]
        public bool InitgPtyPrvtIdBirthDtValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InitgPtyPrvtIdBirthDt property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InitgPtyPrvtIdBirthDtValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InitgPtyPrvtIdBirthDt
        {
            get
            {
                if (this.InitgPtyPrvtIdBirthDtValueSpecified)
                {
                    return this.InitgPtyPrvtIdBirthDtValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InitgPtyPrvtIdBirthDtValue = value.GetValueOrDefault();
                this.InitgPtyPrvtIdBirthDtValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InitgPtyPrvtIdCityOfBirth", Order=377, Form=XmlSchemaForm.Unqualified)]
        public bool InitgPtyPrvtIdCityOfBirthValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InitgPtyPrvtIdCityOfBirth property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InitgPtyPrvtIdCityOfBirthValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InitgPtyPrvtIdCityOfBirth
        {
            get
            {
                if (this.InitgPtyPrvtIdCityOfBirthValueSpecified)
                {
                    return this.InitgPtyPrvtIdCityOfBirthValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InitgPtyPrvtIdCityOfBirthValue = value.GetValueOrDefault();
                this.InitgPtyPrvtIdCityOfBirthValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InitgPtyPrvtIdCtryOfBirth", Order=378, Form=XmlSchemaForm.Unqualified)]
        public bool InitgPtyPrvtIdCtryOfBirthValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InitgPtyPrvtIdCtryOfBirth property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InitgPtyPrvtIdCtryOfBirthValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InitgPtyPrvtIdCtryOfBirth
        {
            get
            {
                if (this.InitgPtyPrvtIdCtryOfBirthValueSpecified)
                {
                    return this.InitgPtyPrvtIdCtryOfBirthValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InitgPtyPrvtIdCtryOfBirthValue = value.GetValueOrDefault();
                this.InitgPtyPrvtIdCtryOfBirthValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InitgPtyPrvtIdId", Order=379, Form=XmlSchemaForm.Unqualified)]
        public bool InitgPtyPrvtIdIdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InitgPtyPrvtIdId property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InitgPtyPrvtIdIdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InitgPtyPrvtIdId
        {
            get
            {
                if (this.InitgPtyPrvtIdIdValueSpecified)
                {
                    return this.InitgPtyPrvtIdIdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InitgPtyPrvtIdIdValue = value.GetValueOrDefault();
                this.InitgPtyPrvtIdIdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InitgPtyPrvtIdIdIssuer", Order=380, Form=XmlSchemaForm.Unqualified)]
        public bool InitgPtyPrvtIdIdIssuerValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InitgPtyPrvtIdIdIssuer property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InitgPtyPrvtIdIdIssuerValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InitgPtyPrvtIdIdIssuer
        {
            get
            {
                if (this.InitgPtyPrvtIdIdIssuerValueSpecified)
                {
                    return this.InitgPtyPrvtIdIdIssuerValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InitgPtyPrvtIdIdIssuerValue = value.GetValueOrDefault();
                this.InitgPtyPrvtIdIdIssuerValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InitgPtyPrvtIdIdSchemeCode", Order=381, Form=XmlSchemaForm.Unqualified)]
        public bool InitgPtyPrvtIdIdSchemeCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InitgPtyPrvtIdIdSchemeCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InitgPtyPrvtIdIdSchemeCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InitgPtyPrvtIdIdSchemeCode
        {
            get
            {
                if (this.InitgPtyPrvtIdIdSchemeCodeValueSpecified)
                {
                    return this.InitgPtyPrvtIdIdSchemeCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InitgPtyPrvtIdIdSchemeCodeValue = value.GetValueOrDefault();
                this.InitgPtyPrvtIdIdSchemeCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InitgPtyPrvtIdIdSchemePrtry", Order=382, Form=XmlSchemaForm.Unqualified)]
        public bool InitgPtyPrvtIdIdSchemePrtryValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InitgPtyPrvtIdIdSchemePrtry property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InitgPtyPrvtIdIdSchemePrtryValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InitgPtyPrvtIdIdSchemePrtry
        {
            get
            {
                if (this.InitgPtyPrvtIdIdSchemePrtryValueSpecified)
                {
                    return this.InitgPtyPrvtIdIdSchemePrtryValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InitgPtyPrvtIdIdSchemePrtryValue = value.GetValueOrDefault();
                this.InitgPtyPrvtIdIdSchemePrtryValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InitgPtyPrvtIdPrvcOfBirth", Order=383, Form=XmlSchemaForm.Unqualified)]
        public bool InitgPtyPrvtIdPrvcOfBirthValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InitgPtyPrvtIdPrvcOfBirth property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InitgPtyPrvtIdPrvcOfBirthValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InitgPtyPrvtIdPrvcOfBirth
        {
            get
            {
                if (this.InitgPtyPrvtIdPrvcOfBirthValueSpecified)
                {
                    return this.InitgPtyPrvtIdPrvcOfBirthValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InitgPtyPrvtIdPrvcOfBirthValue = value.GetValueOrDefault();
                this.InitgPtyPrvtIdPrvcOfBirthValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _initgPtyRoom;
        
        [XmlElementAttribute("InitgPtyRoom", Order=384, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> InitgPtyRoom
        {
            get
            {
                return _initgPtyRoom;
            }
            set
            {
                _initgPtyRoom = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the InitgPtyRoom collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool InitgPtyRoomSpecified
        {
            get
            {
                return ((this.InitgPtyRoom != null) 
                            && (this.InitgPtyRoom.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _initgPtyStreetName;
        
        [XmlElementAttribute("InitgPtyStreetName", Order=385, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> InitgPtyStreetName
        {
            get
            {
                return _initgPtyStreetName;
            }
            set
            {
                _initgPtyStreetName = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the InitgPtyStreetName collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool InitgPtyStreetNameSpecified
        {
            get
            {
                return ((this.InitgPtyStreetName != null) 
                            && (this.InitgPtyStreetName.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _initgPtySubdepartment;
        
        [XmlElementAttribute("InitgPtySubdepartment", Order=386, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> InitgPtySubdepartment
        {
            get
            {
                return _initgPtySubdepartment;
            }
            set
            {
                _initgPtySubdepartment = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the InitgPtySubdepartment collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool InitgPtySubdepartmentSpecified
        {
            get
            {
                return ((this.InitgPtySubdepartment != null) 
                            && (this.InitgPtySubdepartment.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InitgPtyTownLocationName", Order=387, Form=XmlSchemaForm.Unqualified)]
        public bool InitgPtyTownLocationNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InitgPtyTownLocationName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InitgPtyTownLocationNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InitgPtyTownLocationName
        {
            get
            {
                if (this.InitgPtyTownLocationNameValueSpecified)
                {
                    return this.InitgPtyTownLocationNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InitgPtyTownLocationNameValue = value.GetValueOrDefault();
                this.InitgPtyTownLocationNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InitgPtyTownName", Order=388, Form=XmlSchemaForm.Unqualified)]
        public bool InitgPtyTownNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InitgPtyTownName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InitgPtyTownNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InitgPtyTownName
        {
            get
            {
                if (this.InitgPtyTownNameValueSpecified)
                {
                    return this.InitgPtyTownNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InitgPtyTownNameValue = value.GetValueOrDefault();
                this.InitgPtyTownNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Instr1ForCdtrAgtCode", Order=389, Form=XmlSchemaForm.Unqualified)]
        public bool Instr1ForCdtrAgtCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Instr1ForCdtrAgtCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool Instr1ForCdtrAgtCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Instr1ForCdtrAgtCode
        {
            get
            {
                if (this.Instr1ForCdtrAgtCodeValueSpecified)
                {
                    return this.Instr1ForCdtrAgtCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.Instr1ForCdtrAgtCodeValue = value.GetValueOrDefault();
                this.Instr1ForCdtrAgtCodeValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _instr1ForCdtrAgtInfo;
        
        [XmlElementAttribute("Instr1ForCdtrAgtInfo", Order=390, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> Instr1ForCdtrAgtInfo
        {
            get
            {
                return _instr1ForCdtrAgtInfo;
            }
            set
            {
                _instr1ForCdtrAgtInfo = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Instr1ForCdtrAgtInfo collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool Instr1ForCdtrAgtInfoSpecified
        {
            get
            {
                return ((this.Instr1ForCdtrAgtInfo != null) 
                            && (this.Instr1ForCdtrAgtInfo.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Instr2ForCdtrAgtCode", Order=391, Form=XmlSchemaForm.Unqualified)]
        public bool Instr2ForCdtrAgtCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Instr2ForCdtrAgtCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool Instr2ForCdtrAgtCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Instr2ForCdtrAgtCode
        {
            get
            {
                if (this.Instr2ForCdtrAgtCodeValueSpecified)
                {
                    return this.Instr2ForCdtrAgtCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.Instr2ForCdtrAgtCodeValue = value.GetValueOrDefault();
                this.Instr2ForCdtrAgtCodeValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _instr2ForCdtrAgtInfo;
        
        [XmlElementAttribute("Instr2ForCdtrAgtInfo", Order=392, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> Instr2ForCdtrAgtInfo
        {
            get
            {
                return _instr2ForCdtrAgtInfo;
            }
            set
            {
                _instr2ForCdtrAgtInfo = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Instr2ForCdtrAgtInfo collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool Instr2ForCdtrAgtInfoSpecified
        {
            get
            {
                return ((this.Instr2ForCdtrAgtInfo != null) 
                            && (this.Instr2ForCdtrAgtInfo.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InstructingFiName2", Order=393, Form=XmlSchemaForm.Unqualified)]
        public bool InstructingFiName2Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InstructingFiName2 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InstructingFiName2ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InstructingFiName2
        {
            get
            {
                if (this.InstructingFiName2ValueSpecified)
                {
                    return this.InstructingFiName2Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InstructingFiName2Value = value.GetValueOrDefault();
                this.InstructingFiName2ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InstructingFiName3", Order=394, Form=XmlSchemaForm.Unqualified)]
        public bool InstructingFiName3Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InstructingFiName3 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InstructingFiName3ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InstructingFiName3
        {
            get
            {
                if (this.InstructingFiName3ValueSpecified)
                {
                    return this.InstructingFiName3Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InstructingFiName3Value = value.GetValueOrDefault();
                this.InstructingFiName3ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("InstructingFiName4", Order=395, Form=XmlSchemaForm.Unqualified)]
        public bool InstructingFiName4Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InstructingFiName4 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool InstructingFiName4ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> InstructingFiName4
        {
            get
            {
                if (this.InstructingFiName4ValueSpecified)
                {
                    return this.InstructingFiName4Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InstructingFiName4Value = value.GetValueOrDefault();
                this.InstructingFiName4ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IntermedFiBic", Order=396, Form=XmlSchemaForm.Unqualified)]
        public bool IntermedFiBicValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IntermedFiBic property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IntermedFiBicValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IntermedFiBic
        {
            get
            {
                if (this.IntermedFiBicValueSpecified)
                {
                    return this.IntermedFiBicValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IntermedFiBicValue = value.GetValueOrDefault();
                this.IntermedFiBicValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IntermedFiBuildingName", Order=397, Form=XmlSchemaForm.Unqualified)]
        public bool IntermedFiBuildingNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IntermedFiBuildingName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IntermedFiBuildingNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IntermedFiBuildingName
        {
            get
            {
                if (this.IntermedFiBuildingNameValueSpecified)
                {
                    return this.IntermedFiBuildingNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IntermedFiBuildingNameValue = value.GetValueOrDefault();
                this.IntermedFiBuildingNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IntermedFiBuildingNum", Order=398, Form=XmlSchemaForm.Unqualified)]
        public bool IntermedFiBuildingNumValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IntermedFiBuildingNum property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IntermedFiBuildingNumValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IntermedFiBuildingNum
        {
            get
            {
                if (this.IntermedFiBuildingNumValueSpecified)
                {
                    return this.IntermedFiBuildingNumValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IntermedFiBuildingNumValue = value.GetValueOrDefault();
                this.IntermedFiBuildingNumValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IntermedFiClrSysMemIdCode", Order=399, Form=XmlSchemaForm.Unqualified)]
        public bool IntermedFiClrSysMemIdCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IntermedFiClrSysMemIdCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IntermedFiClrSysMemIdCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IntermedFiClrSysMemIdCode
        {
            get
            {
                if (this.IntermedFiClrSysMemIdCodeValueSpecified)
                {
                    return this.IntermedFiClrSysMemIdCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IntermedFiClrSysMemIdCodeValue = value.GetValueOrDefault();
                this.IntermedFiClrSysMemIdCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IntermedFiCountry", Order=400, Form=XmlSchemaForm.Unqualified)]
        public bool IntermedFiCountryValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IntermedFiCountry property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IntermedFiCountryValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IntermedFiCountry
        {
            get
            {
                if (this.IntermedFiCountryValueSpecified)
                {
                    return this.IntermedFiCountryValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IntermedFiCountryValue = value.GetValueOrDefault();
                this.IntermedFiCountryValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IntermedFiCountrySubDiv", Order=401, Form=XmlSchemaForm.Unqualified)]
        public bool IntermedFiCountrySubDivValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IntermedFiCountrySubDiv property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IntermedFiCountrySubDivValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IntermedFiCountrySubDiv
        {
            get
            {
                if (this.IntermedFiCountrySubDivValueSpecified)
                {
                    return this.IntermedFiCountrySubDivValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IntermedFiCountrySubDivValue = value.GetValueOrDefault();
                this.IntermedFiCountrySubDivValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _intermedFiDepartment;
        
        [XmlElementAttribute("IntermedFiDepartment", Order=402, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> IntermedFiDepartment
        {
            get
            {
                return _intermedFiDepartment;
            }
            set
            {
                _intermedFiDepartment = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the IntermedFiDepartment collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool IntermedFiDepartmentSpecified
        {
            get
            {
                return ((this.IntermedFiDepartment != null) 
                            && (this.IntermedFiDepartment.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IntermedFiDistrictName", Order=403, Form=XmlSchemaForm.Unqualified)]
        public bool IntermedFiDistrictNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IntermedFiDistrictName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IntermedFiDistrictNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IntermedFiDistrictName
        {
            get
            {
                if (this.IntermedFiDistrictNameValueSpecified)
                {
                    return this.IntermedFiDistrictNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IntermedFiDistrictNameValue = value.GetValueOrDefault();
                this.IntermedFiDistrictNameValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _intermedFiFloor;
        
        [XmlElementAttribute("IntermedFiFloor", Order=404, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> IntermedFiFloor
        {
            get
            {
                return _intermedFiFloor;
            }
            set
            {
                _intermedFiFloor = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the IntermedFiFloor collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool IntermedFiFloorSpecified
        {
            get
            {
                return ((this.IntermedFiFloor != null) 
                            && (this.IntermedFiFloor.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IntermedFiLei", Order=405, Form=XmlSchemaForm.Unqualified)]
        public bool IntermedFiLeiValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IntermedFiLei property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IntermedFiLeiValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IntermedFiLei
        {
            get
            {
                if (this.IntermedFiLeiValueSpecified)
                {
                    return this.IntermedFiLeiValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IntermedFiLeiValue = value.GetValueOrDefault();
                this.IntermedFiLeiValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IntermedFiPostBox", Order=406, Form=XmlSchemaForm.Unqualified)]
        public bool IntermedFiPostBoxValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IntermedFiPostBox property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IntermedFiPostBoxValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IntermedFiPostBox
        {
            get
            {
                if (this.IntermedFiPostBoxValueSpecified)
                {
                    return this.IntermedFiPostBoxValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IntermedFiPostBoxValue = value.GetValueOrDefault();
                this.IntermedFiPostBoxValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IntermedFiPostCode", Order=407, Form=XmlSchemaForm.Unqualified)]
        public bool IntermedFiPostCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IntermedFiPostCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IntermedFiPostCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IntermedFiPostCode
        {
            get
            {
                if (this.IntermedFiPostCodeValueSpecified)
                {
                    return this.IntermedFiPostCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IntermedFiPostCodeValue = value.GetValueOrDefault();
                this.IntermedFiPostCodeValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _intermedFiRoom;
        
        [XmlElementAttribute("IntermedFiRoom", Order=408, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> IntermedFiRoom
        {
            get
            {
                return _intermedFiRoom;
            }
            set
            {
                _intermedFiRoom = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the IntermedFiRoom collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool IntermedFiRoomSpecified
        {
            get
            {
                return ((this.IntermedFiRoom != null) 
                            && (this.IntermedFiRoom.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _intermedFiStreetName;
        
        [XmlElementAttribute("IntermedFiStreetName", Order=409, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> IntermedFiStreetName
        {
            get
            {
                return _intermedFiStreetName;
            }
            set
            {
                _intermedFiStreetName = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the IntermedFiStreetName collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool IntermedFiStreetNameSpecified
        {
            get
            {
                return ((this.IntermedFiStreetName != null) 
                            && (this.IntermedFiStreetName.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _intermedFiSubdepartment;
        
        [XmlElementAttribute("IntermedFiSubdepartment", Order=410, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> IntermedFiSubdepartment
        {
            get
            {
                return _intermedFiSubdepartment;
            }
            set
            {
                _intermedFiSubdepartment = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the IntermedFiSubdepartment collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool IntermedFiSubdepartmentSpecified
        {
            get
            {
                return ((this.IntermedFiSubdepartment != null) 
                            && (this.IntermedFiSubdepartment.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IntermedFiTownLocationName", Order=411, Form=XmlSchemaForm.Unqualified)]
        public bool IntermedFiTownLocationNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IntermedFiTownLocationName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IntermedFiTownLocationNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IntermedFiTownLocationName
        {
            get
            {
                if (this.IntermedFiTownLocationNameValueSpecified)
                {
                    return this.IntermedFiTownLocationNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IntermedFiTownLocationNameValue = value.GetValueOrDefault();
                this.IntermedFiTownLocationNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IntermedFiTownName", Order=412, Form=XmlSchemaForm.Unqualified)]
        public bool IntermedFiTownNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IntermedFiTownName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IntermedFiTownNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IntermedFiTownName
        {
            get
            {
                if (this.IntermedFiTownNameValueSpecified)
                {
                    return this.IntermedFiTownNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IntermedFiTownNameValue = value.GetValueOrDefault();
                this.IntermedFiTownNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IntermediaryFiName2", Order=413, Form=XmlSchemaForm.Unqualified)]
        public bool IntermediaryFiName2Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IntermediaryFiName2 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IntermediaryFiName2ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IntermediaryFiName2
        {
            get
            {
                if (this.IntermediaryFiName2ValueSpecified)
                {
                    return this.IntermediaryFiName2Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IntermediaryFiName2Value = value.GetValueOrDefault();
                this.IntermediaryFiName2ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IntermediaryFiName3", Order=414, Form=XmlSchemaForm.Unqualified)]
        public bool IntermediaryFiName3Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IntermediaryFiName3 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IntermediaryFiName3ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IntermediaryFiName3
        {
            get
            {
                if (this.IntermediaryFiName3ValueSpecified)
                {
                    return this.IntermediaryFiName3Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IntermediaryFiName3Value = value.GetValueOrDefault();
                this.IntermediaryFiName3ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IntermediaryFiName4", Order=415, Form=XmlSchemaForm.Unqualified)]
        public bool IntermediaryFiName4Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IntermediaryFiName4 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IntermediaryFiName4ValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IntermediaryFiName4
        {
            get
            {
                if (this.IntermediaryFiName4ValueSpecified)
                {
                    return this.IntermediaryFiName4Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IntermediaryFiName4Value = value.GetValueOrDefault();
                this.IntermediaryFiName4ValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IntrmyAgt1AcctCurrency", Order=416, Form=XmlSchemaForm.Unqualified)]
        public bool IntrmyAgt1AcctCurrencyValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IntrmyAgt1AcctCurrency property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IntrmyAgt1AcctCurrencyValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IntrmyAgt1AcctCurrency
        {
            get
            {
                if (this.IntrmyAgt1AcctCurrencyValueSpecified)
                {
                    return this.IntrmyAgt1AcctCurrencyValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IntrmyAgt1AcctCurrencyValue = value.GetValueOrDefault();
                this.IntrmyAgt1AcctCurrencyValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IntrmyAgt1AcctIban", Order=417, Form=XmlSchemaForm.Unqualified)]
        public bool IntrmyAgt1AcctIbanValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IntrmyAgt1AcctIban property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IntrmyAgt1AcctIbanValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IntrmyAgt1AcctIban
        {
            get
            {
                if (this.IntrmyAgt1AcctIbanValueSpecified)
                {
                    return this.IntrmyAgt1AcctIbanValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IntrmyAgt1AcctIbanValue = value.GetValueOrDefault();
                this.IntrmyAgt1AcctIbanValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IntrmyAgt1AcctId", Order=418, Form=XmlSchemaForm.Unqualified)]
        public bool IntrmyAgt1AcctIdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IntrmyAgt1AcctId property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IntrmyAgt1AcctIdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IntrmyAgt1AcctId
        {
            get
            {
                if (this.IntrmyAgt1AcctIdValueSpecified)
                {
                    return this.IntrmyAgt1AcctIdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IntrmyAgt1AcctIdValue = value.GetValueOrDefault();
                this.IntrmyAgt1AcctIdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IntrmyAgt1AcctIdCode", Order=419, Form=XmlSchemaForm.Unqualified)]
        public bool IntrmyAgt1AcctIdCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IntrmyAgt1AcctIdCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IntrmyAgt1AcctIdCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IntrmyAgt1AcctIdCode
        {
            get
            {
                if (this.IntrmyAgt1AcctIdCodeValueSpecified)
                {
                    return this.IntrmyAgt1AcctIdCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IntrmyAgt1AcctIdCodeValue = value.GetValueOrDefault();
                this.IntrmyAgt1AcctIdCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IntrmyAgt1AcctIdIssuer", Order=420, Form=XmlSchemaForm.Unqualified)]
        public bool IntrmyAgt1AcctIdIssuerValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IntrmyAgt1AcctIdIssuer property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IntrmyAgt1AcctIdIssuerValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IntrmyAgt1AcctIdIssuer
        {
            get
            {
                if (this.IntrmyAgt1AcctIdIssuerValueSpecified)
                {
                    return this.IntrmyAgt1AcctIdIssuerValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IntrmyAgt1AcctIdIssuerValue = value.GetValueOrDefault();
                this.IntrmyAgt1AcctIdIssuerValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IntrmyAgt1AcctIdProprietary", Order=421, Form=XmlSchemaForm.Unqualified)]
        public bool IntrmyAgt1AcctIdProprietaryValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IntrmyAgt1AcctIdProprietary property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IntrmyAgt1AcctIdProprietaryValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IntrmyAgt1AcctIdProprietary
        {
            get
            {
                if (this.IntrmyAgt1AcctIdProprietaryValueSpecified)
                {
                    return this.IntrmyAgt1AcctIdProprietaryValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IntrmyAgt1AcctIdProprietaryValue = value.GetValueOrDefault();
                this.IntrmyAgt1AcctIdProprietaryValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _intrmyAgt1AcctName;
        
        [XmlElementAttribute("IntrmyAgt1AcctName", Order=422, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> IntrmyAgt1AcctName
        {
            get
            {
                return _intrmyAgt1AcctName;
            }
            set
            {
                _intrmyAgt1AcctName = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the IntrmyAgt1AcctName collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool IntrmyAgt1AcctNameSpecified
        {
            get
            {
                return ((this.IntrmyAgt1AcctName != null) 
                            && (this.IntrmyAgt1AcctName.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IntrmyAgt1AcctProxyCode", Order=423, Form=XmlSchemaForm.Unqualified)]
        public bool IntrmyAgt1AcctProxyCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IntrmyAgt1AcctProxyCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IntrmyAgt1AcctProxyCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IntrmyAgt1AcctProxyCode
        {
            get
            {
                if (this.IntrmyAgt1AcctProxyCodeValueSpecified)
                {
                    return this.IntrmyAgt1AcctProxyCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IntrmyAgt1AcctProxyCodeValue = value.GetValueOrDefault();
                this.IntrmyAgt1AcctProxyCodeValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _intrmyAgt1AcctProxyId;
        
        [XmlElementAttribute("IntrmyAgt1AcctProxyId", Order=424, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> IntrmyAgt1AcctProxyId
        {
            get
            {
                return _intrmyAgt1AcctProxyId;
            }
            set
            {
                _intrmyAgt1AcctProxyId = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the IntrmyAgt1AcctProxyId collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool IntrmyAgt1AcctProxyIdSpecified
        {
            get
            {
                return ((this.IntrmyAgt1AcctProxyId != null) 
                            && (this.IntrmyAgt1AcctProxyId.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IntrmyAgt1AcctProxyProprietary", Order=425, Form=XmlSchemaForm.Unqualified)]
        public bool IntrmyAgt1AcctProxyProprietaryValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IntrmyAgt1AcctProxyProprietary property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IntrmyAgt1AcctProxyProprietaryValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IntrmyAgt1AcctProxyProprietary
        {
            get
            {
                if (this.IntrmyAgt1AcctProxyProprietaryValueSpecified)
                {
                    return this.IntrmyAgt1AcctProxyProprietaryValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IntrmyAgt1AcctProxyProprietaryValue = value.GetValueOrDefault();
                this.IntrmyAgt1AcctProxyProprietaryValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IntrmyAgt1AcctTypeCode", Order=426, Form=XmlSchemaForm.Unqualified)]
        public bool IntrmyAgt1AcctTypeCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IntrmyAgt1AcctTypeCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IntrmyAgt1AcctTypeCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IntrmyAgt1AcctTypeCode
        {
            get
            {
                if (this.IntrmyAgt1AcctTypeCodeValueSpecified)
                {
                    return this.IntrmyAgt1AcctTypeCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IntrmyAgt1AcctTypeCodeValue = value.GetValueOrDefault();
                this.IntrmyAgt1AcctTypeCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("IntrmyAgt1AcctTypeProprietary", Order=427, Form=XmlSchemaForm.Unqualified)]
        public bool IntrmyAgt1AcctTypeProprietaryValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IntrmyAgt1AcctTypeProprietary property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IntrmyAgt1AcctTypeProprietaryValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> IntrmyAgt1AcctTypeProprietary
        {
            get
            {
                if (this.IntrmyAgt1AcctTypeProprietaryValueSpecified)
                {
                    return this.IntrmyAgt1AcctTypeProprietaryValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IntrmyAgt1AcctTypeProprietaryValue = value.GetValueOrDefault();
                this.IntrmyAgt1AcctTypeProprietaryValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("MessageType", Order=428, Form=XmlSchemaForm.Unqualified)]
        public bool MessageTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MessageType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool MessageTypeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> MessageType
        {
            get
            {
                if (this.MessageTypeValueSpecified)
                {
                    return this.MessageTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MessageTypeValue = value.GetValueOrDefault();
                this.MessageTypeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrevInstrAgentAcctCurrency", Order=429, Form=XmlSchemaForm.Unqualified)]
        public bool PrevInstrAgentAcctCurrencyValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrevInstrAgentAcctCurrency property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrevInstrAgentAcctCurrencyValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrevInstrAgentAcctCurrency
        {
            get
            {
                if (this.PrevInstrAgentAcctCurrencyValueSpecified)
                {
                    return this.PrevInstrAgentAcctCurrencyValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrevInstrAgentAcctCurrencyValue = value.GetValueOrDefault();
                this.PrevInstrAgentAcctCurrencyValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrevInstrAgentAcctIban", Order=430, Form=XmlSchemaForm.Unqualified)]
        public bool PrevInstrAgentAcctIbanValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrevInstrAgentAcctIban property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrevInstrAgentAcctIbanValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrevInstrAgentAcctIban
        {
            get
            {
                if (this.PrevInstrAgentAcctIbanValueSpecified)
                {
                    return this.PrevInstrAgentAcctIbanValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrevInstrAgentAcctIbanValue = value.GetValueOrDefault();
                this.PrevInstrAgentAcctIbanValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrevInstrAgentAcctId", Order=431, Form=XmlSchemaForm.Unqualified)]
        public bool PrevInstrAgentAcctIdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrevInstrAgentAcctId property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrevInstrAgentAcctIdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrevInstrAgentAcctId
        {
            get
            {
                if (this.PrevInstrAgentAcctIdValueSpecified)
                {
                    return this.PrevInstrAgentAcctIdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrevInstrAgentAcctIdValue = value.GetValueOrDefault();
                this.PrevInstrAgentAcctIdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrevInstrAgentAcctIdCode", Order=432, Form=XmlSchemaForm.Unqualified)]
        public bool PrevInstrAgentAcctIdCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrevInstrAgentAcctIdCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrevInstrAgentAcctIdCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrevInstrAgentAcctIdCode
        {
            get
            {
                if (this.PrevInstrAgentAcctIdCodeValueSpecified)
                {
                    return this.PrevInstrAgentAcctIdCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrevInstrAgentAcctIdCodeValue = value.GetValueOrDefault();
                this.PrevInstrAgentAcctIdCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrevInstrAgentAcctIdIssuer", Order=433, Form=XmlSchemaForm.Unqualified)]
        public bool PrevInstrAgentAcctIdIssuerValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrevInstrAgentAcctIdIssuer property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrevInstrAgentAcctIdIssuerValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrevInstrAgentAcctIdIssuer
        {
            get
            {
                if (this.PrevInstrAgentAcctIdIssuerValueSpecified)
                {
                    return this.PrevInstrAgentAcctIdIssuerValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrevInstrAgentAcctIdIssuerValue = value.GetValueOrDefault();
                this.PrevInstrAgentAcctIdIssuerValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrevInstrAgentAcctIdProprietary", Order=434, Form=XmlSchemaForm.Unqualified)]
        public bool PrevInstrAgentAcctIdProprietaryValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrevInstrAgentAcctIdProprietary property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrevInstrAgentAcctIdProprietaryValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrevInstrAgentAcctIdProprietary
        {
            get
            {
                if (this.PrevInstrAgentAcctIdProprietaryValueSpecified)
                {
                    return this.PrevInstrAgentAcctIdProprietaryValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrevInstrAgentAcctIdProprietaryValue = value.GetValueOrDefault();
                this.PrevInstrAgentAcctIdProprietaryValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _prevInstrAgentAcctName;
        
        [XmlElementAttribute("PrevInstrAgentAcctName", Order=435, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> PrevInstrAgentAcctName
        {
            get
            {
                return _prevInstrAgentAcctName;
            }
            set
            {
                _prevInstrAgentAcctName = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PrevInstrAgentAcctName collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool PrevInstrAgentAcctNameSpecified
        {
            get
            {
                return ((this.PrevInstrAgentAcctName != null) 
                            && (this.PrevInstrAgentAcctName.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrevInstrAgentAcctProxyCode", Order=436, Form=XmlSchemaForm.Unqualified)]
        public bool PrevInstrAgentAcctProxyCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrevInstrAgentAcctProxyCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrevInstrAgentAcctProxyCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrevInstrAgentAcctProxyCode
        {
            get
            {
                if (this.PrevInstrAgentAcctProxyCodeValueSpecified)
                {
                    return this.PrevInstrAgentAcctProxyCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrevInstrAgentAcctProxyCodeValue = value.GetValueOrDefault();
                this.PrevInstrAgentAcctProxyCodeValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _prevInstrAgentAcctProxyId;
        
        [XmlElementAttribute("PrevInstrAgentAcctProxyId", Order=437, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> PrevInstrAgentAcctProxyId
        {
            get
            {
                return _prevInstrAgentAcctProxyId;
            }
            set
            {
                _prevInstrAgentAcctProxyId = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PrevInstrAgentAcctProxyId collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool PrevInstrAgentAcctProxyIdSpecified
        {
            get
            {
                return ((this.PrevInstrAgentAcctProxyId != null) 
                            && (this.PrevInstrAgentAcctProxyId.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrevInstrAgentAcctProxyPrtry", Order=438, Form=XmlSchemaForm.Unqualified)]
        public bool PrevInstrAgentAcctProxyPrtryValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrevInstrAgentAcctProxyPrtry property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrevInstrAgentAcctProxyPrtryValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrevInstrAgentAcctProxyPrtry
        {
            get
            {
                if (this.PrevInstrAgentAcctProxyPrtryValueSpecified)
                {
                    return this.PrevInstrAgentAcctProxyPrtryValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrevInstrAgentAcctProxyPrtryValue = value.GetValueOrDefault();
                this.PrevInstrAgentAcctProxyPrtryValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrevInstrAgentAcctTypeCode", Order=439, Form=XmlSchemaForm.Unqualified)]
        public bool PrevInstrAgentAcctTypeCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrevInstrAgentAcctTypeCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrevInstrAgentAcctTypeCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrevInstrAgentAcctTypeCode
        {
            get
            {
                if (this.PrevInstrAgentAcctTypeCodeValueSpecified)
                {
                    return this.PrevInstrAgentAcctTypeCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrevInstrAgentAcctTypeCodeValue = value.GetValueOrDefault();
                this.PrevInstrAgentAcctTypeCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrevInstrAgentAcctTypePrtry", Order=440, Form=XmlSchemaForm.Unqualified)]
        public bool PrevInstrAgentAcctTypePrtryValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrevInstrAgentAcctTypePrtry property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrevInstrAgentAcctTypePrtryValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrevInstrAgentAcctTypePrtry
        {
            get
            {
                if (this.PrevInstrAgentAcctTypePrtryValueSpecified)
                {
                    return this.PrevInstrAgentAcctTypePrtryValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrevInstrAgentAcctTypePrtryValue = value.GetValueOrDefault();
                this.PrevInstrAgentAcctTypePrtryValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrevInstrAgentBuildingName", Order=441, Form=XmlSchemaForm.Unqualified)]
        public bool PrevInstrAgentBuildingNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrevInstrAgentBuildingName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrevInstrAgentBuildingNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrevInstrAgentBuildingName
        {
            get
            {
                if (this.PrevInstrAgentBuildingNameValueSpecified)
                {
                    return this.PrevInstrAgentBuildingNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrevInstrAgentBuildingNameValue = value.GetValueOrDefault();
                this.PrevInstrAgentBuildingNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrevInstrAgentBuildingNum", Order=442, Form=XmlSchemaForm.Unqualified)]
        public bool PrevInstrAgentBuildingNumValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrevInstrAgentBuildingNum property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrevInstrAgentBuildingNumValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrevInstrAgentBuildingNum
        {
            get
            {
                if (this.PrevInstrAgentBuildingNumValueSpecified)
                {
                    return this.PrevInstrAgentBuildingNumValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrevInstrAgentBuildingNumValue = value.GetValueOrDefault();
                this.PrevInstrAgentBuildingNumValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrevInstrAgentCountry", Order=443, Form=XmlSchemaForm.Unqualified)]
        public bool PrevInstrAgentCountryValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrevInstrAgentCountry property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrevInstrAgentCountryValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrevInstrAgentCountry
        {
            get
            {
                if (this.PrevInstrAgentCountryValueSpecified)
                {
                    return this.PrevInstrAgentCountryValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrevInstrAgentCountryValue = value.GetValueOrDefault();
                this.PrevInstrAgentCountryValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrevInstrAgentCountrySubDiv", Order=444, Form=XmlSchemaForm.Unqualified)]
        public bool PrevInstrAgentCountrySubDivValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrevInstrAgentCountrySubDiv property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrevInstrAgentCountrySubDivValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrevInstrAgentCountrySubDiv
        {
            get
            {
                if (this.PrevInstrAgentCountrySubDivValueSpecified)
                {
                    return this.PrevInstrAgentCountrySubDivValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrevInstrAgentCountrySubDivValue = value.GetValueOrDefault();
                this.PrevInstrAgentCountrySubDivValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _prevInstrAgentDepartment;
        
        [XmlElementAttribute("PrevInstrAgentDepartment", Order=445, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> PrevInstrAgentDepartment
        {
            get
            {
                return _prevInstrAgentDepartment;
            }
            set
            {
                _prevInstrAgentDepartment = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PrevInstrAgentDepartment collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool PrevInstrAgentDepartmentSpecified
        {
            get
            {
                return ((this.PrevInstrAgentDepartment != null) 
                            && (this.PrevInstrAgentDepartment.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrevInstrAgentDistrictName", Order=446, Form=XmlSchemaForm.Unqualified)]
        public bool PrevInstrAgentDistrictNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrevInstrAgentDistrictName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrevInstrAgentDistrictNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrevInstrAgentDistrictName
        {
            get
            {
                if (this.PrevInstrAgentDistrictNameValueSpecified)
                {
                    return this.PrevInstrAgentDistrictNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrevInstrAgentDistrictNameValue = value.GetValueOrDefault();
                this.PrevInstrAgentDistrictNameValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _prevInstrAgentFloor;
        
        [XmlElementAttribute("PrevInstrAgentFloor", Order=447, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> PrevInstrAgentFloor
        {
            get
            {
                return _prevInstrAgentFloor;
            }
            set
            {
                _prevInstrAgentFloor = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PrevInstrAgentFloor collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool PrevInstrAgentFloorSpecified
        {
            get
            {
                return ((this.PrevInstrAgentFloor != null) 
                            && (this.PrevInstrAgentFloor.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrevInstrAgentPostBox", Order=448, Form=XmlSchemaForm.Unqualified)]
        public bool PrevInstrAgentPostBoxValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrevInstrAgentPostBox property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrevInstrAgentPostBoxValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrevInstrAgentPostBox
        {
            get
            {
                if (this.PrevInstrAgentPostBoxValueSpecified)
                {
                    return this.PrevInstrAgentPostBoxValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrevInstrAgentPostBoxValue = value.GetValueOrDefault();
                this.PrevInstrAgentPostBoxValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrevInstrAgentPostCode", Order=449, Form=XmlSchemaForm.Unqualified)]
        public bool PrevInstrAgentPostCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrevInstrAgentPostCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrevInstrAgentPostCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrevInstrAgentPostCode
        {
            get
            {
                if (this.PrevInstrAgentPostCodeValueSpecified)
                {
                    return this.PrevInstrAgentPostCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrevInstrAgentPostCodeValue = value.GetValueOrDefault();
                this.PrevInstrAgentPostCodeValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _prevInstrAgentRoom;
        
        [XmlElementAttribute("PrevInstrAgentRoom", Order=450, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> PrevInstrAgentRoom
        {
            get
            {
                return _prevInstrAgentRoom;
            }
            set
            {
                _prevInstrAgentRoom = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PrevInstrAgentRoom collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool PrevInstrAgentRoomSpecified
        {
            get
            {
                return ((this.PrevInstrAgentRoom != null) 
                            && (this.PrevInstrAgentRoom.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _prevInstrAgentStreetName;
        
        [XmlElementAttribute("PrevInstrAgentStreetName", Order=451, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> PrevInstrAgentStreetName
        {
            get
            {
                return _prevInstrAgentStreetName;
            }
            set
            {
                _prevInstrAgentStreetName = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PrevInstrAgentStreetName collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool PrevInstrAgentStreetNameSpecified
        {
            get
            {
                return ((this.PrevInstrAgentStreetName != null) 
                            && (this.PrevInstrAgentStreetName.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _prevInstrAgentSubdepartment;
        
        [XmlElementAttribute("PrevInstrAgentSubdepartment", Order=452, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> PrevInstrAgentSubdepartment
        {
            get
            {
                return _prevInstrAgentSubdepartment;
            }
            set
            {
                _prevInstrAgentSubdepartment = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PrevInstrAgentSubdepartment collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool PrevInstrAgentSubdepartmentSpecified
        {
            get
            {
                return ((this.PrevInstrAgentSubdepartment != null) 
                            && (this.PrevInstrAgentSubdepartment.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrevInstrAgentTownName", Order=453, Form=XmlSchemaForm.Unqualified)]
        public bool PrevInstrAgentTownNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrevInstrAgentTownName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrevInstrAgentTownNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrevInstrAgentTownName
        {
            get
            {
                if (this.PrevInstrAgentTownNameValueSpecified)
                {
                    return this.PrevInstrAgentTownNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrevInstrAgentTownNameValue = value.GetValueOrDefault();
                this.PrevInstrAgentTownNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrevInstrAgtTownLocationName", Order=454, Form=XmlSchemaForm.Unqualified)]
        public bool PrevInstrAgtTownLocationNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrevInstrAgtTownLocationName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrevInstrAgtTownLocationNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrevInstrAgtTownLocationName
        {
            get
            {
                if (this.PrevInstrAgtTownLocationNameValueSpecified)
                {
                    return this.PrevInstrAgtTownLocationNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrevInstrAgtTownLocationNameValue = value.GetValueOrDefault();
                this.PrevInstrAgtTownLocationNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrevInstructAgentBic", Order=455, Form=XmlSchemaForm.Unqualified)]
        public bool PrevInstructAgentBicValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrevInstructAgentBic property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrevInstructAgentBicValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrevInstructAgentBic
        {
            get
            {
                if (this.PrevInstructAgentBicValueSpecified)
                {
                    return this.PrevInstructAgentBicValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrevInstructAgentBicValue = value.GetValueOrDefault();
                this.PrevInstructAgentBicValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrevInstructAgentClrSysMemIdCode", Order=456, Form=XmlSchemaForm.Unqualified)]
        public bool PrevInstructAgentClrSysMemIdCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrevInstructAgentClrSysMemIdCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrevInstructAgentClrSysMemIdCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrevInstructAgentClrSysMemIdCode
        {
            get
            {
                if (this.PrevInstructAgentClrSysMemIdCodeValueSpecified)
                {
                    return this.PrevInstructAgentClrSysMemIdCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrevInstructAgentClrSysMemIdCodeValue = value.GetValueOrDefault();
                this.PrevInstructAgentClrSysMemIdCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrevInstructAgentLei", Order=457, Form=XmlSchemaForm.Unqualified)]
        public bool PrevInstructAgentLeiValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrevInstructAgentLei property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrevInstructAgentLeiValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrevInstructAgentLei
        {
            get
            {
                if (this.PrevInstructAgentLeiValueSpecified)
                {
                    return this.PrevInstructAgentLeiValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrevInstructAgentLeiValue = value.GetValueOrDefault();
                this.PrevInstructAgentLeiValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrevMsgCreationDateTime", Order=458, Form=XmlSchemaForm.Unqualified)]
        public bool PrevMsgCreationDateTimeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrevMsgCreationDateTime property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrevMsgCreationDateTimeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrevMsgCreationDateTime
        {
            get
            {
                if (this.PrevMsgCreationDateTimeValueSpecified)
                {
                    return this.PrevMsgCreationDateTimeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrevMsgCreationDateTimeValue = value.GetValueOrDefault();
                this.PrevMsgCreationDateTimeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("PrevMsgNameId", Order=459, Form=XmlSchemaForm.Unqualified)]
        public bool PrevMsgNameIdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrevMsgNameId property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool PrevMsgNameIdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> PrevMsgNameId
        {
            get
            {
                if (this.PrevMsgNameIdValueSpecified)
                {
                    return this.PrevMsgNameIdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrevMsgNameIdValue = value.GetValueOrDefault();
                this.PrevMsgNameIdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("ReturnReasonCode", Order=460, Form=XmlSchemaForm.Unqualified)]
        public bool ReturnReasonCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ReturnReasonCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool ReturnReasonCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> ReturnReasonCode
        {
            get
            {
                if (this.ReturnReasonCodeValueSpecified)
                {
                    return this.ReturnReasonCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ReturnReasonCodeValue = value.GetValueOrDefault();
                this.ReturnReasonCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("TransactionId", Order=461, Form=XmlSchemaForm.Unqualified)]
        public bool TransactionIdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TransactionId property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool TransactionIdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> TransactionId
        {
            get
            {
                if (this.TransactionIdValueSpecified)
                {
                    return this.TransactionIdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TransactionIdValue = value.GetValueOrDefault();
                this.TransactionIdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("Uetr", Order=462, Form=XmlSchemaForm.Unqualified)]
        public bool UetrValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Uetr property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UetrValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> Uetr
        {
            get
            {
                if (this.UetrValueSpecified)
                {
                    return this.UetrValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UetrValue = value.GetValueOrDefault();
                this.UetrValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UltmtCdtrBuildingName", Order=463, Form=XmlSchemaForm.Unqualified)]
        public bool UltmtCdtrBuildingNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UltmtCdtrBuildingName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UltmtCdtrBuildingNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UltmtCdtrBuildingName
        {
            get
            {
                if (this.UltmtCdtrBuildingNameValueSpecified)
                {
                    return this.UltmtCdtrBuildingNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UltmtCdtrBuildingNameValue = value.GetValueOrDefault();
                this.UltmtCdtrBuildingNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UltmtCdtrBuildingNum", Order=464, Form=XmlSchemaForm.Unqualified)]
        public bool UltmtCdtrBuildingNumValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UltmtCdtrBuildingNum property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UltmtCdtrBuildingNumValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UltmtCdtrBuildingNum
        {
            get
            {
                if (this.UltmtCdtrBuildingNumValueSpecified)
                {
                    return this.UltmtCdtrBuildingNumValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UltmtCdtrBuildingNumValue = value.GetValueOrDefault();
                this.UltmtCdtrBuildingNumValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UltmtCdtrCountry", Order=465, Form=XmlSchemaForm.Unqualified)]
        public bool UltmtCdtrCountryValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UltmtCdtrCountry property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UltmtCdtrCountryValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UltmtCdtrCountry
        {
            get
            {
                if (this.UltmtCdtrCountryValueSpecified)
                {
                    return this.UltmtCdtrCountryValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UltmtCdtrCountryValue = value.GetValueOrDefault();
                this.UltmtCdtrCountryValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UltmtCdtrCountrySubDiv", Order=466, Form=XmlSchemaForm.Unqualified)]
        public bool UltmtCdtrCountrySubDivValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UltmtCdtrCountrySubDiv property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UltmtCdtrCountrySubDivValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UltmtCdtrCountrySubDiv
        {
            get
            {
                if (this.UltmtCdtrCountrySubDivValueSpecified)
                {
                    return this.UltmtCdtrCountrySubDivValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UltmtCdtrCountrySubDivValue = value.GetValueOrDefault();
                this.UltmtCdtrCountrySubDivValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UltmtCdtrCtryOfRes", Order=467, Form=XmlSchemaForm.Unqualified)]
        public bool UltmtCdtrCtryOfResValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UltmtCdtrCtryOfRes property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UltmtCdtrCtryOfResValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UltmtCdtrCtryOfRes
        {
            get
            {
                if (this.UltmtCdtrCtryOfResValueSpecified)
                {
                    return this.UltmtCdtrCtryOfResValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UltmtCdtrCtryOfResValue = value.GetValueOrDefault();
                this.UltmtCdtrCtryOfResValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _ultmtCdtrDepartment;
        
        [XmlElementAttribute("UltmtCdtrDepartment", Order=468, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> UltmtCdtrDepartment
        {
            get
            {
                return _ultmtCdtrDepartment;
            }
            set
            {
                _ultmtCdtrDepartment = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the UltmtCdtrDepartment collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool UltmtCdtrDepartmentSpecified
        {
            get
            {
                return ((this.UltmtCdtrDepartment != null) 
                            && (this.UltmtCdtrDepartment.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UltmtCdtrDistrictName", Order=469, Form=XmlSchemaForm.Unqualified)]
        public bool UltmtCdtrDistrictNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UltmtCdtrDistrictName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UltmtCdtrDistrictNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UltmtCdtrDistrictName
        {
            get
            {
                if (this.UltmtCdtrDistrictNameValueSpecified)
                {
                    return this.UltmtCdtrDistrictNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UltmtCdtrDistrictNameValue = value.GetValueOrDefault();
                this.UltmtCdtrDistrictNameValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _ultmtCdtrFloor;
        
        [XmlElementAttribute("UltmtCdtrFloor", Order=470, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> UltmtCdtrFloor
        {
            get
            {
                return _ultmtCdtrFloor;
            }
            set
            {
                _ultmtCdtrFloor = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the UltmtCdtrFloor collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool UltmtCdtrFloorSpecified
        {
            get
            {
                return ((this.UltmtCdtrFloor != null) 
                            && (this.UltmtCdtrFloor.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _ultmtCdtrName;
        
        [XmlElementAttribute("UltmtCdtrName", Order=471, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> UltmtCdtrName
        {
            get
            {
                return _ultmtCdtrName;
            }
            set
            {
                _ultmtCdtrName = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the UltmtCdtrName collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool UltmtCdtrNameSpecified
        {
            get
            {
                return ((this.UltmtCdtrName != null) 
                            && (this.UltmtCdtrName.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UltmtCdtrOrgId", Order=472, Form=XmlSchemaForm.Unqualified)]
        public bool UltmtCdtrOrgIdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UltmtCdtrOrgId property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UltmtCdtrOrgIdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UltmtCdtrOrgId
        {
            get
            {
                if (this.UltmtCdtrOrgIdValueSpecified)
                {
                    return this.UltmtCdtrOrgIdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UltmtCdtrOrgIdValue = value.GetValueOrDefault();
                this.UltmtCdtrOrgIdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UltmtCdtrOrgIdBic", Order=473, Form=XmlSchemaForm.Unqualified)]
        public bool UltmtCdtrOrgIdBicValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UltmtCdtrOrgIdBic property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UltmtCdtrOrgIdBicValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UltmtCdtrOrgIdBic
        {
            get
            {
                if (this.UltmtCdtrOrgIdBicValueSpecified)
                {
                    return this.UltmtCdtrOrgIdBicValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UltmtCdtrOrgIdBicValue = value.GetValueOrDefault();
                this.UltmtCdtrOrgIdBicValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UltmtCdtrOrgIdIssuer", Order=474, Form=XmlSchemaForm.Unqualified)]
        public bool UltmtCdtrOrgIdIssuerValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UltmtCdtrOrgIdIssuer property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UltmtCdtrOrgIdIssuerValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UltmtCdtrOrgIdIssuer
        {
            get
            {
                if (this.UltmtCdtrOrgIdIssuerValueSpecified)
                {
                    return this.UltmtCdtrOrgIdIssuerValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UltmtCdtrOrgIdIssuerValue = value.GetValueOrDefault();
                this.UltmtCdtrOrgIdIssuerValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UltmtCdtrOrgIdLei", Order=475, Form=XmlSchemaForm.Unqualified)]
        public bool UltmtCdtrOrgIdLeiValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UltmtCdtrOrgIdLei property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UltmtCdtrOrgIdLeiValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UltmtCdtrOrgIdLei
        {
            get
            {
                if (this.UltmtCdtrOrgIdLeiValueSpecified)
                {
                    return this.UltmtCdtrOrgIdLeiValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UltmtCdtrOrgIdLeiValue = value.GetValueOrDefault();
                this.UltmtCdtrOrgIdLeiValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UltmtCdtrOrgIdSchemeCode", Order=476, Form=XmlSchemaForm.Unqualified)]
        public bool UltmtCdtrOrgIdSchemeCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UltmtCdtrOrgIdSchemeCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UltmtCdtrOrgIdSchemeCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UltmtCdtrOrgIdSchemeCode
        {
            get
            {
                if (this.UltmtCdtrOrgIdSchemeCodeValueSpecified)
                {
                    return this.UltmtCdtrOrgIdSchemeCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UltmtCdtrOrgIdSchemeCodeValue = value.GetValueOrDefault();
                this.UltmtCdtrOrgIdSchemeCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UltmtCdtrOrgIdSchemePrtry", Order=477, Form=XmlSchemaForm.Unqualified)]
        public bool UltmtCdtrOrgIdSchemePrtryValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UltmtCdtrOrgIdSchemePrtry property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UltmtCdtrOrgIdSchemePrtryValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UltmtCdtrOrgIdSchemePrtry
        {
            get
            {
                if (this.UltmtCdtrOrgIdSchemePrtryValueSpecified)
                {
                    return this.UltmtCdtrOrgIdSchemePrtryValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UltmtCdtrOrgIdSchemePrtryValue = value.GetValueOrDefault();
                this.UltmtCdtrOrgIdSchemePrtryValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UltmtCdtrPostBox", Order=478, Form=XmlSchemaForm.Unqualified)]
        public bool UltmtCdtrPostBoxValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UltmtCdtrPostBox property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UltmtCdtrPostBoxValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UltmtCdtrPostBox
        {
            get
            {
                if (this.UltmtCdtrPostBoxValueSpecified)
                {
                    return this.UltmtCdtrPostBoxValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UltmtCdtrPostBoxValue = value.GetValueOrDefault();
                this.UltmtCdtrPostBoxValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UltmtCdtrPostCode", Order=479, Form=XmlSchemaForm.Unqualified)]
        public bool UltmtCdtrPostCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UltmtCdtrPostCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UltmtCdtrPostCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UltmtCdtrPostCode
        {
            get
            {
                if (this.UltmtCdtrPostCodeValueSpecified)
                {
                    return this.UltmtCdtrPostCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UltmtCdtrPostCodeValue = value.GetValueOrDefault();
                this.UltmtCdtrPostCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UltmtCdtrPrvtIdBirthDt", Order=480, Form=XmlSchemaForm.Unqualified)]
        public bool UltmtCdtrPrvtIdBirthDtValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UltmtCdtrPrvtIdBirthDt property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UltmtCdtrPrvtIdBirthDtValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UltmtCdtrPrvtIdBirthDt
        {
            get
            {
                if (this.UltmtCdtrPrvtIdBirthDtValueSpecified)
                {
                    return this.UltmtCdtrPrvtIdBirthDtValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UltmtCdtrPrvtIdBirthDtValue = value.GetValueOrDefault();
                this.UltmtCdtrPrvtIdBirthDtValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UltmtCdtrPrvtIdCityOfBirth", Order=481, Form=XmlSchemaForm.Unqualified)]
        public bool UltmtCdtrPrvtIdCityOfBirthValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UltmtCdtrPrvtIdCityOfBirth property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UltmtCdtrPrvtIdCityOfBirthValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UltmtCdtrPrvtIdCityOfBirth
        {
            get
            {
                if (this.UltmtCdtrPrvtIdCityOfBirthValueSpecified)
                {
                    return this.UltmtCdtrPrvtIdCityOfBirthValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UltmtCdtrPrvtIdCityOfBirthValue = value.GetValueOrDefault();
                this.UltmtCdtrPrvtIdCityOfBirthValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UltmtCdtrPrvtIdCtryOfBirth", Order=482, Form=XmlSchemaForm.Unqualified)]
        public bool UltmtCdtrPrvtIdCtryOfBirthValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UltmtCdtrPrvtIdCtryOfBirth property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UltmtCdtrPrvtIdCtryOfBirthValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UltmtCdtrPrvtIdCtryOfBirth
        {
            get
            {
                if (this.UltmtCdtrPrvtIdCtryOfBirthValueSpecified)
                {
                    return this.UltmtCdtrPrvtIdCtryOfBirthValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UltmtCdtrPrvtIdCtryOfBirthValue = value.GetValueOrDefault();
                this.UltmtCdtrPrvtIdCtryOfBirthValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UltmtCdtrPrvtIdId", Order=483, Form=XmlSchemaForm.Unqualified)]
        public bool UltmtCdtrPrvtIdIdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UltmtCdtrPrvtIdId property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UltmtCdtrPrvtIdIdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UltmtCdtrPrvtIdId
        {
            get
            {
                if (this.UltmtCdtrPrvtIdIdValueSpecified)
                {
                    return this.UltmtCdtrPrvtIdIdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UltmtCdtrPrvtIdIdValue = value.GetValueOrDefault();
                this.UltmtCdtrPrvtIdIdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UltmtCdtrPrvtIdIdIssuer", Order=484, Form=XmlSchemaForm.Unqualified)]
        public bool UltmtCdtrPrvtIdIdIssuerValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UltmtCdtrPrvtIdIdIssuer property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UltmtCdtrPrvtIdIdIssuerValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UltmtCdtrPrvtIdIdIssuer
        {
            get
            {
                if (this.UltmtCdtrPrvtIdIdIssuerValueSpecified)
                {
                    return this.UltmtCdtrPrvtIdIdIssuerValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UltmtCdtrPrvtIdIdIssuerValue = value.GetValueOrDefault();
                this.UltmtCdtrPrvtIdIdIssuerValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UltmtCdtrPrvtIdIdSchemeCode", Order=485, Form=XmlSchemaForm.Unqualified)]
        public bool UltmtCdtrPrvtIdIdSchemeCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UltmtCdtrPrvtIdIdSchemeCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UltmtCdtrPrvtIdIdSchemeCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UltmtCdtrPrvtIdIdSchemeCode
        {
            get
            {
                if (this.UltmtCdtrPrvtIdIdSchemeCodeValueSpecified)
                {
                    return this.UltmtCdtrPrvtIdIdSchemeCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UltmtCdtrPrvtIdIdSchemeCodeValue = value.GetValueOrDefault();
                this.UltmtCdtrPrvtIdIdSchemeCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UltmtCdtrPrvtIdIdSchemePrtry", Order=486, Form=XmlSchemaForm.Unqualified)]
        public bool UltmtCdtrPrvtIdIdSchemePrtryValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UltmtCdtrPrvtIdIdSchemePrtry property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UltmtCdtrPrvtIdIdSchemePrtryValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UltmtCdtrPrvtIdIdSchemePrtry
        {
            get
            {
                if (this.UltmtCdtrPrvtIdIdSchemePrtryValueSpecified)
                {
                    return this.UltmtCdtrPrvtIdIdSchemePrtryValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UltmtCdtrPrvtIdIdSchemePrtryValue = value.GetValueOrDefault();
                this.UltmtCdtrPrvtIdIdSchemePrtryValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UltmtCdtrPrvtIdPrvcOfBirth", Order=487, Form=XmlSchemaForm.Unqualified)]
        public bool UltmtCdtrPrvtIdPrvcOfBirthValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UltmtCdtrPrvtIdPrvcOfBirth property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UltmtCdtrPrvtIdPrvcOfBirthValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UltmtCdtrPrvtIdPrvcOfBirth
        {
            get
            {
                if (this.UltmtCdtrPrvtIdPrvcOfBirthValueSpecified)
                {
                    return this.UltmtCdtrPrvtIdPrvcOfBirthValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UltmtCdtrPrvtIdPrvcOfBirthValue = value.GetValueOrDefault();
                this.UltmtCdtrPrvtIdPrvcOfBirthValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _ultmtCdtrRoom;
        
        [XmlElementAttribute("UltmtCdtrRoom", Order=488, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> UltmtCdtrRoom
        {
            get
            {
                return _ultmtCdtrRoom;
            }
            set
            {
                _ultmtCdtrRoom = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the UltmtCdtrRoom collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool UltmtCdtrRoomSpecified
        {
            get
            {
                return ((this.UltmtCdtrRoom != null) 
                            && (this.UltmtCdtrRoom.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _ultmtCdtrStreetName;
        
        [XmlElementAttribute("UltmtCdtrStreetName", Order=489, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> UltmtCdtrStreetName
        {
            get
            {
                return _ultmtCdtrStreetName;
            }
            set
            {
                _ultmtCdtrStreetName = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the UltmtCdtrStreetName collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool UltmtCdtrStreetNameSpecified
        {
            get
            {
                return ((this.UltmtCdtrStreetName != null) 
                            && (this.UltmtCdtrStreetName.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _ultmtCdtrSubdepartment;
        
        [XmlElementAttribute("UltmtCdtrSubdepartment", Order=490, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> UltmtCdtrSubdepartment
        {
            get
            {
                return _ultmtCdtrSubdepartment;
            }
            set
            {
                _ultmtCdtrSubdepartment = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the UltmtCdtrSubdepartment collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool UltmtCdtrSubdepartmentSpecified
        {
            get
            {
                return ((this.UltmtCdtrSubdepartment != null) 
                            && (this.UltmtCdtrSubdepartment.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UltmtCdtrTownLocationName", Order=491, Form=XmlSchemaForm.Unqualified)]
        public bool UltmtCdtrTownLocationNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UltmtCdtrTownLocationName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UltmtCdtrTownLocationNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UltmtCdtrTownLocationName
        {
            get
            {
                if (this.UltmtCdtrTownLocationNameValueSpecified)
                {
                    return this.UltmtCdtrTownLocationNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UltmtCdtrTownLocationNameValue = value.GetValueOrDefault();
                this.UltmtCdtrTownLocationNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UltmtCdtrTownName", Order=492, Form=XmlSchemaForm.Unqualified)]
        public bool UltmtCdtrTownNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UltmtCdtrTownName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UltmtCdtrTownNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UltmtCdtrTownName
        {
            get
            {
                if (this.UltmtCdtrTownNameValueSpecified)
                {
                    return this.UltmtCdtrTownNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UltmtCdtrTownNameValue = value.GetValueOrDefault();
                this.UltmtCdtrTownNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UltmtDbtrBuildingName", Order=493, Form=XmlSchemaForm.Unqualified)]
        public bool UltmtDbtrBuildingNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UltmtDbtrBuildingName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UltmtDbtrBuildingNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UltmtDbtrBuildingName
        {
            get
            {
                if (this.UltmtDbtrBuildingNameValueSpecified)
                {
                    return this.UltmtDbtrBuildingNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UltmtDbtrBuildingNameValue = value.GetValueOrDefault();
                this.UltmtDbtrBuildingNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UltmtDbtrBuildingNum", Order=494, Form=XmlSchemaForm.Unqualified)]
        public bool UltmtDbtrBuildingNumValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UltmtDbtrBuildingNum property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UltmtDbtrBuildingNumValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UltmtDbtrBuildingNum
        {
            get
            {
                if (this.UltmtDbtrBuildingNumValueSpecified)
                {
                    return this.UltmtDbtrBuildingNumValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UltmtDbtrBuildingNumValue = value.GetValueOrDefault();
                this.UltmtDbtrBuildingNumValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UltmtDbtrCountry", Order=495, Form=XmlSchemaForm.Unqualified)]
        public bool UltmtDbtrCountryValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UltmtDbtrCountry property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UltmtDbtrCountryValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UltmtDbtrCountry
        {
            get
            {
                if (this.UltmtDbtrCountryValueSpecified)
                {
                    return this.UltmtDbtrCountryValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UltmtDbtrCountryValue = value.GetValueOrDefault();
                this.UltmtDbtrCountryValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UltmtDbtrCountrySubDiv", Order=496, Form=XmlSchemaForm.Unqualified)]
        public bool UltmtDbtrCountrySubDivValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UltmtDbtrCountrySubDiv property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UltmtDbtrCountrySubDivValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UltmtDbtrCountrySubDiv
        {
            get
            {
                if (this.UltmtDbtrCountrySubDivValueSpecified)
                {
                    return this.UltmtDbtrCountrySubDivValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UltmtDbtrCountrySubDivValue = value.GetValueOrDefault();
                this.UltmtDbtrCountrySubDivValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UltmtDbtrCtryOfRes", Order=497, Form=XmlSchemaForm.Unqualified)]
        public bool UltmtDbtrCtryOfResValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UltmtDbtrCtryOfRes property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UltmtDbtrCtryOfResValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UltmtDbtrCtryOfRes
        {
            get
            {
                if (this.UltmtDbtrCtryOfResValueSpecified)
                {
                    return this.UltmtDbtrCtryOfResValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UltmtDbtrCtryOfResValue = value.GetValueOrDefault();
                this.UltmtDbtrCtryOfResValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _ultmtDbtrDepartment;
        
        [XmlElementAttribute("UltmtDbtrDepartment", Order=498, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> UltmtDbtrDepartment
        {
            get
            {
                return _ultmtDbtrDepartment;
            }
            set
            {
                _ultmtDbtrDepartment = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the UltmtDbtrDepartment collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool UltmtDbtrDepartmentSpecified
        {
            get
            {
                return ((this.UltmtDbtrDepartment != null) 
                            && (this.UltmtDbtrDepartment.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UltmtDbtrDistrictName", Order=499, Form=XmlSchemaForm.Unqualified)]
        public bool UltmtDbtrDistrictNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UltmtDbtrDistrictName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UltmtDbtrDistrictNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UltmtDbtrDistrictName
        {
            get
            {
                if (this.UltmtDbtrDistrictNameValueSpecified)
                {
                    return this.UltmtDbtrDistrictNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UltmtDbtrDistrictNameValue = value.GetValueOrDefault();
                this.UltmtDbtrDistrictNameValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _ultmtDbtrFloor;
        
        [XmlElementAttribute("UltmtDbtrFloor", Order=500, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> UltmtDbtrFloor
        {
            get
            {
                return _ultmtDbtrFloor;
            }
            set
            {
                _ultmtDbtrFloor = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the UltmtDbtrFloor collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool UltmtDbtrFloorSpecified
        {
            get
            {
                return ((this.UltmtDbtrFloor != null) 
                            && (this.UltmtDbtrFloor.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _ultmtDbtrName;
        
        [XmlElementAttribute("UltmtDbtrName", Order=501, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> UltmtDbtrName
        {
            get
            {
                return _ultmtDbtrName;
            }
            set
            {
                _ultmtDbtrName = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the UltmtDbtrName collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool UltmtDbtrNameSpecified
        {
            get
            {
                return ((this.UltmtDbtrName != null) 
                            && (this.UltmtDbtrName.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UltmtDbtrOrgId", Order=502, Form=XmlSchemaForm.Unqualified)]
        public bool UltmtDbtrOrgIdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UltmtDbtrOrgId property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UltmtDbtrOrgIdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UltmtDbtrOrgId
        {
            get
            {
                if (this.UltmtDbtrOrgIdValueSpecified)
                {
                    return this.UltmtDbtrOrgIdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UltmtDbtrOrgIdValue = value.GetValueOrDefault();
                this.UltmtDbtrOrgIdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UltmtDbtrOrgIdBic", Order=503, Form=XmlSchemaForm.Unqualified)]
        public bool UltmtDbtrOrgIdBicValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UltmtDbtrOrgIdBic property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UltmtDbtrOrgIdBicValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UltmtDbtrOrgIdBic
        {
            get
            {
                if (this.UltmtDbtrOrgIdBicValueSpecified)
                {
                    return this.UltmtDbtrOrgIdBicValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UltmtDbtrOrgIdBicValue = value.GetValueOrDefault();
                this.UltmtDbtrOrgIdBicValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UltmtDbtrOrgIdIssuer", Order=504, Form=XmlSchemaForm.Unqualified)]
        public bool UltmtDbtrOrgIdIssuerValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UltmtDbtrOrgIdIssuer property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UltmtDbtrOrgIdIssuerValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UltmtDbtrOrgIdIssuer
        {
            get
            {
                if (this.UltmtDbtrOrgIdIssuerValueSpecified)
                {
                    return this.UltmtDbtrOrgIdIssuerValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UltmtDbtrOrgIdIssuerValue = value.GetValueOrDefault();
                this.UltmtDbtrOrgIdIssuerValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UltmtDbtrOrgIdLei", Order=505, Form=XmlSchemaForm.Unqualified)]
        public bool UltmtDbtrOrgIdLeiValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UltmtDbtrOrgIdLei property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UltmtDbtrOrgIdLeiValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UltmtDbtrOrgIdLei
        {
            get
            {
                if (this.UltmtDbtrOrgIdLeiValueSpecified)
                {
                    return this.UltmtDbtrOrgIdLeiValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UltmtDbtrOrgIdLeiValue = value.GetValueOrDefault();
                this.UltmtDbtrOrgIdLeiValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UltmtDbtrOrgIdSchemeCode", Order=506, Form=XmlSchemaForm.Unqualified)]
        public bool UltmtDbtrOrgIdSchemeCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UltmtDbtrOrgIdSchemeCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UltmtDbtrOrgIdSchemeCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UltmtDbtrOrgIdSchemeCode
        {
            get
            {
                if (this.UltmtDbtrOrgIdSchemeCodeValueSpecified)
                {
                    return this.UltmtDbtrOrgIdSchemeCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UltmtDbtrOrgIdSchemeCodeValue = value.GetValueOrDefault();
                this.UltmtDbtrOrgIdSchemeCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UltmtDbtrOrgIdSchemePrtry", Order=507, Form=XmlSchemaForm.Unqualified)]
        public bool UltmtDbtrOrgIdSchemePrtryValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UltmtDbtrOrgIdSchemePrtry property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UltmtDbtrOrgIdSchemePrtryValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UltmtDbtrOrgIdSchemePrtry
        {
            get
            {
                if (this.UltmtDbtrOrgIdSchemePrtryValueSpecified)
                {
                    return this.UltmtDbtrOrgIdSchemePrtryValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UltmtDbtrOrgIdSchemePrtryValue = value.GetValueOrDefault();
                this.UltmtDbtrOrgIdSchemePrtryValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UltmtDbtrPostBox", Order=508, Form=XmlSchemaForm.Unqualified)]
        public bool UltmtDbtrPostBoxValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UltmtDbtrPostBox property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UltmtDbtrPostBoxValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UltmtDbtrPostBox
        {
            get
            {
                if (this.UltmtDbtrPostBoxValueSpecified)
                {
                    return this.UltmtDbtrPostBoxValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UltmtDbtrPostBoxValue = value.GetValueOrDefault();
                this.UltmtDbtrPostBoxValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UltmtDbtrPostCode", Order=509, Form=XmlSchemaForm.Unqualified)]
        public bool UltmtDbtrPostCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UltmtDbtrPostCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UltmtDbtrPostCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UltmtDbtrPostCode
        {
            get
            {
                if (this.UltmtDbtrPostCodeValueSpecified)
                {
                    return this.UltmtDbtrPostCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UltmtDbtrPostCodeValue = value.GetValueOrDefault();
                this.UltmtDbtrPostCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UltmtDbtrPrvtIdBirthDt", Order=510, Form=XmlSchemaForm.Unqualified)]
        public bool UltmtDbtrPrvtIdBirthDtValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UltmtDbtrPrvtIdBirthDt property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UltmtDbtrPrvtIdBirthDtValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UltmtDbtrPrvtIdBirthDt
        {
            get
            {
                if (this.UltmtDbtrPrvtIdBirthDtValueSpecified)
                {
                    return this.UltmtDbtrPrvtIdBirthDtValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UltmtDbtrPrvtIdBirthDtValue = value.GetValueOrDefault();
                this.UltmtDbtrPrvtIdBirthDtValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UltmtDbtrPrvtIdCityOfBirth", Order=511, Form=XmlSchemaForm.Unqualified)]
        public bool UltmtDbtrPrvtIdCityOfBirthValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UltmtDbtrPrvtIdCityOfBirth property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UltmtDbtrPrvtIdCityOfBirthValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UltmtDbtrPrvtIdCityOfBirth
        {
            get
            {
                if (this.UltmtDbtrPrvtIdCityOfBirthValueSpecified)
                {
                    return this.UltmtDbtrPrvtIdCityOfBirthValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UltmtDbtrPrvtIdCityOfBirthValue = value.GetValueOrDefault();
                this.UltmtDbtrPrvtIdCityOfBirthValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UltmtDbtrPrvtIdCtryOfBirth", Order=512, Form=XmlSchemaForm.Unqualified)]
        public bool UltmtDbtrPrvtIdCtryOfBirthValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UltmtDbtrPrvtIdCtryOfBirth property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UltmtDbtrPrvtIdCtryOfBirthValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UltmtDbtrPrvtIdCtryOfBirth
        {
            get
            {
                if (this.UltmtDbtrPrvtIdCtryOfBirthValueSpecified)
                {
                    return this.UltmtDbtrPrvtIdCtryOfBirthValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UltmtDbtrPrvtIdCtryOfBirthValue = value.GetValueOrDefault();
                this.UltmtDbtrPrvtIdCtryOfBirthValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UltmtDbtrPrvtIdId", Order=513, Form=XmlSchemaForm.Unqualified)]
        public bool UltmtDbtrPrvtIdIdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UltmtDbtrPrvtIdId property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UltmtDbtrPrvtIdIdValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UltmtDbtrPrvtIdId
        {
            get
            {
                if (this.UltmtDbtrPrvtIdIdValueSpecified)
                {
                    return this.UltmtDbtrPrvtIdIdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UltmtDbtrPrvtIdIdValue = value.GetValueOrDefault();
                this.UltmtDbtrPrvtIdIdValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UltmtDbtrPrvtIdIdIssuer", Order=514, Form=XmlSchemaForm.Unqualified)]
        public bool UltmtDbtrPrvtIdIdIssuerValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UltmtDbtrPrvtIdIdIssuer property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UltmtDbtrPrvtIdIdIssuerValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UltmtDbtrPrvtIdIdIssuer
        {
            get
            {
                if (this.UltmtDbtrPrvtIdIdIssuerValueSpecified)
                {
                    return this.UltmtDbtrPrvtIdIdIssuerValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UltmtDbtrPrvtIdIdIssuerValue = value.GetValueOrDefault();
                this.UltmtDbtrPrvtIdIdIssuerValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UltmtDbtrPrvtIdIdSchemeCode", Order=515, Form=XmlSchemaForm.Unqualified)]
        public bool UltmtDbtrPrvtIdIdSchemeCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UltmtDbtrPrvtIdIdSchemeCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UltmtDbtrPrvtIdIdSchemeCodeValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UltmtDbtrPrvtIdIdSchemeCode
        {
            get
            {
                if (this.UltmtDbtrPrvtIdIdSchemeCodeValueSpecified)
                {
                    return this.UltmtDbtrPrvtIdIdSchemeCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UltmtDbtrPrvtIdIdSchemeCodeValue = value.GetValueOrDefault();
                this.UltmtDbtrPrvtIdIdSchemeCodeValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UltmtDbtrPrvtIdIdSchemePrtry", Order=516, Form=XmlSchemaForm.Unqualified)]
        public bool UltmtDbtrPrvtIdIdSchemePrtryValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UltmtDbtrPrvtIdIdSchemePrtry property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UltmtDbtrPrvtIdIdSchemePrtryValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UltmtDbtrPrvtIdIdSchemePrtry
        {
            get
            {
                if (this.UltmtDbtrPrvtIdIdSchemePrtryValueSpecified)
                {
                    return this.UltmtDbtrPrvtIdIdSchemePrtryValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UltmtDbtrPrvtIdIdSchemePrtryValue = value.GetValueOrDefault();
                this.UltmtDbtrPrvtIdIdSchemePrtryValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UltmtDbtrPrvtIdPrvcOfBirth", Order=517, Form=XmlSchemaForm.Unqualified)]
        public bool UltmtDbtrPrvtIdPrvcOfBirthValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UltmtDbtrPrvtIdPrvcOfBirth property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UltmtDbtrPrvtIdPrvcOfBirthValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UltmtDbtrPrvtIdPrvcOfBirth
        {
            get
            {
                if (this.UltmtDbtrPrvtIdPrvcOfBirthValueSpecified)
                {
                    return this.UltmtDbtrPrvtIdPrvcOfBirthValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UltmtDbtrPrvtIdPrvcOfBirthValue = value.GetValueOrDefault();
                this.UltmtDbtrPrvtIdPrvcOfBirthValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _ultmtDbtrRoom;
        
        [XmlElementAttribute("UltmtDbtrRoom", Order=518, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> UltmtDbtrRoom
        {
            get
            {
                return _ultmtDbtrRoom;
            }
            set
            {
                _ultmtDbtrRoom = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the UltmtDbtrRoom collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool UltmtDbtrRoomSpecified
        {
            get
            {
                return ((this.UltmtDbtrRoom != null) 
                            && (this.UltmtDbtrRoom.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _ultmtDbtrStreetName;
        
        [XmlElementAttribute("UltmtDbtrStreetName", Order=519, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> UltmtDbtrStreetName
        {
            get
            {
                return _ultmtDbtrStreetName;
            }
            set
            {
                _ultmtDbtrStreetName = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the UltmtDbtrStreetName collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool UltmtDbtrStreetNameSpecified
        {
            get
            {
                return ((this.UltmtDbtrStreetName != null) 
                            && (this.UltmtDbtrStreetName.Count != 0));
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<short> _ultmtDbtrSubdepartment;
        
        [XmlElementAttribute("UltmtDbtrSubdepartment", Order=520, Form=XmlSchemaForm.Unqualified)]
        public Collection<short> UltmtDbtrSubdepartment
        {
            get
            {
                return _ultmtDbtrSubdepartment;
            }
            set
            {
                _ultmtDbtrSubdepartment = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the UltmtDbtrSubdepartment collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool UltmtDbtrSubdepartmentSpecified
        {
            get
            {
                return ((this.UltmtDbtrSubdepartment != null) 
                            && (this.UltmtDbtrSubdepartment.Count != 0));
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UltmtDbtrTownLocationName", Order=521, Form=XmlSchemaForm.Unqualified)]
        public bool UltmtDbtrTownLocationNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UltmtDbtrTownLocationName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UltmtDbtrTownLocationNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UltmtDbtrTownLocationName
        {
            get
            {
                if (this.UltmtDbtrTownLocationNameValueSpecified)
                {
                    return this.UltmtDbtrTownLocationNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UltmtDbtrTownLocationNameValue = value.GetValueOrDefault();
                this.UltmtDbtrTownLocationNameValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [XmlElementAttribute("UltmtDbtrTownName", Order=522, Form=XmlSchemaForm.Unqualified)]
        public bool UltmtDbtrTownNameValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UltmtDbtrTownName property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool UltmtDbtrTownNameValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public Nullable<bool> UltmtDbtrTownName
        {
            get
            {
                if (this.UltmtDbtrTownNameValueSpecified)
                {
                    return this.UltmtDbtrTownNameValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UltmtDbtrTownNameValue = value.GetValueOrDefault();
                this.UltmtDbtrTownNameValueSpecified = value.HasValue;
            }
        }
        
        [XmlElementAttribute("Version_2", Order=523, Form=XmlSchemaForm.Unqualified)]
        public WireService.VersionType Version2 { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<XmlElement> _any;
        
        [XmlAnyElementAttribute(Order=524)]
        public Collection<XmlElement> Any
        {
            get
            {
                return _any;
            }
            set
            {
                _any = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return ((this.Any != null) 
                            && (this.Any.Count != 0));
            }
        }
    }
}
